[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"# TAddressBook","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103-F10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103-F10-1/tp/actions)","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"* **TAddressBook** is a student project based on [AddressBook Level 3](https://github.com/se-edu/addressbook-level3). It is a desktop application created with the aim of helping CS2030S Teaching Assistants (TAs) keep track of student\u0027s lab assignments.","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"* It is named `TAddressBook` because it was initially created as a part of a series of `AddressBook` projects (`Level 1`, `Level 2`, `Level 3` ...).","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"* For the detailed documentation of this project, see the **[TAddressBook Product Website](https://ay2122s2-cs2103-f10-1.github.io/tp/)**.","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"bryans17":6,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"run {","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"    archiveName \u003d \u0027TAddressbook.jar\u0027","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":71,"bryans17":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"# About Us","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"We are team TAddressBook.","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"### Bryan seah","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"\u003cimg src\u003d\"images/bryans17.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"[[github](https://github.com/bryans17)]","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"[[portfolio](team/bryans17.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"* Responsibilities: Team Lead, Integration","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"### Channe Chwa","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"\u003cimg src\u003d\"images/channne.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"[[github](http://github.com/channne)]","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"[[portfolio](team/channne.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"* Responsibilities: Documentation, Testing","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"### Ryan Tan Gee Teng","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"\u003cimg src\u003d\"images/geetengtan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"[[github](http://github.com/geetengtan)]","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"[[portfolio](team/geetengtan.md)]","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"* Responsibilities: Code Quality, Deliverables and deadlines","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"channne":5,"-":23,"bryans17":7,"geetengtan":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"* TAddressBook is a student project based on [AddressBook Level 3](https://github.com/se-edu/addressbook-level3).","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S2-CS2103-F10-1/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S2-CS2103-F10-1/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S2-CS2103-F10-1/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S2-CS2103-F10-1/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `StudentListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"* depends on some classes in the `Model` component, as it displays `Student` object residing in the `Model`.","lastModifiedDate":"2022-04-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"bryans17"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S2-CS2103-F10-1/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-04-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"bryans17"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a student).","lastModifiedDate":"2022-04-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"bryans17"},"content":"###### Delete Sequence Diagram","lastModifiedDate":"2022-04-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"**API** : [`Model.java`](https://github.com/AY2122S2-CS2103-F10-1/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-04-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"channne"},"content":"* stores the TAddressBook data i.e., all `Student` objects (which are contained in a `UniqueStudentList` object).","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"bryans17"},"content":"* stores the currently \u0027selected\u0027 `Student` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cStudent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Student` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Student` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"bryans17"},"content":"#### Lab Component (Subcomponent of Model)","lastModifiedDate":"2022-04-07"},{"lineNumber":137,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"bryans17"},"content":"The `Lab` Component is a subcomponent of the `Model` component.","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"bryans17"},"content":"* stores all Lab related data.","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"bryans17"},"content":"* stores all `Lab` objects related to a `Student` object in `LabList`. (each `Student` object has its own copy of a `LabList`).","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"bryans17"},"content":"* the `MasterLabList` stores all the labs added into the system thus far to act as a control list (there should only be 1 `MasterLabList` in the system at any one time).","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"bryans17"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S2-CS2103-F10-1/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-04-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"bryans17"},"content":"## `labadd`: Add Lab Command Feature","lastModifiedDate":"2022-04-06"},{"lineNumber":167,"author":{"gitId":"bryans17"},"content":"The `labadd` feature allows a CS2030S Lab TA to add a new unique `Lab` into the TAddressBook. The add lab command takes in 1 argument `LAB_NUMBER`.","lastModifiedDate":"2022-04-10"},{"lineNumber":168,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":169,"author":{"gitId":"bryans17"},"content":"The command format for add lab is `labadd l/LAB_NUMBER` where `LAB_NUMBER` should be an Integer between 0 and 20 inclusive.","lastModifiedDate":"2022-04-10"},{"lineNumber":170,"author":{"gitId":"bryans17"},"content":"e.g `labadd l/1`","lastModifiedDate":"2022-04-10"},{"lineNumber":171,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":172,"author":{"gitId":"bryans17"},"content":"The add lab command is implemented as follows:","lastModifiedDate":"2022-04-10"},{"lineNumber":173,"author":{"gitId":"bryans17"},"content":"1. When a `labadd` command is executed by the user, `AddLabCommandParser#parse(String)` will be invoked to parse the given command into a new `AddLabCommand` object with the given `LAB_NUMBER`. If the `LAB_NUMBER` is invalid, a `ParseException` will be thrown and displayed to the user.","lastModifiedDate":"2022-04-10"},{"lineNumber":174,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":175,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":176,"author":{"gitId":"bryans17"},"content":"2. `AddCommand#execute(Model)` will then execute with the current `Model` object in the system.","lastModifiedDate":"2022-04-10"},{"lineNumber":177,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":178,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":179,"author":{"gitId":"bryans17"},"content":"3. The `AddCommand` object will then check if the `Model` object already has the lab (in this case having a lab means that the `MasterLabList` has a `Lab` object with the same `LAB_NUMBER`), and if the `Model` already has the `Lab`, it will throw a new `CommandException`.","lastModifiedDate":"2022-04-10"},{"lineNumber":180,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":181,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":182,"author":{"gitId":"bryans17"},"content":"4. The `AddCommand` object will then check if the `Model` object\u0027s `UniqueStudentList` is empty, and if it is empty, the system will output a message to the user to notify the user that the student list is empty, however, the lab will still be added into the `MasterLabList` for storing.","lastModifiedDate":"2022-04-10"},{"lineNumber":183,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":184,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":185,"author":{"gitId":"bryans17"},"content":"5. The `AddCommand` object will then add the new `Lab` to the `MasterLabList` and the `LabList` of every student in the `UniqueStudentList`.","lastModifiedDate":"2022-04-07"},{"lineNumber":186,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":187,"author":{"gitId":"bryans17"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Every `add(Lab)` operation on a `LabList` (this includes `MasterLabList` as it extends `LabList`) will sort the `LabList` by increasing `LAB_NUMBER`.","lastModifiedDate":"2022-04-10"},{"lineNumber":188,"author":{"gitId":"bryans17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":189,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":190,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":191,"author":{"gitId":"bryans17"},"content":"The sequence for parsing the input is similar to the one shown in [this sequence diagram](#delete-sequence-diagram) above.","lastModifiedDate":"2022-04-10"},{"lineNumber":192,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":193,"author":{"gitId":"bryans17"},"content":"The following **UML sequence diagram** shows the interaction between components during the execution of the `labadd` command:","lastModifiedDate":"2022-04-11"},{"lineNumber":194,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":195,"author":{"gitId":"bryans17"},"content":"\u003cimg src\u003d\"images/AddLabCommandSequenceDiagram.png\" width\u003d\"850\" /\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":196,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":197,"author":{"gitId":"bryans17"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** In the sequence diagram, `toAdd` refers to the `Lab` object with the given `LAB_NUMBER` to be added.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":198,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":199,"author":{"gitId":"bryans17"},"content":"The method `addLabToAll` in `UniqueStudentList` will call `LabList#add(Lab)`for all `Student`s in the list. This is left out of the sequence diagram as it is meant to be a higher level diagram.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":200,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":201,"author":{"gitId":"bryans17"},"content":"The implementation of `LabList#add(Lab)` was left out of the above sequence diagram as the diagram is meant to show the interaction between components at a higher level of abstraction.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":202,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":203,"author":{"gitId":"bryans17"},"content":"The sequence diagram for the implementation of `LabList#add(Lab)` will be shown separately below.","lastModifiedDate":"2022-04-11"},{"lineNumber":204,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":205,"author":{"gitId":"bryans17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":206,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":207,"author":{"gitId":"bryans17"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Instead of putting a reference frame in the above UML diagram for the sequence diagram of `LabList#add(Lab)`, I chose to leave the reference frame out as PlantUML\u0027s reference frames are huge and would lead to clutter in the above sequence diagram thereby decreasing readability. Instead, this short note will suffice.","lastModifiedDate":"2022-04-10"},{"lineNumber":208,"author":{"gitId":"bryans17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":209,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":210,"author":{"gitId":"bryans17"},"content":"The following **UML sequence diagram** shows how `add(Lab)` is implemented in `LabList`:","lastModifiedDate":"2022-04-11"},{"lineNumber":211,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":212,"author":{"gitId":"bryans17"},"content":"\u003cimg src\u003d\"images/LabListAddSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":213,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":214,"author":{"gitId":"bryans17"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** In the sequence diagram, `lab` refers to the `Lab` object with the given `LAB_NUMBER` to be added and `sortByLabNumber` is a `Comparator` that sorts the `Lab` objects by increasing `LAB_NUMBER`.","lastModifiedDate":"2022-04-07"},{"lineNumber":215,"author":{"gitId":"bryans17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":216,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":217,"author":{"gitId":"bryans17"},"content":"The following **UML activity diagram** shows what happens when a user executes a `labadd` command:","lastModifiedDate":"2022-04-11"},{"lineNumber":218,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":219,"author":{"gitId":"bryans17"},"content":"\u003cimg src\u003d\"images/AddLabCommandActivityDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":220,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":221,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"bryans17"},"content":"Step 2. The user executes `delete 5` command to delete the 5th student in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2022-04-06"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"bryans17"},"content":"Step 3. The user executes `add n/David …​` to add a new student. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-04-06"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"bryans17"},"content":"Step 4. The user now decides that adding the student was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-04-06"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"bryans17"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the student being deleted).","lastModifiedDate":"2022-04-06"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"geetengtan"},"content":"### Filter Feature","lastModifiedDate":"2022-03-24"},{"lineNumber":306,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":307,"author":{"gitId":"geetengtan"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":308,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":309,"author":{"gitId":"geetengtan"},"content":"The Filter feature is implemented by updating the `listOfStudents` using `StudentHasLabPredicate` which extends","lastModifiedDate":"2022-03-24"},{"lineNumber":310,"author":{"gitId":"geetengtan"},"content":"`Predicate`. `StudentHasLabPredicate` contains the attribute `Lab` and overrides the `Predicate#test()` method to","lastModifiedDate":"2022-03-24"},{"lineNumber":311,"author":{"gitId":"geetengtan"},"content":"determine if a `Student` has a specific `Lab` in its `LabList`.","lastModifiedDate":"2022-03-24"},{"lineNumber":312,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":313,"author":{"gitId":"geetengtan"},"content":"Given below is an example usage scenario and how the filter mechanism behaves at each step.","lastModifiedDate":"2022-03-24"},{"lineNumber":314,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":315,"author":{"gitId":"geetengtan"},"content":"Step 1. The user executes `filter l/1 s/s` command.","lastModifiedDate":"2022-03-24"},{"lineNumber":316,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":317,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":318,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":326,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"channne"},"content":"CS2030S Teaching Assistants (TAs) who","lastModifiedDate":"2022-03-02"},{"lineNumber":339,"author":{"gitId":"channne"},"content":"* have to keep track of students\u0027 details","lastModifiedDate":"2022-03-02"},{"lineNumber":340,"author":{"gitId":"channne"},"content":"* have to keep track of students\u0027 performance and progress on labs","lastModifiedDate":"2022-03-02"},{"lineNumber":341,"author":{"gitId":"channne"},"content":"* have to keep track of their own progress on grading labs","lastModifiedDate":"2022-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"channne"},"content":"* prefer typing to mouse interactions","lastModifiedDate":"2022-03-02"},{"lineNumber":345,"author":{"gitId":"channne"},"content":"* are reasonably comfortable using CLI apps","lastModifiedDate":"2022-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"channne"},"content":"**Value proposition**: provides CS2030S TAs with a systematic way to keep track of students, including who he/she","lastModifiedDate":"2022-03-02"},{"lineNumber":348,"author":{"gitId":"channne"},"content":"has graded and what grade was given for every lab.","lastModifiedDate":"2022-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                                                     | So that I can…​                                                                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"channne"},"content":"|----------|---------|------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-24"},{"lineNumber":357,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | add a student to my class list                                   | begin keeping track of their lab assignments                                                                |","lastModifiedDate":"2022-03-01"},{"lineNumber":358,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | edit a student\u0027s information                                     | fix any errors I made during the initial adding phase or add information that was not provided to me before |","lastModifiedDate":"2022-03-01"},{"lineNumber":359,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | delete a student from my class list                              | my list will be reflective of who is currently in my class                                                  |","lastModifiedDate":"2022-03-01"},{"lineNumber":360,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | list all students                                                | have an overview of all the students in my class                                                            |","lastModifiedDate":"2022-03-01"},{"lineNumber":361,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | locate students by name                                          | easily find students whose names contain certain keywords                                                   |","lastModifiedDate":"2022-03-01"},{"lineNumber":362,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | filter students based on the status of their labs                | quickly filter out the students that possess the same tags                                                  |","lastModifiedDate":"2022-03-24"},{"lineNumber":363,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | add a new lab assignment to the assignment list                  | keep track of which lab assignments have been released to students                                          |","lastModifiedDate":"2022-03-01"},{"lineNumber":364,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | update status of a lab when a student has submitted it           | keep track of which labs students have submitted                                                            |","lastModifiedDate":"2022-03-24"},{"lineNumber":365,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | update status of a lab and add marks to it when I have graded it | keep track of what labs I have graded and how I have graded them                                            |","lastModifiedDate":"2022-03-24"},{"lineNumber":366,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | edit status and marks of a lab                                   | edit lab statuses and marks I changed or entered by mistake                                                 |","lastModifiedDate":"2022-03-24"},{"lineNumber":367,"author":{"gitId":"bryans17"},"content":"| `* * *`  | TA      | remove a lab assignment from the TAddressBook                    | delete any labs that i\u0027ve previously inputted by accident                                                   |","lastModifiedDate":"2022-04-06"},{"lineNumber":368,"author":{"gitId":"channne"},"content":"| `* *`    | TA      | add students without filling in all attributes                   | keep track of students even if I do not know all their details                                              |","lastModifiedDate":"2022-03-24"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"channne"},"content":"(For all use cases below, the **System** is the `TAddressBook (TAB)` and the **Actor** is the `Teaching Assistant (TA)`, unless otherwise specified)","lastModifiedDate":"2022-03-24"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"channne"},"content":"**Use case UC1: Add a new lab to the list of labs**","lastModifiedDate":"2022-03-24"},{"lineNumber":377,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":378,"author":{"gitId":"channne"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":379,"author":{"gitId":"bryans17"},"content":"1. TA requests to add new lab with a given lab number.","lastModifiedDate":"2022-04-10"},{"lineNumber":380,"author":{"gitId":"channne"},"content":"2. TAB adds a new lab to every student.","lastModifiedDate":"2022-03-24"},{"lineNumber":381,"author":{"gitId":"channne"},"content":"3. TAB shows updated list of labs.","lastModifiedDate":"2022-03-24"},{"lineNumber":382,"author":{"gitId":"channne"},"content":"4. TAB displays success message.","lastModifiedDate":"2022-03-24"},{"lineNumber":383,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":384,"author":{"gitId":"channne"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":385,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":386,"author":{"gitId":"channne"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":387,"author":{"gitId":"bryans17"},"content":"* 1a. TAB detects that the student list is empty.","lastModifiedDate":"2022-04-10"},{"lineNumber":388,"author":{"gitId":"bryans17"},"content":"    * 1a1. TAB displays warning message to user (that there are no students yet).","lastModifiedDate":"2022-04-10"},{"lineNumber":389,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":390,"author":{"gitId":"bryans17"},"content":"      Use case resumes from 4.","lastModifiedDate":"2022-04-10"},{"lineNumber":391,"author":{"gitId":"bryans17"},"content":"  ","lastModifiedDate":"2022-04-10"},{"lineNumber":392,"author":{"gitId":"bryans17"},"content":"* 1b. TAB detects that an identical lab already exists.","lastModifiedDate":"2022-04-10"},{"lineNumber":393,"author":{"gitId":"bryans17"},"content":"    * 1b1. TAB displays error message (that lab already exists).","lastModifiedDate":"2022-04-10"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":395,"author":{"gitId":"channne"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":396,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":397,"author":{"gitId":"bryans17"},"content":"* 1c. TAB detects that the lab number provided is not an integer between 0 and 20 inclusive.","lastModifiedDate":"2022-04-10"},{"lineNumber":398,"author":{"gitId":"bryans17"},"content":"    * 1c1. TAB displays error message (that lab number is invalid).","lastModifiedDate":"2022-04-10"},{"lineNumber":399,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":400,"author":{"gitId":"channne"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":401,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":402,"author":{"gitId":"channne"},"content":"**Use case UC2: Filter students by status of a specified lab**","lastModifiedDate":"2022-03-24"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":404,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":406,"author":{"gitId":"channne"},"content":"1.  TA requests to filter students by a specific lab and lab status.","lastModifiedDate":"2022-03-24"},{"lineNumber":407,"author":{"gitId":"channne"},"content":"2.  TAB displays list of students based on filter criteria.","lastModifiedDate":"2022-03-24"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":411,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":413,"author":{"gitId":"channne"},"content":"* 1a. TA provides non-existent lab.","lastModifiedDate":"2022-03-24"},{"lineNumber":414,"author":{"gitId":"channne"},"content":"    * 1a1. TAB shows error message.","lastModifiedDate":"2022-03-24"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":416,"author":{"gitId":"geetengtan"},"content":"      Use case ends","lastModifiedDate":"2022-03-24"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":418,"author":{"gitId":"channne"},"content":"* 1b. TA tries to filter an empty list.","lastModifiedDate":"2022-03-24"},{"lineNumber":419,"author":{"gitId":"channne"},"content":"    * 1b1. TAB shows error message.","lastModifiedDate":"2022-03-24"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":421,"author":{"gitId":"channne"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":423,"author":{"gitId":"channne"},"content":"**Use case UC3: Mark student\u0027s lab as submitted**","lastModifiedDate":"2022-03-24"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":425,"author":{"gitId":"channne"},"content":"**MSS**","lastModifiedDate":"2022-03-24"},{"lineNumber":426,"author":{"gitId":"channne"},"content":"1. TA requests to change a student’s lab status to \"Submitted\".","lastModifiedDate":"2022-03-24"},{"lineNumber":427,"author":{"gitId":"channne"},"content":"2. TAB changes the student’s lab status from \"Unsubmitted\" to \"Submitted\".","lastModifiedDate":"2022-03-24"},{"lineNumber":428,"author":{"gitId":"channne"},"content":"3. TAB displays updated lab status and success message.","lastModifiedDate":"2022-03-24"},{"lineNumber":429,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":430,"author":{"gitId":"channne"},"content":"   Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":431,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":432,"author":{"gitId":"channne"},"content":"**Extensions**","lastModifiedDate":"2022-03-24"},{"lineNumber":433,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":434,"author":{"gitId":"channne"},"content":"* 1a. TA provides invalid student index.","lastModifiedDate":"2022-03-24"},{"lineNumber":435,"author":{"gitId":"channne"},"content":"    * 1a1. TAB shows error message that student index is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":436,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":437,"author":{"gitId":"channne"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":438,"author":{"gitId":"channne"},"content":"* 1b. TA provides non-existent lab.","lastModifiedDate":"2022-03-24"},{"lineNumber":439,"author":{"gitId":"channne"},"content":"    * 1b1. TAB shows error message stating that the lab does not exist.","lastModifiedDate":"2022-03-24"},{"lineNumber":440,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":441,"author":{"gitId":"channne"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":442,"author":{"gitId":"channne"},"content":"* 1c. TA provides lab that is already \"Submitted\" or \"Graded\".","lastModifiedDate":"2022-03-24"},{"lineNumber":443,"author":{"gitId":"channne"},"content":"    * 1c1. TAB shows error message stating that lab must be \"Unsubmitted\".","lastModifiedDate":"2022-03-24"},{"lineNumber":444,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":445,"author":{"gitId":"channne"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":446,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":447,"author":{"gitId":"channne"},"content":"**Use case UC4: Mark student\u0027s lab as graded**","lastModifiedDate":"2022-03-24"},{"lineNumber":448,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":449,"author":{"gitId":"bryans17"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":450,"author":{"gitId":"channne"},"content":"1. TA requests to change a student’s lab status to \"Graded\" and specifies a grade.","lastModifiedDate":"2022-03-24"},{"lineNumber":451,"author":{"gitId":"channne"},"content":"2. TAB changes the student’s lab status from either \"Unsubmitted\" or \"Submitted\" to \"Graded\".","lastModifiedDate":"2022-03-24"},{"lineNumber":452,"author":{"gitId":"channne"},"content":"3. TAB adds the specified grade to the student\u0027s lab.","lastModifiedDate":"2022-03-24"},{"lineNumber":453,"author":{"gitId":"channne"},"content":"4. TAB displays updated lab status, grade and success message.","lastModifiedDate":"2022-03-24"},{"lineNumber":454,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":455,"author":{"gitId":"bryans17"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":456,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":457,"author":{"gitId":"bryans17"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":458,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":459,"author":{"gitId":"channne"},"content":"* 1a. TA provides invalid student index.","lastModifiedDate":"2022-03-24"},{"lineNumber":460,"author":{"gitId":"channne"},"content":"    * 1a1. TAB shows error message that student index is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":461,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":462,"author":{"gitId":"channne"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":463,"author":{"gitId":"channne"},"content":"* 1b. TA provides non-existent lab.","lastModifiedDate":"2022-03-24"},{"lineNumber":464,"author":{"gitId":"channne"},"content":"    * 1b1. TAB shows error message stating that the lab does not exist.","lastModifiedDate":"2022-03-24"},{"lineNumber":465,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":466,"author":{"gitId":"channne"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":467,"author":{"gitId":"channne"},"content":"* 1c. TA provides lab that is already \"Graded\".","lastModifiedDate":"2022-03-24"},{"lineNumber":468,"author":{"gitId":"channne"},"content":"    * 1c1. TAB shows error message stating that lab is already \"Graded\".","lastModifiedDate":"2022-03-24"},{"lineNumber":469,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":470,"author":{"gitId":"channne"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":471,"author":{"gitId":"channne"},"content":"* 1d. TA provides an invalid grade (e.g. a negative number).","lastModifiedDate":"2022-03-24"},{"lineNumber":472,"author":{"gitId":"channne"},"content":"    * 1d1. TAB shows error message stating that grade provided is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":473,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":474,"author":{"gitId":"channne"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":475,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":476,"author":{"gitId":"channne"},"content":"**Use case UC5: Edit a student\u0027s lab**","lastModifiedDate":"2022-03-24"},{"lineNumber":477,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":478,"author":{"gitId":"bryans17"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":479,"author":{"gitId":"channne"},"content":"1. TA requests to edit a specified student lab\u0027s status and/or grade.","lastModifiedDate":"2022-03-24"},{"lineNumber":480,"author":{"gitId":"channne"},"content":"2. TAB edits the specified student lab\u0027s status and/or grade.","lastModifiedDate":"2022-03-24"},{"lineNumber":481,"author":{"gitId":"channne"},"content":"3. TAB displays updated lab status, grade and success message.","lastModifiedDate":"2022-03-24"},{"lineNumber":482,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":483,"author":{"gitId":"bryans17"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":484,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":485,"author":{"gitId":"bryans17"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":486,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":487,"author":{"gitId":"channne"},"content":"* 1a. TA provides invalid student index.","lastModifiedDate":"2022-03-24"},{"lineNumber":488,"author":{"gitId":"channne"},"content":"    * 1a1. TAB shows error message that student index is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":489,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":490,"author":{"gitId":"channne"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":491,"author":{"gitId":"channne"},"content":"* 1b. TA provides non-existent lab.","lastModifiedDate":"2022-03-24"},{"lineNumber":492,"author":{"gitId":"channne"},"content":"    * 1b1. TAB shows error message stating that the lab does not exist.","lastModifiedDate":"2022-03-24"},{"lineNumber":493,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":494,"author":{"gitId":"channne"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":495,"author":{"gitId":"channne"},"content":"* 1c. TA provides invalid status and grade combination e.g. providing a grade when the updated status is \"Unsubmitted\".","lastModifiedDate":"2022-03-24"},{"lineNumber":496,"author":{"gitId":"channne"},"content":"    * 1c1. TAB shows error message stating that the given combination is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":497,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":498,"author":{"gitId":"channne"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":499,"author":{"gitId":"channne"},"content":"* 1d. TA provides an invalid grade (e.g. a negative number).","lastModifiedDate":"2022-03-24"},{"lineNumber":500,"author":{"gitId":"channne"},"content":"    * 1d1. TAB shows error message stating that grade provided is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":501,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":502,"author":{"gitId":"channne"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":503,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":504,"author":{"gitId":"bryans17"},"content":"**Use case UC6: Remove a  lab from the list of labs**","lastModifiedDate":"2022-04-10"},{"lineNumber":505,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":506,"author":{"gitId":"bryans17"},"content":"**MSS**","lastModifiedDate":"2022-04-10"},{"lineNumber":507,"author":{"gitId":"bryans17"},"content":"1. TA requests to remove a lab with a given lab number.","lastModifiedDate":"2022-04-10"},{"lineNumber":508,"author":{"gitId":"bryans17"},"content":"2. TAB removes the lab from every student.","lastModifiedDate":"2022-04-10"},{"lineNumber":509,"author":{"gitId":"bryans17"},"content":"3. TAB shows updated list of labs.","lastModifiedDate":"2022-04-10"},{"lineNumber":510,"author":{"gitId":"bryans17"},"content":"4. TAB displays success message.","lastModifiedDate":"2022-04-10"},{"lineNumber":511,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":512,"author":{"gitId":"bryans17"},"content":"   Use case ends.","lastModifiedDate":"2022-04-10"},{"lineNumber":513,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":514,"author":{"gitId":"bryans17"},"content":"**Extensions**","lastModifiedDate":"2022-04-10"},{"lineNumber":515,"author":{"gitId":"bryans17"},"content":"* 1a. TAB detects that the lab number provided is not an integer between 0 and 20 inclusive.","lastModifiedDate":"2022-04-10"},{"lineNumber":516,"author":{"gitId":"bryans17"},"content":"    * 1a1. TAB displays error message (that lab number is invalid).","lastModifiedDate":"2022-04-10"},{"lineNumber":517,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":518,"author":{"gitId":"bryans17"},"content":"      Use case ends.","lastModifiedDate":"2022-04-10"},{"lineNumber":519,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":520,"author":{"gitId":"bryans17"},"content":"* 1b. TAB detects that the lab number provided is not a lab present in the TAddressBook.","lastModifiedDate":"2022-04-10"},{"lineNumber":521,"author":{"gitId":"bryans17"},"content":"    * 1b1. TAB displays error message (that lab number does not exist).","lastModifiedDate":"2022-04-10"},{"lineNumber":522,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":523,"author":{"gitId":"bryans17"},"content":"      Use case ends.","lastModifiedDate":"2022-04-10"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"channne"},"content":"2. Should be able to hold up to 1000 students without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-03-02"},{"lineNumber":529,"author":{"gitId":"channne"},"content":"3. A TA with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-03-02"},{"lineNumber":530,"author":{"gitId":"bryans17"},"content":"4. Should be intuitive for both new users and experienced users.","lastModifiedDate":"2022-03-02"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"bryans17"},"content":"* **Lab**: Refers to Lab assignments from the module CS2030S offered by The National University of Singapore.","lastModifiedDate":"2022-03-04"},{"lineNumber":538,"author":{"gitId":"channne"},"content":"* **Lab Status**: Refers to possible statuses of Lab assignments.","lastModifiedDate":"2022-03-24"},{"lineNumber":539,"author":{"gitId":"channne"},"content":"  * **UNSUBMITTED**: Status to indicate that the student has not submitted the Lab assignment.","lastModifiedDate":"2022-03-24"},{"lineNumber":540,"author":{"gitId":"channne"},"content":"  * **SUBMITTED**: Status to indicate that the student has submitted the Lab assignment to his GitHub repository.","lastModifiedDate":"2022-03-24"},{"lineNumber":541,"author":{"gitId":"channne"},"content":"  * **GRADED**: Status to indicate that the User (TA) has graded the student\u0027s Lab assignment.","lastModifiedDate":"2022-03-24"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"bryans17"},"content":"### Deleting a Student","lastModifiedDate":"2022-04-06"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"bryans17"},"content":"1. Deleting a student while all students are being shown","lastModifiedDate":"2022-04-06"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"bryans17"},"content":"   1. Prerequisites: List all students using the `list` command. Multiple students in the list.","lastModifiedDate":"2022-04-06"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"bryans17"},"content":"      Expected: No students is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-04-06"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"bryans17"},"content":"### Adding a Lab","lastModifiedDate":"2022-04-10"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"bryans17"},"content":"1. Assuming the `LabList` is empty and the list has some `Student`s.","lastModifiedDate":"2022-04-10"},{"lineNumber":589,"author":{"gitId":"bryans17"},"content":"   1. Test case: `labadd l/1`\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":590,"author":{"gitId":"bryans17"},"content":"   Expected: `Lab 1` will appear as a red label on each `Student`\u0027s card in the list.","lastModifiedDate":"2022-04-10"},{"lineNumber":591,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"bryans17"},"content":"   2. Test case: `labadd l/21`\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":593,"author":{"gitId":"bryans17"},"content":"   Expected: A error message will appear with the correct command format and constraints and no lab will be added.","lastModifiedDate":"2022-04-10"},{"lineNumber":594,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"bryans17"},"content":"   3. Test case: `labadd l/-1`\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":596,"author":{"gitId":"bryans17"},"content":"   Expected: A error message will appear with the correct command format and constraints and no lab will be added.","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"channne":103,"-":325,"bryans17":149,"geetengtan":19}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [TAddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":54,"bryans17":1}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"TAddressBook is a **desktop app made for CS2030S Lab Teaching Assistants (TAs) to keep track of students\u0027 lab assignments, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"If you can type fast, TAddressBook can get your lab management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"1. Ensure you have Java `11` or above installed in your computer.","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"2. Download the latest `TAddressBook.jar` from [here](https://github.com/AY2122S2-CS2103-F10-1/tp/releases).","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your TAddressBook.","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"4. Double-click the file to start the app. A GUI similar to the image below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"   ![Ui](images/sampleUI.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"5. Type a command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing `Enter` will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"   * **`list`** : List all students.","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"   * **`add`**`n/James Ho e/jamesho@email.com g/jamesH tl/jamesho i/A0123456T` : Adds a student named `James Ho` to the TAddressBook.","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"   * **`delete`**`3` : Deletes the 3rd student shown in the current list.","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"   * **`clear`** : Clears all students.","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"6. Refer to the [Features](#feature-list) below for details of each command.","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"## Feature List","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"- [General](#system-related-features)","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"  - [View help page](#viewing-help--help)","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"  - [Exit TAddressBook](#exiting-the-program--exit)","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"  - [Save data](#saving-the-data)","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"  - [Edit data](#editing-the-data-file)","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"- [Manage students](#student-related-features)","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    - [Add students](#adding-a-student--add)","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"    - [List students](#listing-all-students--list)","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"    - [Edit students](#editing-a-student--edit)","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"    - [Find students](#locating-students-by-name--find)","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"    - [Delete students](#deleting-a-student--delete)","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"    - [Clear students](#clearing-all-entries--clear)","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"geetengtan"},"content":"    - [Filter students based on status of lab tags](#filter-by-status-of-individual-labs--filter)","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"geetengtan"},"content":"    - [View student details](#view-student-details--view)","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"- [Manage labs](#lab-related-features)","lastModifiedDate":"2022-02-22"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"    - [Add labs](#adding-a-lab--labadd)","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"    - [Submit labs](#submitting-a-lab--labsub)","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"    - [Grade labs](#grading-a-lab--labgrad)","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"    - [Edit labs](#editing-individual-labs--labedit)","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"    - [Remove labs](#removing-a-lab-labrm)","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"### Things to note","lastModifiedDate":"2022-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2022-04-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/year2` or as `n/John Doe`.","lastModifiedDate":"2022-04-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"* Parentheses mean that at least one of the items in parentheses must be supplied.\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"  e.g. `(s/STATUS) (m/MARK)` can be used as `s/u`, `m/10` or `s/g m/10`.","lastModifiedDate":"2022-04-08"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":80,"author":{"gitId":"bryans17"},"content":"* Items with `…` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"  e.g. `[t/TAG]…` can be used as ` ` (i.e. 0 times), `t/12A`, `t/12A t/year2` etc.","lastModifiedDate":"2022-04-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"  e.g. if the command specifies `n/NAME g/GITHUB`, `g/GITHUB n/NAME` is also acceptable.","lastModifiedDate":"2022-04-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"* If a parameter is expected only once in the command but is specified multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"  e.g. if you specify `i/A0000000J i/A1234567D`, only `i/A1234567D` will be taken.","lastModifiedDate":"2022-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2022-04-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":94,"author":{"gitId":"bryans17"},"content":"### System-related features","lastModifiedDate":"2022-02-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"bryans17"},"content":"#### Viewing help : `help`","lastModifiedDate":"2022-02-22"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"Shows a message explaining how to access the help page.\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"![helpMessage](images/helpMessage.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2022-02-22"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"Exits the program.","lastModifiedDate":"2022-02-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"bryans17"},"content":"Format: `exit`","lastModifiedDate":"2022-02-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"#### Saving the data","lastModifiedDate":"2022-02-22"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"TAddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-02-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"#### Editing the data file","lastModifiedDate":"2022-02-22"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"TAddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to edit that data file.","lastModifiedDate":"2022-02-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"bryans17"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-04-05"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"We recommend that users be **extra careful** when editing data of the `MasterLabList` as well as any `labNumber` of individual `Student`\u0027s `Lab`s.\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"If your changes to the JSON data file makes its format invalid, TAddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-04-05"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"If the data loaded is different from the data JSON, refer to [FAQ Q2](#faq).","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"### Student-related features","lastModifiedDate":"2022-02-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"channne"},"content":"#### Adding a student : `add`","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"Adds a student to the TAddressBook with the provided attributes.","lastModifiedDate":"2022-04-08"},{"lineNumber":124,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":125,"author":{"gitId":"channne"},"content":"Format: `add n/NAME e/EMAIL g/GITHUB tl/TELEGRAM_HANDLE i/STUDENT_ID [t/TAG]...`","lastModifiedDate":"2022-04-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-04-05"},{"lineNumber":128,"author":{"gitId":"channne"},"content":"A student can have any number of tags (including 0).\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":129,"author":{"gitId":"channne"},"content":"Tags must be a single word consisting of alphanumeric characters only.","lastModifiedDate":"2022-04-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-04-08"},{"lineNumber":133,"author":{"gitId":"channne"},"content":"* `add n/James Ho e/jamesho@email.com g/jamesH tl/jamesho i/A0123456T`","lastModifiedDate":"2022-04-08"},{"lineNumber":134,"author":{"gitId":"channne"},"content":"* `add n/John Doe g/johnD e/johndoe@email.com tl/johndoe i/A0111111B t/year2`","lastModifiedDate":"2022-04-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"bryans17"},"content":"#### Listing all students : `list`","lastModifiedDate":"2022-02-22"},{"lineNumber":137,"author":{"gitId":"channne"},"content":"Shows a list of all students in the TAddressBook.","lastModifiedDate":"2022-04-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"channne"},"content":"#### Editing a student : `edit`","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"channne"},"content":"Edits an existing student in the TAddressBook.","lastModifiedDate":"2022-04-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"channne"},"content":"Format: `edit INDEX (n/NAME) (e/EMAIL) (g/GITHUB) (tl/TELEGRAM_HANDLE) (i/STUDENT_ID) (t/TAG)...`","lastModifiedDate":"2022-04-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"channne"},"content":"* Edits the student at the specified `INDEX`. `INDEX` refers to the index number shown in the displayed student list. `INDEX` **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2022-04-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-04-05"},{"lineNumber":148,"author":{"gitId":"channne"},"content":"* When editing tags, the existing tags of the student will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2022-04-08"},{"lineNumber":149,"author":{"gitId":"channne"},"content":"* You can remove all the student’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-04-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-04-05"},{"lineNumber":152,"author":{"gitId":"channne"},"content":"* `edit 1 g/johnedit e/johndoe@example.com` edits the GitHub username and email address of the 1st student to `johnedit` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-04-10"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"* `edit 2 n/Betsy Crower t/` edits the name of the 2nd student to `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-04-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":155,"author":{"gitId":"bryans17"},"content":"#### Locating students by name : `find`","lastModifiedDate":"2022-02-22"},{"lineNumber":156,"author":{"gitId":"bryans17"},"content":"Finds students whose names contain any of the given keywords. At least one keyword must be specified.","lastModifiedDate":"2022-02-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"channne"},"content":"* The search is case-insensitive e.g. `hans` will match `Hans`.","lastModifiedDate":"2022-04-08"},{"lineNumber":161,"author":{"gitId":"channne"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2022-04-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2022-04-05"},{"lineNumber":163,"author":{"gitId":"channne"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`.","lastModifiedDate":"2022-04-08"},{"lineNumber":164,"author":{"gitId":"channne"},"content":"* Students matching at least one keyword will be returned (i.e. `OR` search),","lastModifiedDate":"2022-04-08"},{"lineNumber":165,"author":{"gitId":"channne"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2022-04-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-04-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2022-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":171,"author":{"gitId":"bryans17"},"content":"#### Deleting a student : `delete`","lastModifiedDate":"2022-02-22"},{"lineNumber":172,"author":{"gitId":"channne"},"content":"Deletes the specified student from the TAddressBook.","lastModifiedDate":"2022-04-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"bryans17"},"content":"* Deletes the student at the specified `INDEX`.","lastModifiedDate":"2022-04-05"},{"lineNumber":177,"author":{"gitId":"channne"},"content":"* `INDEX` refers to the index number shown in the displayed student list.","lastModifiedDate":"2022-04-08"},{"lineNumber":178,"author":{"gitId":"channne"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2022-04-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-04-05"},{"lineNumber":181,"author":{"gitId":"bryans17"},"content":"* `list` followed by `delete 2` deletes the 2nd student in the TAddressBook.","lastModifiedDate":"2022-04-05"},{"lineNumber":182,"author":{"gitId":"bryans17"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st student in the results of the `find` command.","lastModifiedDate":"2022-04-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":184,"author":{"gitId":"bryans17"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2022-02-22"},{"lineNumber":185,"author":{"gitId":"channne"},"content":"Clears all entries from the TAddressBook, including all students and all labs.","lastModifiedDate":"2022-04-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"channne"},"content":"#### Filter (by status of individual labs) : `filter`","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"channne"},"content":"Filters students based on the `LabStatus` of a specific lab.","lastModifiedDate":"2022-04-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":192,"author":{"gitId":"channne"},"content":"Format: `filter l/LAB_NUMBER s/LAB_STATUS`","lastModifiedDate":"2022-04-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"channne"},"content":"* Multiple filters can be applied cumulatively by executing the filter command multiple times.","lastModifiedDate":"2022-04-08"},{"lineNumber":195,"author":{"gitId":"channne"},"content":"  Using the `list` command clears all filters that are currently applied.","lastModifiedDate":"2022-04-08"},{"lineNumber":196,"author":{"gitId":"channne"},"content":"* `LAB_NUMBER` must correspond to one of the labs currently in the TAddressBook.","lastModifiedDate":"2022-04-10"},{"lineNumber":197,"author":{"gitId":"channne"},"content":"* `LAB_STATUS` must correspond to one of the following:","lastModifiedDate":"2022-04-08"},{"lineNumber":198,"author":{"gitId":"channne"},"content":"  * `UNSUBMITTED` \u003d `u`","lastModifiedDate":"2022-04-10"},{"lineNumber":199,"author":{"gitId":"channne"},"content":"  * `SUBMITTED` \u003d `s`","lastModifiedDate":"2022-04-10"},{"lineNumber":200,"author":{"gitId":"channne"},"content":"  * `GRADED` \u003d `g`","lastModifiedDate":"2022-04-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"channne"},"content":"Example:","lastModifiedDate":"2022-04-08"},{"lineNumber":203,"author":{"gitId":"channne"},"content":"* `filter l/2 s/u` returns all students with a status of `UNSUBMITTED` for `Lab 2`.","lastModifiedDate":"2022-04-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"geetengtan"},"content":"#### View student details : `view`","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"channne"},"content":"View a student\u0027s details from the TAddressBook. This includes their personal information (i.e. email, GitHub username, etc.)","lastModifiedDate":"2022-04-08"},{"lineNumber":207,"author":{"gitId":"channne"},"content":"as well as the status and/or marks achieved for their labs. A sample result is shown below.\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":208,"author":{"gitId":"channne"},"content":"![viewUi](images/viewUI.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"geetengtan"},"content":"Format: `view INDEX`","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"channne"},"content":"* `INDEX` refers to the index number shown in the displayed student list.","lastModifiedDate":"2022-04-08"},{"lineNumber":213,"author":{"gitId":"channne"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2022-04-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":215,"author":{"gitId":"bryans17"},"content":"### Lab-related features","lastModifiedDate":"2022-02-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"channne"},"content":"#### Adding a lab : `labadd`","lastModifiedDate":"2022-04-08"},{"lineNumber":218,"author":{"gitId":"channne"},"content":"Adds a lab to every student. Shows up as a `LabLabel` on each student’s entry. By default, the `LabLabel` will be colored red for `UNSUBMITTED`.","lastModifiedDate":"2022-04-08"},{"lineNumber":219,"author":{"gitId":"channne"},"content":"The `LabLabel` is subsequently colored differently to represent different statuses:","lastModifiedDate":"2022-04-08"},{"lineNumber":220,"author":{"gitId":"channne"},"content":"* `UNSUBMITTED` \u003d red","lastModifiedDate":"2022-04-08"},{"lineNumber":221,"author":{"gitId":"channne"},"content":"* `SUBMITTED` \u003d yellow","lastModifiedDate":"2022-04-08"},{"lineNumber":222,"author":{"gitId":"channne"},"content":"* `GRADED` \u003d green","lastModifiedDate":"2022-04-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"channne"},"content":"Format: `labadd l/LAB_NUMBER`","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":226,"author":{"gitId":"channne"},"content":"* `LAB_NUMBER` must be an integer between 0 and 20 inclusive.","lastModifiedDate":"2022-04-08"},{"lineNumber":227,"author":{"gitId":"channne"},"content":"* Leading zeros will be ignored i.e. `l/00000012` will be treated as `l/12`","lastModifiedDate":"2022-04-10"},{"lineNumber":228,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":229,"author":{"gitId":"channne"},"content":"After adding a new lab e.g. `labadd l/1` you should see this\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":230,"author":{"gitId":"channne"},"content":"(assuming you did not already have `Lab 1`):","lastModifiedDate":"2022-04-10"},{"lineNumber":231,"author":{"gitId":"bryans17"},"content":"![addLabUi](images/addLabUi.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":232,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":233,"author":{"gitId":"channne"},"content":"#### Submitting a lab : `labsub`","lastModifiedDate":"2022-04-08"},{"lineNumber":234,"author":{"gitId":"channne"},"content":"Changes the status of the specified lab for the student with the specified `INDEX` from `UNSUBMITTED` to `SUBMITTED`.","lastModifiedDate":"2022-04-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":236,"author":{"gitId":"channne"},"content":"Format: `labsub INDEX l/LAB_NUMBER`","lastModifiedDate":"2022-03-31"},{"lineNumber":237,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":238,"author":{"gitId":"channne"},"content":"* `INDEX` refers to the index number shown in the displayed student list. `INDEX` **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2022-04-08"},{"lineNumber":239,"author":{"gitId":"channne"},"content":"* `LAB_NUMBER` must correspond to one of the labs currently in the TAddressBook.","lastModifiedDate":"2022-04-10"},{"lineNumber":240,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":241,"author":{"gitId":"channne"},"content":"#### Grading a lab : `labgrad`","lastModifiedDate":"2022-04-08"},{"lineNumber":242,"author":{"gitId":"channne"},"content":"Changes the status of the specified lab for the student with the specified `INDEX` to `GRADED` and records down the marks given for the lab.","lastModifiedDate":"2022-04-08"},{"lineNumber":243,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":244,"author":{"gitId":"channne"},"content":"Format: `labgrad INDEX l/LAB_NUMBER m/LAB_MARK`","lastModifiedDate":"2022-03-31"},{"lineNumber":245,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":246,"author":{"gitId":"channne"},"content":"* The current status of the lab to be graded can be either `UNSUBMITTED` or `SUBMITTED`.","lastModifiedDate":"2022-04-08"},{"lineNumber":247,"author":{"gitId":"channne"},"content":"* `INDEX` refers to the index number shown in the displayed student list. `INDEX` **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2022-04-08"},{"lineNumber":248,"author":{"gitId":"channne"},"content":"* `LAB_NUMBER` must correspond to one of the labs currently in the TAddressBook.","lastModifiedDate":"2022-04-10"},{"lineNumber":249,"author":{"gitId":"channne"},"content":"* `LAB_MARK` should be an integer between 0 and 100 inclusive. Note that leading zeros will be ignored i.e. `m/00000012` will be treated as `m/12`","lastModifiedDate":"2022-04-10"},{"lineNumber":250,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":251,"author":{"gitId":"channne"},"content":"#### Editing individual labs : `labedit`","lastModifiedDate":"2022-04-08"},{"lineNumber":252,"author":{"gitId":"channne"},"content":"Edits the status or marks of the specified lab for the student with the specified `INDEX`.","lastModifiedDate":"2022-04-10"},{"lineNumber":253,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":254,"author":{"gitId":"channne"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-04-10"},{"lineNumber":255,"author":{"gitId":"channne"},"content":"`labedit` can achieve similar outcomes as `labsub` and `labgrad`, but using the latter commands would require less parameter inputs and thus be more convenient.","lastModifiedDate":"2022-04-10"},{"lineNumber":256,"author":{"gitId":"channne"},"content":"The main purpose of `labedit` is to allow for editing of wrongly provided information.","lastModifiedDate":"2022-04-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"channne"},"content":"Format: `labedit INDEX l/LAB_NUMBER (s/LAB_STATUS) (m/LAB_MARK)`","lastModifiedDate":"2022-04-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":261,"author":{"gitId":"channne"},"content":"* `INDEX` refers to the index number shown in the displayed student list. `INDEX` **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2022-04-08"},{"lineNumber":262,"author":{"gitId":"channne"},"content":"* `LAB_STATUS` must be one of `u`/`s`/`g` (`UNSUBMITTED`/`SUBMITTED`/`GRADED`).","lastModifiedDate":"2022-04-08"},{"lineNumber":263,"author":{"gitId":"channne"},"content":"* `LAB_MARK` should be an integer between 0 and 100 inclusive. Note that leading zeros will be ignored i.e. `m/00000012` will be treated as `m/12`","lastModifiedDate":"2022-04-10"},{"lineNumber":264,"author":{"gitId":"channne"},"content":"* Only valid combinations of `LAB_STATUS` and `LAB_MARK` will be accepted.","lastModifiedDate":"2022-04-08"},{"lineNumber":265,"author":{"gitId":"channne"},"content":"  * If `LAB_MARK` is provided, there is no need to provide `LAB_STATUS`.\u003cbr\u003eHowever, if provided, `LAB_STATUS` must be `g`.","lastModifiedDate":"2022-04-10"},{"lineNumber":266,"author":{"gitId":"channne"},"content":"  * If `LAB_STATUS` is `u` or `s`, `LAB_MARK` cannot be provided.","lastModifiedDate":"2022-04-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":268,"author":{"gitId":"channne"},"content":"#### Removing a lab: `labrm`","lastModifiedDate":"2022-04-08"},{"lineNumber":269,"author":{"gitId":"channne"},"content":"Removes a specified lab from every student in the TAddressBook.","lastModifiedDate":"2022-04-08"},{"lineNumber":270,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":271,"author":{"gitId":"bryans17"},"content":"Format: `labrm l/LAB_NUMBER`","lastModifiedDate":"2022-03-16"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":273,"author":{"gitId":"channne"},"content":"* `LAB_NUMBER` must correspond to one of the labs currently in the TAddressBook.","lastModifiedDate":"2022-04-10"},{"lineNumber":274,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"bryans17"},"content":"**Q1**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":279,"author":{"gitId":"bryans17"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous TAddressBook home folder.","lastModifiedDate":"2022-02-22"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"bryans17"},"content":"**Q2**: Why is the data loaded different from my data JSON?\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":282,"author":{"gitId":"bryans17"},"content":"**A**: Please note the following defensive behavior related to the data JSON file:","lastModifiedDate":"2022-03-31"},{"lineNumber":283,"author":{"gitId":"channne"},"content":"1. All students will have their `LabList` aligned with the `MasterLabList` when the data file is loaded in. This means that any labs that a student is missing will be added in with the default `LabStatus` of `UNSUBMITTED`.","lastModifiedDate":"2022-04-10"},{"lineNumber":284,"author":{"gitId":"channne"},"content":"   Any labs that the student has that is not in the `MasterLabList` will be ignored.","lastModifiedDate":"2022-04-10"},{"lineNumber":285,"author":{"gitId":"channne"},"content":"2. If a student has a lab that has a missing or invalid `LabStatus`, the `LabStatus` is set to `UNSUBMITTED`, or `GRADED` if a valid `LabMark` is present.","lastModifiedDate":"2022-04-10"},{"lineNumber":286,"author":{"gitId":"channne"},"content":"3. If a student has a lab with a missing or invalid `LabMark` but has a `LabStatus` of `GRADED`,  it is loaded as an `UNSUBMITTED` lab with `Unknown` mark.","lastModifiedDate":"2022-04-10"},{"lineNumber":287,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":288,"author":{"gitId":"bryans17"},"content":"If the TAddressBook starts up with blank data, but the user expects there to be data, it means that there are formatting issues in the data JSON due to editing by the user.","lastModifiedDate":"2022-03-31"},{"lineNumber":289,"author":{"gitId":"channne"},"content":"In which case, if the user wants to modify the data JSON, the user should exit the app without using any commands that can modify data and restart the app after correcting the data JSON.","lastModifiedDate":"2022-04-10"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":296,"author":{"gitId":"bryans17"},"content":"| Action         | Format, Examples                                                                                                                                        |","lastModifiedDate":"2022-03-30"},{"lineNumber":297,"author":{"gitId":"channne"},"content":"|----------------|---------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-31"},{"lineNumber":298,"author":{"gitId":"bryans17"},"content":"| **Help**       | `help`                                                                                                                                                  |","lastModifiedDate":"2022-04-06"},{"lineNumber":299,"author":{"gitId":"bryans17"},"content":"| **Exit**       | `exit`                                                                                                                                                  |","lastModifiedDate":"2022-04-06"},{"lineNumber":300,"author":{"gitId":"channne"},"content":"| **Add**        | `add n/NAME e/EMAIL g/GITHUB tl/TELEGRAM_HANDLE i/STUDENT_ID [t/TAG]...` \u003cbr\u003e e.g. `add n/James Ho e/jamesho@email.com g/jamesH tl/jamesho i/A0123456T` |","lastModifiedDate":"2022-04-10"},{"lineNumber":301,"author":{"gitId":"bryans17"},"content":"| **List**       | `list`                                                                                                                                                  |","lastModifiedDate":"2022-04-06"},{"lineNumber":302,"author":{"gitId":"channne"},"content":"| **Edit**       | `edit INDEX (n/NAME) (e/EMAIL) (g/GITHUB) (tl/TELEGRAM_HANDLE) (i/STUDENT_ID) (t/TAG)...`\u003cbr\u003e e.g. `edit 2 n/James Lee g/jamesHo`                       |","lastModifiedDate":"2022-04-10"},{"lineNumber":303,"author":{"gitId":"channne"},"content":"| **Find**       | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g. `find James Jake`                                                                                               |","lastModifiedDate":"2022-04-10"},{"lineNumber":304,"author":{"gitId":"channne"},"content":"| **Delete**     | `delete INDEX`\u003cbr\u003e e.g. `delete 3`                                                                                                                      |","lastModifiedDate":"2022-04-10"},{"lineNumber":305,"author":{"gitId":"bryans17"},"content":"| **Clear**      | `clear`                                                                                                                                                 |","lastModifiedDate":"2022-04-06"},{"lineNumber":306,"author":{"gitId":"channne"},"content":"| **Filter**     | `filter l/LAB_NUMBER s/LAB_STATUS`\u003cbr\u003e e.g. `filter l/1 s/u`                                                                                            |","lastModifiedDate":"2022-04-10"},{"lineNumber":307,"author":{"gitId":"geetengtan"},"content":"| **View**       | `view INDEX`                                                                                                                                            |","lastModifiedDate":"2022-03-31"},{"lineNumber":308,"author":{"gitId":"bryans17"},"content":"| **Add lab**    | `labadd l/LAB_NUMBER`                                                                                                                                   |","lastModifiedDate":"2022-03-30"},{"lineNumber":309,"author":{"gitId":"channne"},"content":"| **Submit lab** | `labsub INDEX l/LAB_NUMBER`                                                                                                                             |","lastModifiedDate":"2022-03-31"},{"lineNumber":310,"author":{"gitId":"channne"},"content":"| **Grade lab**  | `labgrad INDEX l/LAB_NUMBER m/LAB_MARK`                                                                                                                 |","lastModifiedDate":"2022-03-31"},{"lineNumber":311,"author":{"gitId":"channne"},"content":"| **Edit lab**   | `labedit INDEX l/LAB_NUMBER (s/LAB_STATUS) (m/LAB_MARK)`                                                                                                |","lastModifiedDate":"2022-04-08"},{"lineNumber":312,"author":{"gitId":"bryans17"},"content":"| **Remove lab** | `labrm l/LAB_NUMBER`                                                                                                                                    |","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"channne":127,"-":115,"bryans17":64,"geetengtan":6}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"channne"},"content":"    content: \"TAddressBook\";","lastModifiedDate":"2022-04-10"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"channne":1,"-":294}},{"path":"docs/diagrams/AddLabCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"@startuml","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"start","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":":User executes add lab command with a Lab Number;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"if () then ([valid Lab Number])","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"  if () then ([duplicate lab])","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"    :Displays error message;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"  else ([else])","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"    :Adds a new Lab with the specified Lab Number","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"    to every student in the list and displays it;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"  endif","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":" else ([invalid Lab Number])","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"    :Displays error message;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":" endif","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"stop","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"@enduml","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"bryans17":18}},{"path":"docs/diagrams/AddLabCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"@startuml","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"!include style.puml","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"participant \"a:AddLabCommand\" as AddLabCommand LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"participant \"c:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"participant \":MasterLabList\" as MasterLabList MODEL_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"participant \":UniqueStudentList\" as UniqueStudentList MODEL_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"[-\u003e AddLabCommand : execute(m)","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"activate AddLabCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"AddLabCommand -\u003e Model : hasLab(toAdd)","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"activate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"Model --\u003e AddLabCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"deactivate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"AddLabCommand -\u003e Model : isStudentListEmpty()","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"activate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"Model --\u003e AddLabCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"deactivate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"AddLabCommand -\u003e Model : addLab(toAdd)","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"activate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"Model -\u003e AddressBook : addLab(toAdd)","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"activate AddressBook","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"AddressBook -\u003e MasterLabList : addLab(toAdd)","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"activate MasterLabList","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"MasterLabList -\u003e MasterLabList : add(toAdd)","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"activate MasterLabList","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"MasterLabList --\u003e MasterLabList","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"deactivate MasterLabList","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"MasterLabList --\u003e AddressBook","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"deactivate MasterLabList","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"AddressBook -\u003e UniqueStudentList : addLabToAll(toAdd)","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"activate UniqueStudentList","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"UniqueStudentList --\u003e AddressBook","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"deactivate UniqueStudentList","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"deactivate AddressBook","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"Model --\u003e AddLabCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"deactivate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"create CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"AddLabCommand -\u003e CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"activate CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"CommandResult --\u003e AddLabCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"[\u003c--AddLabCommand : c","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"deactivate AddLabCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"@enduml","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"bryans17":72}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteStudent(p)","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":37,"bryans17":1}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"AddressBook *-right-\u003e \"1\" UniqueStudentList","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"AddressBook *-down-\u003e \"1\" MasterLabList","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"UniqueTagList -[hidden]down- UniqueStudentList","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"UniqueTagList -[hidden]down- UniqueStudentList","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"MasterLabList -down-|\u003e LabList","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"LabList *--\u003e \"~*\" Lab","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"UniqueStudentList -right-\u003e Student","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"Student -up-\u003e \"*\" Tag","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"Student *--\u003e \"1\" Name","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"Student *--\u003e \"1\" GithubUsername","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"Student *--\u003e \"1\" Email","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"Student *--\u003e \"1\" Telegram","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"Student *--\u003e \"1\" StudentId","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"Student *--\u003e \"1\" LabList","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":12,"bryans17":14}},{"path":"docs/diagrams/FilterCommandSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"user -[USER_COLOR]\u003e ui : \"filter l/1 s/s\"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"activate ui UI_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"filter l/1 s/s\")","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"logic -[LOGIC_COLOR]\u003e model : updateFilteredStudentList()","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"model -[MODEL_COLOR]\u003e model :","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"activate model MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"deactivate model","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"deactivate logic","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"deactivate ui","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"geetengtan":31}},{"path":"docs/diagrams/LabListAddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"@startuml","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"!include style.puml","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"participant \"LabList\" as LabList MODEL_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"participant \"internalList:ObservableList\u003cLab\u003e\" as ObservableList MODEL_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"[-\u003e LabList : add(lab)","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"activate LabList","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"LabList -\u003e LabList : contains(lab)","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"activate LabList","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"LabList --\u003e LabList","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"deactivate LabList","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"LabList -\u003e ObservableList : add(lab)","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"activate ObservableList","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"ObservableList --\u003e LabList","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"deactivate ObservableList","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"LabList -\u003e ObservableList : sort(sortByLabNumber)","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"activate ObservableList","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"ObservableList --\u003e LabList","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"deactivate ObservableList","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"[\u003c-- LabList","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"deactivate LabList","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"@enduml","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"bryans17":34}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"Class UniqueStudentList","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"Class Student","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"Class Telegram","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"Class GithubUsername","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"Class StudentId","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"Package Lab {","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    Class LabList","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    Class MasterLabList","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    Class Lab","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"AddressBook *--\u003e \"1\" UniqueStudentList","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"UniqueStudentList --\u003e \"~* all    \" Student","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"Student *--\u003e \"1\" Name","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"Student *--\u003e \"1\" GithubUsername","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"Student *--\u003e \"1\" Email","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"Student *--\u003e \"1\" Telegram","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"Student *--\u003e \"1  \" StudentId","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"Student *--\u003e \"*\" Tag","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"Student *-down--\u003e \"1\" LabList","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"LabList -down-\u003e \"~*\" Lab","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"MasterLabList -left-|\u003e LabList","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"AddressBook *--\u003e \"1  \" MasterLabList","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"Name -[hidden]right-\u003e GithubUsername","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"Name -[hidden]down-\u003e MasterLabList","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"GithubUsername -[hidden]right-\u003e Telegram","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"Telegram -[hidden]right-\u003e StudentId","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"ModelManager --\u003e \"~* filtered\" Student","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":35,"bryans17":29}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"Class JsonAdaptedStudent","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"Class JsonAdaptedLab","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedStudent","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"JsonAdaptedStudent --\u003e \"~*\" JsonAdaptedTag","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"JsonAdaptedStudent --\u003e \"~* \" JsonAdaptedLab","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":40,"bryans17":5}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"Class StudentListPanel","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"Class StudentCard","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"MainWindow *-down-\u003e \"1\" StudentListPanel","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"StudentListPanel -down-\u003e \"*\" StudentCard","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"StudentListPanel --|\u003e UiPart","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"StudentCard --|\u003e UiPart","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"StudentCard ..\u003e Model","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"StudentListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":52,"bryans17":8}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"title: TAddressBook","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103-F10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103-F10-1/tp/actions)","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103-F10-1/tp/branch/master/graph/badge.svg?token\u003dALQL4EZKOU)](https://codecov.io/gh/AY2122S2-CS2103-F10-1/tp)","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"**TAddressBook is a desktop application for CS2030S Teaching Assistants (TAs) to keep track of students and their lab assignments**.","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"* If you are interested in using TAddressBook, head over to the *Quick Start* section of the **[User Guide](https://ay2122s2-cs2103-f10-1.github.io/tp/UserGuide.html#quick-start)**.","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"* If you are interested about developing TAddressBook, the **[Developer Guide](https://ay2122s2-cs2103-f10-1.github.io/tp/DeveloperGuide.html)** is a good place to start.","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"* This project is based on the [AddressBook Level 3](https://github.com/se-edu/addressbook-level3) project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"**Acknowledgments**","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"channne":6,"-":11,"bryans17":2}},{"path":"docs/team/bryans17.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"title: Bryan Seah\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"### Project: TAddressBook","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"**TAddressBook** is a student project based on [AddressBook Level 3](https://github.com/se-edu/addressbook-level3). It is a desktop application created with the aim of helping CS2030S Teaching Assistants (TAs) keep track of student\u0027s lab assignments.","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"- **New Feature:** Add Lab [#67](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/67)","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"  - What it does:","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"    - Adds a new `Lab` with an Integer `labNumber` between 0 and 20 inclusive and default `LabStatus` of `UNSUBMITTED`, to the `MasterLabList` as well as to all `Student`s in the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"    - The Ui automatically updates to show the newly added `Lab`.","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"  - Justification:","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    - This is the main functionality of TAddressBook which allows CS2030S TAs to add labs the TA wants to keep track of.","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"  - Highlights:","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    - This feature involved adding a new component to the UI to show the Labs which is binded to an `ObservableList\u003cLab\u003e` for automatic update of the UI when the Lab changes.","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"- **New Feature:** Remove Lab [#72](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/72)","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"  - What it does:","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    - Removes a  `Lab`, with an Integer `labNumber` between 0 and 20 inclusive, from the `MasterLabList` as well as from all `Student`s in the list.","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    - The Ui automatically updates to show the deleted `Lab`.","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"  - Justification:","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    - This allows CS2030S TAs to delete labs that they accidentally added or no longer want to keep track of.","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"  - Highlights:","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    - This feature takes advantage of the fact that the `LabList` of all students are aligned with the `MasterLabList` as they are sorted by increasing lab number, as we only need to find the index of the Lab we want to delete in the `MasterLabList` and we can then just remove the Lab at that index in all the students\u0027 `LabList` without doing another search.","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"- **Code contributed:** ","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"  - Code contributed can be found at this [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dbryans17\u0026tabRepo\u003dAY2122S2-CS2103-F10-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse).","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"- **Project management:**","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"  - Managed release of v1.2 and v1.3 and issue tracker.","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"  - Add screenshots of product for v1.2 and v1.3 on team project document.","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"  - Manage some team weekly tasks.","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"- **Enhancements to existing features:**","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"  - Updated Attributes of Students","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    - Added `GithubUsername` and `Telegram` attributes to `Student` and updated tests related to `Student` and it\u0027s attributes.","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    - [#45](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/45), [#49](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/49).","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"  - Updated `AddCommand` and `EditCommand` to take into account Labs: [#67](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/67).","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"  - Wrote tests for new and old classes:","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"    - e.g.","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"      - increased code coverage by 0.58% in [#45](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/45).","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"      - increased code coverage by 0.50% in [#49](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/49).","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"      - increased code coverage by 3.98% in [#77](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/77).","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"  - Refactor JSON data serialization and deserialization for the new Lab data: [#93](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/93).","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"  - Fix bugs from PE-D: [#118](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/118), [#119](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/119).","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"- **Documentation:**","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"  - User Guide:","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"    - Added documentation for `labadd`, `labrm`.","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"    - Updated documentation for editing JSON data and changed AB3 stuff to TAddressBook.","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    - [#15](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/15), [#35](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/35), [#93](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/93).","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"  - Developer Guide:","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"    - Add UC3, UC4, and UC6: [#29](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/29), [#129](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/129).","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"    - Add implementation details of `AddLabCommand`, `Lab` component, and update existing UML diagrams to match our code base: [#121](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/121).","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"- **Community:**","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"  - Reviewed PRs of other group members, some examples: [#50](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/50), [#70](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/70), [#71](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/71), [#87](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/87), [#90](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/90), [#91](https://github.com/AY2122S2-CS2103-F10-1/tp/pull/91).","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"  - Reported 9 bugs for another group in [PE-D](https://github.com/bryans17/ped/issues).","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"bryans17":57}},{"path":"docs/team/channne.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"title: Channe Chwa\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"### Project: TAddressBook","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"TAddress Book is a desktop app for CS2030S TAs to manage students and labs, optimized for use via a Command Line","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"Interface. It is based on [AddressBook Level 3](https://se-education.org/addressbook-level3/).","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"**Features**","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"1. Implemented ability to store marks associated with individual labs for individual students.","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"    * Allows TA to keep track of marks given when grading labs.","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"2. Implemented commands to allow for submission of labs, grading of labs and editing of lab details (status and/or marks).","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"    * Allows TA to keep track of students\u0027 progress in labs as well as his/her own grading progress.","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"**Code contributed**: [Reposense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dchannne\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"**Project management**: to be added soon","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"**Documentation**: to be added soon","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"**Community**: to be added soon","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"channne":25}},{"path":"docs/team/geetengtan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"## Ryan Tan Gee Teng","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"### Project: TAddressBook","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"_to be added soon_","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"Below are my contributions to the project:","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"**Features**","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"1. Implemented `FilterCommand` to be able to filter student lists based on their `LabSatus`","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"2. Implemented `ViewCommnad` to be able to view the details of a student in a seperate window","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"**Code Contributed**: [Response Link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dgeetengtan\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18)","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"**Project Management**","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"**Documentation**","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"**Community**","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"geetengtan":20}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"channne"},"content":"Create a new `Remark` in `seedu.address.model.student`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-03-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"channne":1,"-":400}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.student.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"channne":1,"-":111}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing TAddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s TAddress book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"     * The data from the sample TAddress book will be used instead if {@code storage}\u0027s TAddress book is not found,","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"     * or an empty TAddress book will be used instead if errors occur when reading {@code storage}\u0027s TAddress book.","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TAddressBook\");","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TAddressBook\");","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TAddressBook\");","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TAddressBook\");","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"channne"},"content":"        logger.info(\"Starting TAddressBook \" + MainApp.VERSION);","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"channne"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping TAddress Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"channne":10,"-":172,"bryans17":1}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":112,"bryans17":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"    public static final String MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"The student index provided is out of bounds\";","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_STUDENTS_LISTED_OVERVIEW \u003d \"%1$d students listed!\";","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_INVALID_LAB \u003d \"The lab number provided is invalid\";","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":2,"-":11,"geetengtan":1}},{"path":"src/main/java/seedu/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":116,"bryans17":1}},{"path":"src/main/java/seedu/address/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"     * @see #requireAllNonNull(Collection)","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":34,"bryans17":3}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":83,"bryans17":2}},{"path":"src/main/java/seedu/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":142,"bryans17":4}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":68,"bryans17":2}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"     * Returns the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"channne":3,"-":46,"bryans17":4}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"channne":3,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabList;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"channne"},"content":" * Adds a Student to the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the TAddressBook. \\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"            + PREFIX_GITHUB + \"GITHUB \"","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"            + PREFIX_TELEGRAM + \"TELEGRAM \"","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"            + PREFIX_STUDENTID + \"STUDENTID \"","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"            + PREFIX_GITHUB + \"johnD \"","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"            + PREFIX_TELEGRAM + \"jDoe \"","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"            + PREFIX_STUDENTID + \"A0123456B \"","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"            + PREFIX_TAG + \"year2 \"","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"            + PREFIX_TAG + \"Tembusu\";","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the TAddressBook\";","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"    private final Student toAdd;","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"    public AddCommand(Student student) {","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"        toAdd \u003d student;","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"        LabList plainLabList \u003d new LabList();","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"        for (Lab l : model.getLabsAsArrayList()) {","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"            plainLabList.add(l.createCopy());","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"        toAdd.setLabs(plainLabList);","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":17,"-":48,"bryans17":12}},{"path":"src/main/java/seedu/address/logic/commands/AddLabCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"channne"},"content":" * Adds a Lab to the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"public class AddLabCommand extends Command {","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    public static final String COMMAND_WORD \u003d \"labadd\";","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a lab to all students in the TAddressBook. \\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"            + PREFIX_LAB + \"LAB_NUMBER (has to be between 0 and 20 inclusive)\\n\"","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"            + PREFIX_LAB + \"1\";","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Lab added: %1$s\";","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_DUPLICATE_LAB \u003d \"This Lab already exists in the TAddressBook\";","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_EMPTY_STUDENT_LIST \u003d \"Note that the student list is currently empty. \"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"            + \"But Lab %1$s has been added to the Master Lab List.\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"            + \"Subsequent additions of Students will include Lab %1$s.\";","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    private final Lab toAdd;","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"     * Creates an AddLabCommand to add the specified {@code Lab}","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"    public AddLabCommand(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"        requireNonNull(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        toAdd \u003d lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"        String resultString \u003d MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"        if (model.hasLab(toAdd)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_LAB);","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"        if (model.isStudentListEmpty()) {","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"            resultString \u003d MESSAGE_EMPTY_STUDENT_LIST;","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"        model.addLab(toAdd);","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"        return new CommandResult(String.format(resultString, toAdd.labNumber));","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"                || (other instanceof AddLabCommand // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"                \u0026\u0026 toAdd.equals(((AddLabCommand) other).toAdd));","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"channne":2,"bryans17":60}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"channne"},"content":" * Clears the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"TAddressBook has been cleared!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"    private final boolean isShowHelp;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"     * The application should exit.","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"    private final boolean isExit;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"     * {@code view} command is executed","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"    private final boolean isView;","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"    private final Optional\u003cStudent\u003e student;","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"    public CommandResult(String feedbackToUser, boolean isShowHelp, boolean isExit, Student student) {","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"        this.isShowHelp \u003d isShowHelp;","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"        this.student \u003d Optional.ofNullable(student);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"        this.isView \u003d this.student.isPresent();","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"        this(feedbackToUser, false, false, null);","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"geetengtan"},"content":"    public Student getStudent() {","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"geetengtan"},"content":"        return student.orElseThrow(IllegalStateException::new);","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"geetengtan"},"content":"        return isShowHelp;","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"geetengtan"},"content":"    public boolean isView() {","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"geetengtan"},"content":"        return isView;","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"geetengtan"},"content":"        return isExit;","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"geetengtan"},"content":"                \u0026\u0026 isShowHelp \u003d\u003d otherCommandResult.isShowHelp","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"geetengtan"},"content":"                \u0026\u0026 isExit \u003d\u003d otherCommandResult.isExit","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"geetengtan"},"content":"                \u0026\u0026 isView \u003d\u003d otherCommandResult.isView","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"geetengtan"},"content":"                \u0026\u0026 student.equals(otherCommandResult.student);","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"geetengtan"},"content":"        return Objects.hash(feedbackToUser, isShowHelp, isExit, isView, student);","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":61,"geetengtan":30,"bryans17":6}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"channne"},"content":" * Deletes a Student identified using its displayed index from the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"            + \": Deletes the student identified by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted student: %1$s\";","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"            throw new CommandException(Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"        Student studentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        model.deleteStudent(studentToDelete);","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete));","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":8,"-":44,"geetengtan":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabList;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.GithubUsername;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Telegram;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"channne"},"content":" * Edits the details of an existing Student in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"            + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"            + \"[\" + PREFIX_GITHUB + \"GITHUB] \"","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM] \"","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"            + \"[\" + PREFIX_STUDENTID + \"STUDENTID] \"","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited student: %1$s\";","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the TAddressBook.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"     * @param index of the Student in the filtered Student list to edit","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"     * @param editStudentDescriptor details to edit the Student with","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"    public EditCommand(Index index, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"geetengtan"},"content":"            throw new CommandException(Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"        if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"     * Creates and returns a {@code Student} with the details of {@code studentToEdit}","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"    private static Student createEditedStudent(Student studentToEdit, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"        Name updatedName \u003d editStudentDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"        Email updatedEmail \u003d editStudentDescriptor.getEmail().orElse(studentToEdit.getEmail());","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"        Set\u003cTag\u003e updatedTags \u003d editStudentDescriptor.getTags().orElse(studentToEdit.getTags());","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"        GithubUsername updatedGithubUsername \u003d editStudentDescriptor.getGithubUsername()","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"                .orElse(studentToEdit.getGithubUsername());","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"        Telegram updatedTelegram \u003d editStudentDescriptor.getTelegram().orElse(studentToEdit.getTelegram());","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"        StudentId updatedStudentId \u003d editStudentDescriptor.getStudentId().orElse(studentToEdit.getStudentId());","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"        LabList updatedLabList \u003d studentToEdit.getLabs();","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"        Student s \u003d new Student(updatedName, updatedEmail, updatedTags, updatedGithubUsername, updatedTelegram,","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"                updatedStudentId);","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"        s.setLabs(updatedLabList);","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"        return s;","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"channne"},"content":"                \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"channne"},"content":"     * Stores the details to edit the Student with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"channne"},"content":"     * corresponding field value of the Student.","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"channne"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"bryans17"},"content":"        private GithubUsername githubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":140,"author":{"gitId":"bryans17"},"content":"        private Telegram telegram;","lastModifiedDate":"2022-03-05"},{"lineNumber":141,"author":{"gitId":"channne"},"content":"        private StudentId studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"bryans17"},"content":"        public EditStudentDescriptor() {}","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"channne"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"bryans17"},"content":"            setGithubUsername(toCopy.githubUsername);","lastModifiedDate":"2022-03-04"},{"lineNumber":154,"author":{"gitId":"bryans17"},"content":"            setTelegram(toCopy.telegram);","lastModifiedDate":"2022-03-05"},{"lineNumber":155,"author":{"gitId":"channne"},"content":"            setStudentId(toCopy.studentId);","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"channne"},"content":"            return CollectionUtil.isAnyNonNull(name, email, tags, githubUsername, telegram, studentId);","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"bryans17"},"content":"        public void setGithubUsername(GithubUsername githubUsername) {","lastModifiedDate":"2022-03-04"},{"lineNumber":182,"author":{"gitId":"bryans17"},"content":"            this.githubUsername \u003d githubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":183,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":184,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":185,"author":{"gitId":"bryans17"},"content":"        public Optional\u003cGithubUsername\u003e getGithubUsername() {","lastModifiedDate":"2022-03-04"},{"lineNumber":186,"author":{"gitId":"bryans17"},"content":"            return Optional.ofNullable(githubUsername);","lastModifiedDate":"2022-03-04"},{"lineNumber":187,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":188,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":189,"author":{"gitId":"bryans17"},"content":"        public void setTelegram(Telegram telegram) {","lastModifiedDate":"2022-03-05"},{"lineNumber":190,"author":{"gitId":"bryans17"},"content":"            this.telegram \u003d telegram;","lastModifiedDate":"2022-03-05"},{"lineNumber":191,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":192,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":193,"author":{"gitId":"bryans17"},"content":"        public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2022-03-05"},{"lineNumber":194,"author":{"gitId":"bryans17"},"content":"            return Optional.ofNullable(telegram);","lastModifiedDate":"2022-03-05"},{"lineNumber":195,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":196,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":197,"author":{"gitId":"channne"},"content":"        public void setStudentId(StudentId studentId) {","lastModifiedDate":"2022-03-06"},{"lineNumber":198,"author":{"gitId":"channne"},"content":"            this.studentId \u003d studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":201,"author":{"gitId":"channne"},"content":"        public Optional\u003cStudentId\u003e getStudentId() {","lastModifiedDate":"2022-03-06"},{"lineNumber":202,"author":{"gitId":"channne"},"content":"            return Optional.ofNullable(studentId);","lastModifiedDate":"2022-03-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"channne"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"channne"},"content":"            EditStudentDescriptor e \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2022-03-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"bryans17"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2022-03-04"},{"lineNumber":240,"author":{"gitId":"channne"},"content":"                    \u0026\u0026 getGithubUsername().equals(e.getGithubUsername())","lastModifiedDate":"2022-03-06"},{"lineNumber":241,"author":{"gitId":"channne"},"content":"                    \u0026\u0026 getTelegram().equals(e.getTelegram())","lastModifiedDate":"2022-03-06"},{"lineNumber":242,"author":{"gitId":"channne"},"content":"                    \u0026\u0026 getStudentId().equals(e.getStudentId());","lastModifiedDate":"2022-03-06"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"channne":62,"-":155,"bryans17":27,"geetengtan":1}},{"path":"src/main/java/seedu/address/logic/commands/EditLabCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_LAB;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABMARK;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABSTATUS;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabList;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabMark;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabStatus;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.DuplicateLabException;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.InvalidLabStatusException;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.LabNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"channne"},"content":" * Edits the LabStatus of a Lab of a Student in the TAddressBook.","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"channne"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"public class EditLabCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"    public static final String COMMAND_WORD \u003d \"labedit\";","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the specified lab of the \"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"            + \"student identified by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"            + PREFIX_LAB + \"LAB_NUMBER \"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"            + \"[\" + PREFIX_LABSTATUS + \"LAB_STATUS (u/s/g)] \"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"            + \"[\" + PREFIX_LABMARK + \"LAB_MARK]\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"            + \"Example (changing status): \" + COMMAND_WORD + \" 1 \" + PREFIX_LAB + \"1 \" + PREFIX_LABSTATUS + \"s\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"            + \"Example (changing marks): \" + COMMAND_WORD + \" 1 \" + PREFIX_LAB + \"2 \" + PREFIX_LABMARK + \"10\";","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"    // Edited Lab {LAB_NUMBER} of {STUDENT_NAME}","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_EDIT_LAB_SUCCESS \u003d \"Edited Lab %1$s of %2$s\";","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_IDENTICAL_LAB \u003d \"Edited lab would be identical to previous\";","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_INVALID_COMBINATION \u003d \"Invalid combination of lab status and marks\";","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_CURRENT_LABSTATUS_INVALID \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"            \"Command cannot be used as current status of Lab %1$s is %2$s.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"    protected final Index index;","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"    protected final int labNumber;","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"    protected final LabStatus newStatus;","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"    protected final LabMark newMark;","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"     * Creates an EditLabCommand to edit the status of a Student\u0027s Lab","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"     * @param index The index of the Student (according to the displayed list)","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"     * @param labNumber The Lab number to edit","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"     * @param newStatus The new LabStatus of the Lab","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"     * @param newMark The new LabMark of the Lab","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"    public EditLabCommand(Index index, int labNumber, LabStatus newStatus, LabMark newMark) {","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"        requireAllNonNull(index, labNumber, newStatus, newMark);","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"        this.labNumber \u003d labNumber;","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"        this.newStatus \u003d newStatus;","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"        this.newMark \u003d newMark;","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"     * Creates an EditLabCommand with the given status and uninitialized marks.","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"    public EditLabCommand(Index index, int labNumber, LabStatus newStatus) {","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"        this(index, labNumber, newStatus, new LabMark());","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"     * Creates an EditLabCommand with \"GRADED\" status and the given marks.","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"    public EditLabCommand(Index index, int labNumber, LabMark newMark) {","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"        this(index, labNumber, LabStatus.GRADED, newMark);","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"     * Returns true if the given EditLabCommand is a valid EditLabCommand.","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"    public boolean isValidCommand(EditLabCommand e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"        if (e.newStatus \u003d\u003d LabStatus.GRADED \u0026\u0026 e.newMark.isEmpty()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"            return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"        if (e.newStatus !\u003d LabStatus.GRADED \u0026\u0026 !e.newMark.isEmpty()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"            return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"        return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"     * Returns true if the Lab in its current state is valid to be edited using the given edit.","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"     * More relevant for {@link SubmitLabCommand} and {@link GradeLabCommand}.","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"    public boolean isLabEditableByCurrentCommand(Lab l) {","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"        return true;","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"     * Message to show when status/mark combination is invalid.","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"    public String getInvalidCommandMessage() {","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"        return MESSAGE_INVALID_COMBINATION;","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"     * Message to show when command is executed successfully.","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"    public String getExecutionSuccessMessage() {","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"        return MESSAGE_EDIT_LAB_SUCCESS;","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"channne"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"channne"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"channne"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"channne"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"geetengtan"},"content":"            throw new CommandException(Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":126,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"channne"},"content":"        if (!isValidCommand(this)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"channne"},"content":"            throw new CommandException(getInvalidCommandMessage());","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"channne"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"channne"},"content":"        LabList listToEdit \u003d studentToEdit.getLabs();","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"channne"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"channne"},"content":"            Lab labToEdit \u003d listToEdit.getLab(labNumber);","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"channne"},"content":"            if (!isLabEditableByCurrentCommand(labToEdit)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"channne"},"content":"                throw new CommandException(String.format(MESSAGE_CURRENT_LABSTATUS_INVALID,","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"channne"},"content":"                        labToEdit.labNumber, labToEdit.labStatus));","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"channne"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"channne"},"content":"            if (newMark.isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"channne"},"content":"                listToEdit.setLab(labToEdit, labToEdit.editLabStatus(newStatus));","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"channne"},"content":"            } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"channne"},"content":"                listToEdit.setLab(labToEdit, labToEdit.editLabMark(newMark));","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"channne"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"channne"},"content":"        } catch (LabNotFoundException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"channne"},"content":"            throw new CommandException(MESSAGE_INVALID_LAB);","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"channne"},"content":"        } catch (DuplicateLabException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"channne"},"content":"            throw new CommandException(MESSAGE_IDENTICAL_LAB);","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"channne"},"content":"        } catch (InvalidLabStatusException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"channne"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"channne"},"content":"                String.format(getExecutionSuccessMessage(), labNumber, studentToEdit.getName()));","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"channne"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"channne"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"channne"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"channne"},"content":"            return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"channne"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"channne"},"content":"        if (!(other instanceof EditLabCommand)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"channne"},"content":"            return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"channne"},"content":"        // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"channne"},"content":"        EditLabCommand e \u003d (EditLabCommand) other;","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"channne"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-26"},{"lineNumber":173,"author":{"gitId":"channne"},"content":"                \u0026\u0026 labNumber \u003d\u003d e.labNumber","lastModifiedDate":"2022-03-26"},{"lineNumber":174,"author":{"gitId":"channne"},"content":"                \u0026\u0026 newStatus.equals(e.newStatus)","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"channne"},"content":"                \u0026\u0026 newMark.equals(e.newMark);","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"channne":173,"geetengtan":4}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, null);","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":18,"geetengtan":1}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.commands.RemoveLabCommand.MESSAGE_LAB_NOT_FOUND;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABSTATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.StudentHasLabPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"            + \": Finds all students with the specified lab number and lab status\"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"            + \" and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"            + PREFIX_LAB + \"LAB_NUMBER \"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"            + PREFIX_LABSTATUS + \"LAB_STATUS \\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_LAB + \"1\" + \" \" + PREFIX_LABSTATUS + \"s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"    private final StudentHasLabPredicate predicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"    public FilterCommand(StudentHasLabPredicate predicate) {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"        Lab toFilter \u003d predicate.getLab();","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"        if (!model.hasLab(toFilter)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"            throw new CommandException(String.format(MESSAGE_LAB_NOT_FOUND, toFilter.labNumber));","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"        model.addOnFilteredStudentList(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"                || (other instanceof FilterCommand","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate));","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"channne":4,"geetengtan":45,"bryans17":1}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"channne"},"content":" * Finds and lists all Students in the TAddressBook whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"channne"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose names contain any of \"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"channne":6,"-":36}},{"path":"src/main/java/seedu/address/logic/commands/GradeLabCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABMARK;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabMark;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabStatus;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"public class GradeLabCommand extends EditLabCommand {","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"    public static final String COMMAND_WORD \u003d \"labgrad\";","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Changes the status of the specified lab of the \"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"            + \"student identified by the index number used in the displayed student list to \u0027GRADED\u0027 \"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"            + \"and initializes the marks to the marks specified.\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"            + PREFIX_LAB + \"LAB_NUMBER \"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"            + PREFIX_LABMARK + \"LAB_MARK\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_LAB + \"1 \" + PREFIX_LABMARK + \"10\";","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_GRADE_LAB_SUCCESS \u003d \"Graded Lab %1$s for %2$s\";","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"    public GradeLabCommand(Index index, int labNumber, LabMark labMark) {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"        super(index, labNumber, labMark);","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"    public boolean isValidCommand(EditLabCommand e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"        return e.newStatus \u003d\u003d LabStatus.GRADED \u0026\u0026 !e.newMark.isEmpty();","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"    public boolean isLabEditableByCurrentCommand(Lab l) {","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        return l.labStatus !\u003d LabStatus.GRADED;","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"    public String getExecutionSuccessMessage() {","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        return MESSAGE_GRADE_LAB_SUCCESS;","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"channne":44}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, null);","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"geetengtan":1}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"channne"},"content":" * Lists all students in the TAddressBook to the user.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":4,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/RemoveLabCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":" * Deletes a Lab identified using its LAB_NUMBER from the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"public class RemoveLabCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    public static final String COMMAND_WORD \u003d \"labrm\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"            + \": Removes the Lab identified by the LAB_NUMBER from the TAddressBook.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"            + PREFIX_LAB + \"LAB_NUMBER (must be an Integer between 0 and 20 inclusive)\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"            + PREFIX_LAB + \"1\";","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Lab %1$s removed\";","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_LAB_NOT_FOUND \u003d \"Lab %1$s does not exists in the TAddressBook\";","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    private final Lab toRemove;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"     * Creates an RemoveLabCommand to add the specified {@code Lab}","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"    public RemoveLabCommand(Lab lab) {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        requireNonNull(lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        toRemove \u003d lab;","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        if (!model.hasLab(toRemove)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"            throw new CommandException(String.format(MESSAGE_LAB_NOT_FOUND, toRemove.labNumber));","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"        model.removeLab(toRemove);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toRemove.labNumber));","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"        return (other instanceof RemoveLabCommand) \u0026\u0026 (toRemove.isSameLab(((RemoveLabCommand) other).toRemove));","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"bryans17":58}},{"path":"src/main/java/seedu/address/logic/commands/SubmitLabCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabStatus;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"public class SubmitLabCommand extends EditLabCommand {","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"    public static final String COMMAND_WORD \u003d \"labsub\";","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Changes the status of the specified lab of the \"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"            + \"student identified by the index number used in the displayed student list to \u0027SUBMITTED\u0027.\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"            + PREFIX_LAB + \"LAB_NUMBER\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_LAB + \"1\";","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_SUBMIT_LAB_SUCCESS \u003d \"Submitted Lab %1$s for %2$s\";","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"    public SubmitLabCommand(Index index, int labNumber) {","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"        super(index, labNumber, LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"    public boolean isValidCommand(EditLabCommand e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"        return e.newStatus \u003d\u003d LabStatus.SUBMITTED \u0026\u0026 e.newMark.isEmpty();","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"    public boolean isLabEditableByCurrentCommand(Lab l) {","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"        return l.labStatus \u003d\u003d LabStatus.UNSUBMITTED;","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"    public String getExecutionSuccessMessage() {","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        return MESSAGE_SUBMIT_LAB_SUCCESS;","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"channne":40}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays a student\u0027s details. \\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"    public static final String MESSAGE_VIEW_SUCCESS \u003d \"Displayed details of %1$s\";","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"            throw new CommandException(Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"        Student studentToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_SUCCESS, studentToView.getName()),","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"                false, false, studentToView);","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"        return other \u003d\u003d this // shortcut circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"                \u0026\u0026 targetIndex.equals(((ViewCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"geetengtan":52}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"channne":2,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.GithubUsername;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Telegram;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EMAIL, PREFIX_GITHUB, PREFIX_TELEGRAM,","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"                        PREFIX_STUDENTID, PREFIX_TAG);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        if (!ArgumentTokenizer.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_EMAIL, PREFIX_GITHUB,","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"                PREFIX_TELEGRAM, PREFIX_STUDENTID) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"        GithubUsername githubUsername \u003d ParserUtil.parseGithubUsername(argMultimap.getValue(PREFIX_GITHUB).get());","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"        Telegram telegram \u003d ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get());","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENTID).get());","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"        Student student \u003d new Student(name, email, tagList, githubUsername, telegram, studentId);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"        return new AddCommand(student);","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"channne":15,"-":37,"bryans17":4}},{"path":"src/main/java/seedu/address/logic/parser/AddLabCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.commands.AddLabCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":" * Parses input arguments and creates a new AddLabCommand object","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"public class AddLabCommandParser implements Parser\u003cAddLabCommand\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"     * Parses the given {@code String} of arguments in the context of the AddLabCommand","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"     * and returns a AddLabCommand object for execution.","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    public AddLabCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_LAB);","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"            if (!ArgumentTokenizer.isPrefixPresent(argMultimap, PREFIX_LAB) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLabCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"            Lab toAdd \u003d ParserUtil.parseLab(argMultimap.getValue(PREFIX_LAB).get());","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"            return new AddLabCommand(toAdd);","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLabCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"channne":1,"bryans17":36}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.commands.AddLabCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.EditLabCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.GradeLabCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.commands.RemoveLabCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.SubmitLabCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"        case AddLabCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"            return new AddLabCommandParser().parse(arguments);","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"        case EditLabCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"            return new EditLabCommandParser().parse(arguments);","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"        case RemoveLabCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"            return new RemoveLabCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"        case SubmitLabCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"            return new SubmitLabCommandParser().parse(arguments);","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"        case GradeLabCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"            return new GradeLabCommandParser().parse(arguments);","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"geetengtan"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"geetengtan"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":15,"-":76,"bryans17":7,"geetengtan":6}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"     **/","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":59,"bryans17":3}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param prefixes Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefixes Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"channne"},"content":"     * Returns true if the prefix does not contain an empty {@code Optional} value in the given","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"channne"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"    protected static boolean isPrefixPresent(ArgumentMultimap argumentMultimap, Prefix prefix) {","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"        return argumentMultimap.getValue(prefix).isPresent();","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"channne"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"channne"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"channne"},"content":"    protected static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"channne"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"channne":17,"-":148}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"    public static final Prefix PREFIX_GITHUB \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"    public static final Prefix PREFIX_TELEGRAM \u003d new Prefix(\"tl/\"); // need to change this in the future","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"    public static final Prefix PREFIX_STUDENTID \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    public static final Prefix PREFIX_LAB \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"    public static final Prefix PREFIX_LABSTATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"    public static final Prefix PREFIX_LABMARK \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"channne":2,"-":12,"bryans17":3,"geetengtan":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":29,"bryans17":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EMAIL, PREFIX_GITHUB, PREFIX_TELEGRAM,","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"                        PREFIX_STUDENTID, PREFIX_TAG);","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"            editStudentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"            editStudentDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"        if (argMultimap.getValue(PREFIX_GITHUB).isPresent()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"            editStudentDescriptor.setGithubUsername(ParserUtil","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"                    .parseGithubUsername(argMultimap.getValue(PREFIX_GITHUB).get()));","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"            editStudentDescriptor.setTelegram(ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get()));","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"        if (argMultimap.getValue(PREFIX_STUDENTID).isPresent()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"            editStudentDescriptor.setStudentId(ParserUtil","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"                    .parseStudentId(argMultimap.getValue(PREFIX_STUDENTID).get()));","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editStudentDescriptor::setTags);","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"        if (!editStudentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"        return new EditCommand(index, editStudentDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"channne":19,"-":68,"bryans17":4}},{"path":"src/main/java/seedu/address/logic/parser/EditLabCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABMARK;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABSTATUS;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.EditLabCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabMark;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabStatus;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"channne"},"content":" * Parses input arguments and creates a new EditLabCommand object","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"channne"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"public class EditLabCommandParser implements Parser\u003cEditLabCommand\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"     * Parses the given {@code String} of arguments in the context of the EditLabCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"     * and returns an EditLabCommand object for execution.","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"    public EditLabCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LAB, PREFIX_LABSTATUS, PREFIX_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"        if (!(ArgumentTokenizer.arePrefixesPresent(argMultimap, PREFIX_LAB, PREFIX_LABSTATUS)","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"                || ArgumentTokenizer.arePrefixesPresent(argMultimap, PREFIX_LAB, PREFIX_LABMARK))","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditLabCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        Index index;","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditLabCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"        int labNumber \u003d ParserUtil.parseLab(argMultimap.getValue(PREFIX_LAB).get()).labNumber;","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"        if (ArgumentTokenizer.arePrefixesPresent(argMultimap, PREFIX_LABSTATUS, PREFIX_LABMARK)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"            LabStatus labStatus \u003d ParserUtil.parseLabStatus(argMultimap.getValue(PREFIX_LABSTATUS).get());","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"            LabMark labMark \u003d ParserUtil.parseLabMark(argMultimap.getValue(PREFIX_LABMARK).get());","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"            return new EditLabCommand(index, labNumber, labStatus, labMark);","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"        } else if (ArgumentTokenizer.isPrefixPresent(argMultimap, PREFIX_LABSTATUS)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"            LabStatus labStatus \u003d ParserUtil.parseLabStatus(argMultimap.getValue(PREFIX_LABSTATUS).get());","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"            return new EditLabCommand(index, labNumber, labStatus);","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"            LabMark labMark \u003d ParserUtil.parseLabMark(argMultimap.getValue(PREFIX_LABMARK).get());","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"            return new EditLabCommand(index, labNumber, labMark);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"channne":61}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABSTATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.LabMark;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabStatus;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.StudentHasLabPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":" * Parses input arguments and creates a FilterCommand object","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"     * and returns a FilterCommand object for execution","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"     * @throws ParseException if the user input does not conform the expected input","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LAB, PREFIX_LABSTATUS);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"        if (!ArgumentTokenizer.arePrefixesPresent(argMultimap, PREFIX_LAB, PREFIX_LABSTATUS)","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"        Lab labToFilter \u003d ParserUtil.parseLab(argMultimap.getValue(PREFIX_LAB).get());","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"        LabStatus labStatus \u003d ParserUtil.parseLabStatus(argMultimap.getValue(PREFIX_LABSTATUS).get());","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"        labToFilter \u003d labToFilter.of(labStatus, new LabMark(\"0\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"        return new FilterCommand(new StudentHasLabPredicate(labToFilter));","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"channne":1,"geetengtan":39,"bryans17":3}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"channne":1,"-":32,"bryans17":1}},{"path":"src/main/java/seedu/address/logic/parser/GradeLabCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABMARK;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.GradeLabCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabMark;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"public class GradeLabCommandParser implements Parser\u003cGradeLabCommand\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"     * Parses the given {@code String} of arguments in the context of the GradeLabCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"     * and returns a GradeLabCommand object for execution.","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"    public GradeLabCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LAB, PREFIX_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"        if (!ArgumentTokenizer.arePrefixesPresent(argMultimap, PREFIX_LAB, PREFIX_LABMARK)","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GradeLabCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"        Index index;","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GradeLabCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"        int labNumber \u003d ParserUtil.parseLab(argMultimap.getValue(PREFIX_LAB).get()).labNumber;","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        LabMark labMark \u003d ParserUtil.parseLabMark(argMultimap.getValue(PREFIX_LABMARK).get());","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        return new GradeLabCommand(index, labNumber, labMark);","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"channne":46}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":16,"bryans17":1}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabMark;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabStatus;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.GithubUsername;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Telegram;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"channne"},"content":" * Contains utility methods used for parsing strings in the various Parser classes.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":109,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"     * Parses a {@code String githubUsername} into an {@code GithubUsername}.","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"bryans17"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"     * @throws ParseException if the given {@code githubUsername} is invalid.","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"    public static GithubUsername parseGithubUsername(String githubUsername) throws ParseException {","lastModifiedDate":"2022-03-04"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"        requireNonNull(githubUsername);","lastModifiedDate":"2022-03-04"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"        String trimmedUsername \u003d githubUsername.trim();","lastModifiedDate":"2022-03-04"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"        if (!GithubUsername.isValidGithubUsername(trimmedUsername)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"            throw new ParseException(GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":122,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"        return new GithubUsername(trimmedUsername);","lastModifiedDate":"2022-03-04"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":126,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"channne"},"content":"     * Parses a {@code String telegram} into an {@code Telegram}.","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"channne"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"     * @throws ParseException if the given {@code telegram} is invalid.","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"channne"},"content":"    public static Telegram parseTelegram(String telegram) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"channne"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"channne"},"content":"        String trimmedTelegram \u003d telegram.trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"channne"},"content":"        if (!Telegram.isValidTelegram(trimmedTelegram)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"channne"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"channne"},"content":"        return new Telegram(trimmedTelegram);","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"channne"},"content":"     * Parses a {@code String studentId} into an {@code StudentId}.","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"channne"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"channne"},"content":"     * Input will be converted to uppercase.","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"channne"},"content":"     * @throws ParseException if the given {@code studentId} is invalid.","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"channne"},"content":"    public static StudentId parseStudentId(String studentId) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"channne"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"        String trimmedId \u003d studentId.trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"        String capitalId \u003d trimmedId.toUpperCase();","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"channne"},"content":"        if (!StudentId.isValidStudentId(capitalId)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"channne"},"content":"            throw new ParseException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"channne"},"content":"        return new StudentId(capitalId);","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":164,"author":{"gitId":"bryans17"},"content":"     * Parses a {@code String labNumber} into an {@code Lab}.","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"bryans17"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-08"},{"lineNumber":166,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"bryans17"},"content":"     * @throws ParseException if the given {@code labNumber} is invalid.","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":169,"author":{"gitId":"bryans17"},"content":"    public static Lab parseLab(String labNumber) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":170,"author":{"gitId":"bryans17"},"content":"        requireNonNull(labNumber);","lastModifiedDate":"2022-03-08"},{"lineNumber":171,"author":{"gitId":"bryans17"},"content":"        String trimmedLab \u003d labNumber.trim();","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":173,"author":{"gitId":"bryans17"},"content":"        if (!Lab.isValidLab(trimmedLab)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":174,"author":{"gitId":"bryans17"},"content":"            throw new ParseException(Lab.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":176,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":177,"author":{"gitId":"bryans17"},"content":"        return new Lab(trimmedLab);","lastModifiedDate":"2022-03-08"},{"lineNumber":178,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":179,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":180,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"channne"},"content":"     * Parses a {@code String labStatus} into a {@code LabStatus}.","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"channne"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"channne"},"content":"     * @throws ParseException if the given {@code labStatus} is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":185,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"channne"},"content":"    public static LabStatus parseLabStatus(String labStatus) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"channne"},"content":"        requireNonNull(labStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"channne"},"content":"        String trimmedLabStatus \u003d labStatus.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"channne"},"content":"        if (!LabStatus.isValidLabStatus(trimmedLabStatus)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"channne"},"content":"            throw new ParseException(LabStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"channne"},"content":"        switch (trimmedLabStatus) {","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"channne"},"content":"        case \"u\":","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"channne"},"content":"            return LabStatus.UNSUBMITTED;","lastModifiedDate":"2022-03-16"},{"lineNumber":197,"author":{"gitId":"channne"},"content":"        case \"s\":","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"channne"},"content":"            return LabStatus.SUBMITTED;","lastModifiedDate":"2022-03-16"},{"lineNumber":199,"author":{"gitId":"channne"},"content":"        case \"g\":","lastModifiedDate":"2022-03-16"},{"lineNumber":200,"author":{"gitId":"channne"},"content":"            return LabStatus.GRADED;","lastModifiedDate":"2022-03-16"},{"lineNumber":201,"author":{"gitId":"channne"},"content":"        default:","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"channne"},"content":"            throw new ParseException(Lab.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":203,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":204,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":205,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":206,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"channne"},"content":"     * Parses a {@code String labMark} into a {@code LabMark}.","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"channne"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"channne"},"content":"     * @throws ParseException if the given {@code labMark} is invalid.","lastModifiedDate":"2022-03-25"},{"lineNumber":211,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":212,"author":{"gitId":"channne"},"content":"    public static LabMark parseLabMark(String labMark) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":213,"author":{"gitId":"channne"},"content":"        requireNonNull(labMark);","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"channne"},"content":"        String trimmedLabMark \u003d labMark.trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":216,"author":{"gitId":"channne"},"content":"        if (!LabMark.isValidLabMark(trimmedLabMark)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":217,"author":{"gitId":"channne"},"content":"            throw new ParseException(LabMark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":218,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":220,"author":{"gitId":"channne"},"content":"        return new LabMark(trimmedLabMark);","lastModifiedDate":"2022-03-25"},{"lineNumber":221,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"channne":87,"-":90,"bryans17":45}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"channne"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/year2\u0027.","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"channne":1,"-":38}},{"path":"src/main/java/seedu/address/logic/parser/RemoveLabCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.commands.RemoveLabCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"public class RemoveLabCommandParser implements Parser\u003cRemoveLabCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveLabCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"     * and returns a RemoveLabCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"    public RemoveLabCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_LAB);","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"            if (!ArgumentTokenizer.isPrefixPresent(argMultimap, PREFIX_LAB) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveLabCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"            Lab toRemove \u003d ParserUtil.parseLab(argMultimap.getValue(PREFIX_LAB).get());","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"            return new RemoveLabCommand(toRemove);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveLabCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"channne":2,"bryans17":33}},{"path":"src/main/java/seedu/address/logic/parser/SubmitLabCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.SubmitLabCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"public class SubmitLabCommandParser implements Parser\u003cSubmitLabCommand\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"     * Parses the given {@code String} of arguments in the context of the SubmitLabCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"     * and returns a SubmitLabCommand object for execution.","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"    public SubmitLabCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LAB);","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"        if (!ArgumentTokenizer.arePrefixesPresent(argMultimap, PREFIX_LAB)","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SubmitLabCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"        Index index;","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SubmitLabCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        int labNumber \u003d ParserUtil.parseLab(argMultimap.getValue(PREFIX_LAB).get()).labNumber;","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"        return new SubmitLabCommand(index, labNumber);","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"channne":43}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"     * and returns a ViewCommand object for execution","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"geetengtan":29}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":" * Wraps all data at the TAddressbook level","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"channne"},"content":" * Duplicates are not allowed (by .isSameStudent comparison)","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    private final MasterLabList labs;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    public AddressBook() {","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        labs \u003d new MasterLabList();","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"     * Creates a TAddressBook using the Students in the {@code toBeCopied}","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"     * Replaces the contents of the Student list with {@code persons}.","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"     * {@code students} must not contain duplicate Students.","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"     * Replaces the contents of the Lab list with {@code labs}.","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"     * {@code labs} must not contain duplicate Labs.","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"    public void setLabs(MasterLabList labs) {","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"        this.labs.setLabs(labs);","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"        setLabs(newData.getMasterLabList());","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"    //// student-level operations","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the TAddressBook.","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        return students.contains(student);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"     * Adds a student to the TAddressBook.","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"     * The student must not already exist in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"    public void addStudent(Student s) {","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"        students.add(s);","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"     * {@code target} must exist in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"     * The Student identity of {@code editedStudent} must not be the same as","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"     * another existing Student in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"     * {@code key} must exist in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"    public void removeStudent(Student key) {","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"        students.remove(key);","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"     * Returns true if a Lab with the same identity as {@code lab} exists in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"    public boolean hasLab(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"        requireNonNull(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"        return labs.contains(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"channne"},"content":"     * Adds a lab to the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"     * The lab must not already exist in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"     * @param lab The lab to be added.","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":127,"author":{"gitId":"bryans17"},"content":"    public void addLab(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":128,"author":{"gitId":"bryans17"},"content":"        labs.add(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"channne"},"content":"        students.addLabToAll(lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":132,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"bryans17"},"content":"     * Removes a lab from the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"bryans17"},"content":"     * The lab must already exist in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"bryans17"},"content":"     * @param lab The lab to be removed.","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"bryans17"},"content":"    public void removeLab(Lab lab) {","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"bryans17"},"content":"        Index toRemove \u003d labs.removeLab(lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"bryans17"},"content":"        students.removeLabFromAll(toRemove);","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"channne"},"content":"        return students.asUnmodifiableObservableList().size() + \" students\";","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"channne"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":156,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":157,"author":{"gitId":"bryans17"},"content":"    public MasterLabList getMasterLabList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":158,"author":{"gitId":"bryans17"},"content":"        return labs;","lastModifiedDate":"2022-03-08"},{"lineNumber":159,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":160,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":161,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-04-07"},{"lineNumber":162,"author":{"gitId":"bryans17"},"content":"    public boolean isStudentListEmpty() {","lastModifiedDate":"2022-04-07"},{"lineNumber":163,"author":{"gitId":"bryans17"},"content":"        return students.isEmpty();","lastModifiedDate":"2022-04-07"},{"lineNumber":164,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":165,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":166,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-04-09"},{"lineNumber":167,"author":{"gitId":"bryans17"},"content":"    public ArrayList\u003cLab\u003e getLabsAsArrayList() {","lastModifiedDate":"2022-04-09"},{"lineNumber":168,"author":{"gitId":"bryans17"},"content":"        return labs.getMasterList();","lastModifiedDate":"2022-04-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"channne"},"content":"                \u0026\u0026 students.equals(((AddressBook) other).students));","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"channne"},"content":"        return students.hashCode();","lastModifiedDate":"2022-03-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"channne":41,"-":93,"bryans17":48}},{"path":"src/main/java/seedu/address/model/MasterLabList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabList;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.LabNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"public class MasterLabList extends LabList {","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"     * Removes the given Lab from the MasterLabList and returns the index of the given Lab.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"     * @param lab The Lab that is to be removed","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"     * @return An Index object specifying where the lab is in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"     * @throws LabNotFoundException If the MasterLabList does not contain the given Lab.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    public Index removeLab(Lab lab) throws LabNotFoundException {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"        requireNonNull(lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"        if (!contains(lab)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"            throw new LabNotFoundException(lab.labNumber);","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"        Index toRemove \u003d indexOf(lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"        remove(toRemove);","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"        return toRemove;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"     * Returns the index of the Lab with {@code labNumber}","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"     * @param toIndex The lab number of the Lab to search for.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    private Index indexOf(Lab toIndex) throws LabNotFoundException {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        requireNonNull(toIndex);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        if (!contains(toIndex)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"            throw new LabNotFoundException(toIndex.labNumber);","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        return Index.fromZeroBased(super.asUnmodifiableObservableList().indexOf(toIndex));","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"     * Returns a copy of the {@code masterList}.","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"    public ArrayList\u003cLab\u003e getMasterList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"        ArrayList\u003cLab\u003e t \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"        t.addAll(super.asUnmodifiableObservableList());","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"        return t;","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"                || (other instanceof MasterLabList // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"                \u0026\u0026 super.equals(other));","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"bryans17":60,"geetengtan":1}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"     * Returns the user prefs\u0027 TAddressBook file path.","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"     * Sets the user prefs\u0027 TAddressBook file path.","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"     * Replaces TAddressBook data with the data in {@code addressBook}.","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"     * Returns the TAddressBook","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"     * Deletes the given student.","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"     * The student must exist in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"     * Adds the given student.","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"     * {@code student} must not already exist in the TAddressBook.","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"    void addStudent(Student student);","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"     * {@code target} must exist in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"     * TAddressBook.","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"     * Returns an unmodifiable view of the filtered student list","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"geetengtan"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate} and","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"geetengtan"},"content":"     * the previous {@code predicate}","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"geetengtan"},"content":"     * @param predicate The new predicate to add on to the current predicate","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"geetengtan"},"content":"    void addOnFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"     * Returns whether the model\u0027s UniqueStudentList is empty.","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"bryans17"},"content":"     * @return true is the model\u0027s UniqueStudentList is empty and false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"    boolean isStudentListEmpty();","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"     * Returns true if a lab with the same identity as {@code lab} exists in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"    boolean hasLab(Lab lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"     * Adds the given lab.","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"     * {@code lab} must not already exist in the TAddressbook.","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"bryans17"},"content":"    void addLab(Lab lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"     * Removes the given lab.","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"bryans17"},"content":"     * {@code lab} must already exist in the TAddressbook.","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"bryans17"},"content":"    void removeLab(Lab lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":131,"author":{"gitId":"bryans17"},"content":"     * Returns the list of labs in the Model as an ArrayList.","lastModifiedDate":"2022-04-09"},{"lineNumber":132,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":133,"author":{"gitId":"bryans17"},"content":"    ArrayList\u003cLab\u003e getLabsAsArrayList();","lastModifiedDate":"2022-04-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"channne":22,"-":64,"bryans17":40,"geetengtan":8}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":" * Represents the in-memory model of the TAddressBook data.","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"     * Initializes a ModelManager with the given TAddressBook and userPrefs.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"        logger.fine(\"Initializing with TAddress book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.addressBook.getStudentList());","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TAddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"        return addressBook.hasStudent(student);","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"        addressBook.removeStudent(target);","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"        addressBook.setStudent(target, editedStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Lab Related methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"    public boolean hasLab(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"        requireNonNull(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"bryans17"},"content":"        return addressBook.hasLab(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":126,"author":{"gitId":"bryans17"},"content":"    public void addLab(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":127,"author":{"gitId":"bryans17"},"content":"        requireNonNull(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":128,"author":{"gitId":"bryans17"},"content":"        addressBook.addLab(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"bryans17"},"content":"    public void removeLab(Lab lab) {","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"bryans17"},"content":"        requireNonNull(lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"bryans17"},"content":"        addressBook.removeLab(lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-04-09"},{"lineNumber":138,"author":{"gitId":"bryans17"},"content":"    public ArrayList\u003cLab\u003e getLabsAsArrayList() {","lastModifiedDate":"2022-04-09"},{"lineNumber":139,"author":{"gitId":"bryans17"},"content":"        return addressBook.getLabsAsArrayList();","lastModifiedDate":"2022-04-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"channne"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"channne"},"content":"        return filteredStudents;","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":156,"author":{"gitId":"channne"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"geetengtan"},"content":"    public void addOnFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"geetengtan"},"content":"        Optional\u003cPredicate\u003c? super Student\u003e\u003e prevPredicate \u003d Optional.ofNullable(filteredStudents.getPredicate());","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"geetengtan"},"content":"        Predicate\u003cStudent\u003e newPredicate \u003d predicate.and(prevPredicate.orElse(x -\u003e true));","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"geetengtan"},"content":"        filteredStudents.setPredicate(newPredicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-04-07"},{"lineNumber":170,"author":{"gitId":"bryans17"},"content":"    public boolean isStudentListEmpty() {","lastModifiedDate":"2022-04-07"},{"lineNumber":171,"author":{"gitId":"bryans17"},"content":"        return addressBook.isStudentListEmpty();","lastModifiedDate":"2022-04-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":190,"author":{"gitId":"channne"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"channne":21,"-":133,"bryans17":30,"geetengtan":9}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"channne"},"content":" * Unmodifiable view of a TAddress book","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"     * Returns an unmodifiable view of the student list.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"     * Returns a MasterLabList containing all the Labs.","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"     * This list will not contain any duplicate Labs.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    MasterLabList getMasterLabList();","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"     * Returns whether the ReadOnlyAddressBook\u0027s UniqueStudentList is empty.","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"     * @return true is the ReadOnlyAddressBook\u0027s UniqueStudentList is empty and false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    boolean isStudentListEmpty();","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"     * Returns the list of labs in the ReadOnlyAddressBook as an ArrayList.","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    ArrayList\u003cLab\u003e getLabsAsArrayList();","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"channne":6,"-":12,"bryans17":19}},{"path":"src/main/java/seedu/address/model/lab/Lab.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.DuplicateLabException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.InvalidLabStatusException;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":" * Represents a Lab entry.","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLab(String)}","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"public class Lab {","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"            \"Lab number should be an integer between 0 and 20 inclusive.\";","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"    /*","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"     * Lab number has to contain only digits.","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d*\";","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    public final int labNumber;","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    public final LabStatus labStatus;","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"    public final LabMark labMark;","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"     * Constructs an {@code Lab}.","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"     * @param labNumber A valid lab number.","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    public Lab(String labNumber) {","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        // labStatus is always initialized to {@code LabStatus.UNSUBMITTED}","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        this(labNumber, LabStatus.UNSUBMITTED);","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"     * Constructs an {@code Lab} with uninitialized {@code labMark}.","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"     * @param labNumber A valid lab number.","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"     * @param labStatus The status of the Lab to be created.","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    private Lab(String labNumber, LabStatus labStatus) {","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"        this(labNumber, labStatus, new LabMark());","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"     * Constructs a graded {@code Lab} with initialized {@code labMark}.","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"     * @param labNumber A valid lab number.","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"     * @param labMark The score given to this Lab.","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"    private Lab(String labNumber, LabMark labMark) {","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"        this(labNumber, LabStatus.GRADED, labMark);","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"     * Constructs an {@code Lab} with initialized {@code labMark}.","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"     * @param labNumber A valid lab number.","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"     * @param labStatus The status of the Lab to be created.","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"     * @param labMark The score given to this Lab.","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"    private Lab(String labNumber, LabStatus labStatus, LabMark labMark) {","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"        requireAllNonNull(labNumber, labMark);","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"        checkArgument(isValidLab(labNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"        this.labNumber \u003d Integer.parseInt(labNumber);","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"        this.labStatus \u003d labStatus;","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"        this.labMark \u003d labMark;","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"     * Returns true if a given string contains only digits and the Integer it parses to is between 0 and 20 inclusive.","lastModifiedDate":"2022-04-06"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-04-06"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"     * @param test The string to be checked and parsed.","lastModifiedDate":"2022-04-06"},{"lineNumber":80,"author":{"gitId":"bryans17"},"content":"     * @return True if the string is a valid Integer between 0 and 20 inclusive and false otherwise.","lastModifiedDate":"2022-04-06"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"    public static boolean isValidLab(String test) {","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"        return isValidString(test) \u0026\u0026 isIntegerInBounds(test);","lastModifiedDate":"2022-04-06"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":86,"author":{"gitId":"bryans17"},"content":"    private static boolean isValidString(String test) {","lastModifiedDate":"2022-04-06"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-04-06"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":89,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":90,"author":{"gitId":"bryans17"},"content":"    private static boolean isIntegerInBounds(String test) {","lastModifiedDate":"2022-04-06"},{"lineNumber":91,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-04-05"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"            int labNum \u003d Integer.parseInt(test);","lastModifiedDate":"2022-04-05"},{"lineNumber":93,"author":{"gitId":"bryans17"},"content":"            return labNum \u003e\u003d 0 \u0026\u0026 labNum \u003c\u003d 20;","lastModifiedDate":"2022-04-05"},{"lineNumber":94,"author":{"gitId":"bryans17"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-04-05"},{"lineNumber":95,"author":{"gitId":"bryans17"},"content":"            // can\u0027t be parsed to Integer so return false.","lastModifiedDate":"2022-04-06"},{"lineNumber":96,"author":{"gitId":"bryans17"},"content":"            return false;","lastModifiedDate":"2022-04-05"},{"lineNumber":97,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":98,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":99,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":100,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"bryans17"},"content":"     * Returns a new immutable lab with the same attributes as {@code this}.","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"    public Lab createCopy() {","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"        return new Lab(String.valueOf(labNumber), labStatus, labMark);","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"     * Returns a new immutable Lab with the same lab number as {@code this} and the given lab status.","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"     * The {@code LabMark} of the returned Lab is left uninitialized.","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"     * @throws DuplicateLabException If the given {@code LabStatus} is equal to the existing {@code LabStatus}.","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"     * @throws InvalidLabStatusException If the given {@code LabStatus} is equal to LabStatus.GRADED.","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"    public Lab editLabStatus(LabStatus status) throws DuplicateLabException, InvalidLabStatusException {","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"        if (status.equals(this.labStatus)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"            throw new DuplicateLabException();","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"        } else if (status.equals(LabStatus.GRADED)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"channne"},"content":"            throw new InvalidLabStatusException();","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":120,"author":{"gitId":"channne"},"content":"        return new Lab(String.valueOf(labNumber), status);","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":122,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"channne"},"content":"     * Returns a new immutable Lab with the same lab number as {@code this}, a status of \"GRADED\" and the given marks.","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"channne"},"content":"     * @throws DuplicateLabException If the given {@code LabMark} is equal to the existing {@code LabMark}.","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"channne"},"content":"    public Lab editLabMark(LabMark mark) throws DuplicateLabException {","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"channne"},"content":"        if (mark.equals(labMark)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"channne"},"content":"            throw new DuplicateLabException();","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"channne"},"content":"        return new Lab(String.valueOf(labNumber), mark);","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":136,"author":{"gitId":"bryans17"},"content":"     * Returns a new immutable lab with the same attributes as this.","lastModifiedDate":"2022-03-08"},{"lineNumber":137,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":138,"author":{"gitId":"bryans17"},"content":"    public Lab of(String labStatusString) {","lastModifiedDate":"2022-03-08"},{"lineNumber":139,"author":{"gitId":"bryans17"},"content":"        requireNonNull(labStatusString);","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"bryans17"},"content":"        return of(LabStatus.toLabStatus(labStatusString));","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":142,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":143,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"channne"},"content":"     * Returns a new immutable {@code Lab} with the specified {@code LabStatus}","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"channne"},"content":"     * but no {@code LabMark} initialized.","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"channne"},"content":"     * @throws InvalidLabStatusException If {@code LabStatus} is LabStatus.GRADED.","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"channne"},"content":"    public Lab of(LabStatus labStatus) throws InvalidLabStatusException {","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"bryans17"},"content":"        requireNonNull(labStatus);","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"channne"},"content":"        if (labStatus \u003d\u003d LabStatus.GRADED) {","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"channne"},"content":"            throw new InvalidLabStatusException();","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"bryans17"},"content":"        return new Lab(String.valueOf(labNumber), labStatus);","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"channne"},"content":"     * Returns a new immutable {@code Lab} with the specified {@code LabMark}.","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"channne"},"content":"    public Lab of(LabMark labMark) {","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"channne"},"content":"        requireNonNull(labMark);","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"geetengtan"},"content":"        if (labMark.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"geetengtan"},"content":"            throw new InvalidLabStatusException();","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"channne"},"content":"        return new Lab(String.valueOf(labNumber), labMark);","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"geetengtan"},"content":"     * Returns a new immutable {@code Lab} with the specified {@code LabStatus} and {@code LabMark}.","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"geetengtan"},"content":"     * {@code LabMark.MARKS_UNKNOWN} is assigned to labs with {@code LabStatus \u003d\u003d UNSUBMITTED / SUBMITTED}.","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"geetengtan"},"content":"    public Lab of(LabStatus labStatus, LabMark labMark) {","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"geetengtan"},"content":"        requireAllNonNull(labStatus, labMark);","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"geetengtan"},"content":"        if (labStatus \u003d\u003d LabStatus.GRADED) {","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"geetengtan"},"content":"            return of(labMark);","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"geetengtan"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"geetengtan"},"content":"            return of(labStatus);","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":180,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":181,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":184,"author":{"gitId":"channne"},"content":"     * Returns a new immutable {@code Lab} with the specified {@code LabMark}.","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"channne"},"content":"     * Mainly used in {@link SampleDataUtil} and JsonAdaptedStudent.","lastModifiedDate":"2022-03-26"},{"lineNumber":186,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"bryans17"},"content":"    public Lab of(String labStatus, String labMark) throws InvalidLabStatusException {","lastModifiedDate":"2022-03-26"},{"lineNumber":188,"author":{"gitId":"channne"},"content":"        requireAllNonNull(labStatus, labMark);","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":190,"author":{"gitId":"channne"},"content":"        if (labMark.equals(LabMark.MARKS_UNKNOWN)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":191,"author":{"gitId":"channne"},"content":"            return (new Lab(String.valueOf(labNumber))).of(labStatus);","lastModifiedDate":"2022-03-26"},{"lineNumber":192,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":193,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":194,"author":{"gitId":"channne"},"content":"        return (new Lab(String.valueOf(labNumber))).of(new LabMark(labMark));","lastModifiedDate":"2022-03-26"},{"lineNumber":195,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":196,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":197,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":198,"author":{"gitId":"channne"},"content":"     * Returns true if both Labs have the same lab number.","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"channne"},"content":"     * This defines a weaker notion of equality between two Labs.","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":201,"author":{"gitId":"bryans17"},"content":"    public boolean isSameLab(Lab otherLab) {","lastModifiedDate":"2022-03-07"},{"lineNumber":202,"author":{"gitId":"geetengtan"},"content":"        requireNonNull(otherLab);","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"bryans17"},"content":"        if (otherLab \u003d\u003d this) {","lastModifiedDate":"2022-03-07"},{"lineNumber":205,"author":{"gitId":"bryans17"},"content":"            return true;","lastModifiedDate":"2022-03-07"},{"lineNumber":206,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":207,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":208,"author":{"gitId":"geetengtan"},"content":"        return otherLab.labNumber \u003d\u003d this.labNumber;","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"geetengtan"},"content":"     * Returns true if both labs have the same {@code labStatus}","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"geetengtan"},"content":"    public boolean hasSameLabStatus(Lab otherLab) {","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"geetengtan"},"content":"        requireNonNull(otherLab);","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"geetengtan"},"content":"        if (otherLab \u003d\u003d this) {","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"geetengtan"},"content":"            return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":221,"author":{"gitId":"geetengtan"},"content":"        return otherLab.labStatus.equals(this.labStatus);","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":224,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":225,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":226,"author":{"gitId":"geetengtan"},"content":"     * Returns the details of a Lab in {@code String} format","lastModifiedDate":"2022-03-27"},{"lineNumber":227,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"geetengtan"},"content":"    public String getDetails() {","lastModifiedDate":"2022-03-27"},{"lineNumber":229,"author":{"gitId":"geetengtan"},"content":"        if (labMark.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":230,"author":{"gitId":"geetengtan"},"content":"            return labStatus.describe();","lastModifiedDate":"2022-03-30"},{"lineNumber":231,"author":{"gitId":"geetengtan"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":232,"author":{"gitId":"geetengtan"},"content":"            return labMark.describe();","lastModifiedDate":"2022-03-30"},{"lineNumber":233,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":234,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":235,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":236,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":237,"author":{"gitId":"bryans17"},"content":"    public String toString() {","lastModifiedDate":"2022-03-07"},{"lineNumber":238,"author":{"gitId":"bryans17"},"content":"        return \"Lab \" + labNumber;","lastModifiedDate":"2022-03-07"},{"lineNumber":239,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":240,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":241,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":242,"author":{"gitId":"channne"},"content":"     * Returns true if both Labs have the same lab number, LabStatus and LabMark.","lastModifiedDate":"2022-03-25"},{"lineNumber":243,"author":{"gitId":"channne"},"content":"     * This defines a stronger notion of equality between two Labs.","lastModifiedDate":"2022-03-16"},{"lineNumber":244,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":245,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":246,"author":{"gitId":"bryans17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":247,"author":{"gitId":"bryans17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":248,"author":{"gitId":"bryans17"},"content":"                || (other instanceof Lab // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":249,"author":{"gitId":"channne"},"content":"                \u0026\u0026 labNumber \u003d\u003d (((Lab) other).labNumber) // labNumber check","lastModifiedDate":"2022-03-15"},{"lineNumber":250,"author":{"gitId":"channne"},"content":"                \u0026\u0026 labStatus \u003d\u003d (((Lab) other).labStatus)) // labStatus check","lastModifiedDate":"2022-03-25"},{"lineNumber":251,"author":{"gitId":"channne"},"content":"                \u0026\u0026 labMark.equals(((Lab) other).labMark); // labMark check","lastModifiedDate":"2022-03-25"},{"lineNumber":252,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":253,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":254,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"channne":93,"bryans17":113,"geetengtan":48}},{"path":"src/main/java/seedu/address/model/lab/LabList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import java.util.List;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.DuplicateLabException;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.LabNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":" * A list of Labs that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":" * A Lab is considered unique by comparing using {@code Lab#isSameStudent(Lab)}.","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":" * Maintains sorted invariance (sorted by increase labNumber) after every {@code LabList#add(Lab)},","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":" * {@code LabList#setAll(LabList)}, and {@code LabList#setAll(List\u003cLab\u003e)}.","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":" *","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":" *","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":" * @see Lab#isSameLab(Lab)","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"public class LabList implements Iterable\u003cLab\u003e {","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    private final ObservableList\u003cLab\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"    private final ObservableList\u003cLab\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    //Comparator to sort the list by lab number","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"    private final Comparator\u003cLab\u003e sortByLabNumber \u003d new Comparator\u003c\u003e() {","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        public int compare(Lab l1, Lab l2) {","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"            // Ignoring the case when l1.labNumber \u003d\u003d l2.labNumber as there shouldn\u0027t be duplicate labs in the list.","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"            return l1.labNumber - l2.labNumber;","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"    };","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"     * Returns true if the list contains an equivalent Lab as the given argument.","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"     * @param toCheck The Lab to be checked","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    public boolean contains(Lab toCheck) {","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"        return internalList.stream().anyMatch(toCheck::isSameLab);","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"     * Searches for and returns a Lab that has the same lab number as the given {@code labToGet}","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"     * (but potentially different LabStatus)","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"     * @param labToGet The lab you are trying to find in the list.","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"     * @return A copy of the Lab with the same lab number as the given {@code labToGet} from the internalList.","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"    public Lab getLab(Lab labToGet) throws LabNotFoundException {","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"        requireNonNull(labToGet);","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"        if (!contains(labToGet)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"            throw new LabNotFoundException(labToGet.labNumber);","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"        return getLab(labToGet.labNumber);","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"     * Searches for and returns a Lab that has the given lab number (but potentially different LabStatus)","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"     * @param labNumberToGet The lab number of the lab you are trying to find in the list.","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"     * @return A copy of the Lab with the given lab number from the internalList.","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"    public Lab getLab(int labNumberToGet) throws LabNotFoundException {","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"        for (Lab l : internalList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"            if (l.labNumber \u003d\u003d labNumberToGet) {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"                return l.createCopy();","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"        throw new LabNotFoundException(labNumberToGet);","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"     * Adds a Lab to the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"     * The Lab must not already exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"bryans17"},"content":"     * Maintains sorted by lab number invariant.","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"     * @param toAdd The Lab to add.","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":93,"author":{"gitId":"bryans17"},"content":"    public void add(Lab toAdd) throws DuplicateLabException {","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"bryans17"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-07"},{"lineNumber":95,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"bryans17"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":97,"author":{"gitId":"bryans17"},"content":"            throw new DuplicateLabException();","lastModifiedDate":"2022-03-07"},{"lineNumber":98,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":99,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"bryans17"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"bryans17"},"content":"        internalList.sort(sortByLabNumber);","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"     * Replaces the Lab {@code target} in the list with {@code editedLab}.","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-07"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"     * The lab identity of {@code editedLab} must not be the same as another existing Lab in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"bryans17"},"content":"    public void setLab(Lab target, Lab editedLab) throws LabNotFoundException, DuplicateLabException {","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"        requireAllNonNull(target, editedLab);","lastModifiedDate":"2022-03-07"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"        if (target.equals(editedLab)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"            throw new DuplicateLabException();","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-07"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-07"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"            throw new LabNotFoundException(target.labNumber);","lastModifiedDate":"2022-03-07"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"        internalList.set(index, editedLab);","lastModifiedDate":"2022-03-07"},{"lineNumber":122,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":125,"author":{"gitId":"channne"},"content":"     * Removes the equivalent Lab from the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"channne"},"content":"     * The Lab must exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"bryans17"},"content":"     * Maintains sorted by lab number invariant.","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"bryans17"},"content":"     * @param toRemove The Lab to remove from the list. (has to have the same labNumber and labStatus","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"     *                 as the lab you are trying to remove from the list)","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":132,"author":{"gitId":"bryans17"},"content":"    public void remove(Lab toRemove) throws LabNotFoundException {","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"bryans17"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-07"},{"lineNumber":134,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"bryans17"},"content":"        if (!internalList.contains(toRemove)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"bryans17"},"content":"            throw new LabNotFoundException(toRemove.labNumber);","lastModifiedDate":"2022-03-07"},{"lineNumber":137,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":138,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"bryans17"},"content":"        remove(Index.fromZeroBased(internalList.indexOf(toRemove)));","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"bryans17"},"content":"        internalList.sort(sortByLabNumber);","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":142,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":143,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"bryans17"},"content":"     * Removes the lab at the specified index.","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"bryans17"},"content":"     * The index must be \u003c the size of {@code internalList}.","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"bryans17"},"content":"     * Maintains sorted by lab number invariant.","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"bryans17"},"content":"     * @param index The index of the lab to be removed.","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"bryans17"},"content":"    public void remove(Index index) throws LabNotFoundException {","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"bryans17"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"bryans17"},"content":"        // this guard clause should not be invoked","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"bryans17"},"content":"        if (index.getZeroBased() \u003e\u003d internalList.size()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"bryans17"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"bryans17"},"content":"        internalList.remove(index.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"bryans17"},"content":"        internalList.sort(sortByLabNumber);","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"channne"},"content":"     * Replaces the contents of this list with {@code replacement}.","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"channne"},"content":"     * @param replacement is assumed to not contain duplicate Labs.","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"bryans17"},"content":"    public void setLabs(LabList replacement) {","lastModifiedDate":"2022-03-07"},{"lineNumber":168,"author":{"gitId":"bryans17"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-07"},{"lineNumber":169,"author":{"gitId":"bryans17"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-07"},{"lineNumber":170,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"bryans17"},"content":"        // Incase ObservableList.setall() does not maintain order as it is not stated in the java docs that it does.","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"bryans17"},"content":"        internalList.sort(sortByLabNumber);","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":174,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":175,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":176,"author":{"gitId":"bryans17"},"content":"     * Replaces the contents of this list with {@code labs}.","lastModifiedDate":"2022-03-07"},{"lineNumber":177,"author":{"gitId":"channne"},"content":"     * {@code labs} must not contain duplicate Labs.","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":179,"author":{"gitId":"bryans17"},"content":"    public void setLabs(List\u003cLab\u003e labs) throws DuplicateLabException {","lastModifiedDate":"2022-03-12"},{"lineNumber":180,"author":{"gitId":"bryans17"},"content":"        requireAllNonNull(labs);","lastModifiedDate":"2022-03-07"},{"lineNumber":181,"author":{"gitId":"bryans17"},"content":"        if (!labsAreUnique(labs)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":182,"author":{"gitId":"bryans17"},"content":"            throw new DuplicateLabException();","lastModifiedDate":"2022-03-07"},{"lineNumber":183,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":184,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":185,"author":{"gitId":"bryans17"},"content":"        internalList.setAll(labs);","lastModifiedDate":"2022-03-07"},{"lineNumber":186,"author":{"gitId":"bryans17"},"content":"        internalList.sort(sortByLabNumber);","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":188,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":189,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":190,"author":{"gitId":"bryans17"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-07"},{"lineNumber":191,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":192,"author":{"gitId":"bryans17"},"content":"    public ObservableList\u003cLab\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-07"},{"lineNumber":193,"author":{"gitId":"bryans17"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-07"},{"lineNumber":194,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":195,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":196,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":197,"author":{"gitId":"bryans17"},"content":"     * Returns true if the {@code internalList} is empty and false otherwise.","lastModifiedDate":"2022-03-26"},{"lineNumber":198,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":199,"author":{"gitId":"bryans17"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-26"},{"lineNumber":200,"author":{"gitId":"bryans17"},"content":"        return internalList.isEmpty();","lastModifiedDate":"2022-03-26"},{"lineNumber":201,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":202,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":203,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"bryans17"},"content":"     * Aligns the current LabList to the given {@code toAlignWith}.","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"bryans17"},"content":"     * Aligning LabList means that the current LabList has to have all the Labs that the {@code toAlignWith} has,","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"bryans17"},"content":"     * and no additional Labs that the {@code toAlignWith} doesn\u0027t have.","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"bryans17"},"content":"     * The end result is that both LabList will have the same list of Labs with potentially different status and marks.","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"bryans17"},"content":"     * Most relevant for deserialization of labs in {@code JsonSerializableAddressBook}.","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"bryans17"},"content":"     * @param toAlignWith The LabList that you want to align to.","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"bryans17"},"content":"     * @throws DuplicateLabException if one of the LabList contains duplicate labs. (should not be the case)","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"bryans17"},"content":"    public void alignLabs(LabList toAlignWith) throws DuplicateLabException {","lastModifiedDate":"2022-03-29"},{"lineNumber":214,"author":{"gitId":"bryans17"},"content":"        requireNonNull(toAlignWith);","lastModifiedDate":"2022-03-29"},{"lineNumber":215,"author":{"gitId":"bryans17"},"content":"        // Using LabList instead of List\u003cLab\u003e for O(nlogn) setLabs instead of O(n^2) setLabs","lastModifiedDate":"2022-03-30"},{"lineNumber":216,"author":{"gitId":"bryans17"},"content":"        LabList replacementList \u003d new LabList();","lastModifiedDate":"2022-03-29"},{"lineNumber":217,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":218,"author":{"gitId":"bryans17"},"content":"        // Iterator variable for toAlignWith","lastModifiedDate":"2022-03-29"},{"lineNumber":219,"author":{"gitId":"bryans17"},"content":"        int toAlignIter \u003d 0;","lastModifiedDate":"2022-03-30"},{"lineNumber":220,"author":{"gitId":"bryans17"},"content":"        //Iterator variable for this","lastModifiedDate":"2022-03-29"},{"lineNumber":221,"author":{"gitId":"bryans17"},"content":"        int thisIter \u003d 0;","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":223,"author":{"gitId":"bryans17"},"content":"        ObservableList\u003cLab\u003e toAlignWithList \u003d toAlignWith.internalList;","lastModifiedDate":"2022-03-29"},{"lineNumber":224,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":225,"author":{"gitId":"bryans17"},"content":"        // This while loop takes advantage of the LabList\u0027s sorted invariant.","lastModifiedDate":"2022-03-30"},{"lineNumber":226,"author":{"gitId":"bryans17"},"content":"        while (toAlignIter \u003c toAlignWithList.size() \u0026\u0026 thisIter \u003c internalList.size()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":228,"author":{"gitId":"bryans17"},"content":"            if (toAlignWithList.get(toAlignIter).isSameLab(internalList.get(thisIter))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":229,"author":{"gitId":"bryans17"},"content":"                replacementList.add(internalList.get(thisIter));","lastModifiedDate":"2022-03-30"},{"lineNumber":230,"author":{"gitId":"bryans17"},"content":"                toAlignIter++;","lastModifiedDate":"2022-03-30"},{"lineNumber":231,"author":{"gitId":"bryans17"},"content":"                thisIter++;","lastModifiedDate":"2022-03-30"},{"lineNumber":232,"author":{"gitId":"bryans17"},"content":"            } else if (sortByLabNumber.compare(toAlignWithList.get(toAlignIter), internalList.get(thisIter)) \u003c 0) {","lastModifiedDate":"2022-03-30"},{"lineNumber":233,"author":{"gitId":"bryans17"},"content":"                replacementList.add(toAlignWithList.get(toAlignIter));","lastModifiedDate":"2022-03-30"},{"lineNumber":234,"author":{"gitId":"bryans17"},"content":"                toAlignIter++;","lastModifiedDate":"2022-03-30"},{"lineNumber":235,"author":{"gitId":"bryans17"},"content":"            } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":236,"author":{"gitId":"bryans17"},"content":"                thisIter++;","lastModifiedDate":"2022-03-30"},{"lineNumber":237,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":238,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":239,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":240,"author":{"gitId":"bryans17"},"content":"        // Add any remaining Labs in toAlignWithList.","lastModifiedDate":"2022-03-30"},{"lineNumber":241,"author":{"gitId":"bryans17"},"content":"        while (toAlignIter \u003c toAlignWithList.size()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":242,"author":{"gitId":"bryans17"},"content":"            replacementList.add(toAlignWithList.get(toAlignIter));","lastModifiedDate":"2022-03-30"},{"lineNumber":243,"author":{"gitId":"bryans17"},"content":"            toAlignIter++;","lastModifiedDate":"2022-03-30"},{"lineNumber":244,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":245,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":246,"author":{"gitId":"bryans17"},"content":"        this.setLabs(replacementList);","lastModifiedDate":"2022-03-29"},{"lineNumber":247,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":248,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":249,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":250,"author":{"gitId":"bryans17"},"content":"    public Iterator\u003cLab\u003e iterator() {","lastModifiedDate":"2022-03-07"},{"lineNumber":251,"author":{"gitId":"bryans17"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-07"},{"lineNumber":252,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":253,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":254,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":255,"author":{"gitId":"bryans17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":256,"author":{"gitId":"bryans17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":257,"author":{"gitId":"bryans17"},"content":"                || (other instanceof LabList // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":258,"author":{"gitId":"bryans17"},"content":"                \u0026\u0026 internalList.equals(((LabList) other).internalList));","lastModifiedDate":"2022-03-07"},{"lineNumber":259,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":260,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":261,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":262,"author":{"gitId":"bryans17"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-07"},{"lineNumber":263,"author":{"gitId":"bryans17"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-07"},{"lineNumber":264,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":265,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":266,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":267,"author":{"gitId":"channne"},"content":"     * Returns true if {@code labs} contains only unique Labs.","lastModifiedDate":"2022-03-16"},{"lineNumber":268,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":269,"author":{"gitId":"bryans17"},"content":"    private boolean labsAreUnique(List\u003cLab\u003e labs) {","lastModifiedDate":"2022-03-07"},{"lineNumber":270,"author":{"gitId":"bryans17"},"content":"        for (int i \u003d 0; i \u003c labs.size() - 1; i++) {","lastModifiedDate":"2022-03-07"},{"lineNumber":271,"author":{"gitId":"bryans17"},"content":"            for (int j \u003d i + 1; j \u003c labs.size(); j++) {","lastModifiedDate":"2022-03-07"},{"lineNumber":272,"author":{"gitId":"bryans17"},"content":"                if (labs.get(i).isSameLab(labs.get(j))) {","lastModifiedDate":"2022-03-07"},{"lineNumber":273,"author":{"gitId":"bryans17"},"content":"                    return false;","lastModifiedDate":"2022-03-07"},{"lineNumber":274,"author":{"gitId":"bryans17"},"content":"                }","lastModifiedDate":"2022-03-07"},{"lineNumber":275,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-03-07"},{"lineNumber":276,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":277,"author":{"gitId":"bryans17"},"content":"        return true;","lastModifiedDate":"2022-03-07"},{"lineNumber":278,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":279,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":280,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"channne":39,"bryans17":239,"geetengtan":2}},{"path":"src/main/java/seedu/address/model/lab/LabMark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.lab;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.IllegalLabStateException;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"channne"},"content":" * Represents the marks attained in a Lab assignment.","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"channne"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLabMark(String)}","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"channne"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"public class LabMark {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"            \"Lab mark should be an integer between 0 and 100 inclusive.\";","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d*\";","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"    /*","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"     * A placeholder value to represent that the marks have not been initialized.","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"    public static final String MARKS_UNKNOWN \u003d \"Unknown\";","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"    public static final String MARKS_DESCRIPTION \u003d \"Marks: %1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"    private final Optional\u003cInteger\u003e marks;","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"     * Constructs a {@code LabMark} with marks initialized.","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"     * @param mark A valid lab mark.","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"    public LabMark(String mark) {","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        requireNonNull(mark);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        checkArgument(isValidLabMark(mark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        this.marks \u003d Optional.of(Integer.parseInt(mark));","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"     * Constructs a {@code LabMark} with no marks initialized.","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"    public LabMark() {","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"        this.marks \u003d Optional.empty();","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"     * Returns true if a given string contains only digits and the Integer it parses to is between 0 and 100 inclusive.","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"     * @param test The string to be checked and parsed.","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"     * @return True if the string is a valid Integer between 0 and 100 inclusive and false otherwise.","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"    public static boolean isValidLabMark(String test) {","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"        return isValidString(test) \u0026\u0026 isIntegerInBounds(test);","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"    private static boolean isValidString(String test) {","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"    private static boolean isIntegerInBounds(String test) {","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"        try {","lastModifiedDate":"2022-04-08"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"            int labMark \u003d Integer.parseInt(test);","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"            return labMark \u003e\u003d 0 \u0026\u0026 labMark \u003c\u003d 100;","lastModifiedDate":"2022-04-08"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"            // can\u0027t be parsed to Integer so return false.","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"            return false;","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"     * Returns true if the marks have not been initialized.","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"        return !marks.isPresent();","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"     * Returns a String of the numerical value of {@code marks} if","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"     * it is not empty, otherwise returns a placeholder String.","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"    public String toString() {","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"        if (marks.isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"            return String.valueOf(marks.get());","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"        return MARKS_UNKNOWN;","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"     * Returns true if both LabMarks have marks with the same value.","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"                || (other instanceof LabMark // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"                \u0026\u0026 marks.equals(((LabMark) other).marks)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"geetengtan"},"content":"     * Returns a description of {@code this} in String format","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"geetengtan"},"content":"    public String describe() {","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"geetengtan"},"content":"        if (isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"geetengtan"},"content":"            throw new IllegalLabStateException();","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"geetengtan"},"content":"        return String.format(MARKS_DESCRIPTION, this);","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"channne":97,"geetengtan":13}},{"path":"src/main/java/seedu/address/model/lab/LabStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.IllegalLabStateException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"channne"},"content":" * Represents the possible LabStatuses a Lab can have.","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"channne"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"public enum LabStatus {","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"    UNSUBMITTED, SUBMITTED, GRADED;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"            \"LabStatus should be u, s, or g, which respectively stands for \"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"                    + \"Unsubmitted, Submitted, and Graded\";","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"    public static final String VALIDATION_REGEX \u003d \"[usg]\";","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"    public static final String UNSUBMITTED_DESCRIPTION \u003d \"Not Submitted\";","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"    public static final String SUBMITTED_DESCRIPTION \u003d \"Submitted but yet to grade\";","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"    public static final String GRADED_ERROR_DESCRIPTION \u003d \"Attempted to describe GRADED lab without LabMark\";","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"     * Returns true if a given string is a valid LabStatus","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"    public static boolean isValidLabStatus(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"     * Parses a String given by {@code labStatusString} into a LabStatus.","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    public static LabStatus toLabStatus(String labStatusString) {","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        requireNonNull(labStatusString);","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        switch (labStatusString) {","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        case \"UNSUBMITTED\":","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"            return LabStatus.UNSUBMITTED;","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        case \"SUBMITTED\":","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"            return LabStatus.SUBMITTED;","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        case \"GRADED\":","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"            return LabStatus.GRADED;","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        default:","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"            throw new IllegalArgumentException(\"Did not expect \" + labStatusString);","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"     * Describes the labStatus for the user","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"     * @return Description of the labStatus in {@code String} format","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"geetengtan"},"content":"    public String describe() {","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"geetengtan"},"content":"        switch (this) {","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"geetengtan"},"content":"        case UNSUBMITTED:","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"geetengtan"},"content":"            return UNSUBMITTED_DESCRIPTION;","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"geetengtan"},"content":"        case SUBMITTED:","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"geetengtan"},"content":"            return SUBMITTED_DESCRIPTION;","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"geetengtan"},"content":"        default:","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"geetengtan"},"content":"            throw new IllegalLabStateException(GRADED_ERROR_DESCRIPTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"channne":17,"bryans17":24,"geetengtan":24}},{"path":"src/main/java/seedu/address/model/lab/StudentHasLabPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":" * Tests that a {@code Student} has a {@code Lab} that matches the specified one","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"public class StudentHasLabPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"    private final Lab lab;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"    public StudentHasLabPredicate(Lab lab) {","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"        this.lab \u003d lab;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"     * @return lab contained in the predicate","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"    public Lab getLab() {","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"        return this.lab;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"    public boolean test(Student studentToTest) {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"        LabList studentToTestLabs \u003d studentToTest.getLabs();","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"        if (!studentToTestLabs.contains(lab)) { // student does not have lab -\u003e return false","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"        } else { // student has lab -\u003e check if labStatus is same","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"            Lab labForStudent \u003d studentToTestLabs.getLab(lab);","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"            return labForStudent.hasSameLabStatus(lab);","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"                || (other instanceof StudentHasLabPredicate // instanceof handle units","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"                \u0026\u0026 lab.equals(((StudentHasLabPredicate) other).lab)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"channne":2,"bryans17":1,"geetengtan":42}},{"path":"src/main/java/seedu/address/model/lab/exceptions/DuplicateLabException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.model.lab.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"public class DuplicateLabException extends RuntimeException {","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"    public DuplicateLabException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"        super(\"Operation would result in duplicate labs\");","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"geetengtan":1,"bryans17":7}},{"path":"src/main/java/seedu/address/model/lab/exceptions/IllegalLabStateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.model.lab.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":" * Exception thrown when creation of a Lab in illegal state is attempted","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":" * (eg. Lab that are GRADED but has no marks, Lab that are not GRADED but has marks)","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"public class IllegalLabStateException extends RuntimeException {","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"    private static final String EXCEPTION_MESSAGE \u003d \"Illegal Lab state found\";","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"    public IllegalLabStateException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"        super(EXCEPTION_MESSAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"    public IllegalLabStateException(String message) {","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"        super(EXCEPTION_MESSAGE + \"\\n\" + message);","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"geetengtan":20}},{"path":"src/main/java/seedu/address/model/lab/exceptions/InvalidLabStatusException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.model.lab.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"public class InvalidLabStatusException extends IllegalLabStateException {","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"    public InvalidLabStatusException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"        super(\"The Lab Status of the lab is invalid or incorrect.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"channne":1,"geetengtan":3,"bryans17":5}},{"path":"src/main/java/seedu/address/model/lab/exceptions/LabNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.model.lab.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"public class LabNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"    public LabNotFoundException(int target) {","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"        super(\"Lab \" + target + \" does not exist yet.\");","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"geetengtan":1,"bryans17":7}},{"path":"src/main/java/seedu/address/model/student/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"channne"},"content":" * Represents a Student\u0027s email in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"     * Returns if a given string is a valid Email.","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":3,"-":68}},{"path":"src/main/java/seedu/address/model/student/GithubUsername.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"channne"},"content":" * Represents a Student\u0027s GitHub Username in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGithubUsername(String)}","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"public class GithubUsername {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"            \"GitHub usernames should only contain at most 39 alphanumeric characters and hyphens,\"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"                    + \" but cannot have consecutive hyphens and cannot begin or end with hyphens.\";","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    /*","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"     * The first and last character of the GitHub Username must not be a hyphen.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"     * GitHub Usernames can\u0027t have consecutive hyphens","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"     * and can\u0027t be longer than 39 alphanumeric characters.","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}](?:[\\\\p{Alnum}]|-(?\u003d[\\\\p{Alnum}])){0,38}\";","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    public final String username;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"     * Constructs an {@code GithubUsername}.","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"     * @param githubUsername A valid GitHub Username.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    public GithubUsername(String githubUsername) {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        requireNonNull(githubUsername);","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        checkArgument(isValidGithubUsername(githubUsername), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        username \u003d githubUsername;","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"     * Returns true if a given string is a valid GitHub Username.","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"    public static boolean isValidGithubUsername(String test) {","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"    public String toString() {","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        return username;","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"                || (other instanceof GithubUsername // instanceof handles nulls","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"                \u0026\u0026 username.equals(((GithubUsername) other).username)); // state check","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"        return username.hashCode();","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"channne":6,"bryans17":54}},{"path":"src/main/java/seedu/address/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"channne"},"content":" * Represents a Student\u0027s name in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"            \"Names should only contain alphanumeric characters and spaces, and should not be blank\";","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"     * @param name A valid Name.","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"     * Returns true if a given string is a valid Name.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":5,"-":53,"bryans17":1}},{"path":"src/main/java/seedu/address/model/student/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"channne"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(student.getName().fullName, keyword));","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"channne":5,"-":26}},{"path":"src/main/java/seedu/address/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabList;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"channne"},"content":" * Represents a Student in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"public class Student {","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    private final GithubUsername githubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    private final Telegram telegram;","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    private final LabList labs;","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"    public Student(Name name, Email email, Set\u003cTag\u003e tags,","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"                   GithubUsername githubUsername, Telegram telegram, StudentId studentId) {","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        requireAllNonNull(name, email, tags, githubUsername, studentId);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        this.githubUsername \u003d githubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"        this.labs \u003d new LabList();","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"    public GithubUsername getGithubUsername() {","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"        return githubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"    public Telegram getTelegram() {","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"        return telegram;","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"    public StudentId getStudentId() {","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        return studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"    public LabList getLabs() {","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"        return labs;","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"    public void setLabs(LabList ll) {","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"        labs.setLabs(ll);","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"     * Adds a Lab to the Student\u0027s {@code labs}.","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"     * The Lab must not already exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"     * @param lab The Lab to add.","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"    public void addLab(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"        labs.add(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"     * Removes the lab at the specified index from the Student\u0027s {@code labs}.","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"     * @param index The index of the lab to be removed.","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"bryans17"},"content":"    public void removeLab(Index index) {","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"bryans17"},"content":"        labs.remove(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"     * Returns true if both Students have the same student ID.","lastModifiedDate":"2022-04-08"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"     * This defines a weaker notion of equality between two Students.","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"                \u0026\u0026 otherStudent.getStudentId().equals(getStudentId());","lastModifiedDate":"2022-04-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"     * Returns true if both Students have the same identity and data fields.","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"     * This defines a stronger notion of equality between two Students.","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"channne"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"channne"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"channne"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"                \u0026\u0026 otherStudent.getEmail().equals(getEmail())","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"channne"},"content":"                \u0026\u0026 otherStudent.getTags().equals(getTags())","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"channne"},"content":"                \u0026\u0026 otherStudent.getGithubUsername().equals(getGithubUsername())","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"channne"},"content":"                \u0026\u0026 otherStudent.getTelegram().equals(getTelegram())","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"channne"},"content":"                \u0026\u0026 otherStudent.getStudentId().equals(getStudentId());","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"bryans17"},"content":"        return Objects.hash(name, email, tags, githubUsername, telegram, studentId);","lastModifiedDate":"2022-03-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"bryans17"},"content":"                .append(\"; Github: \")","lastModifiedDate":"2022-03-04"},{"lineNumber":151,"author":{"gitId":"channne"},"content":"                .append(getGithubUsername())","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"bryans17"},"content":"                .append(\"; Telegram: \")","lastModifiedDate":"2022-03-05"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"                .append(getTelegram())","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"                .append(\"; Student ID: \")","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"channne"},"content":"                .append(getStudentId());","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":33,"-":86,"bryans17":45}},{"path":"src/main/java/seedu/address/model/student/StudentId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"channne"},"content":" * Represents a Student\u0027s StudentId in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"channne"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStudentId(String)}","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"channne"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"public class StudentId {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Student IDs should start with an A, \"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"            + \"followed by 7 numbers, then end with a capital alphabet.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"    /*","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"     * The first character of the Student ID must be an A,","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"     * followed by 7 digits, then a capital alphabet.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"    public static final String VALIDATION_REGEX \u003d \"A\\\\d{7}[A-Z]\";","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"    public final String id;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"     * Constructs an {@code StudentId}.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"     * @param studentId A valid Student ID.","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"    public StudentId(String studentId) {","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"        checkArgument(isValidStudentId(studentId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"        id \u003d studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"     * Returns true if a given string is a valid Student ID.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"    public static boolean isValidStudentId(String test) {","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        return id;","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"                || (other instanceof StudentId // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"                \u0026\u0026 id.equals(((StudentId) other).id)); // state check","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"        return id.hashCode();","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"channne":57}},{"path":"src/main/java/seedu/address/model/student/Telegram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"channne"},"content":" * Represents a Student\u0027s Telegram handle in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegram(String)}","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"public class Telegram {","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"            \"Telegram handles should only contain alphanumeric characters and underscores,\"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"                    + \"and it should be 5 to 32 characters long.\";","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    /*","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"     * The first character of the Telegram handle must not be a whitespace,","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"     * otherwise \" \" (a blank string) becomes a valid input and must be at least","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"     * 5 alphanumeric characters or underscores but no more than 32.","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9_]{5,32}\";","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    public final String handle;","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"     * Constructs a {@code Telegram}.","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"     * @param handle A valid Telegram handle.","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"    public Telegram(String handle) {","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"        requireNonNull(handle);","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        checkArgument(isValidTelegram(handle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        this.handle \u003d handle;","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"     * Returns true if a given string is a valid Telegram handle.","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    public static boolean isValidTelegram(String test) {","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        return handle;","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"                || (other instanceof Telegram // instanceof handles nulls","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"                \u0026\u0026 handle.equals(((Telegram) other).handle)); // state check","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"        return handle.hashCode();","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"channne":3,"bryans17":58}},{"path":"src/main/java/seedu/address/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"channne"},"content":" * A list of Students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"channne"},"content":" * A Student is considered unique by comparing using {@code Student#isSameStudent(Student)}. As such, adding and","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"channne"},"content":" * updating of students uses Student#isSameStudent(Student) for equality so as to ensure that the student being added or","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"channne"},"content":" * updated is unique in terms of identity in the UniqueStudentList. However, the removal of a student uses","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"channne"},"content":" * Student#equals(Object) so as to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":" *","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"channne"},"content":" * @see Student#isSameStudent(Student)","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"     * Adds a student to the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"     * The student identity of {@code editedPerson} must not be the same as another existing student in the list.","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"        if (!target.isSameStudent(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"     * The student must exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"        internalList.setAll(students);","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"     * Adds the given {@code lab} to every student in the {@code internalList}.","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"     * @param lab The Lab to add.","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"    public void addLabToAll(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"        requireNonNull(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"        internalList.forEach(student -\u003e student.addLab(lab));","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"bryans17"},"content":"     * Removes the given {@code lab} from every student in the {@code internalList}.","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"     * @param index The Lab to be removed.","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"    public void removeLabFromAll(Index index) {","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"channne"},"content":"        internalList.forEach(student -\u003e student.removeLab(index));","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"     * Returns whether the UniqueStudentList is empty.","lastModifiedDate":"2022-04-07"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-04-07"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"     * @return true is the UniqueStudentList is empty and false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":126,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"bryans17"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-04-07"},{"lineNumber":128,"author":{"gitId":"bryans17"},"content":"        return internalList.isEmpty();","lastModifiedDate":"2022-04-07"},{"lineNumber":129,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":134,"author":{"gitId":"channne"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"channne"},"content":"        // TODO: refine later","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"channne"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"channne"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"channne"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"channne"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"channne"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"channne"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"channne"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"channne"},"content":"                if (students.get(i).isSameStudent(students.get(j))) {","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":53,"-":88,"bryans17":28}},{"path":"src/main/java/seedu/address/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"channne"},"content":" * Signals that the operation will result in duplicate Students (Students are considered duplicates if they have the","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"channne"},"content":" * same identity).","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"channne"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"        super(\"Operation would result in duplicate students\");","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"channne":11}},{"path":"src/main/java/seedu/address/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"channne"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"channne"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"public class StudentNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"channne":6}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"channne"},"content":" * Represents a Tag in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":1,"-":53}},{"path":"src/main/java/seedu/address/model/util/LabTriplet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.util;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabMark;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"public class LabTriplet {","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"    private final String labNumber;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"    private final String labStatus;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"    private final String labMark;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"     * Creates a LabTriplet containing String representations of each Lab attribute.","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"    public LabTriplet(String number, String status, String mark) {","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"        requireAllNonNull(number, status, mark);","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"        labNumber \u003d number;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"        labStatus \u003d status;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"        labMark \u003d mark;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"     * Creates a LabTriplet containing String representations of each Lab attribute.","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"     * For when no marks are initialized.","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"    public LabTriplet(String number, String status) {","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"        requireAllNonNull(number, status);","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"        labNumber \u003d number;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"        labStatus \u003d status;","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"        labMark \u003d LabMark.MARKS_UNKNOWN;","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"    public String getLabNumber() {","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        return labNumber;","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"    public String getLabStatus() {","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"        return labStatus;","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"    public String getLabMark() {","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"        return labMark;","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"     * Returns a new Lab with the given {@code labNumber}, {@code labStatus}, and {@code labMark}.","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    public Lab getLab() {","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"        return new Lab(getLabNumber()).of(getLabStatus(), getLabMark());","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"channne":38,"bryans17":12,"geetengtan":3}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabList;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.GithubUsername;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Telegram;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"        return new Student[]{","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"            new Student(new Name(\"Alex Yeoh\"), new Email(\"alexyeoh@example.com\"), getTagSet(\"year2\"),","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"                new GithubUsername(\"alexyeoh\"), new Telegram(\"alex_yeoh\"), new StudentId(\"A0123456B\")),","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"            new Student(new Name(\"Bernice Yu\"), new Email(\"berniceyu@example.com\"), getTagSet(\"RC4\", \"year2\"),","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"                new GithubUsername(\"berniceyu\"), new Telegram(\"bernice_yu\"), new StudentId(\"A1234567C\")),","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"                getTagSet(\"internationalStudent\"), new GithubUsername(\"charlotteoliveiro\"),","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"                new Telegram(\"charlotte_oliverio\"), new StudentId(\"A0123457C\")),","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"            new Student(new Name(\"David Li\"), new Email(\"lidavid@example.com\"), getTagSet(\"year1\"),","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"                new GithubUsername(\"davidli\"), new Telegram(\"david_li\"), new StudentId(\"A0123458D\")),","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), new Email(\"irfan@example.com\"), getTagSet(\"KR\"),","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"                new GithubUsername(\"irfanibrahim\"), new Telegram(\"irfan_ibrahim\"), new StudentId(\"A0123459E\")),","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), new Email(\"royb@example.com\"), getTagSet(\"RC4\"),","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"                new GithubUsername(\"roybalakrishnan\"), new Telegram(\"roy_balakrishnan\"),","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"                new StudentId(\"A0123450F\"))","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"     * Returns a sample TAddressBook based on the sample students.","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"     * Returns a LabList containing the list of strings given.","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"    public static LabList getLabSet(LabTriplet... labStrings) {","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"        requireNonNull(labStrings);","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"        LabList ll \u003d new LabList();","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"        ll.setLabs(Arrays.stream(labStrings)","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"                .map(LabTriplet::getLab)","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"        return ll;","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"channne":27,"-":33,"bryans17":16}},{"path":"src/main/java/seedu/address/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":45,"bryans17":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedLab.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.InvalidLabStatusException;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":" * Jackson-friendly version of {@link Lab}.","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"class JsonAdaptedLab {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAdaptedLab.class);","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"    private final String labNumber;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    private final String labStatus;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    private final String labMark;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"     * Constructs a {@code JsonAdaptedLab} with the given {@code labNumber}.","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    public JsonAdaptedLab(@JsonProperty(\"labNumber\") String labNumber, @JsonProperty(\"labStatus\") String labStatus,","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"                          @JsonProperty(\"labMark\") String labMark) {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"        this.labNumber \u003d labNumber;","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        this.labStatus \u003d labStatus;","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        this.labMark \u003d labMark;","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"     * Converts a given {@code Lab} into this class for Jackson use.","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    public JsonAdaptedLab(Lab source) {","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        labNumber \u003d String.valueOf(source.labNumber);","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        labStatus \u003d source.labStatus.name();","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"        labMark \u003d source.labMark.toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"    public String getLabNumber() {","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        return labNumber;","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"    public String getLabStatus() {","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"        return labStatus;","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"    public String getLabMark() {","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"        return labMark;","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Lab} object.","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted lab.","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"    public Lab toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"        checkLabNumber();","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"        return handleLabCreation();","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"    private Lab handleLabCreation() {","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"            return new Lab(labNumber).of(orElse(labStatus, \"UNSUBMITTED\"), orElse(labMark, \"Unknown\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"        } catch (InvalidLabStatusException | IllegalArgumentException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"            logger.info(\"Illegal lab attributes found when converting labs \" + e);","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"            return new Lab(labNumber);","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"    private void checkLabNumber() throws IllegalValueException {","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"        if (labNumber \u003d\u003d null || !Lab.isValidLab(labNumber)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"            throw new IllegalValueException(Lab.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"     * Returns an alternate String {@code alt} if the String {@code str} is null.","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"    private String orElse(String str, String alt) {","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"bryans17"},"content":"        if (str \u003d\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"            return alt;","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"bryans17"},"content":"        return str;","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"bryans17":91,"geetengtan":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabList;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.DuplicateLabException;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.GithubUsername;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Telegram;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"channne"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_DUPLICATE_LABS \u003d \"Student list contains duplicate Labs.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    private final String githubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"    private final String telegram;","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"    private final String studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    private final List\u003cJsonAdaptedLab\u003e labs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given student details.","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name, @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged, @JsonProperty(\"github\") String githubUsername,","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"            @JsonProperty(\"telegram\") String telegram, @JsonProperty(\"studentId\") String studentId,","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"            @JsonProperty(\"labs\") List\u003cJsonAdaptedLab\u003e labs) {","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"        this.githubUsername \u003d githubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"        if (labs !\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"            this.labs.addAll(labs);","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"        githubUsername \u003d source.getGithubUsername().username;","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"        telegram \u003d source.getTelegram().handle;","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"        studentId \u003d source.getStudentId().id;","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"        labs.addAll(source.getLabs().asUnmodifiableObservableList().stream()","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"                .map(JsonAdaptedLab::new)","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"        final List\u003cTag\u003e personTags \u003d deserializeTags();","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"        final LabList personLabs \u003d deserializeLabs();","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"bryans17"},"content":"        final Name modelName \u003d deserializeName();","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"bryans17"},"content":"        final Email modelEmail \u003d deserializeEmail();","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"bryans17"},"content":"        final GithubUsername modelUsername \u003d deserializeGithub();","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"bryans17"},"content":"        final Telegram modelTelegram \u003d deserializeTelegram();","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"bryans17"},"content":"        final StudentId modelId \u003d deserializeStudentId();","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"bryans17"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"bryans17"},"content":"        Student s \u003d new Student(modelName, modelEmail, modelTags, modelUsername, modelTelegram, modelId);","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"        s.getLabs().setLabs(personLabs);","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"        return s;","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"    private LabList deserializeLabs() throws IllegalValueException {","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"        LabList personLabs \u003d new LabList();","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"            for (JsonAdaptedLab lab : labs) {","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"bryans17"},"content":"                personLabs.add(lab.toModelType());","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"bryans17"},"content":"        } catch (DuplicateLabException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"            throw new IllegalValueException(MESSAGE_DUPLICATE_LABS);","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"        return personLabs;","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"    private List\u003cTag\u003e deserializeTags() throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"bryans17"},"content":"        List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"bryans17"},"content":"        return personTags;","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"bryans17"},"content":"    private Name deserializeName() throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"bryans17"},"content":"        return new Name(name);","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"bryans17"},"content":"    private Email deserializeEmail() throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"bryans17"},"content":"        return new Email(email);","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"bryans17"},"content":"    private GithubUsername deserializeGithub() throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":150,"author":{"gitId":"bryans17"},"content":"        if (githubUsername \u003d\u003d null) {","lastModifiedDate":"2022-03-04"},{"lineNumber":151,"author":{"gitId":"bryans17"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-04"},{"lineNumber":152,"author":{"gitId":"bryans17"},"content":"                    GithubUsername.class.getSimpleName()));","lastModifiedDate":"2022-03-04"},{"lineNumber":153,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":154,"author":{"gitId":"bryans17"},"content":"        if (!GithubUsername.isValidGithubUsername(githubUsername)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":155,"author":{"gitId":"bryans17"},"content":"            throw new IllegalValueException(GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":156,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":157,"author":{"gitId":"bryans17"},"content":"        return new GithubUsername(githubUsername);","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":160,"author":{"gitId":"bryans17"},"content":"    private Telegram deserializeTelegram() throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":161,"author":{"gitId":"channne"},"content":"        if (telegram \u003d\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"channne"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"channne"},"content":"                    Telegram.class.getSimpleName()));","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"channne"},"content":"        if (!Telegram.isValidTelegram(telegram)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"channne"},"content":"            throw new IllegalValueException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"bryans17"},"content":"        return new Telegram(telegram);","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"bryans17"},"content":"    private StudentId deserializeStudentId() throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"channne"},"content":"        if (studentId \u003d\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"channne"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"channne"},"content":"                    StudentId.class.getSimpleName()));","lastModifiedDate":"2022-03-06"},{"lineNumber":175,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"channne"},"content":"        if (!StudentId.isValidStudentId(studentId)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"channne"},"content":"            throw new IllegalValueException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":178,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":179,"author":{"gitId":"bryans17"},"content":"        return new StudentId(studentId);","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"channne":41,"-":64,"bryans17":76,"geetengtan":1}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"channne"},"content":" * A class to access TAddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"channne":1,"-":79}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"channne"},"content":" * An Immutable TAddressBook that is serializable to JSON format.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Students list contains duplicate student(s).\";","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_DUPLICATE_LAB \u003d \"Master list contains duplicate lab(s).\";","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    private final List\u003cJsonAdaptedLab\u003e masterList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"masterList\") List\u003cJsonAdaptedLab\u003e masterList,","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"                                       @JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students) {","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"        this.students.addAll(students);","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        this.masterList.addAll(masterList);","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        masterList.addAll(source.getMasterLabList().getMasterList().stream()","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"                .map(JsonAdaptedLab::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"     * Converts this TAddress book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"        for (JsonAdaptedLab jsonAdaptedLab : masterList) {","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"            Lab lab \u003d jsonAdaptedLab.toModelType();","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"            if (addressBook.hasLab(lab)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_LAB);","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"            addressBook.getMasterLabList().add(lab.of(\"UNSUBMITTED\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"            if (addressBook.hasStudent(student)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"            student.getLabs().alignLabs(addressBook.getMasterLabList());","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"            addressBook.addStudent(student);","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"channne":8,"-":47,"bryans17":23}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":47,"bryans17":1}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"channne"},"content":" * Manages storage of TAddressBook data in local storage.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"    private final AddressBookStorage addressBookStorage;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TAddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"channne":2,"-":74,"geetengtan":2}},{"path":"src/main/java/seedu/address/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.UserPrefs}.","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":36,"bryans17":1}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103-f10-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"channne":1,"-":101}},{"path":"src/main/java/seedu/address/ui/LabDetails.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"public class LabDetails extends HBox {","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"    private final Lab lab;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"     * Constructor for {@code LabDetails} with the specified {@code Lab}","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"    public LabDetails(Lab lab) {","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"        this.lab \u003d lab;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"        this.getChildren().addAll(new LabLabel(lab), new Label(lab.getDetails()));","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"geetengtan":20}},{"path":"src/main/java/seedu/address/ui/LabLabel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.InvalidLabStatusException;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"public class LabLabel extends Label {","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"    private final Lab lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"     * Creates a {@code LabLabel} with the given {@code Lab}.","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    public LabLabel(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"        this.lab \u003d lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"        this.setText(\"Lab \" + lab.labNumber);","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"        setColor();","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    private void setColor() {","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"        switch (lab.labStatus) {","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"        case UNSUBMITTED:","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"            this.setStyle(\"-fx-background-color: red;\");","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"            break;","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"        case SUBMITTED:","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"            this.setStyle(\"-fx-background-color: orange;\");","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"            break;","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"        case GRADED:","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"            this.setStyle(\"-fx-background-color: green;\");","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"            break;","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        default:","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"            throw new InvalidLabStatusException();","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"bryans17":35,"geetengtan":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"    private StackPane studentListPanelPlaceholder;","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList());","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"        studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"geetengtan"},"content":"    @FXML void handleView(Student student) {","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"geetengtan"},"content":"        ViewWindow viewWindow \u003d new ViewWindow(student);","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"geetengtan"},"content":"        viewWindow.show();","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"channne"},"content":"    public StudentListPanel getStudentListPanel() {","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"channne"},"content":"        return studentListPanel;","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"geetengtan"},"content":"            if (commandResult.isView()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"geetengtan"},"content":"                handleView(commandResult.getStudent());","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"geetengtan"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"channne":6,"-":190,"geetengtan":11,"bryans17":1}},{"path":"src/main/java/seedu/address/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import javafx.geometry.Orientation;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"    public final Student student;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"    private Label github;","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"    @FXML","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"    private Label telegram;","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"    private Label studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    private ListView\u003cLab\u003e labCard;","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"        this.student \u003d student;","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"        email.setText(\"email: \" + student.getEmail().value);","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"        github.setText(\"github: \" + student.getGithubUsername().username);","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"        telegram.setText(\"telegram: \" + student.getTelegram().handle);","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"geetengtan"},"content":"        studentId.setText(\"studentID: \" + student.getStudentId().id);","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        student.getTags().stream()","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"        initLabCard(student);","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"     * Initializes the ListView {@code labCard}.","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"     * @param student The Student object that this StudentCard belongs to.","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"    private void initLabCard(Student student) {","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"        // labCard related settings","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"        labCard.setItems(student.getLabs().asUnmodifiableObservableList());","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"        labCard.setCellFactory(listView -\u003e new LabListViewCell());","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"        labCard.setOrientation(Orientation.HORIZONTAL);","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"bryans17"},"content":"        // this is hardcoded, might need to be changed.","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"        labCard.setMaxHeight(30);","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"bryans17"},"content":"    private static class LabListViewCell extends ListCell\u003cLab\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"        protected void updateItem(Lab lab, boolean empty) {","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"            super.updateItem(lab, empty);","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"            if (empty || lab \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"bryans17"},"content":"                setText(null);","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"bryans17"},"content":"            } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"bryans17"},"content":"                setGraphic(new LabLabel(lab));","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"channne":15,"-":59,"bryans17":43,"geetengtan":1}},{"path":"src/main/java/seedu/address/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"channne"},"content":" * Panel containing the list of students.","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"channne"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"    @FXML","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"        super(FXML);","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"                setText(null);","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"            } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"channne":49}},{"path":"src/main/java/seedu/address/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"     * Starts the UI (and the App).","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":12,"bryans17":3}},{"path":"src/main/java/seedu/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"     * Resource folder where FXML files are stored.","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":87,"bryans17":6}},{"path":"src/main/java/seedu/address/ui/ViewWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"import javafx.geometry.Orientation;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.LabList;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":" * Window to show the details of a student","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"public class ViewWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"    private static final String FXML \u003d \"ViewWindow.fxml\";","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ViewWindow.class);","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"    public final Stage viewStage;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"    public final Student student;","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"    private Label name;","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"    private Label id;","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"    private Label email;","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"    private Label github;","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"    private Label telegram;","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"    private Label studentId;","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"geetengtan"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"geetengtan"},"content":"    private ListView\u003cLab\u003e labs;","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"geetengtan"},"content":"     * Creates a new ViewWindow.","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"geetengtan"},"content":"     * @param root Stage to use as the root of the ViewWindow.","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"geetengtan"},"content":"    public ViewWindow(Stage root, Student student) {","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"geetengtan"},"content":"        super(FXML, root);","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"geetengtan"},"content":"        this.viewStage \u003d root;","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"geetengtan"},"content":"        this.student \u003d student;","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"geetengtan"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"geetengtan"},"content":"        email.setText(\"email: \" + student.getEmail().value);","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"geetengtan"},"content":"        github.setText(\"github: \" + student.getGithubUsername().username);","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"geetengtan"},"content":"        telegram.setText(\"telegram: \" + student.getTelegram().handle);","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"geetengtan"},"content":"        studentId.setText(\"studentID: \" + student.getStudentId().id);","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"geetengtan"},"content":"        student.getTags().stream()","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"geetengtan"},"content":"                        .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"geetengtan"},"content":"                        .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"geetengtan"},"content":"        setLabDetails(student.getLabs());","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"geetengtan"},"content":"     * Creates a new ViewWindow.","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"geetengtan"},"content":"    public ViewWindow(Student student) {","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"geetengtan"},"content":"        this(new Stage(), student);","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"geetengtan"},"content":"        setStageTitle(student.getName().fullName);","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"geetengtan"},"content":"     * Shows the ViewWindow","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"geetengtan"},"content":"    public void show() {","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"geetengtan"},"content":"        logger.fine(String.format(\"Showing details of %s\", this.student.getName().fullName));","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"geetengtan"},"content":"        getRoot().show();","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"geetengtan"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"geetengtan"},"content":"    public void setStageTitle(String stageTitle) {","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"geetengtan"},"content":"        requireNonNull(stageTitle);","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"geetengtan"},"content":"        getRoot().setTitle(stageTitle);","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"geetengtan"},"content":"    public void setLabDetails(LabList labList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"geetengtan"},"content":"        labs.setItems(labList.asUnmodifiableObservableList());","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"geetengtan"},"content":"        labs.setCellFactory(listView -\u003e new LabListViewCell());","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"geetengtan"},"content":"        labs.setOrientation(Orientation.VERTICAL);","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"geetengtan"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"geetengtan"},"content":"    private static class LabListViewCell extends ListCell\u003cLab\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"geetengtan"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"geetengtan"},"content":"        protected void updateItem(Lab lab, boolean empty) {","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"geetengtan"},"content":"            super.updateItem(lab, empty);","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"geetengtan"},"content":"            if (empty || lab \u003d\u003d null) {","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"geetengtan"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"geetengtan"},"content":"                setText(null);","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"geetengtan"},"content":"            } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"geetengtan"},"content":"                setGraphic(new LabDetails(lab));","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"geetengtan"},"content":"                setAlignment(Pos.CENTER);","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"geetengtan"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"geetengtan":122}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"            transparent","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"            transparent","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"            derive(-fx-base, 80%)","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"            transparent;","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":354,"author":{"gitId":"bryans17"},"content":"#labCard {","lastModifiedDate":"2022-03-08"},{"lineNumber":355,"author":{"gitId":"bryans17"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-08"},{"lineNumber":356,"author":{"gitId":"bryans17"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":357,"author":{"gitId":"bryans17"},"content":"    -fx-padding: 2;","lastModifiedDate":"2022-04-05"},{"lineNumber":358,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":359,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":360,"author":{"gitId":"bryans17"},"content":"#labCard .label {","lastModifiedDate":"2022-03-08"},{"lineNumber":361,"author":{"gitId":"bryans17"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-08"},{"lineNumber":362,"author":{"gitId":"bryans17"},"content":"    -fx-padding: 2 5 2 5;","lastModifiedDate":"2022-03-08"},{"lineNumber":363,"author":{"gitId":"bryans17"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":364,"author":{"gitId":"bryans17"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":365,"author":{"gitId":"bryans17"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2022-03-08"},{"lineNumber":366,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":367,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":368,"author":{"gitId":"bryans17"},"content":"#labCard .scroll-bar:vertical .increment-arrow,","lastModifiedDate":"2022-04-05"},{"lineNumber":369,"author":{"gitId":"bryans17"},"content":"#labCard .scroll-bar:vertical .decrement-arrow,","lastModifiedDate":"2022-04-05"},{"lineNumber":370,"author":{"gitId":"bryans17"},"content":"#labCard .scroll-bar:vertical .increment-button,","lastModifiedDate":"2022-04-05"},{"lineNumber":371,"author":{"gitId":"bryans17"},"content":"#labCard .scroll-bar:vertical .decrement-button {","lastModifiedDate":"2022-04-05"},{"lineNumber":372,"author":{"gitId":"bryans17"},"content":"    -fx-scale-x: 0;","lastModifiedDate":"2022-03-24"},{"lineNumber":373,"author":{"gitId":"bryans17"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2022-03-24"},{"lineNumber":374,"author":{"gitId":"bryans17"},"content":"    -fx-padding:-7;","lastModifiedDate":"2022-03-24"},{"lineNumber":375,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":376,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":377,"author":{"gitId":"bryans17"},"content":"#labCard .scroll-bar:horizontal .increment-arrow,","lastModifiedDate":"2022-04-05"},{"lineNumber":378,"author":{"gitId":"bryans17"},"content":"#labCard .scroll-bar:horizontal .decrement-arrow,","lastModifiedDate":"2022-04-05"},{"lineNumber":379,"author":{"gitId":"bryans17"},"content":"#labCard .scroll-bar:horizontal .increment-button,","lastModifiedDate":"2022-04-05"},{"lineNumber":380,"author":{"gitId":"bryans17"},"content":"#labCard .scroll-bar:horizontal .decrement-button {","lastModifiedDate":"2022-04-05"},{"lineNumber":381,"author":{"gitId":"bryans17"},"content":"    -fx-scale-x: 0;","lastModifiedDate":"2022-03-24"},{"lineNumber":382,"author":{"gitId":"bryans17"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2022-03-24"},{"lineNumber":383,"author":{"gitId":"bryans17"},"content":"    -fx-padding: 2;","lastModifiedDate":"2022-04-05"},{"lineNumber":384,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":385,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":386,"author":{"gitId":"bryans17"},"content":"#labCard.list-view {","lastModifiedDate":"2022-03-24"},{"lineNumber":387,"author":{"gitId":"bryans17"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-24"},{"lineNumber":388,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":389,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":390,"author":{"gitId":"bryans17"},"content":"#labCard .list-cell {","lastModifiedDate":"2022-03-24"},{"lineNumber":391,"author":{"gitId":"bryans17"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-24"},{"lineNumber":392,"author":{"gitId":"bryans17"},"content":"    -fx-padding: 1;","lastModifiedDate":"2022-04-05"},{"lineNumber":393,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"-":348,"bryans17":45}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"         title\u003d\"TAddressBook App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"                \u003cVBox fx:id\u003d\"studentList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"                    \u003cStackPane fx:id\u003d\"studentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"channne":1,"-":57,"bryans17":2}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"            \u003cListView fx:id\u003d\"labCard\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"            \u003cLabel fx:id\u003d\"github\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$github\" /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"            \u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegram\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"            \u003cLabel fx:id\u003d\"studentId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$student id\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"channne":2,"-":33,"bryans17":4}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"    \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"channne":1,"-":7}},{"path":"src/main/resources/view/ViewWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"#viewContainer {","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"#name {","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"    -fx-font-family: \"Segou UI Semibold\";","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"    -fx-text-fill: #DDDDDD;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"#email {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"    -fx-text-fill: #DDDDDD;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"#github {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"    -fx-text-fill: #DDDDDD;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"#telegram {","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"    -fx-text-fill: #DDDDDD;","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"#studentId {","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"    -fx-text-fill: #DDDDDD;","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"#labs .label {","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"    -fx-padding: 2 5 2 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"#labs .list-cell {","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"    -fx-cell-size: 25;","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"geetengtan":47}},{"path":"src/main/resources/view/ViewWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"\u003cfx:root minWidth\u003d\"300\" minHeight\u003d\"300\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"    \u003cicons\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"        \u003cScene\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"                \u003cURL value\u003d\"@ViewWindow.css\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"            \u003cGridPane fx:id\u003d\"viewContainer\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"                \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"                    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"                \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"                \u003cVBox alignment\u003d\"CENTER_LEFT\" minWidth\u003d\"200\" minHeight\u003d\"300\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"15\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"                    \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"details_cell\" text\u003d\"\\$first\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"                    \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"                    \u003cLabel fx:id\u003d\"email\" minHeight\u003d\"20\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"                    \u003cLabel fx:id\u003d\"github\" minHeight\u003d\"20\" text\u003d\"\\$github\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"                    \u003cLabel fx:id\u003d\"telegram\" minHeight\u003d\"20\" text\u003d\"\\$telegram\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"                    \u003cLabel fx:id\u003d\"studentId\" minHeight\u003d\"20\" text\u003d\"\\$student id\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"                    \u003cStackPane styleClass\u003d\"labs_container\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"                        \u003cListView fx:id\u003d\"labs\" maxHeight\u003d\"150\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"                            \u003cInsets top\u003d\"10\" bottom\u003d\"10\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"                \u003crowConstraints\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"geetengtan"},"content":"                    \u003cRowConstraints/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"geetengtan"},"content":"                \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"geetengtan"},"content":"            \u003c/GridPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"geetengtan"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"geetengtan"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"geetengtan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"geetengtan":57}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"geetengtan"},"content":"        assertCommandException(deleteCommand, MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + EMAIL_DESC_AMY + GITHUB_DESC_AMY","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"                + TELEGRAM_DESC_AMY + STUDENTID_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"channne":11,"-":149,"geetengtan":2,"bryans17":6}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"    public void execute_newStudent_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"        assertCommandSuccess(new AddCommand(validStudent), model,","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(0);","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"        assertCommandFailure(new AddCommand(studentInList), model, AddCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"channne":11,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.MasterLabList;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"    public void execute_studentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        ModelStubAcceptingStudentAdded modelStub \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"        CommandResult commandResult \u003d new AddCommand(validStudent).execute(modelStub);","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.studentsAdded);","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"        AddCommand addCommand \u003d new AddCommand(validStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"        ModelStub modelStub \u003d new ModelStubWithStudent(validStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_STUDENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"        Student bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"channne"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"channne"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"channne"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"channne"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"channne"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":152,"author":{"gitId":"geetengtan"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"geetengtan"},"content":"        public void addOnFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"geetengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"bryans17"},"content":"        @Override","lastModifiedDate":"2022-04-07"},{"lineNumber":158,"author":{"gitId":"bryans17"},"content":"        public boolean isStudentListEmpty() {","lastModifiedDate":"2022-04-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-04-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"bryans17"},"content":"        public boolean hasLab(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"bryans17"},"content":"        public void addLab(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"bryans17"},"content":"        public void removeLab(Lab lab) {","lastModifiedDate":"2022-03-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-04-09"},{"lineNumber":178,"author":{"gitId":"bryans17"},"content":"        public ArrayList\u003cLab\u003e getLabsAsArrayList() {","lastModifiedDate":"2022-04-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"channne"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"channne"},"content":"    private class ModelStubWithStudent extends ModelStub {","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"channne"},"content":"        private final Student student;","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"channne"},"content":"        ModelStubWithStudent(Student student) {","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"channne"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"channne"},"content":"            this.student \u003d student;","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"bryans17"},"content":"        @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":195,"author":{"gitId":"bryans17"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-08"},{"lineNumber":196,"author":{"gitId":"bryans17"},"content":"            return new ReadOnlyAddressBook() {","lastModifiedDate":"2022-03-08"},{"lineNumber":197,"author":{"gitId":"bryans17"},"content":"                @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":198,"author":{"gitId":"channne"},"content":"                public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"bryans17"},"content":"                    return null;","lastModifiedDate":"2022-03-08"},{"lineNumber":200,"author":{"gitId":"bryans17"},"content":"                }","lastModifiedDate":"2022-03-08"},{"lineNumber":201,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":202,"author":{"gitId":"bryans17"},"content":"                @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":203,"author":{"gitId":"bryans17"},"content":"                public MasterLabList getMasterLabList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":204,"author":{"gitId":"bryans17"},"content":"                    return new MasterLabList();","lastModifiedDate":"2022-03-08"},{"lineNumber":205,"author":{"gitId":"bryans17"},"content":"                }","lastModifiedDate":"2022-04-07"},{"lineNumber":206,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":207,"author":{"gitId":"bryans17"},"content":"                @Override","lastModifiedDate":"2022-04-07"},{"lineNumber":208,"author":{"gitId":"bryans17"},"content":"                public boolean isStudentListEmpty() {","lastModifiedDate":"2022-04-07"},{"lineNumber":209,"author":{"gitId":"bryans17"},"content":"                    return true;","lastModifiedDate":"2022-04-07"},{"lineNumber":210,"author":{"gitId":"bryans17"},"content":"                }","lastModifiedDate":"2022-03-08"},{"lineNumber":211,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":212,"author":{"gitId":"bryans17"},"content":"                @Override","lastModifiedDate":"2022-04-09"},{"lineNumber":213,"author":{"gitId":"bryans17"},"content":"                public ArrayList\u003cLab\u003e getLabsAsArrayList() {","lastModifiedDate":"2022-04-09"},{"lineNumber":214,"author":{"gitId":"bryans17"},"content":"                    return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-09"},{"lineNumber":215,"author":{"gitId":"bryans17"},"content":"                }","lastModifiedDate":"2022-04-09"},{"lineNumber":216,"author":{"gitId":"bryans17"},"content":"            };","lastModifiedDate":"2022-03-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"channne"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-03-22"},{"lineNumber":221,"author":{"gitId":"channne"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-03-22"},{"lineNumber":222,"author":{"gitId":"channne"},"content":"            return this.student.isSameStudent(student);","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":225,"author":{"gitId":"bryans17"},"content":"        @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":226,"author":{"gitId":"bryans17"},"content":"        public void addLab(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":227,"author":{"gitId":"bryans17"},"content":"            requireNonNull(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":228,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":229,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":230,"author":{"gitId":"bryans17"},"content":"        @Override","lastModifiedDate":"2022-04-09"},{"lineNumber":231,"author":{"gitId":"bryans17"},"content":"        public ArrayList\u003cLab\u003e getLabsAsArrayList() {","lastModifiedDate":"2022-04-09"},{"lineNumber":232,"author":{"gitId":"bryans17"},"content":"            return getAddressBook().getLabsAsArrayList();","lastModifiedDate":"2022-04-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"channne"},"content":"     * A Model stub that always accept the student being added.","lastModifiedDate":"2022-03-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"channne"},"content":"    private class ModelStubAcceptingStudentAdded extends ModelStub {","lastModifiedDate":"2022-03-22"},{"lineNumber":240,"author":{"gitId":"channne"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"channne"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-03-22"},{"lineNumber":244,"author":{"gitId":"channne"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-03-22"},{"lineNumber":245,"author":{"gitId":"channne"},"content":"            return studentsAdded.stream().anyMatch(student::isSameStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"channne"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2022-03-22"},{"lineNumber":250,"author":{"gitId":"channne"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-03-22"},{"lineNumber":251,"author":{"gitId":"channne"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2022-03-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":259,"author":{"gitId":"bryans17"},"content":"        @Override","lastModifiedDate":"2022-04-09"},{"lineNumber":260,"author":{"gitId":"bryans17"},"content":"        public ArrayList\u003cLab\u003e getLabsAsArrayList() {","lastModifiedDate":"2022-04-09"},{"lineNumber":261,"author":{"gitId":"bryans17"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-09"},{"lineNumber":262,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"channne":42,"-":173,"bryans17":45,"geetengtan":5}},{"path":"src/test/java/seedu/address/logic/commands/AddLabCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBookWithoutLabs;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"class AddLabCommandTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    public void constructor_nullLab_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddLabCommand(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    public void constructor_validLab_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"        assertDoesNotThrow(() -\u003e new AddLabCommand(new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"    public void execute_validLab_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBookWithoutLabs(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        AddLabCommand command \u003d new AddLabCommand(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        String expectedMessage \u003d String.format(AddLabCommand.MESSAGE_SUCCESS, \"1\");","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    public void execute_duplicateLab_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"        // TypicalAddressBook already has Lab 1","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"        AddLabCommand command \u003d new AddLabCommand(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"        String expectedMessage \u003d String.format(AddLabCommand.MESSAGE_DUPLICATE_LAB, \"1\");","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"    public void execute_emptyStudentList_success() {","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"        AddLabCommand command \u003d new AddLabCommand(new Lab(\"1\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"        String expectedMessage \u003d String.format(AddLabCommand.MESSAGE_EMPTY_STUDENT_LIST, 1);","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"        expectedModel.addLab(new Lab(\"1\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"    public void equals_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"        AddLabCommand command1 \u003d new AddLabCommand(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"        AddLabCommand command2 \u003d new AddLabCommand(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"        assertEquals(command1, command2);","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"bryans17"},"content":"    public void equals_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"        AddLabCommand command1 \u003d new AddLabCommand(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"        AddLabCommand command2 \u003d new AddLabCommand(new Lab(\"2\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"        assertNotEquals(command1, command2);","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"bryans17":86}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"channne":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"    private final Student firstStudent \u003d ALICE;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"    private final Student secondStudent \u003d BENSON;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"    private final CommandResult commandResult \u003d new CommandResult(\"feedback\", false, false, firstStudent);","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"                false, false, firstStudent)));","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, null)));","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, null)));","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"        // different view value -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, null)));","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"        // different viewDetails value -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"                false, false, secondStudent)));","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"geetengtan"},"content":"        assertEquals(commandResult.hashCode(),","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"geetengtan"},"content":"                new CommandResult(\"feedback\", false, false, firstStudent).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"geetengtan"},"content":"        assertNotEquals(commandResult.hashCode(),","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"geetengtan"},"content":"                new CommandResult(\"feedback\", true, false, firstStudent).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"geetengtan"},"content":"        assertNotEquals(commandResult.hashCode(),","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"geetengtan"},"content":"                new CommandResult(\"feedback\", false, true, firstStudent).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"geetengtan"},"content":"        // different view value -\u003e returns different hashcode","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"geetengtan"},"content":"        assertNotEquals(commandResult.hashCode(),","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"geetengtan"},"content":"                new CommandResult(\"feedback\", false, false, null).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"geetengtan"},"content":"        // different viewStatus value -\u003e returns different hashcode","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"geetengtan"},"content":"        assertNotEquals(commandResult.hashCode(),","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"geetengtan"},"content":"                new CommandResult(\"feedback\", false, false, secondStudent).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"geetengtan"},"content":"    public void getStudent_isViewStudentExists_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"geetengtan"},"content":"        assertEquals(","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"geetengtan"},"content":"                new CommandResult(\"feedback\", false, false, firstStudent).getStudent(),","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"geetengtan"},"content":"                firstStudent","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"geetengtan"},"content":"        );","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"geetengtan"},"content":"    public void getStudent_studentDoesNotExists_throwsIllegalStateException() {","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"geetengtan"},"content":"        assertThrows(IllegalStateException.class, () -\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"geetengtan"},"content":"                new CommandResult(\"feedback\", false, false, null).getStudent()","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"geetengtan"},"content":"        );","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"geetengtan"},"content":"    public void isView_test() {","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"geetengtan"},"content":"        assertTrue(new CommandResult(\"feedback\", false, false, firstStudent).isView());","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"geetengtan"},"content":"        assertFalse(new CommandResult(\"feedback\").isView());","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"geetengtan"},"content":"    public void isShowHelp_test() {","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"geetengtan"},"content":"        assertTrue(new CommandResult(\"feedback\", true, false, null).isShowHelp());","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"geetengtan"},"content":"        assertFalse(new CommandResult(\"feedback\").isView());","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"geetengtan"},"content":"    public void isExit_test() {","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"geetengtan"},"content":"        assertTrue(new CommandResult(\"feedback\", false, true, null).isExit());","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"geetengtan"},"content":"        assertFalse(new CommandResult(\"feedback\").isView());","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":45,"geetengtan":69}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"    public static final String VALID_TAG_INTLSTUDENT \u003d \"internationalStudent\";","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"    public static final String VALID_TAG_YEAR2 \u003d \"year2\";","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    public static final String VALID_GITHUB_AMY \u003d \"amyB\";","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    public static final String VALID_GITHUB_BOB \u003d \"bobC\";","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"    public static final String VALID_TELEGRAM_AMY \u003d \"amy_B\";","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"    public static final String VALID_TELEGRAM_BOB \u003d \"bob_C\";","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"    public static final String VALID_STUDENTID_AMY \u003d \"A0123456B\";","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"    public static final String VALID_STUDENTID_BOB \u003d \"A0123457C\";","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"    public static final String TAG_DESC_YEAR2 \u003d \" \" + PREFIX_TAG + VALID_TAG_YEAR2;","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"    public static final String TAG_DESC_INTLSTUDENT \u003d \" \" + PREFIX_TAG + VALID_TAG_INTLSTUDENT;","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"    public static final String GITHUB_DESC_AMY \u003d \" \" + PREFIX_GITHUB + VALID_GITHUB_AMY;","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    public static final String GITHUB_DESC_BOB \u003d \" \" + PREFIX_GITHUB + VALID_GITHUB_BOB;","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"    public static final String TELEGRAM_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"    public static final String TELEGRAM_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"    public static final String STUDENTID_DESC_AMY \u003d \" \" + PREFIX_STUDENTID + VALID_STUDENTID_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"    public static final String STUDENTID_DESC_BOB \u003d \" \" + PREFIX_STUDENTID + VALID_STUDENTID_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"    // cant have consecutive \u0027-\u0027","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"    public static final String INVALID_GITHUB_CONSECUTIVE_HYPHEN_DESC \u003d \" \" + PREFIX_GITHUB + \"invalid--1\";","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"    // cant start with \u0027-\u0027","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"    public static final String INVALID_GITHUB_STARTING_HYPHEN_DESC \u003d \" \" + PREFIX_GITHUB + \"-invalid\";","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"    // cant end with \u0027-\u0027","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"    public static final String INVALID_GITHUB_ENDING_HYPHEN_DESC \u003d \" \" + PREFIX_GITHUB + \"invalid-\";","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"    // cant be longer than 39 alphanumeric characters","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"    public static final String INVALID_GITHUB_LONGER_THAN_39_DESC \u003d \" \" + PREFIX_GITHUB","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"    public static final String INVALID_TELEGRAM_DESC \u003d \" \" + PREFIX_TELEGRAM + \"James\u0026\"; // \u0027\u0026\u0027 not alphanumeric","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"    public static final String INVALID_STUDENTID_START_LETTER_DESC \u003d \" \" + PREFIX_STUDENTID + \"B0123456B\";","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"    public static final String INVALID_STUDENTID_WRONG_LENGTH_DESC \u003d \" \" + PREFIX_STUDENTID + \"A012345B\";","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"    public static final String INVALID_STUDENTID_END_NUMBER_DESC \u003d \" \" + PREFIX_STUDENTID + \"A01234567\";","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"    public static final String INVALID_STUDENTID_MIDDLE_LETTER \u003d \" \" + PREFIX_STUDENTID + \"A012C456B\";","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"                .withTags(VALID_TAG_YEAR2)","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"                .withGithub(VALID_GITHUB_AMY)","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"                .withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"                .withStudentId(VALID_STUDENTID_AMY).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"                .withTags(VALID_TAG_INTLSTUDENT, VALID_TAG_YEAR2)","lastModifiedDate":"2022-04-10"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"                .withGithub(VALID_GITHUB_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"                .withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"                .withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"channne"},"content":"     * - the address book, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"channne"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"channne"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"channne"},"content":"    public static void showStudentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"channne"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"channne"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"channne"},"content":"        final String[] splitName \u003d student.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"channne"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"channne"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"channne":46,"-":91,"bryans17":15}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"        showNoStudent(expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"geetengtan"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"    private void showNoStudent(Model model) {","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"channne":26,"-":81,"geetengtan":2}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_INTLSTUDENT;","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBookWithoutLabs;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithoutLabs(), new UserPrefs());","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        Student editedStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"        Student editedStudent \u003d studentInList.withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"                .withTags(VALID_TAG_INTLSTUDENT).build();","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"                .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_INTLSTUDENT).build();","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastStudent, descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, new EditStudentDescriptor());","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"        Student editedStudent \u003d new StudentBuilder(studentInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"    public void execute_duplicateStudentUnfilteredList_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(firstStudent).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_STUDENT, descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"    public void execute_duplicateStudentFilteredList_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"        // edit student in filtered list into a duplicate in address book","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"                new EditStudentDescriptorBuilder(studentInList).build());","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"channne"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"channne"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"channne"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"geetengtan"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"channne"},"content":"    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"channne"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"channne"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"channne"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"channne"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"geetengtan"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"channne"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, DESC_AMY);","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"        EditStudentDescriptor copyDescriptor \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_STUDENT, copyDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_STUDENT, DESC_AMY)));","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_STUDENT, DESC_BOB)));","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"channne":60,"-":110,"bryans17":1,"geetengtan":2}},{"path":"src/test/java/seedu/address/logic/commands/EditLabCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_LAB;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.EditLabCommand.MESSAGE_INVALID_COMBINATION;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabList;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabMark;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabStatus;","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"public class EditLabCommandTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"    private static final int VALID_LABNUMBER \u003d 1;","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"    private static final LabMark VALID_LABMARK \u003d new LabMark(\"10\");","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"    private static final LabMark VALID_EDITED_LABMARK \u003d new LabMark(\"20\");","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"    public void execute_editStatus_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        Student studentToEdit \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"        Student editedStudent \u003d new StudentBuilder(studentToEdit).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        LabList listToEdit \u003d editedStudent.getLabs();","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"        listToEdit.setLab(listToEdit.getLab(VALID_LABNUMBER),","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"                new Lab(String.valueOf(VALID_LABNUMBER)).of(LabStatus.SUBMITTED));","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"        EditLabCommand command \u003d new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(EditLabCommand.MESSAGE_EDIT_LAB_SUCCESS, VALID_LABNUMBER,","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"                studentToEdit.getName());","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"        expectedModel.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"    public void execute_editMarks_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        Student studentToEdit \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"        LabList listToEdit \u003d studentToEdit.getLabs();","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"        listToEdit.setLab(listToEdit.getLab(VALID_LABNUMBER),","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"                new Lab(String.valueOf(VALID_LABNUMBER)).of(VALID_LABMARK)); // grading the Lab first","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"        Student editedStudent \u003d new StudentBuilder(studentToEdit).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"        listToEdit \u003d editedStudent.getLabs();","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"        listToEdit.setLab(listToEdit.getLab(VALID_LABNUMBER),","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"                new Lab(String.valueOf(VALID_LABNUMBER)).of(VALID_EDITED_LABMARK));","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"        EditLabCommand command \u003d new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, VALID_EDITED_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(EditLabCommand.MESSAGE_EDIT_LAB_SUCCESS, VALID_LABNUMBER,","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"                studentToEdit.getName());","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        expectedModel.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"    public void execute_editStatusAndMark_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"        Student studentToEdit \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"        Student editedStudent \u003d new StudentBuilder(studentToEdit).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"        LabList listToEdit \u003d editedStudent.getLabs();","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"        Lab labToEdit \u003d listToEdit.getLab(VALID_LABNUMBER);","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"        listToEdit.setLab(labToEdit, labToEdit.of(VALID_LABMARK));","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"        EditLabCommand command \u003d new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER,","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"                LabStatus.GRADED, VALID_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(EditLabCommand.MESSAGE_EDIT_LAB_SUCCESS, VALID_LABNUMBER,","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"                studentToEdit.getName());","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"        expectedModel.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"        EditLabCommand command \u003d new EditLabCommand(outOfBoundIndex, VALID_LABNUMBER, LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"geetengtan"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"channne"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"channne"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"channne"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"channne"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"channne"},"content":"        EditLabCommand command \u003d new EditLabCommand(outOfBoundIndex, VALID_LABNUMBER, LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"geetengtan"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":130,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"channne"},"content":"    public void execute_invalidCommandSubmitWithMarks_throwsCommandException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"channne"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"channne"},"content":"        EditLabCommand command \u003d new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, LabStatus.SUBMITTED,","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"channne"},"content":"                VALID_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"channne"},"content":"        assertCommandFailure(command, model, MESSAGE_INVALID_COMBINATION);","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"channne"},"content":"    public void execute_invalidCommandGradeWithoutMarks_throwsCommandException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"channne"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"channne"},"content":"        EditLabCommand command \u003d new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, LabStatus.GRADED);","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"channne"},"content":"        assertCommandFailure(command, model, MESSAGE_INVALID_COMBINATION);","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"channne"},"content":"    public void execute_invalidLabNumber_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"        int invalidLabNumber \u003d 0;","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"        EditLabCommand command \u003d new EditLabCommand(INDEX_FIRST_STUDENT, invalidLabNumber, LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"channne"},"content":"        assertCommandFailure(command, model, MESSAGE_INVALID_LAB);","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"channne"},"content":"    public void execute_sameLabStatus_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"channne"},"content":"        LabStatus currentStatus \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased())","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"channne"},"content":"                .getLabs().getLab(VALID_LABNUMBER).labStatus;","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"channne"},"content":"        EditLabCommand command \u003d new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, currentStatus);","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"channne"},"content":"        assertCommandFailure(command, model, EditLabCommand.MESSAGE_IDENTICAL_LAB);","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"channne"},"content":"    public void execute_sameLabMarks_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"channne"},"content":"        LabList listToEdit \u003d model.getFilteredStudentList().get(INDEX_SECOND_STUDENT.getZeroBased()).getLabs();","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"channne"},"content":"        Lab labToEdit \u003d listToEdit.getLab(VALID_LABNUMBER);","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"channne"},"content":"        listToEdit.setLab(labToEdit, labToEdit.of(VALID_LABMARK));","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"channne"},"content":"        EditLabCommand command \u003d new EditLabCommand(INDEX_SECOND_STUDENT, VALID_LABNUMBER, VALID_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"channne"},"content":"        assertCommandFailure(command, model, EditLabCommand.MESSAGE_IDENTICAL_LAB);","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"channne"},"content":"    public void isValidCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"channne"},"content":"        EditLabCommand stub \u003d new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, VALID_LABMARK);","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"channne"},"content":"        assertTrue(stub.isValidCommand(new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, LabStatus.GRADED,","lastModifiedDate":"2022-03-26"},{"lineNumber":184,"author":{"gitId":"channne"},"content":"                VALID_LABMARK)));","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"channne"},"content":"        assertTrue(stub.isValidCommand(new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, LabStatus.SUBMITTED)));","lastModifiedDate":"2022-03-26"},{"lineNumber":186,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"channne"},"content":"        // marks not initialized -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":188,"author":{"gitId":"channne"},"content":"        assertFalse(stub.isValidCommand(new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, LabStatus.GRADED)));","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":190,"author":{"gitId":"channne"},"content":"        // not graded but marks initialized -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":191,"author":{"gitId":"channne"},"content":"        assertFalse(stub.isValidCommand(new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, LabStatus.SUBMITTED,","lastModifiedDate":"2022-03-26"},{"lineNumber":192,"author":{"gitId":"channne"},"content":"                new LabMark(\"10\"))));","lastModifiedDate":"2022-03-26"},{"lineNumber":193,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":194,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":195,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"channne"},"content":"    public void equals() {","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"channne"},"content":"        EditLabCommand standardCommand \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"channne"},"content":"                new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-26"},{"lineNumber":199,"author":{"gitId":"channne"},"content":"        EditLabCommand changeIndexCommand \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"channne"},"content":"                new EditLabCommand(INDEX_SECOND_STUDENT, VALID_LABNUMBER, LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-26"},{"lineNumber":201,"author":{"gitId":"channne"},"content":"        EditLabCommand changeLabCommand \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"channne"},"content":"                new EditLabCommand(INDEX_FIRST_STUDENT, 2, LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-26"},{"lineNumber":203,"author":{"gitId":"channne"},"content":"        EditLabCommand changeStatusCommand \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"channne"},"content":"                new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, LabStatus.UNSUBMITTED);","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"channne"},"content":"        EditLabCommand changeMarksCommand \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"channne"},"content":"                new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, VALID_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"channne"},"content":"        EditLabCommand differentMarksCommand \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"channne"},"content":"                new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, VALID_EDITED_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"channne"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-25"},{"lineNumber":211,"author":{"gitId":"channne"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":212,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":213,"author":{"gitId":"channne"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"channne"},"content":"        EditLabCommand standardCommandCopy \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"channne"},"content":"                new EditLabCommand(INDEX_FIRST_STUDENT, 1, LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-25"},{"lineNumber":216,"author":{"gitId":"channne"},"content":"        assertTrue(standardCommand.equals(standardCommandCopy));","lastModifiedDate":"2022-03-25"},{"lineNumber":217,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":218,"author":{"gitId":"channne"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(changeIndexCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":220,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(changeLabCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":221,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(changeStatusCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":222,"author":{"gitId":"channne"},"content":"        assertFalse(changeIndexCommand.equals(changeLabCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":223,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(changeMarksCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":224,"author":{"gitId":"channne"},"content":"        assertFalse(changeMarksCommand.equals(differentMarksCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":225,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":226,"author":{"gitId":"channne"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-25"},{"lineNumber":227,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-25"},{"lineNumber":228,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":229,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"channne":227,"geetengtan":2}},{"path":"src/test/java/seedu/address/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_INTLSTUDENT;","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"        EditStudentDescriptor descriptorWithSameValues \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        EditStudentDescriptor editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_INTLSTUDENT).build();","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"channne":8,"-":40}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, null);","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"geetengtan":1}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.CARL;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.DANIEL;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"import java.util.Hashtable;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabStatus;","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.StudentHasLabPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"public class FilterCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"                new StudentHasLabPredicate((new Lab(\"1\")).of(LabStatus.UNSUBMITTED));","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        StudentHasLabPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"                new StudentHasLabPredicate((new Lab(\"1\")).of(LabStatus.SUBMITTED));","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate thirdPredicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"                new StudentHasLabPredicate((new Lab(\"3\")).of(LabStatus.UNSUBMITTED));","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate fourthPredicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"                new StudentHasLabPredicate((new Lab(\"4\")).of(LabStatus.SUBMITTED));","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"        FilterCommand firstFilterCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"        FilterCommand secondFilterCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"        FilterCommand thirdFilterCommand \u003d new FilterCommand(thirdPredicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"        FilterCommand fourthFilterCommand \u003d new FilterCommand(fourthPredicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"        assertTrue(firstFilterCommand.equals(firstFilterCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"geetengtan"},"content":"        FilterCommand firstFilterCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"geetengtan"},"content":"        assertTrue(firstFilterCommand.equals(firstFilterCommandCopy));","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"geetengtan"},"content":"        // same labNumber different labStatus -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"geetengtan"},"content":"        assertFalse(firstFilterCommand.equals(secondFilterCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"geetengtan"},"content":"        // different labNumber same labStatus -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"geetengtan"},"content":"        assertFalse(firstFilterCommand.equals(thirdFilterCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"geetengtan"},"content":"        // different labNumber different labStatus -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"geetengtan"},"content":"        assertFalse(firstFilterCommand.equals(fourthFilterCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"geetengtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"geetengtan"},"content":"        assertFalse(firstFilterCommand.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"    public void execute_success_multipleStudentsFound() {","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate predicate \u003d preparePredicate(\"l/1 s/u\");","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"geetengtan"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"geetengtan"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"        assertEquals(Arrays.asList(ALICE, CARL, DANIEL), model.getFilteredStudentList());","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"geetengtan"},"content":"    private StudentHasLabPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"geetengtan"},"content":"        Pattern pattern \u003d Pattern.compile(\"\\\\s*l/(?\u003clabNum\u003e\\\\d+)\\\\s+s/(?\u003clabStat\u003e[usg])\");","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"geetengtan"},"content":"        Matcher matcher \u003d pattern.matcher(userInput);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"geetengtan"},"content":"        assertTrue(matcher.matches());","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"        Hashtable\u003cString, LabStatus\u003e mapper \u003d new Hashtable\u003c\u003e() {","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"            {","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"geetengtan"},"content":"                put(\"u\", LabStatus.UNSUBMITTED);","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"geetengtan"},"content":"                put(\"s\", LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"geetengtan"},"content":"                put(\"g\", LabStatus.GRADED);","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"        };","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"geetengtan"},"content":"        Lab lab \u003d new Lab(matcher.group(\"labNum\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"geetengtan"},"content":"        LabStatus labStatus \u003d mapper.get(matcher.group(\"labStat\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"bryans17"},"content":"        return new StudentHasLabPredicate(lab.of(labStatus));","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"channne":12,"geetengtan":73,"bryans17":10}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.CARL;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"    public void execute_multipleKeywords_multipleStudentsFound() {","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredStudentList());","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"channne":15,"-":68}},{"path":"src/test/java/seedu/address/logic/commands/GradeLabCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_LAB;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabList;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabMark;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabStatus;","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"public class GradeLabCommandTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"    private static final int VALID_LABNUMBER \u003d 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"    private static final LabMark VALID_LABMARK \u003d new LabMark(\"10\");","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"    public void execute_validParameters_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        Student personToEdit \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"        Student editedPerson \u003d new StudentBuilder(personToEdit).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        LabList listToEdit \u003d editedPerson.getLabs();","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"        Lab labToEdit \u003d listToEdit.getLab(VALID_LABNUMBER);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        listToEdit.setLab(labToEdit, new Lab(String.valueOf(VALID_LABNUMBER)).of(VALID_LABMARK));","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"        GradeLabCommand command \u003d new GradeLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, new LabMark(\"10\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(GradeLabCommand.MESSAGE_GRADE_LAB_SUCCESS,","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"                VALID_LABNUMBER, personToEdit.getName());","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedPerson);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"        expectedModel.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"        GradeLabCommand command \u003d new GradeLabCommand(outOfBoundIndex, VALID_LABNUMBER, VALID_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"geetengtan"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"        GradeLabCommand command \u003d new GradeLabCommand(outOfBoundIndex, VALID_LABNUMBER, VALID_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"geetengtan"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"    public void execute_invalidLabNumber_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"        int invalidLabNumber \u003d 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        GradeLabCommand command \u003d new GradeLabCommand(INDEX_FIRST_STUDENT, invalidLabNumber, VALID_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"        assertCommandFailure(command, model, MESSAGE_INVALID_LAB);","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"    public void execute_labStatusAlreadyGraded_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"        Student studentToEdit \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"        Lab labToEdit \u003d studentToEdit.getLabs().getLab(VALID_LABNUMBER);","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"        Lab gradedLab \u003d labToEdit.of(VALID_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"        model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased()).getLabs().setLab(labToEdit, gradedLab);","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"        GradeLabCommand command \u003d new GradeLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, VALID_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"        assertCommandFailure(command, model, String.format(EditLabCommand.MESSAGE_CURRENT_LABSTATUS_INVALID,","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"                gradedLab.labNumber, gradedLab.labStatus));","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"        GradeLabCommand standardCommand \u003d new GradeLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, VALID_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"        GradeLabCommand changeIndexCommand \u003d new GradeLabCommand(INDEX_SECOND_STUDENT, VALID_LABNUMBER, VALID_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"        GradeLabCommand changeLabCommand \u003d new GradeLabCommand(INDEX_FIRST_STUDENT, 2, VALID_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"        GradeLabCommand changeMarkCommand \u003d new GradeLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER,","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"                new LabMark(\"20\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"        EditLabCommand differentTypeCommand \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"                new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, LabStatus.GRADED, VALID_LABMARK);","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"        GradeLabCommand standardCommandCopy \u003d new GradeLabCommand(INDEX_FIRST_STUDENT, 1, new LabMark(\"10\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"        assertTrue(standardCommand.equals(standardCommandCopy));","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"        assertTrue(standardCommand.equals(differentTypeCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(changeIndexCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(changeLabCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(changeMarkCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"channne"},"content":"        assertFalse(changeIndexCommand.equals(changeLabCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"channne":119,"bryans17":5,"geetengtan":2}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, null);","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"geetengtan":1}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"channne":4,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/RemoveLabCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBookWithoutLabs;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":" * {@code RemoveLabCommand}.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"public class RemoveLabCommandTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    public void constructor_nullLab_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e new RemoveLabCommand(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    public void constructor_validLab_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        assertDoesNotThrow(() -\u003e new RemoveLabCommand(new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    public void execute_validLab_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        // Lab with lab_number 1 does exist in the TypicalAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        RemoveLabCommand command \u003d new RemoveLabCommand(new Lab(\"1\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"        String expectedMessage \u003d String.format(RemoveLabCommand.MESSAGE_SUCCESS, \"1\");","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBookWithoutLabs(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    public void execute_invalidLab_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"        // Lab with lab_number 3 does not exist in the TypicalAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"        RemoveLabCommand command \u003d new RemoveLabCommand(new Lab(\"3\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"        String expectedMessage \u003d String.format(RemoveLabCommand.MESSAGE_LAB_NOT_FOUND, \"3\");","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"    public void equals_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"        RemoveLabCommand command1 \u003d new RemoveLabCommand(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"        RemoveLabCommand command2 \u003d new RemoveLabCommand(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"        assertEquals(command1, command2);","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"    public void equals_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"        RemoveLabCommand command1 \u003d new RemoveLabCommand(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"        RemoveLabCommand command2 \u003d new RemoveLabCommand(new Lab(\"2\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"        assertNotEquals(command1, command2);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"channne":2,"bryans17":72}},{"path":"src/test/java/seedu/address/logic/commands/SubmitLabCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_LAB;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabList;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabStatus;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"public class SubmitLabCommandTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"    private static final int VALID_LABNUMBER \u003d 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"    public void execute_validParameters_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        Student personToEdit \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        Student editedPerson \u003d new StudentBuilder(personToEdit).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        LabList listToEdit \u003d editedPerson.getLabs();","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"        Lab labToEdit \u003d listToEdit.getLab(VALID_LABNUMBER);","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        listToEdit.setLab(labToEdit, new Lab(String.valueOf(VALID_LABNUMBER)).of(LabStatus.SUBMITTED));","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        SubmitLabCommand command \u003d new SubmitLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER);","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(SubmitLabCommand.MESSAGE_SUBMIT_LAB_SUCCESS,","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"                VALID_LABNUMBER, personToEdit.getName());","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedPerson);","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"        expectedModel.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        SubmitLabCommand command \u003d new SubmitLabCommand(outOfBoundIndex, VALID_LABNUMBER);","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"geetengtan"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"        SubmitLabCommand command \u003d new SubmitLabCommand(outOfBoundIndex, VALID_LABNUMBER);","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"geetengtan"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"    public void execute_invalidLabNumber_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"        int invalidLabNumber \u003d 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"        SubmitLabCommand command \u003d new SubmitLabCommand(INDEX_FIRST_STUDENT, invalidLabNumber);","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        assertCommandFailure(command, model, MESSAGE_INVALID_LAB);","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"    public void execute_labStatusNotUnsubmitted_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"        LabList listToEdit \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased()).getLabs();","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"        Lab labToEdit \u003d listToEdit.getLab(VALID_LABNUMBER);","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"        listToEdit.setLab(labToEdit, labToEdit.editLabStatus(LabStatus.SUBMITTED));","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"        SubmitLabCommand command \u003d new SubmitLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER);","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"        assertCommandFailure(command, model, String.format(EditLabCommand.MESSAGE_CURRENT_LABSTATUS_INVALID,","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"                labToEdit.labNumber, LabStatus.SUBMITTED));","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"        SubmitLabCommand standardCommand \u003d new SubmitLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER);","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"        SubmitLabCommand changeIndexCommand \u003d new SubmitLabCommand(INDEX_SECOND_STUDENT, VALID_LABNUMBER);","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"        SubmitLabCommand changeLabCommand \u003d new SubmitLabCommand(INDEX_FIRST_STUDENT, 2);","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"        EditLabCommand differentTypeCommand \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"                new EditLabCommand(INDEX_FIRST_STUDENT, VALID_LABNUMBER, LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"        SubmitLabCommand standardCommandCopy \u003d new SubmitLabCommand(INDEX_FIRST_STUDENT, 1);","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"        assertTrue(standardCommand.equals(standardCommandCopy));","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"        assertTrue(standardCommand.equals(differentTypeCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(changeIndexCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(changeLabCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"        assertFalse(changeIndexCommand.equals(changeLabCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"channne":113,"bryans17":5,"geetengtan":2}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":" * {@code ViewCommand}","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"public class ViewCommandTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"    private final Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"        Student studentToView \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"                new CommandResult(String.format(ViewCommand.MESSAGE_VIEW_SUCCESS, studentToView.getName()),","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"                        false, false, studentToView);","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"        assertCommandSuccess(viewCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"geetengtan"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"geetengtan"},"content":"        showStudentAtIndex(model, INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"geetengtan"},"content":"        Student studentToView \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"geetengtan"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"geetengtan"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"geetengtan"},"content":"                new CommandResult(String.format(ViewCommand.MESSAGE_VIEW_SUCCESS, studentToView.getName()),","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"geetengtan"},"content":"                        false, false, studentToView);","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"geetengtan"},"content":"        showStudentAtIndex(expectedModel, INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"geetengtan"},"content":"        assertCommandSuccess(viewCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"geetengtan"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"geetengtan"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"geetengtan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"geetengtan"},"content":"        //ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"geetengtan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"geetengtan"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"geetengtan"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-04-05"},{"lineNumber":79,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"geetengtan"},"content":"    public void equals() {","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"geetengtan"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"geetengtan"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"geetengtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"geetengtan"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"geetengtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"geetengtan"},"content":"        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"geetengtan"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"geetengtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"geetengtan"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"geetengtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"geetengtan"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"geetengtan"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"geetengtan"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"geetengtan":102}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_BOB;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_CONSECUTIVE_HYPHEN_DESC;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_ENDING_HYPHEN_DESC;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_LONGER_THAN_39_DESC;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_STARTING_HYPHEN_DESC;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_END_NUMBER_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_MIDDLE_LETTER;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_START_LETTER_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_WRONG_LENGTH_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_INTLSTUDENT;","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_YEAR2;","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_INTLSTUDENT;","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_YEAR2;","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.GithubUsername;","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Telegram;","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        Student expectedPerson \u003d new StudentBuilder()","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"                .withGithub(VALID_GITHUB_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"                .withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"                .withStudentId(VALID_STUDENTID_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"                .withTags(VALID_TAG_YEAR2).build();","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"                + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_YEAR2, new AddCommand(expectedPerson));","lastModifiedDate":"2022-04-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"                + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_YEAR2, new AddCommand(expectedPerson));","lastModifiedDate":"2022-04-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB + GITHUB_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"                + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_YEAR2, new AddCommand(expectedPerson));","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"        Student expectedStudentMultipleTags \u003d new StudentBuilder(BOB).withTags(VALID_TAG_YEAR2, VALID_TAG_INTLSTUDENT)","lastModifiedDate":"2022-04-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_INTLSTUDENT + GITHUB_DESC_BOB","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"                        + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_YEAR2,","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"                new AddCommand(expectedStudentMultipleTags));","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + EMAIL_DESC_AMY + GITHUB_DESC_AMY + TELEGRAM_DESC_AMY","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_AMY, new AddCommand(expectedStudent));","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_EMAIL_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"        // missing github prefix","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + VALID_GITHUB_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"        // missing telegram prefix","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + VALID_TELEGRAM_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"        // missing studentid prefix","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"                + VALID_STUDENTID_BOB, expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_EMAIL_BOB + VALID_GITHUB_BOB + VALID_TELEGRAM_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"channne"},"content":"                + VALID_STUDENTID_BOB, expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + EMAIL_DESC_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB + TAG_DESC_INTLSTUDENT + TAG_DESC_YEAR2, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_EMAIL_DESC + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB + TAG_DESC_INTLSTUDENT + TAG_DESC_YEAR2, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_YEAR2, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-10"},{"lineNumber":137,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":138,"author":{"gitId":"bryans17"},"content":"        // invalid github (consecutive hyphens)","lastModifiedDate":"2022-03-04"},{"lineNumber":139,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + INVALID_GITHUB_CONSECUTIVE_HYPHEN_DESC","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"channne"},"content":"                        + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_INTLSTUDENT + TAG_DESC_YEAR2,","lastModifiedDate":"2022-04-10"},{"lineNumber":141,"author":{"gitId":"channne"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":143,"author":{"gitId":"bryans17"},"content":"        // invalid github (starting with hyphen)","lastModifiedDate":"2022-03-04"},{"lineNumber":144,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + INVALID_GITHUB_STARTING_HYPHEN_DESC","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"channne"},"content":"                        + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_INTLSTUDENT + TAG_DESC_YEAR2,","lastModifiedDate":"2022-04-10"},{"lineNumber":146,"author":{"gitId":"channne"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":148,"author":{"gitId":"bryans17"},"content":"        // invalid github (ending with hyphen)","lastModifiedDate":"2022-03-04"},{"lineNumber":149,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + INVALID_GITHUB_ENDING_HYPHEN_DESC","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"channne"},"content":"                        + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_INTLSTUDENT + TAG_DESC_YEAR2,","lastModifiedDate":"2022-04-10"},{"lineNumber":151,"author":{"gitId":"channne"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":153,"author":{"gitId":"bryans17"},"content":"        // invalid github (longer than 39 alphanumerical characters)","lastModifiedDate":"2022-03-04"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + INVALID_GITHUB_LONGER_THAN_39_DESC","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"channne"},"content":"                        + STUDENTID_DESC_BOB + TELEGRAM_DESC_BOB + TAG_DESC_INTLSTUDENT + TAG_DESC_YEAR2,","lastModifiedDate":"2022-04-10"},{"lineNumber":156,"author":{"gitId":"channne"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"channne"},"content":"        // invalid telegram","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + INVALID_TELEGRAM_DESC","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB + TAG_DESC_INTLSTUDENT, Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"channne"},"content":"        // invalid student id (does not start with A)","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"channne"},"content":"                        + INVALID_STUDENTID_START_LETTER_DESC + TAG_DESC_INTLSTUDENT + TAG_DESC_YEAR2,","lastModifiedDate":"2022-04-10"},{"lineNumber":165,"author":{"gitId":"channne"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"channne"},"content":"        // invalid student id (wrong length)","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"channne"},"content":"                        + INVALID_STUDENTID_WRONG_LENGTH_DESC + TAG_DESC_INTLSTUDENT + TAG_DESC_YEAR2,","lastModifiedDate":"2022-04-10"},{"lineNumber":170,"author":{"gitId":"channne"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"channne"},"content":"        // invalid student id (does not end with letter)","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"channne"},"content":"                        + INVALID_STUDENTID_END_NUMBER_DESC + TAG_DESC_INTLSTUDENT + TAG_DESC_YEAR2,","lastModifiedDate":"2022-04-10"},{"lineNumber":175,"author":{"gitId":"channne"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"channne"},"content":"        // invalid student id (has a letter in the middle)","lastModifiedDate":"2022-03-06"},{"lineNumber":178,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":179,"author":{"gitId":"channne"},"content":"                        + INVALID_STUDENTID_MIDDLE_LETTER + TAG_DESC_INTLSTUDENT + TAG_DESC_YEAR2,","lastModifiedDate":"2022-04-10"},{"lineNumber":180,"author":{"gitId":"channne"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_EMAIL_DESC + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":184,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":187,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":188,"author":{"gitId":"channne"},"content":"                        + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_INTLSTUDENT + TAG_DESC_YEAR2,","lastModifiedDate":"2022-04-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"channne":99,"-":70,"bryans17":22}},{"path":"src/test/java/seedu/address/logic/parser/AddLabCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.commands.AddLabCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"public class AddLabCommandParserTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLabCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    private AddLabCommandParser parser \u003d new AddLabCommandParser();","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"        // no lab specified","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \" \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"        // invalid labs","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \" l/a \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \" l/-1 \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \" l/-1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \" l/21\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"        AddLabCommand expectedCommand \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"                new AddLabCommand(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        assertParseSuccess(parser, \" l/1\", expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"bryans17":40}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.StudentUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(StudentUtil.getAddCommand(student));","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        assertEquals(new AddCommand(student), command);","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_STUDENT), command);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(student).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"                + INDEX_FIRST_STUDENT.getOneBased() + \" \" + StudentUtil.getEditStudentDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_STUDENT, descriptor), command);","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"geetengtan"},"content":"    public void parseCommand_view() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"geetengtan"},"content":"        ViewCommand command \u003d (ViewCommand) parser.parseCommand(","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"geetengtan"},"content":"                ViewCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"geetengtan"},"content":"        assertEquals(new ViewCommand(INDEX_FIRST_STUDENT), command);","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"channne":16,"-":85,"geetengtan":8}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_STUDENT));","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"channne":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_CONSECUTIVE_HYPHEN_DESC;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_ENDING_HYPHEN_DESC;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_LONGER_THAN_39_DESC;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_STARTING_HYPHEN_DESC;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_END_NUMBER_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_MIDDLE_LETTER;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_START_LETTER_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_WRONG_LENGTH_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_INTLSTUDENT;","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_YEAR2;","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_AMY;","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_INTLSTUDENT;","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_YEAR2;","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.GithubUsername;","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Telegram;","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"geetengtan"},"content":"        assertParseFailure(parser, \"1 z/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"bryans17"},"content":"        // invalid github (consecutive hyphens)","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GITHUB_CONSECUTIVE_HYPHEN_DESC,","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"bryans17"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"        // invalid github (starting with hyphens)","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GITHUB_STARTING_HYPHEN_DESC,","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"bryans17"},"content":"        // invalid github (ending with hyphens)","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GITHUB_ENDING_HYPHEN_DESC,","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"        // invalid github (consecutive hyphens)","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GITHUB_LONGER_THAN_39_DESC,","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"        // invalid telegram","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TELEGRAM_DESC, Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"        // invalid student id (does not start with A)","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENTID_START_LETTER_DESC,","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"        // invalid student id (wrong length)","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENTID_WRONG_LENGTH_DESC,","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"channne"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"channne"},"content":"        // invalid student id (ends with number)","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENTID_END_NUMBER_DESC,","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"channne"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"channne"},"content":"        // invalid student id (contains middle letter)","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENTID_MIDDLE_LETTER,","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"channne"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"channne"},"content":"        // invalid email followed by valid github","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC + GITHUB_DESC_AMY, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"channne"},"content":"        // valid email followed by invalid email. The test case for invalid email followed by valid email","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + EMAIL_DESC_BOB + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_YEAR2 + TAG_DESC_INTLSTUDENT + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-10"},{"lineNumber":136,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_YEAR2 + TAG_EMPTY + TAG_DESC_INTLSTUDENT, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-10"},{"lineNumber":137,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_YEAR2 + TAG_DESC_INTLSTUDENT, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_GITHUB_AMY","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"channne"},"content":"                + VALID_TELEGRAM_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"channne"},"content":"        Index targetIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"channne"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_INTLSTUDENT","lastModifiedDate":"2022-04-10"},{"lineNumber":148,"author":{"gitId":"channne"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + TAG_DESC_YEAR2","lastModifiedDate":"2022-04-10"},{"lineNumber":149,"author":{"gitId":"channne"},"content":"                + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"channne"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"channne"},"content":"                .withEmail(VALID_EMAIL_AMY).withTags(VALID_TAG_INTLSTUDENT, VALID_TAG_YEAR2)","lastModifiedDate":"2022-04-10"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"                .withGithub(VALID_GITHUB_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"                .withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":162,"author":{"gitId":"channne"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"channne"},"content":"        String userInput \u003d targetIndex.getOneBased() + TELEGRAM_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"channne"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"channne"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"channne"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":183,"author":{"gitId":"channne"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"channne"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_YEAR2;","lastModifiedDate":"2022-04-10"},{"lineNumber":189,"author":{"gitId":"channne"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withTags(VALID_TAG_YEAR2).build();","lastModifiedDate":"2022-04-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":193,"author":{"gitId":"bryans17"},"content":"        // github","lastModifiedDate":"2022-03-04"},{"lineNumber":194,"author":{"gitId":"bryans17"},"content":"        userInput \u003d targetIndex.getOneBased() + GITHUB_DESC_AMY;","lastModifiedDate":"2022-03-04"},{"lineNumber":195,"author":{"gitId":"channne"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withGithub(VALID_GITHUB_AMY).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":199,"author":{"gitId":"channne"},"content":"        // telegram","lastModifiedDate":"2022-03-06"},{"lineNumber":200,"author":{"gitId":"channne"},"content":"        userInput \u003d targetIndex.getOneBased() + TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":201,"author":{"gitId":"channne"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withTelegram(VALID_TELEGRAM_AMY).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"channne"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":203,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":204,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":205,"author":{"gitId":"channne"},"content":"        // student id","lastModifiedDate":"2022-03-06"},{"lineNumber":206,"author":{"gitId":"channne"},"content":"        userInput \u003d targetIndex.getOneBased() + STUDENTID_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":207,"author":{"gitId":"channne"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withStudentId(VALID_STUDENTID_AMY).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":214,"author":{"gitId":"channne"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"channne"},"content":"        String userInput \u003d targetIndex.getOneBased() + TELEGRAM_DESC_AMY + GITHUB_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-06"},{"lineNumber":216,"author":{"gitId":"channne"},"content":"                + TAG_DESC_YEAR2 + TELEGRAM_DESC_AMY + GITHUB_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_YEAR2","lastModifiedDate":"2022-04-10"},{"lineNumber":217,"author":{"gitId":"channne"},"content":"                + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_INTLSTUDENT;","lastModifiedDate":"2022-04-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"channne"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"channne"},"content":"                .withEmail(VALID_EMAIL_BOB).withGithub(VALID_GITHUB_BOB)","lastModifiedDate":"2022-04-10"},{"lineNumber":221,"author":{"gitId":"channne"},"content":"                .withTags(VALID_TAG_YEAR2, VALID_TAG_INTLSTUDENT).build();","lastModifiedDate":"2022-04-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"channne"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":231,"author":{"gitId":"channne"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_EMAIL_DESC + EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":232,"author":{"gitId":"channne"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"channne"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_EMAIL_DESC + GITHUB_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":238,"author":{"gitId":"channne"},"content":"                + EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":239,"author":{"gitId":"channne"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":240,"author":{"gitId":"channne"},"content":"                .withGithub(VALID_GITHUB_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":247,"author":{"gitId":"channne"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"channne"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"channne":94,"-":140,"bryans17":20,"geetengtan":1}},{"path":"src/test/java/seedu/address/logic/parser/EditLabCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABMARK;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABSTATUS;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.EditLabCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabMark;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabStatus;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"public class EditLabCommandParserTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditLabCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"    private static final String VALID_INDEX \u003d \"1 \";","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"    private static final String VALID_LAB \u003d \"1 \";","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"    private static final String VALID_LABMARK \u003d \"10 \";","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"    private static final String LABSTATUS_GRADED \u003d \"g \";","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"    private static final String LABSTATUS_SUBMITTED \u003d \"s \";","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"    private static final String LABSTATUS_UNSUBMITTED \u003d \"u \";","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"    private static final String VALID_LAB_DESC \u003d PREFIX_LAB + VALID_LAB;","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"    private static final String VALID_LABMARK_DESC \u003d PREFIX_LABMARK + VALID_LABMARK;","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"    private static final String SUBMITTED_LABSTATUS_DESC \u003d PREFIX_LABSTATUS + LABSTATUS_SUBMITTED;","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"    private static final String VALID_GRADELAB_DESC \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"            PREFIX_LABSTATUS + LABSTATUS_GRADED + PREFIX_LABMARK + VALID_LABMARK;","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"    private EditLabCommandParser parser \u003d new EditLabCommandParser();","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        // no index specified","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_LAB_DESC + SUBMITTED_LABSTATUS_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_LAB_DESC + VALID_LABMARK_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_LAB_DESC + VALID_GRADELAB_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"        // no lab specified","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + SUBMITTED_LABSTATUS_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LABMARK_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_GRADELAB_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"        // no labStatus or labMark specified","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        // nothing specified","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"        // negative index","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"-5\" + VALID_LAB_DESC + SUBMITTED_LABSTATUS_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"        // zero index","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"0\" + VALID_LAB_DESC + SUBMITTED_LABSTATUS_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1 some random string\" + VALID_LAB_DESC + SUBMITTED_LABSTATUS_DESC,","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1 i/string\" + VALID_LAB_DESC + SUBMITTED_LABSTATUS_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"        // invalid labs","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + \"l/a \" + SUBMITTED_LABSTATUS_DESC, Lab.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + \"l/-1 \" + SUBMITTED_LABSTATUS_DESC, Lab.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"        // invalid statuses","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LAB_DESC + \"s/e\", LabStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LAB_DESC + \"s/1\", LabStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LAB_DESC + \"s/U\", LabStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"        // invalid marks","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LAB_DESC + \"m/e\", LabMark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LAB_DESC + \"m/0101\", LabMark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-08"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LAB_DESC + \"m/-1\", LabMark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"    public void parse_editLabStatus_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"        EditLabCommand expectedCommand \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"                new EditLabCommand(Index.fromOneBased(Integer.parseInt(VALID_INDEX.trim())),","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"                        Integer.parseInt(VALID_LAB.trim()), LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, VALID_INDEX + VALID_LAB_DESC + SUBMITTED_LABSTATUS_DESC, expectedCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"    public void parse_editLabMarks_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"        EditLabCommand expectedCommand \u003d new EditLabCommand(Index.fromOneBased(Integer.parseInt(VALID_INDEX.trim())),","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"                Integer.parseInt(VALID_LAB.trim()), LabStatus.GRADED, new LabMark(VALID_LABMARK.trim()));","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, VALID_INDEX + VALID_LAB_DESC + VALID_LABMARK_DESC, expectedCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"    public void parse_editLabMarksAndStatus_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"        EditLabCommand expectedCommand \u003d new EditLabCommand(Index.fromOneBased(Integer.parseInt(VALID_INDEX.trim())),","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"                Integer.parseInt(VALID_LAB.trim()), LabStatus.GRADED, new LabMark(VALID_LABMARK.trim()));","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, VALID_INDEX + VALID_LAB_DESC + VALID_GRADELAB_DESC, expectedCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"        // should still work even if order of labMark and labStatus is reversed","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, VALID_INDEX + VALID_LAB_DESC + VALID_LABMARK_DESC","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"                + PREFIX_LABSTATUS + LABSTATUS_GRADED, expectedCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"channne":118}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.StudentHasLabPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.util.LabTriplet;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"    private final FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"        assertParseFailure(parser, \"   \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"        Lab expectedLab1 \u003d new LabTriplet(\"1\", \"SUBMITTED\").getLab();","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"        Lab expectedLab2 \u003d new LabTriplet(\"2\", \"UNSUBMITTED\").getLab();","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"        Lab expectedLab3 \u003d new LabTriplet(\"3\", \"GRADED\", \"0\").getLab();","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"        FilterCommand expectedFilterCommand1 \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"                new FilterCommand(new StudentHasLabPredicate(expectedLab1));","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"        FilterCommand expectedFilterCommand2 \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"                new FilterCommand(new StudentHasLabPredicate(expectedLab2));","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"        FilterCommand expectedFilterCommand3 \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"                new FilterCommand(new StudentHasLabPredicate(expectedLab3));","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"        assertParseSuccess(parser, \" l/1 s/s\", expectedFilterCommand1);","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"        assertParseSuccess(parser, \" l/2 s/u\", expectedFilterCommand2);","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"        assertParseSuccess(parser, \" l/3 s/g\", expectedFilterCommand3);","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"    public void parse_missingField_throwsParseException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"        // missing LabStatus Prefix","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"        assertParseFailure(parser, \"l/1 \", expectedMessage);","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"        // missing Lab Prefix","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"        assertParseFailure(parser, \"s/1\", expectedMessage);","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"geetengtan":51,"bryans17":2}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"channne":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/GradeLabCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABMARK;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.GradeLabCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.LabMark;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"public class GradeLabCommandParserTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, GradeLabCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"    private static final String VALID_LABNUMBER \u003d \"1 \";","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"    private static final String VALID_LAB_DESC \u003d PREFIX_LAB + VALID_LABNUMBER;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"    private static final String VALID_INDEX \u003d \"1 \";","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"    private static final String VALID_LABMARK \u003d \"10 \";","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"    private static final String VALID_LABMARK_DESC \u003d PREFIX_LABMARK + VALID_LABMARK;","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"    private GradeLabCommandParser parser \u003d new GradeLabCommandParser();","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"        // nothing specified","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \" \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"        // no index specified","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_LAB_DESC + VALID_LABMARK_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        // no lab specified","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LABMARK_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"        // no marks specified","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LAB_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"        // invalid index","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"0 \" + VALID_LAB_DESC + VALID_LABMARK_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"        // invalid lab","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + \"l/a \" + VALID_LABMARK_DESC, Lab.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + \"l/-1 \" + VALID_LABMARK_DESC, Lab.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"        // invalid marks","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LAB_DESC + \"m/-1\", LabMark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LAB_DESC + \"m/0101\", LabMark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"        GradeLabCommand expectedCommand \u003d new GradeLabCommand(","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"                Index.fromOneBased(Integer.parseInt(VALID_INDEX.trim())), Integer.parseInt(VALID_LABNUMBER.trim()),","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"                new LabMark(VALID_LABMARK.trim()));","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, VALID_INDEX + VALID_LAB_DESC + VALID_LABMARK_DESC, expectedCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"channne":66}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"    private static final String INVALID_TAG \u003d \"#year2\";","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"    private static final String VALID_TAG_1 \u003d \"year2\";","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"    private static final String VALID_TAG_2 \u003d \"internationalStudent\";","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"channne":8,"-":136}},{"path":"src/test/java/seedu/address/logic/parser/RemoveLabCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.commands.RemoveLabCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"public class RemoveLabCommandParserTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveLabCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    private RemoveLabCommandParser parser \u003d new RemoveLabCommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"        // no lab specified","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \" \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"        // invalid labs","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \" l/a \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \" l/-1 \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        RemoveLabCommand expectedCommand \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"                new RemoveLabCommand(new Lab(\"1\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        assertParseSuccess(parser, \" l/1\", expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"bryans17":38}},{"path":"src/test/java/seedu/address/logic/parser/SubmitLabCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.SubmitLabCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"public class SubmitLabCommandParserTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, SubmitLabCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"    private static final String VALID_LABNUMBER \u003d \"1 \";","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"    private static final String VALID_LAB_DESC \u003d PREFIX_LAB + VALID_LABNUMBER;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"    private static final String VALID_INDEX \u003d \"1 \";","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"    private SubmitLabCommandParser parser \u003d new SubmitLabCommandParser();","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"        // nothing specified","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \" \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"        // no index specified","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_LAB_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"        // no lab specified","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        // invalid index","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"0 \" + VALID_LAB_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        // invalid lab","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + \"l/a \", Lab.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + \"l/-1 \", Lab.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"        // invalid index and lab","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"-1 \" + \"l/a \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"        SubmitLabCommand expectedCommand \u003d new SubmitLabCommand(","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"                Index.fromOneBased(Integer.parseInt(VALID_INDEX.trim())), Integer.parseInt(VALID_LABNUMBER.trim()));","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, VALID_INDEX + VALID_LAB_DESC, expectedCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"channne":56}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"        assertParseSuccess(parser, \"1\", new ViewCommand(INDEX_FIRST_STUDENT));","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"geetengtan":25}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_INTLSTUDENT;","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.DuplicateLabException;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.LabNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        assertEquals(Collections.emptyList(), addressBook.getStudentList());","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"    public void resetData_withDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withGithub(VALID_GITHUB_BOB).withTags(VALID_TAG_INTLSTUDENT)","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newStudents);","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasStudent(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"    public void hasStudent_studentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"        assertFalse(addressBook.hasStudent(ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"    public void hasStudent_studentInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"        assertTrue(addressBook.hasStudent(ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"    public void hasStudent_studentWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withGithub(VALID_GITHUB_BOB).withTags(VALID_TAG_INTLSTUDENT)","lastModifiedDate":"2022-04-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"        assertTrue(addressBook.hasStudent(editedAlice));","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"    public void getStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getStudentList().remove(0));","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"    public void hasLab_nullLab_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasLab(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"bryans17"},"content":"    public void hasLab_labNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"bryans17"},"content":"        assertFalse(addressBook.hasLab(new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"    public void hasLab_labInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"        addressBook.addLab(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"        assertTrue(addressBook.hasLab(new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"    public void removeLab_nullLab_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.removeLab(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"bryans17"},"content":"    public void removeLab_labNotInAddressBook_throwsLabNotFoundException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"bryans17"},"content":"        assertThrows(LabNotFoundException.class, () -\u003e addressBook.removeLab(new Lab(\"12\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"    public void removeLab_labInAddressBook_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"        addressBook.addLab(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"        assertDoesNotThrow(() -\u003e addressBook.removeLab(new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"        assertFalse(addressBook.hasLab(new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"    public void addLab_nullLab_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.addLab(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"    public void addLab_duplicateLab_throwsDuplicateLabException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"bryans17"},"content":"        addressBook.addLab(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"bryans17"},"content":"        assertThrows(DuplicateLabException.class, () -\u003e addressBook.addLab(new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":136,"author":{"gitId":"channne"},"content":"     * A stub ReadOnlyAddressBook whose students list can violate interface constraints.","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"channne"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"bryans17"},"content":"        private final MasterLabList masterLabList \u003d new MasterLabList();","lastModifiedDate":"2022-03-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":142,"author":{"gitId":"channne"},"content":"        AddressBookStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"channne"},"content":"            this.students.setAll(students);","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":147,"author":{"gitId":"channne"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"channne"},"content":"            return students;","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"bryans17"},"content":"        @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":152,"author":{"gitId":"bryans17"},"content":"        public MasterLabList getMasterLabList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":153,"author":{"gitId":"bryans17"},"content":"            return masterLabList;","lastModifiedDate":"2022-03-08"},{"lineNumber":154,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":155,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":156,"author":{"gitId":"bryans17"},"content":"        @Override","lastModifiedDate":"2022-04-07"},{"lineNumber":157,"author":{"gitId":"bryans17"},"content":"        public boolean isStudentListEmpty() {","lastModifiedDate":"2022-04-07"},{"lineNumber":158,"author":{"gitId":"bryans17"},"content":"            return students.isEmpty();","lastModifiedDate":"2022-04-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-04-09"},{"lineNumber":162,"author":{"gitId":"bryans17"},"content":"        public ArrayList\u003cLab\u003e getLabsAsArrayList() {","lastModifiedDate":"2022-04-09"},{"lineNumber":163,"author":{"gitId":"bryans17"},"content":"            return masterLabList.getMasterList();","lastModifiedDate":"2022-04-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"channne":32,"-":76,"bryans17":57,"geetengtan":2}},{"path":"src/test/java/seedu/address/model/MasterLabListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.LabNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"class MasterLabListTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    public void removeLab_nullLab_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"        MasterLabList ml \u003d new MasterLabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"        ml.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e ml.removeLab(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"    public void removeLab_labInList_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"        MasterLabList ml \u003d new MasterLabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"        ml.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"        assertEquals(Index.fromZeroBased(0), ml.removeLab(new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    public void removeLab_labNotInList_throwsLabNotFoundException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        MasterLabList ml \u003d new MasterLabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        ml.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        assertThrows(LabNotFoundException.class, () -\u003e ml.removeLab(new Lab(\"2\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"    public void removeLab_labEmpty_throwsLabNotFoundException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        MasterLabList ml \u003d new MasterLabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"        assertThrows(LabNotFoundException.class, () -\u003e ml.removeLab(new Lab(\"2\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"    public void getMasterLabList_assertIsCopy_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"        MasterLabList ml \u003d new MasterLabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"        ml.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"        ml.getMasterList().add(new Lab(\"2\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"        MasterLabList expectedMasterLabList \u003d new MasterLabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"        expectedMasterLabList.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"        assertEquals(expectedMasterLabList, ml);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"    public void equals_sameList_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"        MasterLabList labs1 \u003d new MasterLabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"        MasterLabList labs2 \u003d new MasterLabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"        List\u003cLab\u003e labList \u003d Arrays.asList(new Lab(\"1\"), new Lab(\"2\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"        labs1.setLabs(labList);","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"        labs2.setLabs(labList);","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"        assertTrue(labs1.equals(labs2));","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"    public void equals_differentLists_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"        MasterLabList labs1 \u003d new MasterLabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"        MasterLabList labs2 \u003d new MasterLabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"        List\u003cLab\u003e labList \u003d Arrays.asList(new Lab(\"1\"), new Lab(\"2\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"        labs1.setLabs(labList);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"        labs2.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"        assertFalse(labs1.equals(labs2));","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"bryans17":75,"geetengtan":1}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.LabStatus;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.StudentHasLabPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.DuplicateLabException;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.LabNotFoundException;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"    public void hasStudent_studentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"        assertFalse(modelManager.hasStudent(ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"    public void hasStudent_studentInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"        assertTrue(modelManager.hasStudent(ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withStudent(ALICE).withStudent(BENSON).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":127,"author":{"gitId":"channne"},"content":"        modelManager.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"bryans17"},"content":"    public void hasLab_nullLab_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasLab(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"bryans17"},"content":"    public void hasLab_labNotInModel_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"bryans17"},"content":"        assertFalse(modelManager.hasLab(new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"bryans17"},"content":"    public void hasLab_labInModel_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"bryans17"},"content":"        modelManager.addLab(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"bryans17"},"content":"        assertTrue(modelManager.hasLab(new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"bryans17"},"content":"    public void removeLab_nullLab_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.removeLab(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"bryans17"},"content":"    public void removeLab_labNotInModel_throwsLabNotFoundException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"bryans17"},"content":"        assertThrows(LabNotFoundException.class, () -\u003e modelManager.removeLab(new Lab(\"12\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"bryans17"},"content":"    public void removeLab_labInModel_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"bryans17"},"content":"        modelManager.addLab(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"bryans17"},"content":"        assertDoesNotThrow(() -\u003e modelManager.removeLab(new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"bryans17"},"content":"        assertFalse(modelManager.hasLab(new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"bryans17"},"content":"    public void addLab_nullLab_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addLab(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"bryans17"},"content":"    public void addLab_duplicateLab_throwsDuplicateLabException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"bryans17"},"content":"        modelManager.addLab(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"bryans17"},"content":"        assertThrows(DuplicateLabException.class, () -\u003e modelManager.addLab(new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":183,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":184,"author":{"gitId":"geetengtan"},"content":"    public void addOnFilteredStudentList_nullPredicate_throwsNullPointerException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":185,"author":{"gitId":"geetengtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addOnFilteredStudentList(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"geetengtan"},"content":"    public void addOnFilteredStudentList_validPredicate_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"geetengtan"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withStudent(ALICE).withStudent(BENSON).build();","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"geetengtan"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"geetengtan"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"geetengtan"},"content":"        // current predicate on filtered student list \u003d\u003d null","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"geetengtan"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"geetengtan"},"content":"                modelManager.addOnFilteredStudentList(","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"geetengtan"},"content":"                        new StudentHasLabPredicate((new Lab(\"1\")).of(LabStatus.UNSUBMITTED))","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"geetengtan"},"content":"                )","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"geetengtan"},"content":"        );","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"geetengtan"},"content":"        // add on to the current predicate","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"geetengtan"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"geetengtan"},"content":"                modelManager.addOnFilteredStudentList(","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"geetengtan"},"content":"                        new StudentHasLabPredicate((new Lab(\"2\")).of(LabStatus.UNSUBMITTED))","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"geetengtan"},"content":"                )","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"geetengtan"},"content":"        );","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"channne":16,"-":116,"bryans17":46,"geetengtan":31}},{"path":"src/test/java/seedu/address/model/lab/LabListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.DuplicateLabException;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.LabNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"class LabListTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    private final LabList labs \u003d new LabList();","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    public void contains_nullLab_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e labs.contains(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"    public void contains_labInList_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        assertTrue(labs.contains(new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    public void contains_labNotInList_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        assertFalse(labs.contains(new Lab(\"2\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"    public void contains_listEmpty_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        assertTrue(labs.isEmpty());","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"        assertFalse(labs.contains(new Lab(\"2\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"    public void getLab_labInList_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"        Lab l \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"        labs.add(l);","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"        assertEquals(l, labs.getLab(l));","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"        assertEquals(l, labs.getLab(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"    public void getLab_labNotInList_throwsLabNotFoundException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"        assertThrows(LabNotFoundException.class, () -\u003e labs.getLab(new Lab(\"2\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"        assertThrows(LabNotFoundException.class, () -\u003e labs.getLab(2));","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"    public void getLab_listEmpty_throwsLabNotFoundException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"        assertTrue(labs.isEmpty());","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"        assertThrows(LabNotFoundException.class, () -\u003e labs.getLab(new Lab(\"2\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"        assertThrows(LabNotFoundException.class, () -\u003e labs.getLab(2));","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"    public void add_nullLab_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e labs.add(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"    public void add_validLab_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"        assertDoesNotThrow(() -\u003e labs.add(new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"bryans17"},"content":"    public void add_duplicateLab_throwsDuplicateLabException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"        assertThrows(DuplicateLabException.class, () -\u003e labs.add(new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"bryans17"},"content":"    public void setLab_nullTargetLab_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e labs.setLab(null, new Lab(\"2\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"    public void setLab_nullEditedLab_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e labs.setLab(new Lab(\"1\"), null));","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"bryans17"},"content":"    public void setLab_targetLabNotInList_throwsLabNotFoundException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"        labs.add(new Lab(\"1\").of(LabStatus.SUBMITTED));","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"bryans17"},"content":"        assertThrows(LabNotFoundException.class, () -\u003e labs.setLab(new Lab(\"1\"), new Lab(\"2\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"    public void setLab_targetLabSameAsEdited_throwsDuplicateLabException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"        assertThrows(DuplicateLabException.class, () -\u003e labs.setLab(new Lab(\"1\"), new Lab(\"1\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"    public void setLab_targetLabInList_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"bryans17"},"content":"        labs.setLab(new Lab(\"1\"), new Lab(\"2\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"bryans17"},"content":"        assertEquals(new Lab(\"2\"), labs.getLab(2));","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"bryans17"},"content":"        assertThrows(LabNotFoundException.class, () -\u003e labs.getLab(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"    public void remove_nullLab_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e labs.remove((Lab) null));","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e labs.remove((Index) null));","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"    public void remove_indexOutOfBounds_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"bryans17"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e labs.remove(Index.fromOneBased(1)));","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"    public void remove_labDoesNotExist_throwsLabNotFoundException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"bryans17"},"content":"        assertThrows(LabNotFoundException.class, () -\u003e labs.remove(new Lab(\"2\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"bryans17"},"content":"    public void remove_existingLab_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"bryans17"},"content":"        labs.remove(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"bryans17"},"content":"        LabList expectedLabList \u003d new LabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"bryans17"},"content":"        assertEquals(expectedLabList, labs);","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"bryans17"},"content":"        labs.remove(Index.fromOneBased(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"bryans17"},"content":"        assertEquals(expectedLabList, labs);","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"bryans17"},"content":"    public void setLabs_nullLabList_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e labs.setLabs((LabList) null));","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"bryans17"},"content":"    public void setLabs_labList_replacesOwnListWithProvidedLabList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"bryans17"},"content":"        LabList expectedLabList \u003d new LabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"        expectedLabList.add(new Lab(\"2\").of(LabStatus.SUBMITTED));","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"bryans17"},"content":"        labs.setLabs(expectedLabList);","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"bryans17"},"content":"        assertEquals(expectedLabList, labs);","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"bryans17"},"content":"    public void setLabs_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e labs.setLabs((List\u003cLab\u003e) null));","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"bryans17"},"content":"    public void setLabs_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"bryans17"},"content":"        List\u003cLab\u003e labList \u003d Arrays.asList(new Lab(\"1\"), new Lab(\"2\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"bryans17"},"content":"        labs.setLabs(labList);","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"bryans17"},"content":"        LabList expectedLabList \u003d new LabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"bryans17"},"content":"        expectedLabList.add(new Lab(\"2\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"bryans17"},"content":"        expectedLabList.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"bryans17"},"content":"        assertEquals(expectedLabList, labs);","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"bryans17"},"content":"    public void setLabs_listWithDuplicateLabs_throwsDuplicateLabException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"bryans17"},"content":"        List\u003cLab\u003e listWithDuplicateLabs \u003d Arrays.asList(new Lab(\"1\"), new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"bryans17"},"content":"        assertThrows(DuplicateLabException.class, () -\u003e labs.setLabs(listWithDuplicateLabs));","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"bryans17"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"bryans17"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e labs.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"bryans17"},"content":"    public void equals_sameList_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"bryans17"},"content":"        LabList labs1 \u003d new LabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"bryans17"},"content":"        LabList labs2 \u003d new LabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"bryans17"},"content":"        List\u003cLab\u003e labList \u003d Arrays.asList(new Lab(\"1\"), new Lab(\"2\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"bryans17"},"content":"        labs1.setLabs(labList);","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"bryans17"},"content":"        labs2.setLabs(labList);","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"bryans17"},"content":"        assertEquals(labs1, labs2);","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"bryans17"},"content":"    public void equals_differentLists_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"bryans17"},"content":"        LabList labs1 \u003d new LabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"bryans17"},"content":"        LabList labs2 \u003d new LabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"bryans17"},"content":"        List\u003cLab\u003e labList \u003d Arrays.asList(new Lab(\"1\"), new Lab(\"2\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"bryans17"},"content":"        labs1.setLabs(labList);","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"bryans17"},"content":"        labs2.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"bryans17"},"content":"        assertNotEquals(labs1, labs2);","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":206,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":207,"author":{"gitId":"bryans17"},"content":"    public void isEmpty_emptyList_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":208,"author":{"gitId":"bryans17"},"content":"        assertTrue(labs.isEmpty());","lastModifiedDate":"2022-03-26"},{"lineNumber":209,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":210,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":211,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":212,"author":{"gitId":"bryans17"},"content":"    public void isEmpty_nonEmptyList_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":213,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":214,"author":{"gitId":"bryans17"},"content":"        assertFalse(labs.isEmpty());","lastModifiedDate":"2022-03-26"},{"lineNumber":215,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":216,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":217,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":218,"author":{"gitId":"bryans17"},"content":"    public void alignLabs_nullLabList_throwNullPointerException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":219,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e labs.alignLabs(null));","lastModifiedDate":"2022-03-29"},{"lineNumber":220,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":221,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":222,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":223,"author":{"gitId":"bryans17"},"content":"    public void alignLabs_differentLabList_success() {","lastModifiedDate":"2022-03-29"},{"lineNumber":224,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"1\").of(new LabMark(\"10\")));","lastModifiedDate":"2022-03-29"},{"lineNumber":225,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"2\").of(\"SUBMITTED\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":226,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"3\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":227,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"5\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":228,"author":{"gitId":"bryans17"},"content":"        labs.add(new Lab(\"19\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":229,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":230,"author":{"gitId":"bryans17"},"content":"        LabList toAlignLabList \u003d new LabList();","lastModifiedDate":"2022-03-29"},{"lineNumber":231,"author":{"gitId":"bryans17"},"content":"        toAlignLabList.add(new Lab(\"1\").of(\"SUBMITTED\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":232,"author":{"gitId":"bryans17"},"content":"        toAlignLabList.add(new Lab(\"2\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":233,"author":{"gitId":"bryans17"},"content":"        toAlignLabList.add(new Lab(\"4\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":234,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":235,"author":{"gitId":"bryans17"},"content":"        LabList expectedLabList \u003d new LabList();","lastModifiedDate":"2022-03-29"},{"lineNumber":236,"author":{"gitId":"bryans17"},"content":"        expectedLabList.add(new Lab(\"1\").of(new LabMark(\"10\")));","lastModifiedDate":"2022-03-29"},{"lineNumber":237,"author":{"gitId":"bryans17"},"content":"        expectedLabList.add(new Lab(\"2\").of(\"SUBMITTED\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":238,"author":{"gitId":"bryans17"},"content":"        expectedLabList.add(new Lab(\"4\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":239,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":240,"author":{"gitId":"bryans17"},"content":"        labs.alignLabs(toAlignLabList);","lastModifiedDate":"2022-03-29"},{"lineNumber":241,"author":{"gitId":"bryans17"},"content":"        assertEquals(expectedLabList, labs);","lastModifiedDate":"2022-03-29"},{"lineNumber":242,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":243,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"channne":2,"bryans17":239,"geetengtan":2}},{"path":"src/test/java/seedu/address/model/lab/LabMarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.lab;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.model.lab.LabMark.MARKS_DESCRIPTION;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.IllegalLabStateException;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"public class LabMarkTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LabMark(null));","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"    public void constructor_invalidLabMark_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"        String invalidMark \u003d \"A\";","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new LabMark(invalidMark));","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"    public void isValidLabMark() {","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"        // null lab score","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"        assertThrows(NullPointerException.class, () -\u003e LabMark.isValidLabMark(null));","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"        // blank lab score","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"        assertFalse(LabMark.isValidLabMark(\"\")); // empty string","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"        assertFalse(LabMark.isValidLabMark(\" \")); // spaces only","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        // invalid lab","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        assertFalse(LabMark.isValidLabMark(\"1a\")); // invalid lab mark","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        assertFalse(LabMark.isValidLabMark(\"-1\")); // negative integer","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        assertFalse(LabMark.isValidLabMark(\"101\")); // integer greater than 100","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"        assertFalse(LabMark.isValidLabMark(\"0101\")); // leading 0s ignored","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        assertFalse(LabMark.isValidLabMark(\"123456789\")); // integer greater than 100","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        // valid lab","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"        assertTrue(LabMark.isValidLabMark(\"0\")); // smallest possible lab mark","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"        assertTrue(LabMark.isValidLabMark(\"2\")); // valid integer","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"        assertTrue(LabMark.isValidLabMark(\"01\")); // leading 0s ignored","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"        assertTrue(LabMark.isValidLabMark(\"100\")); // largest possible lab mark","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"    public void toString_noMarkInitialized_returnsUnknown() {","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"        LabMark marks \u003d new LabMark();","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"        assertEquals(marks.toString(), LabMark.MARKS_UNKNOWN);","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"    public void toString_markInitialized_returnsMark() {","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"        LabMark marks \u003d new LabMark(\"10\");","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        assertEquals(marks.toString(), String.valueOf(10));","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"    public void equals_sameMark_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        LabMark marks1 \u003d new LabMark(\"1\");","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"        LabMark marks2 \u003d new LabMark(\"1\");","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"        assertEquals(marks1, marks2);","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"    public void equals_differentMark_failure() {","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"        LabMark marks1 \u003d new LabMark(\"1\");","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"        LabMark marks2 \u003d new LabMark(\"2\");","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"        assertNotEquals(marks1, marks2);","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"    public void equals_oneMarkUninitialized_failure() {","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"        LabMark marks1 \u003d new LabMark(\"1\");","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"        LabMark marks2 \u003d new LabMark();","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"        assertNotEquals(marks1, marks2);","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"geetengtan"},"content":"    public void describe_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"geetengtan"},"content":"        LabMark marks1 \u003d new LabMark(\"1\");","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"geetengtan"},"content":"        assertEquals(String.format(MARKS_DESCRIPTION, \"1\"), marks1.describe());","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"geetengtan"},"content":"    public void describe_illegalLabMark_throwsIllegalLabStateException() {","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"geetengtan"},"content":"        LabMark illegalLabMark \u003d new LabMark();","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"geetengtan"},"content":"        assertThrows(IllegalLabStateException.class, illegalLabMark::describe);","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"channne":79,"geetengtan":15}},{"path":"src/test/java/seedu/address/model/lab/LabStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.lab;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.model.lab.LabStatus.SUBMITTED_DESCRIPTION;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.model.lab.LabStatus.UNSUBMITTED_DESCRIPTION;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.IllegalLabStateException;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"class LabStatusTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    public void toLabStatus_nullInput_throwsNullPointerException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e LabStatus.toLabStatus(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"    public void toLabStatus_validInput_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"        assertEquals(LabStatus.UNSUBMITTED, LabStatus.toLabStatus(\"UNSUBMITTED\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"        assertEquals(LabStatus.SUBMITTED, LabStatus.toLabStatus(\"SUBMITTED\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"        assertEquals(LabStatus.GRADED, LabStatus.toLabStatus(\"GRADED\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    public void toLabStatus_invalidInput_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e LabStatus.toLabStatus(\"test\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"    public void describe_validInput_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"        assertEquals(LabStatus.UNSUBMITTED.describe(), UNSUBMITTED_DESCRIPTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"        assertEquals(LabStatus.SUBMITTED.describe(), SUBMITTED_DESCRIPTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"        assertThrows(IllegalLabStateException.class, LabStatus.GRADED::describe);","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"bryans17":27,"geetengtan":11}},{"path":"src/test/java/seedu/address/model/lab/LabTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.DuplicateLabException;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.InvalidLabStatusException;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"public class LabTest {","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Lab(null));","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    public void constructor_nonNumericCharacters_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"        String invalidLabNumber \u003d \"a\";","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Lab(invalidLabNumber));","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"    public void isValidLab() {","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"        // null lab","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e Lab.isValidLab(null));","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        // blank lab","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        assertFalse(Lab.isValidLab(\"\")); // empty string","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        assertFalse(Lab.isValidLab(\" \")); // spaces only","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        // invalid lab","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        assertFalse(Lab.isValidLab(\"1a\")); // invalid lab number, includes characters","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        assertFalse(Lab.isValidLab(\"123456789\")); // larger than 20","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        assertFalse(Lab.isValidLab(\"21\")); // larger than 20","lastModifiedDate":"2022-04-05"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        assertFalse(Lab.isValidLab(\"2147483648\")); // larger than max int value","lastModifiedDate":"2022-04-05"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        assertFalse(Lab.isValidLab(\"-1\")); // includes \u0027-\u0027, which is not allowed","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        // valid lab","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"        assertTrue(Lab.isValidLab(\"1\")); // valid integer","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"        assertTrue(Lab.isValidLab(\"2\")); // valid integer","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        assertTrue(Lab.isValidLab(\"001\")); // valid lab number","lastModifiedDate":"2022-04-05"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"        assertTrue(Lab.isValidLab(\"00\")); // valid lab number","lastModifiedDate":"2022-04-05"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"    public void editLabStatus_sameStatusUnsubmitted_throwDuplicateLabException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"        Lab stub \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"        assertThrows(DuplicateLabException.class, () -\u003e stub.editLabStatus(LabStatus.UNSUBMITTED));","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    public void editLabStatus_sameStatusSubmitted_throwDuplicateLabException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"        Lab stub \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"        stub \u003d stub.editLabStatus(LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"        Lab finalStub \u003d stub;","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"        assertThrows(DuplicateLabException.class, () -\u003e finalStub.editLabStatus(LabStatus.SUBMITTED));","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"    public void editLabStatus_statusGraded_throwInvalidLabStatusException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"        Lab stub \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"        assertThrows(InvalidLabStatusException.class, () -\u003e stub.editLabStatus(LabStatus.GRADED));","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"    public void editLabStatus_changeStatusFromUnsubmittedToSubmitted_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"        Lab stub \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"        stub \u003d stub.editLabStatus(LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"        assertEquals(new Lab(\"1\").of(LabStatus.SUBMITTED.name()), stub);","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"        assertNotEquals(new Lab(\"1\"), stub);","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"    public void editLabStatus_changeStatusFromGradedToSubmitted_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"        Lab stub \u003d new Lab(\"1\").of(new LabMark(\"10\")); // graded Lab","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        stub \u003d stub.editLabStatus(LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"        assertEquals(new Lab(\"1\").of(LabStatus.SUBMITTED.name()), stub);","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"        assertNotEquals(new Lab(\"1\").of(new LabMark(\"10\")), stub);","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"    public void editLabMark_sameMarksProvided_throwsDuplicateLabException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"        Lab stub \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"        Lab gradedStub \u003d stub.of(new LabMark(\"10\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"        assertThrows(DuplicateLabException.class, () -\u003e gradedStub.editLabMark(new LabMark(\"10\")));","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"    public void editLabMark_differentMarksProvided_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"        Lab stub \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"        Lab gradedStub \u003d stub.of(new LabMark(\"10\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"        stub \u003d gradedStub.editLabMark(new LabMark(\"20\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"        assertEquals(new Lab(\"1\").of(new LabMark(\"20\")), stub);","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"        assertNotEquals(gradedStub, stub);","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"    public void of_statusSubmitted_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"        Lab stub \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"        Lab submittedStub \u003d stub.of(LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"        assertNotEquals(stub, submittedStub);","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"        assertEquals(submittedStub, new Lab(\"1\").of(\"SUBMITTED\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"    public void of_statusGraded_throwsInvalidLabStatusException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"        Lab stub \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"        assertThrows(InvalidLabStatusException.class, () -\u003e stub.of(LabStatus.GRADED));","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":119,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"    public void isSameLab_sameLabNumberAndStatus_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"bryans17"},"content":"        Lab stub \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"        Lab stub2 \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"        assertTrue(stub.isSameLab(stub2));","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"bryans17"},"content":"    public void isSameLab_sameLabNumberDifferentStatus_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"bryans17"},"content":"        Lab stub \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"        Lab stub2 \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"        stub2.editLabStatus(LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"bryans17"},"content":"        assertTrue(stub.isSameLab(stub2));","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"bryans17"},"content":"    public void isSameLab_differentLabNumber_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"bryans17"},"content":"        Lab stub \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"bryans17"},"content":"        Lab stub2 \u003d new Lab(\"2\");","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"bryans17"},"content":"        assertFalse(stub.isSameLab(stub2));","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"geetengtan"},"content":"    public void hasSameLabStatus_sameLabNumberSameLabStatus_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"geetengtan"},"content":"        Lab stub1 \u003d new Lab(\"1\").of(LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"geetengtan"},"content":"        Lab stub2 \u003d new Lab(\"1\").of(LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"geetengtan"},"content":"        assertTrue(stub1.hasSameLabStatus(stub2));","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"geetengtan"},"content":"    public void hasSameLabStatus_differentLabNumberSameLabStatus_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"geetengtan"},"content":"        Lab stub1 \u003d new Lab(\"1\").of(LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"geetengtan"},"content":"        Lab stub2 \u003d new Lab(\"2\").of(LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"geetengtan"},"content":"        assertTrue(stub1.hasSameLabStatus(stub2));","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"geetengtan"},"content":"    public void hasSameLabStatus_sameLabNumberDifferentLabStatus_failure() {","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"geetengtan"},"content":"        Lab stub1 \u003d new Lab(\"1\").of(LabStatus.UNSUBMITTED);","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"geetengtan"},"content":"        Lab stub2 \u003d new Lab(\"1\").of(LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"geetengtan"},"content":"        assertFalse(stub1.hasSameLabStatus(stub2));","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"geetengtan"},"content":"    public void hasSameLabStatus_differentLabNumberDifferentLabStatus_failure() {","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"geetengtan"},"content":"        Lab stub1 \u003d new Lab(\"1\").of(LabStatus.UNSUBMITTED);","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"geetengtan"},"content":"        Lab stub2 \u003d new Lab(\"2\").of(LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"geetengtan"},"content":"        assertFalse(stub1.hasSameLabStatus(stub2));","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"geetengtan"},"content":"    public void hasSameLabStatus_differentLabNumberBothGradedWithDifferentLabMark_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"geetengtan"},"content":"        Lab stub1 \u003d new Lab(\"1\").of(new LabMark(\"20\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"geetengtan"},"content":"        Lab stub2 \u003d new Lab(\"2\").of(new LabMark(\"30\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"geetengtan"},"content":"        assertTrue(stub1.hasSameLabStatus(stub2));","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"geetengtan"},"content":"    public void hasSameLabStatus_nullInput_throwsNullPointerException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"geetengtan"},"content":"        Lab stub \u003d new Lab(\"1\").of(LabStatus.UNSUBMITTED);","lastModifiedDate":"2022-03-28"},{"lineNumber":180,"author":{"gitId":"geetengtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e stub.hasSameLabStatus(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":181,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":183,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"channne"},"content":"    public void equals_sameLab_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"channne"},"content":"        Lab lab1 \u003d (new Lab(\"1\")).of(\"SUBMITTED\");","lastModifiedDate":"2022-03-16"},{"lineNumber":186,"author":{"gitId":"channne"},"content":"        Lab lab2 \u003d (new Lab(\"1\")).of(\"SUBMITTED\");","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"channne"},"content":"        assertEquals(lab1, lab2);","lastModifiedDate":"2022-03-26"},{"lineNumber":188,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"bryans17"},"content":"    public void equals_differentLabNumber_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"bryans17"},"content":"        Lab lab1 \u003d (new Lab(\"1\")).of(\"SUBMITTED\");","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"bryans17"},"content":"        Lab lab2 \u003d (new Lab(\"2\")).of(\"SUBMITTED\");","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"channne"},"content":"        assertNotEquals(lab1, lab2);","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"bryans17"},"content":"    public void equals_differentLabStatus_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"bryans17"},"content":"        Lab lab1 \u003d (new Lab(\"1\")).of(\"SUBMITTED\");","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"channne"},"content":"        Lab lab2 \u003d (new Lab(\"1\")).of(\"UNSUBMITTED\");","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"channne"},"content":"        assertNotEquals(lab1, lab2);","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"channne"},"content":"    public void equals_differentLabMark_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"channne"},"content":"        Lab lab1 \u003d (new Lab(\"1\")).of(new LabMark(\"10\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"channne"},"content":"        Lab lab2 \u003d (new Lab(\"1\")).of(new LabMark(\"20\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"channne"},"content":"        assertNotEquals(lab1, lab2);","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"geetengtan"},"content":"    public void getDetails_gradedWithMarks() {","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"geetengtan"},"content":"        Lab lab1 \u003d new Lab(\"1\").of(\"GRADED\", \"12\");","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"geetengtan"},"content":"        assertEquals(lab1.getDetails(), \"Marks: \" + lab1.labMark);","lastModifiedDate":"2022-03-29"},{"lineNumber":215,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"geetengtan"},"content":"    public void getDetails_submitted() {","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"geetengtan"},"content":"        Lab lab \u003d new Lab(\"3\").of(\"SUBMITTED\");","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"geetengtan"},"content":"        assertEquals(lab.getDetails(), lab.labStatus.describe());","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":224,"author":{"gitId":"geetengtan"},"content":"    public void getDetails_unsubmitted() {","lastModifiedDate":"2022-03-28"},{"lineNumber":225,"author":{"gitId":"geetengtan"},"content":"        Lab lab \u003d new Lab(\"2\").of(\"UNSUBMITTED\");","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"geetengtan"},"content":"        assertEquals(lab.getDetails(), lab.labStatus.describe());","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":228,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":229,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"channne":63,"bryans17":105,"geetengtan":61}},{"path":"src/test/java/seedu/address/model/lab/StudentHasLabPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import seedu.address.model.util.LabTriplet;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"public class StudentHasLabPredicateTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"        Lab firstLab \u003d (new Lab(\"1\")).of(LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"        Lab secondLab \u003d (new Lab(\"2\")).of(LabStatus.UNSUBMITTED);","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate firstPredicate \u003d new StudentHasLabPredicate(firstLab);","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate secondPredicate \u003d new StudentHasLabPredicate(secondLab);","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate firstPredicateCopy \u003d new StudentHasLabPredicate(firstLab);","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"    public void test_studentHasSpecifiedLab_returnsTrue() {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate predicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"                new StudentHasLabPredicate((new Lab(\"1\").of(LabStatus.UNSUBMITTED)));","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"        assertTrue(predicate.test(new StudentBuilder()","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"                .withLabs(new LabTriplet(\"1\", \"UNSUBMITTED\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"                        new LabTriplet(\"2\", \"SUBMITTED\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"                        new LabTriplet(\"3\", \"SUBMITTED\")).build()));","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"    public void test_studentDoesNotHaveSpecifiedLab_returnsFalse() {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"        // Wrong LabStatus","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate predicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"                new StudentHasLabPredicate((new Lab(\"3\").of(LabStatus.SUBMITTED)));","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"        assertFalse(predicate.test(new StudentBuilder()","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"                .withLabs(new LabTriplet(\"1\", \"UNSUBMITTED\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"                        new LabTriplet(\"2\", \"SUBMITTED\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"                        new LabTriplet(\"3\", \"GRADED\", \"10\")).build()));","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"geetengtan"},"content":"        // Wrong LabNumber","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"        predicate \u003d new StudentHasLabPredicate((new Lab(\"4\").of(LabStatus.UNSUBMITTED)));","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"        assertFalse(predicate.test(new StudentBuilder()","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"                .withLabs(new LabTriplet(\"1\", \"UNSUBMITTED\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"                        new LabTriplet(\"2\", \"SUBMITTED\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"                        new LabTriplet(\"3\", \"GRADED\", \"10\")).build()));","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"channne":16,"bryans17":5,"geetengtan":45}},{"path":"src/test/java/seedu/address/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"channne":1,"-":67}},{"path":"src/test/java/seedu/address/model/student/GithubUsernameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"public class GithubUsernameTest {","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GithubUsername(null));","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"        String invalidGithub \u003d \"\";","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GithubUsername(invalidGithub));","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    public void isValidGithubUsername() {","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"        // null name","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e GithubUsername.isValidGithubUsername(null));","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"        // invalid name","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"        assertFalse(GithubUsername.isValidGithubUsername(\"\")); // empty string","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"        assertFalse(GithubUsername.isValidGithubUsername(\" \")); // spaces only","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"        assertFalse(GithubUsername.isValidGithubUsername(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"        assertFalse(GithubUsername.isValidGithubUsername(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        assertFalse(GithubUsername.isValidGithubUsername(\"-peter\")); //starts with a hyphen","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        assertFalse(GithubUsername.isValidGithubUsername(\"peter-\")); //ends with a hyphen","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        assertFalse(GithubUsername.isValidGithubUsername(\"pe--ter\")); //contains consecutive hyphens","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        // valid name","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        assertTrue(GithubUsername.isValidGithubUsername(\"peterjack\")); // alphabets only","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        assertTrue(GithubUsername.isValidGithubUsername(\"12345\")); // numbers only","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        assertTrue(GithubUsername.isValidGithubUsername(\"peterthe2nd\")); // alphanumeric characters","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        assertTrue(GithubUsername.isValidGithubUsername(\"CapitalTan\")); // with capital letters","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        assertTrue(GithubUsername.isValidGithubUsername(\"DavidRogerJacksonRayJr2nd\")); // long names","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"channne":1,"bryans17":42}},{"path":"src/test/java/seedu/address/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"        // Keywords match telegram, email and github, but does not match name","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"alice_P\", \"alice@email.com\", \"aliceP\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withTelegram(\"alice_P\")","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"                .withEmail(\"alice@email.com\").withGithub(\"aliceP\").build()));","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"channne":13,"-":62}},{"path":"src/test/java/seedu/address/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"channne":1,"-":39}},{"path":"src/test/java/seedu/address/model/student/StudentIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"public class StudentIdTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StudentId(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"    public void constructor_invalidStudentId_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"        String invalidId \u003d \"\";","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new StudentId(invalidId));","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"    public void isValidStudentId() {","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"        // null IDs","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"        assertThrows(NullPointerException.class, () -\u003e StudentId.isValidStudentId(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"        // invalid IDs","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"        assertFalse(StudentId.isValidStudentId(\"\")); // empty string","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"        assertFalse(StudentId.isValidStudentId(\" \")); // spaces only","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"        assertFalse(StudentId.isValidStudentId(\"A00000000B\")); // more than 7 numbers","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"        assertFalse(StudentId.isValidStudentId(\"A012345B\")); // less than 7 numbers","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"        assertFalse(StudentId.isValidStudentId(\"B0123456B\")); // does not start with A","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"        assertFalse(StudentId.isValidStudentId(\"00123456B\")); // does not start with A","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"        assertFalse(StudentId.isValidStudentId(\"A01234561\")); // does not end with alphabet","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        // valid IDs","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        assertTrue(StudentId.isValidStudentId(\"A0123456B\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        assertTrue(StudentId.isValidStudentId(\"A1111111C\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"channne":40}},{"path":"src/test/java/seedu/address/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_INTLSTUDENT;","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"public class StudentTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getTags().remove(0));","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"    public void isSameStudent() {","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"        assertTrue(ALICE.isSameStudent(ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"        assertFalse(ALICE.isSameStudent(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"        // same student id, all other attributes different -\u003e returns true","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"                .withGithub(VALID_GITHUB_BOB).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_INTLSTUDENT).build();","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        assertTrue(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"        // different student id, all other attributes same -\u003e returns false","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_INTLSTUDENT).build();","lastModifiedDate":"2022-04-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"        // different github -\u003e returns false","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withGithub(VALID_GITHUB_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"        // different telegram -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        // different student id -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"channne":33,"-":49,"bryans17":4}},{"path":"src/test/java/seedu/address/model/student/TelegramTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"public class TelegramTest {","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Telegram(null));","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"        String invalidHandle \u003d \"\";","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Telegram(invalidHandle));","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    public void isValidTelegram() {","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"        // null name","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e Telegram.isValidTelegram(null));","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"        // invalid name","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"        assertFalse(Telegram.isValidTelegram(\"\")); // empty string","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"        assertFalse(Telegram.isValidTelegram(\" \")); // spaces only","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"        assertFalse(Telegram.isValidTelegram(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"        assertFalse(Telegram.isValidTelegram(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        assertFalse(Telegram.isValidTelegram(\"pete\")); // not 5 characters long","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        // valid name","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"        assertTrue(Telegram.isValidTelegram(\"12345\")); // numbers only","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        assertTrue(Telegram.isValidTelegram(\"peterjack\")); // alphabets only","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        assertTrue(Telegram.isValidTelegram(\"peterthe2nd\")); // alphanumeric characters","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        assertTrue(Telegram.isValidTelegram(\"CapitalTan\")); // with capital letters","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        assertTrue(Telegram.isValidTelegram(\"CapitalTan_\")); // with underscores","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        assertTrue(Telegram.isValidTelegram(\"DavidRogerJacksonRayJr2nd\")); // long names","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"channne":1,"bryans17":41}},{"path":"src/test/java/seedu/address/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_INTLSTUDENT;","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"    public void contains_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"    public void contains_studentNotInList_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"        assertFalse(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"    public void contains_studentInList_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        assertTrue(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"    public void contains_studentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_INTLSTUDENT)","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"                .build();","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"    public void add_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"    public void add_duplicateStudent_throwsDuplicateStudentException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.add(ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"    public void setStudent_nullTargetStudent_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(null, ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"    public void setStudent_nullEditedStudent_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(ALICE, null));","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"    public void setStudent_targetStudentNotInList_throwsStudentNotFoundException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.setStudent(ALICE, ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"    public void setStudent_editedStudentIsSameStudent_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"        uniqueStudentList.setStudent(ALICE, ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"    public void setStudent_editedStudentHasSameIdentity_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_INTLSTUDENT)","lastModifiedDate":"2022-04-10"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"                .build();","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"        uniqueStudentList.setStudent(ALICE, editedAlice);","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"        UniqueStudentList expectedUniquePersonList \u003d new UniqueStudentList();","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"        assertEquals(expectedUniquePersonList, uniqueStudentList);","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"    public void setStudent_editedStudentHasDifferentIdentity_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"        uniqueStudentList.setStudent(ALICE, BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"    public void setStudent_editedStudentHasNonUniqueIdentity_throwsDuplicateStudentException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"        uniqueStudentList.add(BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudent(ALICE, BOB));","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"    public void remove_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"channne"},"content":"    public void remove_studentDoesNotExist_throwsStudentNotFoundException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"channne"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.remove(ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"    public void remove_existingStudent_removesStudent() {","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"channne"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"channne"},"content":"        uniqueStudentList.remove(ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"channne"},"content":"        UniqueStudentList expectedUniquePersonList \u003d new UniqueStudentList();","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"channne"},"content":"        assertEquals(expectedUniquePersonList, uniqueStudentList);","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"    public void setStudents_nullUniqueStudentList_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"channne"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"channne"},"content":"    public void setStudents_uniqueStudentList_replacesOwnListWithProvidedUniqueStudentList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"channne"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"channne"},"content":"        UniqueStudentList expectedUniquePersonList \u003d new UniqueStudentList();","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"channne"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"channne"},"content":"        uniqueStudentList.setStudents(expectedUniquePersonList);","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"channne"},"content":"        assertEquals(expectedUniquePersonList, uniqueStudentList);","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"channne"},"content":"    public void setStudents_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"channne"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"channne"},"content":"    public void setStudents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"channne"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"channne"},"content":"        List\u003cStudent\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"        uniqueStudentList.setStudents(personList);","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"channne"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"channne"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"channne"},"content":"    public void setStudents_listWithDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"channne"},"content":"        List\u003cStudent\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"channne"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudents(listWithDuplicatePersons));","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"channne"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"channne"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"channne"},"content":"            -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"channne":170}},{"path":"src/test/java/seedu/address/model/util/LabTripletTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.util;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.lab.exceptions.InvalidLabStatusException;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"class LabTripletTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    public void constructor_nullArguments_throwsNullPointerException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"        // null lab number","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LabTriplet(null, \"SUBMITTED\", \"Unknown\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"        // null lab status","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LabTriplet(\"1\", null, \"Unknown\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"        // null lab mark","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LabTriplet(\"1\", \"SUBMITTED\", null));","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    public void constructor_validArguments_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"        assertDoesNotThrow(() -\u003e new LabTriplet(\"1\", \"SUBMITTED\", \"Unknown\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    public void getLab_validArguments_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        LabTriplet lt \u003d new LabTriplet(\"1\", \"SUBMITTED\", \"Unknown\");","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        assertEquals(new Lab(\"1\").of(\"SUBMITTED\") , lt.getLab());","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    public void getLab_invalidLabNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        LabTriplet lt \u003d new LabTriplet(\"a\", \"SUBMITTED\", \"Unknown\");","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e lt.getLab());","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"    public void getLab_invalidLabStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"        LabTriplet lt \u003d new LabTriplet(\"1\", \"invalid\", \"Unknown\");","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e lt.getLab());","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"    public void getLab_gradedLabStatusInvalidLabMark_throwsInvalidLabStatusException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"        LabTriplet lt \u003d new LabTriplet(\"1\", \"GRADED\", \"Unknown\");","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"        assertThrows(InvalidLabStatusException.class, () -\u003e lt.getLab());","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"bryans17":52,"geetengtan":1}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedLabTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabStatus;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"class JsonAdaptedLabTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    private static final String VALID_LABNUMBER \u003d \"1\";","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    private static final String VALID_LABSTATUS \u003d \"GRADED\";","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"    private static final String VALID_LABMARK \u003d \"10\";","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"    private static final String VALID_NO_LABMARK \u003d \"Unknown\";","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    private static final String INVALID_LABNUMBER \u003d \"a\";","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    private static final String INVALID_LABSTATUS \u003d \"test\";","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    private static final String INVALID_LABMARK \u003d \"a\";","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    public void toModelType_validLabDetails_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"        JsonAdaptedLab js \u003d new JsonAdaptedLab(VALID_LABNUMBER, VALID_LABSTATUS, VALID_LABMARK);","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"            assertEquals(new Lab(\"1\").of(\"GRADED\", \"10\"), js.toModelType());","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"            fail();","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    public void toModelType_nullLabNumber_throwsIllegalValueException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        JsonAdaptedLab js \u003d new JsonAdaptedLab(null, VALID_LABSTATUS, VALID_LABMARK);","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        assertThrows(IllegalValueException.class, () -\u003e js.toModelType());","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"    public void toModelType_invalidLabNumber_throwsIllegalValueException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        JsonAdaptedLab js \u003d new JsonAdaptedLab(INVALID_LABNUMBER, VALID_LABSTATUS, VALID_LABMARK);","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"        assertThrows(IllegalValueException.class, () -\u003e js.toModelType());","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"    public void toModelType_nullLabStatus_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"        JsonAdaptedLab js \u003d new JsonAdaptedLab(VALID_LABNUMBER, null, VALID_LABMARK);","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"        JsonAdaptedLab js2 \u003d new JsonAdaptedLab(VALID_LABNUMBER, null, VALID_NO_LABMARK);","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"        Lab expectedLab \u003d new Lab(\"1\").of(VALID_LABSTATUS, VALID_LABMARK);","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"        Lab expectedLab2 \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"            assertEquals(expectedLab, js.toModelType());","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"            assertEquals(expectedLab2, js2.toModelType());","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"            fail();","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"    public void toModelType_invalidLabStatusValidMark_succes() {","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"        JsonAdaptedLab js \u003d new JsonAdaptedLab(VALID_LABNUMBER, INVALID_LABSTATUS, VALID_LABMARK);","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"        Lab expectedLab \u003d new Lab(\"1\").of(VALID_LABSTATUS, VALID_LABMARK);","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"            assertEquals(expectedLab, js.toModelType());","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"            fail();","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"    public void toModelType_invalidLabStatusNoMarkAndNullMark_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"        JsonAdaptedLab js \u003d new JsonAdaptedLab(VALID_LABNUMBER, INVALID_LABSTATUS, VALID_NO_LABMARK);","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"        JsonAdaptedLab js2 \u003d new JsonAdaptedLab(VALID_LABNUMBER, INVALID_LABSTATUS, null);","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"        Lab expectedLab \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"            assertEquals(expectedLab, js.toModelType());","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"            assertEquals(expectedLab, js2.toModelType());","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"bryans17"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"            fail();","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"bryans17"},"content":"    public void toModelType_nullLabMarkStatusNotGraded_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"        JsonAdaptedLab js \u003d new JsonAdaptedLab(VALID_LABNUMBER, \"SUBMITTED\", null);","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"        Lab expectedLab \u003d new Lab(\"1\").of(LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"bryans17"},"content":"            assertEquals(expectedLab, js.toModelType());","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"bryans17"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"            fail();","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"bryans17"},"content":"    public void toModelType_nullLabMarkStatusGraded_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"bryans17"},"content":"        JsonAdaptedLab js \u003d new JsonAdaptedLab(VALID_LABNUMBER, VALID_LABSTATUS, null);","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"bryans17"},"content":"        Lab expectedLab \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"bryans17"},"content":"            assertEquals(expectedLab, js.toModelType());","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"            fail();","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"    public void toModelType_invalidLabMark_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"bryans17"},"content":"        JsonAdaptedLab js \u003d new JsonAdaptedLab(VALID_LABNUMBER, VALID_LABSTATUS, INVALID_LABMARK);","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"        Lab expectedLab \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"bryans17"},"content":"            assertEquals(expectedLab, js.toModelType());","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"bryans17"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"bryans17"},"content":"            fail();","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"bryans17":117}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.GithubUsername;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Telegram;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"    private static final String INVALID_TAG \u003d \"#year2\";","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    private static final String INVALID_GITHUB \u003d \"--example\";","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"    private static final String INVALID_TELEGRAM \u003d \"R@chel\";","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"    private static final String INVALID_STUDENTID \u003d \"A01234567\";","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    private static final String INVALID_LABNUMBER \u003d \"a\";","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    private static final String VALID_GITHUB \u003d BENSON.getGithubUsername().toString();","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"    private static final String VALID_TELEGRAM \u003d BENSON.getTelegram().toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"    private static final String VALID_STUDENTID \u003d BENSON.getStudentId().toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    private static final List\u003cJsonAdaptedLab\u003e VALID_LABS \u003d BENSON.getLabs().asUnmodifiableObservableList()","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"            .stream()","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"            .map(JsonAdaptedLab::new)","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"    public void toModelType_validStudentDetails_returnsStudent() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"        assertEquals(BENSON, student.toModelType());","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(INVALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, VALID_STUDENTID, VALID_LABS);","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(null, VALID_EMAIL, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, VALID_STUDENTID, VALID_LABS);","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, INVALID_EMAIL, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, VALID_STUDENTID, VALID_LABS);","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, null, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, VALID_STUDENTID, VALID_LABS);","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_EMAIL, invalidTags, VALID_GITHUB,","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, VALID_STUDENTID, VALID_LABS);","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalValueException.class, student::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"    public void toModelType_invalidGithub_throwsIllegalValueException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_EMAIL, VALID_TAGS, INVALID_GITHUB,","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, VALID_STUDENTID, VALID_LABS);","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"bryans17"},"content":"        String expectedMessage \u003d GithubUsername.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"bryans17"},"content":"    public void toModelType_nullGithub_throwsIllegalValueException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_EMAIL, VALID_TAGS, null,","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, VALID_STUDENTID, VALID_LABS);","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, GithubUsername.class.getSimpleName());","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"    public void toModelType_invalidTelegram_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"                INVALID_TELEGRAM, VALID_STUDENTID, VALID_LABS);","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d Telegram.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"    public void toModelType_nullTelegram_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"                null, VALID_STUDENTID, VALID_LABS);","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Telegram.class.getSimpleName());","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"channne"},"content":"    public void toModelType_invalidStudentId_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"channne"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, INVALID_STUDENTID, VALID_LABS);","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d StudentId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"channne"},"content":"    public void toModelType_nullStudentId_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"channne"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, null, VALID_LABS);","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StudentId.class.getSimpleName());","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":140,"author":{"gitId":"bryans17"},"content":"    public void toModelType_invalidLabNumber_throwsIllegalValueException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":141,"author":{"gitId":"bryans17"},"content":"        JsonAdaptedLab invalid \u003d new JsonAdaptedLab(INVALID_LABNUMBER, \"UNSUBMITTED\", \"Unknown\");","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"bryans17"},"content":"        List\u003cJsonAdaptedLab\u003e invalidList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"bryans17"},"content":"        invalidList.add(invalid);","lastModifiedDate":"2022-03-08"},{"lineNumber":144,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":145,"author":{"gitId":"channne"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, VALID_STUDENTID, invalidList);","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"bryans17"},"content":"        String expectedMessage \u003d Lab.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-08"},{"lineNumber":148,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":150,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"channne":62,"-":51,"bryans17":38}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.HOON;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.IDA;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"    public void readAddressBook_invalidStudentAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidStudentAddressBook.json\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"    public void readAddressBook_invalidAndValidStudentAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidStudentAddressBook.json\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"        original.addStudent(HOON);","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"        original.removeStudent(ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"channne":11,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabList;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.TypicalStudents;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"    private static final Path TYPICAL_STUDENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalStudentsAddressBook.json\");","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"    private static final Path INVALID_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStudentAddressBook.json\");","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"    private static final Path DUPLICATE_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStudentAddressBook.json\");","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    private static final Path INVALID_LABSTATUS_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidLabStatusAddressBook.json\");","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    private static final Path ALIGN_LAB_FILE \u003d TEST_DATA_FOLDER.resolve(\"alignLabAddressBook.json\");","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    private static final Path EXPECTED_ALIGNED_FIlE \u003d TEST_DATA_FOLDER.resolve(\"expectedAlignedLabAddressBook.json\");","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    private static final Path DUPLICATE_LAB_MASTERLIST_FILE \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicateLabsInMasterListAddressBook.json\");","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    private static final Path DUPLICATE_LAB_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateLabAddressBook.json\");","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"    public void toModelType_typicalStudentsFile_success() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_STUDENTS_FILE,","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        AddressBook typicalStudentsAddressBook \u003d TypicalStudents.getTypicalAddressBook();","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        assertEquals(addressBookFromFile, typicalStudentsAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"    public void toModelType_invalidStudentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STUDENT_FILE,","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"    public void toModelType_duplicateStudents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STUDENT_FILE,","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"    public void toModelType_invalidLabStatusFile_defaultToUnsubmitted() throws Exception {","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_LABSTATUS_FILE,","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"        LabList expectedLabList \u003d new LabList();","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"        expectedLabList.add(new Lab(\"1\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"        assertEquals(expectedLabList, dataFromFile.toModelType().getStudentList().get(0).getLabs());","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"    public void toModelType_alignLabFile_success() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(ALIGN_LAB_FILE,","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"        JsonSerializableAddressBook expectedDataFromFile \u003d JsonUtil.readJsonFile(EXPECTED_ALIGNED_FIlE,","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"        assertEquals(expectedDataFromFile.toModelType(), dataFromFile.toModelType());","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"    public void toModelType_duplicateLabInMasterList_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_LAB_MASTERLIST_FILE,","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_LAB,","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"    public void toModelType_duplicateLab_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_LAB_FILE,","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"        assertThrows(IllegalValueException.class, JsonAdaptedStudent.MESSAGE_DUPLICATE_LABS,","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"channne":13,"-":37,"bryans17":39}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"channne":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"     * Adds a new {@code Student} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"    public AddressBookBuilder withStudent(Student student) {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"channne":4,"-":30}},{"path":"src/test/java/seedu/address/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.GithubUsername;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Telegram;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"channne"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"channne"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"    private EditStudentDescriptor descriptor;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"    public EditStudentDescriptorBuilder(EditStudentDescriptor descriptor) {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"        this.descriptor \u003d new EditStudentDescriptor(descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"     * Returns an {@code EditStudentDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        descriptor.setTags(student.getTags());","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        descriptor.setGithubUsername(student.getGithubUsername());","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"        descriptor.setTelegram(student.getTelegram());","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        descriptor.setStudentId(student.getStudentId());","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"     * Sets the {@code Name} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"    public EditStudentDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"     * Sets the {@code Email} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"    public EditStudentDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditStudentDescriptor}","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"     * that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"    public EditStudentDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"     * Sets the {@code GithubUsername} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"    public EditStudentDescriptorBuilder withGithub(String githubUsername) {","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"        descriptor.setGithubUsername(new GithubUsername(githubUsername));","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"     * Sets the {@code Telegram} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"    public EditStudentDescriptorBuilder withTelegram(String telegram) {","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        descriptor.setTelegram(new Telegram(telegram));","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"     * Sets the {@code StudentId} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"    public EditStudentDescriptorBuilder withStudentId(String studentId) {","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"        descriptor.setStudentId(new StudentId(studentId));","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"    public EditStudentDescriptor build() {","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"        return descriptor;","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"channne":97}},{"path":"src/test/java/seedu/address/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabList;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.GithubUsername;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Telegram;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import seedu.address.model.util.LabTriplet;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"channne"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"channne"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"public class StudentBuilder {","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"    public static final String DEFAULT_GITHUB \u003d \"amyB123\";","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"    public static final String DEFAULT_TELEGRAM \u003d \"amy_B\";","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"    public static final String DEFAULT_STUDENTID \u003d \"A1123456B\";","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"    private Name name;","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"    private Email email;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"    private GithubUsername githubUsername;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"    private Telegram telegram;","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"    private StudentId studentId;","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"    private LabList labs;","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"    public StudentBuilder() {","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        githubUsername \u003d new GithubUsername(DEFAULT_GITHUB);","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"        telegram \u003d new Telegram(DEFAULT_TELEGRAM);","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"        studentId \u003d new StudentId(DEFAULT_STUDENTID);","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"        labs \u003d new LabList();","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"     * Initializes the StudentBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"        githubUsername \u003d studentToCopy.getGithubUsername();","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"        telegram \u003d studentToCopy.getTelegram();","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"        studentId \u003d studentToCopy.getStudentId();","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        labs \u003d studentToCopy.getLabs();","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"    public StudentBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"     * Sets the {@code Email} of the {@code Student} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"     * Sets the {@code GithubUsername} of the {@code Student} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"    public StudentBuilder withGithub(String githubUsername) {","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"        this.githubUsername \u003d new GithubUsername(githubUsername);","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"     * Sets the {@code Telegram} of the {@code Student} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"    public StudentBuilder withTelegram(String telegram) {","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"        this.telegram \u003d new Telegram(telegram);","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"     * Sets the {@code StudentId} of the {@code Student} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"    public StudentBuilder withStudentId(String studentId) {","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"        this.studentId \u003d new StudentId(studentId);","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"     * Parses the {@code labs} into a {@code LabList} and set it to the {@code Student} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"    public final StudentBuilder withLabs(LabTriplet... labs) {","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"        this.labs \u003d SampleDataUtil.getLabSet(labs);","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"channne"},"content":"     * Parses the {@code Student}.","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"channne"},"content":"    public Student build() {","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"channne"},"content":"        Student s \u003d new Student(name, email, tags, githubUsername, telegram, studentId);","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"        s.setLabs(labs);","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"channne"},"content":"        return s;","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"channne":126,"bryans17":1}},{"path":"src/test/java/seedu/address/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"channne"},"content":" * A utility class for Student.","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"public class StudentUtil {","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"     * Returns an add command string for adding the {@code student}.","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getStudentDetails(student);","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"        sb.append(PREFIX_NAME + student.getName().fullName + \" \");","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"        sb.append(PREFIX_EMAIL + student.getEmail().value + \" \");","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        sb.append(PREFIX_GITHUB + student.getGithubUsername().username + \" \");","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        sb.append(PREFIX_TELEGRAM + student.getTelegram().handle + \" \");","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        sb.append(PREFIX_STUDENTID + student.getStudentId().id + \" \");","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        student.getTags().stream().forEach(","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"     * Returns the part of command string for the given {@code EditStudentDescriptor}\u0027s details.","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"    public static String getEditStudentDescriptorDetails(EditStudentDescriptor descriptor) {","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"        descriptor.getGithubUsername().ifPresent(git -\u003e sb.append(PREFIX_GITHUB).append(git.username).append(\" \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"        descriptor.getTelegram().ifPresent(telegram -\u003e sb.append(PREFIX_TELEGRAM).append(telegram.handle).append(\" \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        descriptor.getStudentId().ifPresent(studentId -\u003e sb.append(PREFIX_STUDENTID)","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"                .append(studentId.id).append(\" \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"channne":23,"-":42,"bryans17":1}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"    public static Student getStudent(Model model, Index index) {","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"channne":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"    public static final Index INDEX_FIRST_STUDENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"    public static final Index INDEX_SECOND_STUDENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"    public static final Index INDEX_THIRD_STUDENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"channne":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_AMY;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_INTLSTUDENT;","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_YEAR2;","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.Lab;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.lab.LabList;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"import seedu.address.model.util.LabTriplet;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"public class TypicalStudents {","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"            .withTags(\"year2\")","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"            .withGithub(\"aliceP\")","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"            .withTelegram(\"alice_P\")","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123456B\")","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"            .withLabs(new LabTriplet(\"1\", \"UNSUBMITTED\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"                    new LabTriplet(\"2\", \"GRADED\", \"11\")).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"            .withTags(\"Tembusu\", \"year2\")","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"            .withGithub(\"bensonM\")","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"            .withTelegram(\"benson_M\")","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123457C\")","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"            .withLabs(new LabTriplet(\"1\", \"SUBMITTED\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"                    new LabTriplet(\"2\", \"UNSUBMITTED\")).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"            .withGithub(\"carlK\")","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"            .withTelegram(\"carl_K\")","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123458D\")","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"            .withLabs(new LabTriplet(\"1\", \"UNSUBMITTED\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"                    new LabTriplet(\"2\", \"UNSUBMITTED\")).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"            .withTags(\"year2\")","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"            .withGithub(\"danielM\")","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"            .withTelegram(\"daniel_M\")","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123459E\")","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"            .withLabs(new LabTriplet(\"1\", \"UNSUBMITTED\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"                    new LabTriplet(\"2\", \"UNSUBMITTED\")).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"            .withGithub(\"elleM\")","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"            .withTelegram(\"elle_M\")","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123411A\")","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"            .withLabs(new LabTriplet(\"1\", \"GRADED\", \"10\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"                    new LabTriplet(\"2\", \"GRADED\", \"12\")).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"            .withGithub(\"fionaK\")","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"            .withTelegram(\"fiona_K\")","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123412B\")","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"            .withLabs(new LabTriplet(\"1\", \"SUBMITTED\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"                    new LabTriplet(\"2\", \"GRADED\", \"13\")).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\")","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"            .withGithub(\"georgeB\")","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"            .withTelegram(\"george_B\")","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123413C\")","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"            .withLabs(new LabTriplet(\"1\", \"GRADED\", \"9\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"                    new LabTriplet(\"2\", \"UNSUBMITTED\")).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"            .withGithub(\"hoonM\")","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"            .withTelegram(\"hoon_M\")","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123414D\")","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"            .withLabs(new LabTriplet(\"1\", \"UNSUBMITTED\")).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"bryans17"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"            .withGithub(\"idaM\")","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"            .withTelegram(\"ida_M\")","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123415E\")","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"            .withLabs(new LabTriplet(\"1\", \"UNSUBMITTED\")).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"bryans17"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"            .withTags(VALID_TAG_YEAR2)","lastModifiedDate":"2022-04-10"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"            .withGithub(VALID_GITHUB_AMY)","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"            .withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"            .withStudentId(VALID_STUDENTID_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"            .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"            .withTags(VALID_TAG_INTLSTUDENT, VALID_TAG_YEAR2)","lastModifiedDate":"2022-04-10"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"            .withGithub(VALID_GITHUB_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"            .withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"            .withStudentId(VALID_STUDENTID_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"            .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"    private TypicalStudents() {} // prevents instantiation","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"channne"},"content":"     * Returns an {@code AddressBook} with all the typical students.","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"channne"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"            Student temp \u003d new StudentBuilder(student).build(); // Ensures that we have a fresh copy for each test case.","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"channne"},"content":"            ab.addStudent(temp);","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"bryans17"},"content":"        ab.getMasterLabList().add(new Lab(\"1\"));","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"bryans17"},"content":"        return ab;","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"     * Returns an {@code AddressBook} with all the typical students but without any Lab.","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"bryans17"},"content":"    public static AddressBook getTypicalAddressBookWithoutLabs() {","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"bryans17"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"channne"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"channne"},"content":"            Student temp \u003d new StudentBuilder(student).build(); // Ensures that we have a fresh copy for each test case.","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"bryans17"},"content":"            temp.setLabs(new LabList());","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"channne"},"content":"            ab.addStudent(temp);","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":143,"author":{"gitId":"channne"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"channne":75,"-":34,"bryans17":37}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"\u003c?import seedu.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"seedu.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":6,"bryans17":1}}]
