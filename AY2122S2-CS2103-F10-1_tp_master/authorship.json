[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"# TAddressBook","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103-F10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103-F10-1/tp/actions)","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"* **TAddressBook** is a student project based on [AddressBook Level 3](https://github.com/se-edu/addressbook-level3). It is a desktop application created with the aim of helping CS2030S Teaching Assistants (TAs) keep track of student\u0027s lab assignments.","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"* It is named `TAddressBook` because it was initially created as a part of a series of `AddressBook` projects (`Level 1`, `Level 2`, `Level 3` ...).","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"* For the detailed documentation of this project, see the **[TAddressBook Product Website](https://ay2122s2-cs2103-f10-1.github.io/tp/)**.","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"bryans17":6,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"run {","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"    archiveName \u003d \u0027TAddressbook.jar\u0027","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":71,"bryans17":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"# About Us","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"We are team TAddressBook.","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"### Bryan seah","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"\u003cimg src\u003d\"images/bryans17.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"[[github](https://github.com/bryans17)]","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"[[portfolio](team/bryans17.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"* Responsibilities: Team Lead, Integration","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"### Channe Chwa","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"\u003cimg src\u003d\"images/channne.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"[[github](http://github.com/channne)]","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"[[portfolio](team/channne.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"* Responsibilities: Documentation, Testing","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"### Ryan Tan Gee Teng","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"\u003cimg src\u003d\"images/geetengtan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"[[github](http://github.com/geetengtan)]","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"[[portfolio](team/geetengtan.md)]","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"* Responsibilities: Code Quality, Deliverables and deadlines","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"channne":5,"-":23,"bryans17":7,"geetengtan":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"channne"},"content":"CS2030S Teaching Assistants (TAs) who","lastModifiedDate":"2022-03-02"},{"lineNumber":261,"author":{"gitId":"channne"},"content":"* have to keep track of students\u0027 details","lastModifiedDate":"2022-03-02"},{"lineNumber":262,"author":{"gitId":"channne"},"content":"* have to keep track of students\u0027 performance and progress on labs","lastModifiedDate":"2022-03-02"},{"lineNumber":263,"author":{"gitId":"channne"},"content":"* have to keep track of their own progress on grading labs","lastModifiedDate":"2022-03-02"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"channne"},"content":"* prefer typing to mouse interactions","lastModifiedDate":"2022-03-02"},{"lineNumber":267,"author":{"gitId":"channne"},"content":"* are reasonably comfortable using CLI apps","lastModifiedDate":"2022-03-02"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"channne"},"content":"**Value proposition**: provides CS2030S TAs with a systematic way to keep track of students, including who he/she","lastModifiedDate":"2022-03-02"},{"lineNumber":270,"author":{"gitId":"channne"},"content":"has graded and what grade was given for every lab.","lastModifiedDate":"2022-03-02"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                                          | So that I can…​                                                                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"channne"},"content":"|----------|---------|-------------------------------------------------------|-------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-01"},{"lineNumber":279,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | add a student to my class list                        | begin keeping track of their lab assignments                                                                |","lastModifiedDate":"2022-03-01"},{"lineNumber":280,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | edit a student\u0027s information                          | fix any errors I made during the initial adding phase or add information that was not provided to me before |","lastModifiedDate":"2022-03-01"},{"lineNumber":281,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | delete a student from my class list                   | my list will be reflective of who is currently in my class                                                  |","lastModifiedDate":"2022-03-01"},{"lineNumber":282,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | list all students                                     | have an overview of all the students in my class                                                            |","lastModifiedDate":"2022-03-01"},{"lineNumber":283,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | locate students by name                               | easily find students whose names contain certain keywords                                                   |","lastModifiedDate":"2022-03-01"},{"lineNumber":284,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | filter students based on the status of their lab tags | quickly filter out the students that possess the same tags                                                  |","lastModifiedDate":"2022-03-01"},{"lineNumber":285,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | add a new lab assignment to the assignment list       | keep track of which lab assignments have been released to students                                          |","lastModifiedDate":"2022-03-01"},{"lineNumber":286,"author":{"gitId":"channne"},"content":"| `* * *`  | TA      | update status of a lab tag                            | keep track of which labs I have graded, and which lab grades I have submitted to the system                 |","lastModifiedDate":"2022-03-01"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"geetengtan"},"content":"(For all use cases below, the **System** is the `TAddressBook` and the **Actor** is the `Teaching Assistant (TA)`, unless specified otherwise)","lastModifiedDate":"2022-03-01"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"bryans17"},"content":"**Use case: Add Labs**","lastModifiedDate":"2022-03-01"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":297,"author":{"gitId":"channne"},"content":"1. TA request to add new lab","lastModifiedDate":"2022-03-02"},{"lineNumber":298,"author":{"gitId":"bryans17"},"content":"2. TAB adds a new lab to every student","lastModifiedDate":"2022-03-04"},{"lineNumber":299,"author":{"gitId":"bryans17"},"content":"3. TAB shows updated list of labs","lastModifiedDate":"2022-03-04"},{"lineNumber":300,"author":{"gitId":"bryans17"},"content":"4. TAB displays success message","lastModifiedDate":"2022-03-04"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":302,"author":{"gitId":"channne"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":304,"author":{"gitId":"channne"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":305,"author":{"gitId":"channne"},"content":"* 2a. TAB detects that the student list is empty","lastModifiedDate":"2022-03-02"},{"lineNumber":306,"author":{"gitId":"channne"},"content":"    * 2a1. TAB displays warning message to user (that there are no students yet)","lastModifiedDate":"2022-03-02"},{"lineNumber":307,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":308,"author":{"gitId":"channne"},"content":"      Use case ends","lastModifiedDate":"2022-03-02"},{"lineNumber":309,"author":{"gitId":"bryans17"},"content":"* 2b. TAB detects that an identical lab already exists.","lastModifiedDate":"2022-03-04"},{"lineNumber":310,"author":{"gitId":"bryans17"},"content":"    * 2b1. TAB displays error message (that lab already exists)","lastModifiedDate":"2022-03-04"},{"lineNumber":311,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":312,"author":{"gitId":"channne"},"content":"      Use case ends","lastModifiedDate":"2022-03-02"},{"lineNumber":313,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":314,"author":{"gitId":"bryans17"},"content":"**Use case: Filter Students**","lastModifiedDate":"2022-03-01"},{"lineNumber":315,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":316,"author":{"gitId":"geetengtan"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":317,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":318,"author":{"gitId":"bryans17"},"content":"1.  TA requests to filter students by a specific lab","lastModifiedDate":"2022-03-04"},{"lineNumber":319,"author":{"gitId":"geetengtan"},"content":"2.  TAB displays list of students based on filter criteria","lastModifiedDate":"2022-03-01"},{"lineNumber":320,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":321,"author":{"gitId":"geetengtan"},"content":"    Use case ends","lastModifiedDate":"2022-03-01"},{"lineNumber":322,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":323,"author":{"gitId":"geetengtan"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":324,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":325,"author":{"gitId":"bryans17"},"content":"* 1a. TA provides non-existent lab","lastModifiedDate":"2022-03-04"},{"lineNumber":326,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":327,"author":{"gitId":"geetengtan"},"content":"    * 1a1. TAB shows error message","lastModifiedDate":"2022-03-01"},{"lineNumber":328,"author":{"gitId":"bryans17"},"content":"    * 1a2. TAB requests for valid lab","lastModifiedDate":"2022-03-04"},{"lineNumber":329,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":330,"author":{"gitId":"geetengtan"},"content":"      Use case resumes from step 1","lastModifiedDate":"2022-03-01"},{"lineNumber":331,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":332,"author":{"gitId":"geetengtan"},"content":"* 1b. TA tries to filter an empty list","lastModifiedDate":"2022-03-01"},{"lineNumber":333,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":334,"author":{"gitId":"geetengtan"},"content":"    * 1b1. TAB shows error message","lastModifiedDate":"2022-03-01"},{"lineNumber":335,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":336,"author":{"gitId":"geetengtan"},"content":"      Use case ends","lastModifiedDate":"2022-03-01"},{"lineNumber":337,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":338,"author":{"gitId":"bryans17"},"content":"**Use case: Mark Student Lab as Graded**","lastModifiedDate":"2022-03-01"},{"lineNumber":339,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":340,"author":{"gitId":"bryans17"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":341,"author":{"gitId":"bryans17"},"content":"1. TA requests to change a student’s lab status to “Graded”","lastModifiedDate":"2022-03-01"},{"lineNumber":342,"author":{"gitId":"bryans17"},"content":"2. TAB changes the student’s lab status from “Submitted” to “Graded”","lastModifiedDate":"2022-03-01"},{"lineNumber":343,"author":{"gitId":"bryans17"},"content":"3. TAB shows updated lab status","lastModifiedDate":"2022-03-04"},{"lineNumber":344,"author":{"gitId":"bryans17"},"content":"4. TAB displays success message","lastModifiedDate":"2022-03-01"},{"lineNumber":345,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":346,"author":{"gitId":"bryans17"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":347,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":348,"author":{"gitId":"bryans17"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":349,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":350,"author":{"gitId":"bryans17"},"content":"- 1a. TA provides invalid student index","lastModifiedDate":"2022-03-01"},{"lineNumber":351,"author":{"gitId":"bryans17"},"content":"    - 1a1. TAB shows error message that student index is invalid","lastModifiedDate":"2022-03-01"},{"lineNumber":352,"author":{"gitId":"bryans17"},"content":"    - 1a2. TAB requests for valid student index","lastModifiedDate":"2022-03-01"},{"lineNumber":353,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":354,"author":{"gitId":"bryans17"},"content":"  Use case resumes from step 1","lastModifiedDate":"2022-03-01"},{"lineNumber":355,"author":{"gitId":"bryans17"},"content":"- 1b. TA provides lab that is already \"Graded\"","lastModifiedDate":"2022-03-04"},{"lineNumber":356,"author":{"gitId":"bryans17"},"content":"    - 1b1. TAB shows error message stating that lab is already \"Graded\"","lastModifiedDate":"2022-03-04"},{"lineNumber":357,"author":{"gitId":"bryans17"},"content":"    - 1b2. TAB requests for valid lab","lastModifiedDate":"2022-03-01"},{"lineNumber":358,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":359,"author":{"gitId":"bryans17"},"content":"  Use case resumes from step 1","lastModifiedDate":"2022-03-01"},{"lineNumber":360,"author":{"gitId":"bryans17"},"content":"- 1c. TA provides lab that has not been \"Submitted\"","lastModifiedDate":"2022-03-04"},{"lineNumber":361,"author":{"gitId":"bryans17"},"content":"    - 1c1. TAB shows error message that lab status has to be “Submitted” first","lastModifiedDate":"2022-03-01"},{"lineNumber":362,"author":{"gitId":"bryans17"},"content":"    - 1c2. TAB requests for valid lab","lastModifiedDate":"2022-03-01"},{"lineNumber":363,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":364,"author":{"gitId":"bryans17"},"content":"  Use case resumes from step 1","lastModifiedDate":"2022-03-01"},{"lineNumber":365,"author":{"gitId":"bryans17"},"content":"- 1d. TA provides lab that does not exist","lastModifiedDate":"2022-03-01"},{"lineNumber":366,"author":{"gitId":"bryans17"},"content":"    - 1d1. TAB shows error message stating that lab does not exist","lastModifiedDate":"2022-03-01"},{"lineNumber":367,"author":{"gitId":"bryans17"},"content":"    - 1d2. TAB requests for valid lab","lastModifiedDate":"2022-03-01"},{"lineNumber":368,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":369,"author":{"gitId":"bryans17"},"content":"  Use case resumes from step 1","lastModifiedDate":"2022-03-01"},{"lineNumber":370,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":371,"author":{"gitId":"bryans17"},"content":"**Use case: Mark Student Lab as Submitted**","lastModifiedDate":"2022-03-01"},{"lineNumber":372,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":373,"author":{"gitId":"bryans17"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":374,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":375,"author":{"gitId":"bryans17"},"content":"1. TA requests to change a student’s lab status to “Submitted”","lastModifiedDate":"2022-03-01"},{"lineNumber":376,"author":{"gitId":"bryans17"},"content":"2. TAB changes the student’s lab status from “Unsubmitted” to “Submitted”","lastModifiedDate":"2022-03-01"},{"lineNumber":377,"author":{"gitId":"bryans17"},"content":"3. TAB shows updated lab status","lastModifiedDate":"2022-03-04"},{"lineNumber":378,"author":{"gitId":"bryans17"},"content":"4. TAB displays success message","lastModifiedDate":"2022-03-01"},{"lineNumber":379,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":380,"author":{"gitId":"bryans17"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":382,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":384,"author":{"gitId":"bryans17"},"content":"- 1a. TA provides invalid student index","lastModifiedDate":"2022-03-01"},{"lineNumber":385,"author":{"gitId":"bryans17"},"content":"    - 1a1. TAB shows error message that student index is invalid","lastModifiedDate":"2022-03-01"},{"lineNumber":386,"author":{"gitId":"bryans17"},"content":"    - 1a2. TAB requests for valid student index","lastModifiedDate":"2022-03-01"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":388,"author":{"gitId":"bryans17"},"content":"  Use case resumes from step 1.","lastModifiedDate":"2022-03-01"},{"lineNumber":389,"author":{"gitId":"bryans17"},"content":"- 1b. TA provides lab that is already \"Submitted\"","lastModifiedDate":"2022-03-04"},{"lineNumber":390,"author":{"gitId":"bryans17"},"content":"    - 1b1. TAB shows error message stating that the lab for the particular student has already been \"Submitted\"","lastModifiedDate":"2022-03-04"},{"lineNumber":391,"author":{"gitId":"bryans17"},"content":"    - 1b2. TAB requests for valid lab and student","lastModifiedDate":"2022-03-01"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":393,"author":{"gitId":"bryans17"},"content":"  Use case resumes from step 1","lastModifiedDate":"2022-03-01"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":395,"author":{"gitId":"bryans17"},"content":"- 1c. TA provides lab that does not exist","lastModifiedDate":"2022-03-01"},{"lineNumber":396,"author":{"gitId":"bryans17"},"content":"    - 1c1. TAB shows error message stating that lab does not exist","lastModifiedDate":"2022-03-01"},{"lineNumber":397,"author":{"gitId":"bryans17"},"content":"    - 1c2. TAB requests for valid lab","lastModifiedDate":"2022-03-01"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":399,"author":{"gitId":"bryans17"},"content":"  Use case resumes from step 1","lastModifiedDate":"2022-03-01"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":401,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"channne"},"content":"2. Should be able to hold up to 1000 students without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-03-02"},{"lineNumber":407,"author":{"gitId":"channne"},"content":"3. A TA with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-03-02"},{"lineNumber":408,"author":{"gitId":"bryans17"},"content":"4. Should be intuitive for both new users and experienced users.","lastModifiedDate":"2022-03-02"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"bryans17"},"content":"* **Unsubmiited**: Status to indicate that the student has not submitted the lab assignment or it is overdue.","lastModifiedDate":"2022-03-02"},{"lineNumber":417,"author":{"gitId":"bryans17"},"content":"* **Submitted**: Status to indicate that the student has submitted the lab assignment to his github repository.","lastModifiedDate":"2022-03-02"},{"lineNumber":418,"author":{"gitId":"bryans17"},"content":"* **Graded**: Status to indicate that the User (TA) has graded the student\u0027s lab assignment.","lastModifiedDate":"2022-03-02"},{"lineNumber":419,"author":{"gitId":"bryans17"},"content":"* **Lab**: Refers to Lab assignments from the module CS2030S offered by The National University of Singapore.","lastModifiedDate":"2022-03-04"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"channne":29,"-":352,"geetengtan":20,"bryans17":71}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"TAddressBook (TAB) is a **desktop app made for CS2030S Lab Teaching Assistants (TA) to keep track of students Lab assignments, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"If you can type fast, TAB can get your Lab management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"1. Download the latest `TAddressBook.jar` from [here](https://github.com/AY2122S2-CS2103-F10-1/tp/releases).","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"   * **`list`** : Lists all students.","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"   * **`add`**`n/James Ho e/jamesho@email.com g/jamesH t/jamesho i/A0123456T` : Adds a student named `James Ho` to the Address Book.","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"   * **`delete`**`3` : Deletes the 3rd student shown in the current list.","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"   * **`clear`** : Deletes all students.","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"1. Refer to the [Features](#feature-list) below for details of each command.","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"## Feature List","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"- [Manage students](#student-related-features)","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"    - [Add, edit, delete students](#adding-a-student--add)","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"    - [List students](#listing-all-students--list)","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"    - [Find students](#locating-students-by-name--find)","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"    - [Filter students based on status of lab tags](#filter-by-status-of-individual-labs--filter-coming-soon)","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"    - [Filter students based on status of lab tags](#filter-by-status-of-individual-labs--filter-labx-lab-status)","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 02c3157a84d97d11ff14df5bfb6b9ad49a614977","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"- [Manage labs](#lab-related-features)","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"    - [Add labs](#adding-a-lab--labadd)","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"    - [Change status of labs](#setting-the-status-of-individual-labs--labstat-coming-soon)","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"### System-related features","lastModifiedDate":"2022-02-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"#### Viewing help : `help`","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-02-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2022-02-22"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"Exits the program.","lastModifiedDate":"2022-02-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"Format: `exit`","lastModifiedDate":"2022-02-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"#### Saving the data","lastModifiedDate":"2022-02-22"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"TAddress Book data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-02-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"#### Editing the data file","lastModifiedDate":"2022-02-22"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"TAddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to edit that data file.","lastModifiedDate":"2022-02-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"### Student-related features","lastModifiedDate":"2022-02-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"#### Adding a student : `add`","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"Adds a student to the address book with the necessary attributes.","lastModifiedDate":"2022-02-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"Format: `add n/NAME e/EMAIL g/GITHUB t/TELEGRAM_HANDLE i/STUDENT_ID [t/TAG]...`","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"#### Listing all students : `list`","lastModifiedDate":"2022-02-22"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"Lists all the students","lastModifiedDate":"2022-02-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"#### Editing a student : `edit`","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"Edits an existing student in the TAddress book. At least one of the optional fields must be provided.","lastModifiedDate":"2022-02-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"Format: `edit INDEX [n/NAME] [e/EMAIL] [g/GITHUB] [t/TELEGRAM_HANDLE] [i/STUDENT_ID] [t/TAG]...`","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"bryans17"},"content":"#### Locating students by name : `find`","lastModifiedDate":"2022-02-22"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"Finds students whose names contain any of the given keywords. At least one keyword must be specified.","lastModifiedDate":"2022-02-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"bryans17"},"content":"#### Deleting a student : `delete`","lastModifiedDate":"2022-02-22"},{"lineNumber":97,"author":{"gitId":"bryans17"},"content":"Deletes the specified person from the TAddress book. INDEX must be a positive integer 1, 2, 3...","lastModifiedDate":"2022-02-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"bryans17"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2022-02-22"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"Clears all entries from the TAddress book.","lastModifiedDate":"2022-02-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"#### Filter (by status of individual labs) : `filter`","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"Filters students based on the status of their lab tags. LAB_NUMBER must be a positive integer.","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"LAB_STATUS:","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"* Unsubmitted \u003d u","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"* Submitted \u003d s","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"* Graded \u003d g","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"Format: `filter l/LAB_NUMBER s/LAB_STATUS`","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"### Lab-related features","lastModifiedDate":"2022-02-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"channne"},"content":"#### Adding a Lab : `labadd`","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"channne"},"content":"Adds a Lab to every student. Shows up as a tag on each student’s entry. By default, the tag will be colored red for “unsubmitted”.","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"channne"},"content":"The tags can subsequently be colored different colors to represent different statuses e.g. unsubmitted \u003d red, submitted \u003d yellow, graded \u003d green.","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"channne"},"content":"LAB_NUMBER must be a positive integer.","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"Format: `labadd l/LAB_NUMBER`","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":125,"author":{"gitId":"channne"},"content":"#### Setting the status of individual Labs : `labstat`","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"channne"},"content":"Changes the status of the specified lab for the student with the specified INDEX to the specified status. LAB_NUMBER must be a positive integer. LAB_STATUS must be one of u/s/g.","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":128,"author":{"gitId":"channne"},"content":"Format: `labstat INDEX l/LAB_NUMBER s/LAB_STATUS`","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"#### Removing a Lab: `labrm`","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"bryans17"},"content":"Removes a specified lab from every student in the class list. LAB_NUMBER must be a positive integer. If the specified LAB_NUMBER does not exist in the TAddressBook, an error message will be displayed.","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"bryans17"},"content":"Format: `labrm l/LAB_NUMBER`","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"bryans17"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous TAddressBook home folder.","lastModifiedDate":"2022-02-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"channne"},"content":"**Add** | `add n/NAME e/EMAIL g/GITHUB t/TELEGRAM_HANDLE i/STUDENT_ID [t/TAG]...` \u003cbr\u003e e.g., `add n/James Ho e/jamesho@email.com g/jamesH t/jamesho i/A0123456T`","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"channne"},"content":"**Edit** | `edit INDEX [n/NAME] [e/EMAIL] [g/GITHUB] [t/TELEGRAM_HANDLE] [i/STUDENT_ID] [t/TAG]...`\u003cbr\u003e e.g.,`edit 2 n/James Lee g/jamesHo`","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"channne"},"content":"**Filter** | `filter l/LAB_NUMBER s/LAB_STATUS`\u003cbr\u003e e.g., `filter l/1 s/u`","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"**Add lab** | `labadd l/LAB_NUMBER`","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"**Edit lab status** | `labstat INDEX l/LAB_NUMBER s/LAB_STATUS`","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"channne"},"content":"**Exit** | `exit`","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"channne":37,"-":84,"bryans17":36}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"title: TAddressBook","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103-F10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103-F10-1/tp/actions)","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103-F10-1/tp/branch/master/graph/badge.svg?token\u003dALQL4EZKOU)](https://codecov.io/gh/AY2122S2-CS2103-F10-1/tp)","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"* **TAddressBook** is a student project based on [AddressBook Level 3](https://github.com/se-edu/addressbook-level3). It is a desktop application created with the aim of helping CS2030S Teaching Assistants (TAs) keep track of student\u0027s lab assignments.","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"* It is named `TAddressBook` because it was initially created as a part of a series of `AddressBook` projects (`Level 1`, `Level 2`, `Level 3` ...).","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"* For the detailed documentation of this project, see the **[TAddressBook Product Website](https://ay2122s2-cs2103-f10-1.github.io/tp/)**.","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":12,"bryans17":6}},{"path":"docs/team/bryans17.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"title: Bryan Seah\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"### Project: TAddressBook","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"**TAddressBook** is a student project based on [AddressBook Level 3](https://github.com/se-edu/addressbook-level3). It is a desktop application created with the aim of helping CS2030S Teaching Assistants (TAs) keep track of student\u0027s lab assignments.","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"- **New Feature:** to be added soon","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"- **Code contributed:** [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dbryans17\u0026tabRepo\u003dAY2122S2-CS2103-F10-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"- **Project management:** to be added soon","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"- **Enhancements to existing features:** to be added soon","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"- **Documentation:** to be added soon","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"- **Community:** to be added soon","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"bryans17":16}},{"path":"docs/team/channne.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"title: Channe Chwa\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"### Project: TAddressBook","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"TAddress Book is a desktop app for CS2030S TAs to manage students and labs, optimized for use via a Command Line","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"Interface. It is based on [AddressBook Level 3](https://se-education.org/addressbook-level3/).","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"* **New feature**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"* **Code contributed**: [Reposense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dchannne\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"* **Documentation**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"* **Community**: to be added soon","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"channne":17}},{"path":"docs/team/geetengtan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"## Ryan Tan Gee Teng","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"### Project: TAddressBook","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"_to be added soon_","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"Below are my contributions to the project:","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"* _to be added soon_","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"geetengtan":8}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 0, true);","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing TAddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s TAddress book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"     * The data from the sample TAddress book will be used instead if {@code storage}\u0027s TAddress book is not found,","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"     * or an empty TAddress book will be used instead if errors occur when reading {@code storage}\u0027s TAddress book.","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TAddressBook\");","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TAddressBook\");","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TAddressBook\");","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TAddressBook\");","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"channne"},"content":"        logger.info(\"Starting TAddressBook \" + MainApp.VERSION);","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"channne"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping TAddress Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"channne":10,"-":172,"bryans17":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"     * Returns the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"channne":1,"-":49}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.LabList;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"channne"},"content":" * Adds a Student to the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the TAddressBook. \\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"            + PREFIX_GITHUB + \"GITHUB \"","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"            + PREFIX_TELEGRAM + \"TELEGRAM \"","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"            + PREFIX_STUDENTID + \"STUDENTID \"","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"            + PREFIX_GITHUB + \"johnD \"","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"            + PREFIX_TELEGRAM + \"jDoe \"","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"            + PREFIX_STUDENTID + \"A0123456B \"","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This student already exists in the TAddressBook\";","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"    public AddCommand(Person student) {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"        toAdd \u003d student;","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"        LabList plainLabList \u003d new LabList();","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"        for (Lab l : model.getAddressBook().getMasterLabList().getMasterList()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"            plainLabList.add(l.createCopy());","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"        toAdd.setLabs(plainLabList);","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":10,"-":53,"bryans17":14}},{"path":"src/main/java/seedu/address/logic/commands/AddLabCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"channne"},"content":" * Adds a Lab to the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"public class AddLabCommand extends Command {","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    public static final String COMMAND_WORD \u003d \"labadd\";","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a lab to all students in the TAddressBook. \\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"            + PREFIX_LAB + \"LAB_NUMBER \\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"            + PREFIX_LAB + \"1\";","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Lab added: %1$s\";","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_DUPLICATE_LAB \u003d \"This Lab already exists in the TAddressBook\";","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    private final Lab toAdd;","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"     * Creates an AddLabCommand to add the specified {@code Lab}","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"    public AddLabCommand(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        requireNonNull(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        toAdd \u003d lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        if (model.hasLab(toAdd)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_LAB);","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"        model.addLab(toAdd);","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"                || (other instanceof AddLabCommand // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"                \u0026\u0026 toAdd.equals(((AddLabCommand) other).toAdd));","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"channne":3,"bryans17":53}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"channne"},"content":" * Clears the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"TAddressBook has been cleared!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"channne"},"content":" * Deletes a Student identified using its displayed index from the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"            + \": Deletes the student identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted student: %1$s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":3,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.LabList;","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"channne"},"content":" * Edits the details of an existing Student in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"            + \"[\" + PREFIX_GITHUB + \"GITHUB] \"","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM] \"","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"            + \"[\" + PREFIX_STUDENTID + \"STUDENTID] \"","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited student: %1$s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This student already exists in the TAddressBook.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"     * @param index of the Student in the filtered Student list to edit","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"     * @param editPersonDescriptor details to edit the Student with","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"     * Creates and returns a {@code Person} with the details of {@code studentToEdit}","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"    private static Person createEditedPerson(Person studentToEdit, EditPersonDescriptor editStudentDescriptor) {","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"        Name updatedName \u003d editStudentDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"        Email updatedEmail \u003d editStudentDescriptor.getEmail().orElse(studentToEdit.getEmail());","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"        Set\u003cTag\u003e updatedTags \u003d editStudentDescriptor.getTags().orElse(studentToEdit.getTags());","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"        GithubUsername updatedGithubUsername \u003d editStudentDescriptor.getGithubUsername()","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"                .orElse(studentToEdit.getGithubUsername());","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"        Telegram updatedTelegram \u003d editStudentDescriptor.getTelegram().orElse(studentToEdit.getTelegram());","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"        StudentId updatedStudentId \u003d editStudentDescriptor.getStudentId().orElse(studentToEdit.getStudentId());","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"        LabList updatedLabList \u003d studentToEdit.getLabs();","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"        Person p \u003d new Person(updatedName, updatedEmail, updatedTags, updatedGithubUsername, updatedTelegram,","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"                updatedStudentId);","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"bryans17"},"content":"        p.setLabs(updatedLabList);","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"        return p;","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"channne"},"content":"     * Stores the details to edit the Student with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"channne"},"content":"     * corresponding field value of the Student.","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"bryans17"},"content":"        private GithubUsername githubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":140,"author":{"gitId":"bryans17"},"content":"        private Telegram telegram;","lastModifiedDate":"2022-03-05"},{"lineNumber":141,"author":{"gitId":"channne"},"content":"        private StudentId studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"bryans17"},"content":"            setGithubUsername(toCopy.githubUsername);","lastModifiedDate":"2022-03-04"},{"lineNumber":154,"author":{"gitId":"bryans17"},"content":"            setTelegram(toCopy.telegram);","lastModifiedDate":"2022-03-05"},{"lineNumber":155,"author":{"gitId":"channne"},"content":"            setStudentId(toCopy.studentId);","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"channne"},"content":"            return CollectionUtil.isAnyNonNull(name, email, tags, githubUsername, telegram, studentId);","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"bryans17"},"content":"        public void setGithubUsername(GithubUsername githubUsername) {","lastModifiedDate":"2022-03-04"},{"lineNumber":182,"author":{"gitId":"bryans17"},"content":"            this.githubUsername \u003d githubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":183,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":184,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":185,"author":{"gitId":"bryans17"},"content":"        public Optional\u003cGithubUsername\u003e getGithubUsername() {","lastModifiedDate":"2022-03-04"},{"lineNumber":186,"author":{"gitId":"bryans17"},"content":"            return Optional.ofNullable(githubUsername);","lastModifiedDate":"2022-03-04"},{"lineNumber":187,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":188,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":189,"author":{"gitId":"bryans17"},"content":"        public void setTelegram(Telegram telegram) {","lastModifiedDate":"2022-03-05"},{"lineNumber":190,"author":{"gitId":"bryans17"},"content":"            this.telegram \u003d telegram;","lastModifiedDate":"2022-03-05"},{"lineNumber":191,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":192,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":193,"author":{"gitId":"bryans17"},"content":"        public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2022-03-05"},{"lineNumber":194,"author":{"gitId":"bryans17"},"content":"            return Optional.ofNullable(telegram);","lastModifiedDate":"2022-03-05"},{"lineNumber":195,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":196,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":197,"author":{"gitId":"channne"},"content":"        public void setStudentId(StudentId studentId) {","lastModifiedDate":"2022-03-06"},{"lineNumber":198,"author":{"gitId":"channne"},"content":"            this.studentId \u003d studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":201,"author":{"gitId":"channne"},"content":"        public Optional\u003cStudentId\u003e getStudentId() {","lastModifiedDate":"2022-03-06"},{"lineNumber":202,"author":{"gitId":"channne"},"content":"            return Optional.ofNullable(studentId);","lastModifiedDate":"2022-03-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"bryans17"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2022-03-04"},{"lineNumber":240,"author":{"gitId":"channne"},"content":"                    \u0026\u0026 getGithubUsername().equals(e.getGithubUsername())","lastModifiedDate":"2022-03-06"},{"lineNumber":241,"author":{"gitId":"channne"},"content":"                    \u0026\u0026 getTelegram().equals(e.getTelegram())","lastModifiedDate":"2022-03-06"},{"lineNumber":242,"author":{"gitId":"channne"},"content":"                    \u0026\u0026 getStudentId().equals(e.getStudentId());","lastModifiedDate":"2022-03-06"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"channne":35,"-":179,"bryans17":31}},{"path":"src/main/java/seedu/address/logic/commands/EditLabStatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABSTATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.exceptions.DuplicateLabException;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.exceptions.LabNotFoundException;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.lab.LabList;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.lab.LabStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"channne"},"content":" * Edits the LabStatus of a Lab of a Student in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"channne"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"public class EditLabStatusCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"    public static final String COMMAND_WORD \u003d \"labstat\";","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the lab status of a specific lab of the student \"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"            + \"identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"            + PREFIX_LAB + \"LAB_NUMBER \"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"            + PREFIX_LABSTATUS + \"LAB_STATUS (u/s/g)\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_LAB + \"1 \" + PREFIX_LABSTATUS + \"s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"    // Edited status of Lab {LAB_NUMBER} for {PERSON_NAME} to {NEW_STATUS}","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_EDIT_LAB_STATUS_SUCCESS \u003d \"Edited status of Lab %1$s for %2$s to %3$s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_INVALID_STATUS_CHANGE \u003d \"New lab status provided is identical to previous\";","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"    // add this to commons.core.Messages if it also applies to other commands","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_INVALID_LAB_NUMBER \u003d \"The lab number provided is invalid\";","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"    private final Index index;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"    private final int labNumber;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"    private final LabStatus newStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"     * Creates an EditLabStatusCommand to edit the status of a Student\u0027s Lab","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"     * @param index The index of the Student (according to the displayed list)","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"     * @param labNumber The Lab number to edit","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"     * @param newStatus The new LabStatus of the Lab","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"    public EditLabStatusCommand(Index index, int labNumber, LabStatus newStatus) {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        requireAllNonNull(index, labNumber, newStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"        this.labNumber \u003d labNumber;","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"        this.newStatus \u003d newStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"        Person studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"        LabList listToEdit \u003d studentToEdit.getLabs();","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"            listToEdit.setLab(listToEdit.getLabByLabNumber(labNumber),","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"                    new Lab(String.valueOf(labNumber)).of(newStatus.name()));","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"        } catch (LabNotFoundException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"            throw new CommandException(MESSAGE_INVALID_LAB_NUMBER);","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"        } catch (DuplicateLabException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"            throw new CommandException(MESSAGE_INVALID_STATUS_CHANGE);","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"                String.format(MESSAGE_EDIT_LAB_STATUS_SUCCESS, labNumber, studentToEdit.getName(), newStatus.name()));","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"        if (!(other instanceof EditLabStatusCommand)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"        // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"        EditLabStatusCommand e \u003d (EditLabStatusCommand) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"        return index.equals(e.index) \u0026\u0026 labNumber \u003d\u003d e.labNumber \u0026\u0026 newStatus.equals(e.newStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"channne":103}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABSTATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.person.lab.StudentHasLabPredicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"            + \": Finds all students with the specified lab number and lab status\"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"            + \" and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"            + PREFIX_LAB + \"LAB_NUMBER \"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"            + PREFIX_LABSTATUS + \"LAB_STATUS \\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_LAB + \"1\" + \" \" + PREFIX_LABSTATUS + \"s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"    private final StudentHasLabPredicate predicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"    public FilterCommand(StudentHasLabPredicate predicate) {","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"                || (other instanceof FilterCommand","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate));","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"channne":3,"geetengtan":40}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"channne"},"content":" * Finds and lists all Students in the TAddressBook whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"channne"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose names contain any of \"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"channne":3,"-":39}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"channne"},"content":" * Lists all students in the TAddressBook to the user.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":2,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/RemoveLabCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":" * Deletes a Lab identified using its LAB_NUMBER from the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"public class RemoveLabCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    public static final String COMMAND_WORD \u003d \"labrm\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"            + \": Removes the Lab identified by the LAB_NUMBER from the TAddressBook.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"            + PREFIX_LAB + \"LAB_NUMBER \\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"            + PREFIX_LAB + \"1\";","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Lab %1$s removed\";","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_LAB_NOT_FOUND \u003d \"Lab %1$s does not exists in the TAddressBook\";","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    private final Lab toRemove;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"     * Creates an RemoveLabCommand to add the specified {@code Lab}","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"    public RemoveLabCommand(Lab lab) {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        requireNonNull(lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        toRemove \u003d lab;","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        if (!model.hasLab(toRemove)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"            throw new CommandException(String.format(MESSAGE_LAB_NOT_FOUND, toRemove.labNumber));","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"        model.removeLab(toRemove);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toRemove.labNumber));","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"        return (other instanceof RemoveLabCommand) \u0026\u0026 (toRemove.isSameLab(((RemoveLabCommand) other).toRemove));","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"bryans17":58}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EMAIL, PREFIX_GITHUB, PREFIX_TELEGRAM,","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"                        PREFIX_STUDENTID, PREFIX_TAG);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_EMAIL, PREFIX_GITHUB, PREFIX_TELEGRAM,","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"                PREFIX_STUDENTID)","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"        GithubUsername githubUsername \u003d ParserUtil.parseGithubUsername(argMultimap.getValue(PREFIX_GITHUB).get());","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"        Telegram telegram \u003d ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get());","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENTID).get());","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"        Person student \u003d new Person(name, email, tagList, githubUsername, telegram, studentId);","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        return new AddCommand(student);","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"channne":12,"-":50,"bryans17":3}},{"path":"src/main/java/seedu/address/logic/parser/AddLabCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.commands.AddLabCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":" * Parses input arguments and creates a new AddLabCommand object","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"public class AddLabCommandParser implements Parser\u003cAddLabCommand\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"     * Parses the given {@code String} of arguments in the context of the AddLabCommand","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"     * and returns a AddLabCommand object for execution.","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"    public AddLabCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"                    ArgumentTokenizer.tokenize(args, PREFIX_LAB);","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"            if (!isPrefixPresent(argMultimap) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLabCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"            Lab toAdd \u003d ParserUtil.parseLab(argMultimap.getValue(PREFIX_LAB).get());","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"            return new AddLabCommand(toAdd);","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLabCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"     * Returns true if PREFIX_LAB does not contain {@code Optional} values in the given","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    private static boolean isPrefixPresent(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        return argumentMultimap.getValue(PREFIX_LAB).isPresent();","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"bryans17":43}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.commands.AddLabCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.EditLabStatusCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.commands.RemoveLabCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"        case AddLabCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"            return new AddLabCommandParser().parse(arguments);","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"        case EditLabStatusCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"            return new EditLabStatusCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"        case RemoveLabCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"            return new RemoveLabCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":9,"-":76,"bryans17":7}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"    public static final Prefix PREFIX_GITHUB \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"    public static final Prefix PREFIX_TELEGRAM \u003d new Prefix(\"tl/\"); // need to change this in the future","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"    public static final Prefix PREFIX_STUDENTID \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    public static final Prefix PREFIX_LAB \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"    public static final Prefix PREFIX_LABSTATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"channne":1,"-":12,"bryans17":3,"geetengtan":2}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EMAIL, PREFIX_GITHUB, PREFIX_TELEGRAM,","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"                        PREFIX_STUDENTID, PREFIX_TAG);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"        if (argMultimap.getValue(PREFIX_GITHUB).isPresent()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"            editPersonDescriptor.setGithubUsername(ParserUtil","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"                    .parseGithubUsername(argMultimap.getValue(PREFIX_GITHUB).get()));","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"            editPersonDescriptor.setTelegram(ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get()));","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"        if (argMultimap.getValue(PREFIX_STUDENTID).isPresent()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"            editPersonDescriptor.setStudentId(ParserUtil","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"                    .parseStudentId(argMultimap.getValue(PREFIX_STUDENTID).get()));","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"channne":11,"-":74,"bryans17":5}},{"path":"src/main/java/seedu/address/logic/parser/EditLabStatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABSTATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.EditLabStatusCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.lab.LabStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"channne"},"content":" * Parses input arguments and creates a new EditLabStatusCommand object","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"channne"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"public class EditLabStatusCommandParser implements Parser\u003cEditLabStatusCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"     * Parses the given {@code String} of arguments in the context of the EditLabStatusCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"     * and returns an EditLabStatusCommand object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"    public EditLabStatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LAB, PREFIX_LABSTATUS);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_LAB, PREFIX_LABSTATUS)","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditLabStatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"        Index index;","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditLabStatusCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"        int labNumber \u003d ParserUtil.parseLab(argMultimap.getValue(PREFIX_LAB).get()).labNumber;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"        LabStatus labStatus \u003d ParserUtil.parseLabStatus(argMultimap.getValue(PREFIX_LABSTATUS).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"        return new EditLabStatusCommand(index, labNumber, labStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"channne":58}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABSTATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.person.lab.LabStatus;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.person.lab.StudentHasLabPredicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":" * Parses input arguments and creates a FilterCommand object","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"     * and returns a FilterCommand object for execution","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"     * @throws ParseException if the user input does not conform the expected input","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LAB, PREFIX_LABSTATUS);","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_LAB, PREFIX_LABSTATUS)","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"        Lab lab \u003d ParserUtil.parseLab(argMultimap.getValue(PREFIX_LAB).get());","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"        LabStatus labStatus \u003d ParserUtil.parseLabStatus(argMultimap.getValue(PREFIX_LABSTATUS).get());","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"        return new FilterCommand(new StudentHasLabPredicate(lab.thatIs(labStatus)));","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"geetengtan":50}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.lab.LabStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"channne"},"content":" * Contains utility methods used for parsing strings in the various Parser classes.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":100,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"bryans17"},"content":"     * Parses a {@code String githubUsername} into an {@code GithubUsername}.","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"     * @throws ParseException if the given {@code githubUsername} is invalid.","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"bryans17"},"content":"    public static GithubUsername parseGithubUsername(String githubUsername) throws ParseException {","lastModifiedDate":"2022-03-04"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"        requireNonNull(githubUsername);","lastModifiedDate":"2022-03-04"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"        String trimmedUsername \u003d githubUsername.trim();","lastModifiedDate":"2022-03-04"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"        if (!GithubUsername.isValidGithubUsername(trimmedUsername)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"            throw new ParseException(GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":122,"author":{"gitId":"bryans17"},"content":"        return new GithubUsername(trimmedUsername);","lastModifiedDate":"2022-03-04"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":124,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"channne"},"content":"     * Parses a {@code String telegram} into an {@code Telegram}.","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"channne"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"channne"},"content":"     * @throws ParseException if the given {@code telegram} is invalid.","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"    public static Telegram parseTelegram(String telegram) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"channne"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"channne"},"content":"        String trimmedTelegram \u003d telegram.trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"channne"},"content":"        if (!Telegram.isValidTelegram(trimmedTelegram)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"channne"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"channne"},"content":"        return new Telegram(trimmedTelegram);","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"channne"},"content":"     * Parses a {@code String studentId} into an {@code StudentId}.","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"channne"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"channne"},"content":"     * Input will be converted to uppercase.","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"channne"},"content":"     * @throws ParseException if the given {@code studentId} is invalid.","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"channne"},"content":"    public static StudentId parseStudentId(String studentId) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"channne"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"channne"},"content":"        String trimmedId \u003d studentId.trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"channne"},"content":"        String capitalId \u003d trimmedId.toUpperCase();","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"        if (!StudentId.isValidStudentId(capitalId)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"channne"},"content":"            throw new ParseException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"channne"},"content":"        return new StudentId(capitalId);","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":162,"author":{"gitId":"bryans17"},"content":"     * Parses a {@code String labNumber} into an {@code Lab}.","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"bryans17"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-08"},{"lineNumber":164,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"bryans17"},"content":"     * @throws ParseException if the given {@code labNumber} is invalid.","lastModifiedDate":"2022-03-08"},{"lineNumber":166,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"bryans17"},"content":"    public static Lab parseLab(String labNumber) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"bryans17"},"content":"        requireNonNull(labNumber);","lastModifiedDate":"2022-03-08"},{"lineNumber":169,"author":{"gitId":"bryans17"},"content":"        String trimmedLab \u003d labNumber.trim();","lastModifiedDate":"2022-03-08"},{"lineNumber":170,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":171,"author":{"gitId":"bryans17"},"content":"        if (!Lab.isValidLab(trimmedLab)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"bryans17"},"content":"            throw new ParseException(Lab.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":173,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":174,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"bryans17"},"content":"        return new Lab(trimmedLab);","lastModifiedDate":"2022-03-08"},{"lineNumber":176,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":177,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":178,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"channne"},"content":"     * Parses a {@code String labStatus} into a {@code LabStatus}.","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"channne"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"channne"},"content":"     * @throws ParseException if the given {@code labStatus} is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":183,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"channne"},"content":"    public static LabStatus parseLabStatus(String labStatus) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"channne"},"content":"        requireNonNull(labStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"channne"},"content":"        String trimmedLabStatus \u003d labStatus.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"channne"},"content":"        if (!LabStatus.isValidLabStatus(trimmedLabStatus)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"channne"},"content":"            throw new ParseException(LabStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"channne"},"content":"        switch(trimmedLabStatus) {","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"channne"},"content":"        case \"u\":","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"channne"},"content":"            return LabStatus.UNSUBMITTED;","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"channne"},"content":"        case \"s\":","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"channne"},"content":"            return LabStatus.SUBMITTED;","lastModifiedDate":"2022-03-16"},{"lineNumber":197,"author":{"gitId":"channne"},"content":"        case \"g\":","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"channne"},"content":"            return LabStatus.GRADED;","lastModifiedDate":"2022-03-16"},{"lineNumber":199,"author":{"gitId":"channne"},"content":"        default:","lastModifiedDate":"2022-03-16"},{"lineNumber":200,"author":{"gitId":"channne"},"content":"            throw new ParseException(Lab.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":201,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":203,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"channne":68,"-":92,"bryans17":44}},{"path":"src/main/java/seedu/address/logic/parser/RemoveLabCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.commands.RemoveLabCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"public class RemoveLabCommandParser implements Parser\u003cRemoveLabCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveLabCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"     * and returns a RemoveLabCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"    public RemoveLabCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"                    ArgumentTokenizer.tokenize(args, PREFIX_LAB);","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"            if (!isPrefixPresent(argMultimap) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveLabCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"            Lab toRemove \u003d ParserUtil.parseLab(argMultimap.getValue(PREFIX_LAB).get());","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"            return new RemoveLabCommand(toRemove);","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveLabCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"     * Returns true if PREFIX_LAB does not contain {@code Optional} values in the given","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    private static boolean isPrefixPresent(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        return argumentMultimap.getValue(PREFIX_LAB).isPresent();","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"bryans17":40}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.MasterLabList;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":" * Wraps all data at the TAddressbook level","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"    private final UniquePersonList students;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    private final MasterLabList labs;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"        students \u003d new UniquePersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    public AddressBook() {","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        labs \u003d new MasterLabList();","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"     * Creates a TAddressBook using the Students in the {@code toBeCopied}","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"     * Replaces the contents of the Student list with {@code persons}.","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"     * {@code students} must not contain duplicate Students.","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"    public void setPersons(List\u003cPerson\u003e students) {","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        this.students.setPersons(students);","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"     * Replaces the contents of the Lab list with {@code labs}.","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"     * {@code labs} must not contain duplicate Labs.","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"    public void setLabs(MasterLabList labs) {","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"        this.labs.setLabs(labs);","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"        setLabs(newData.getMasterLabList());","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"    public boolean hasPerson(Person student) {","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        return students.contains(student);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"     * Adds a person to the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"        students.add(p);","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"     * {@code target} must exist in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"     * The Student identity of {@code editedStudent} must not be the same as","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"     * another existing Student in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"    public void setPerson(Person target, Person editedStudent) {","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"        students.setPerson(target, editedStudent);","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"     * {@code key} must exist in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"        students.remove(key);","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"     * Returns true if a Lab with the same identity as {@code lab} exists in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"    public boolean hasLab(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"        requireNonNull(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"        return labs.contains(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"channne"},"content":"     * Adds a lab to the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"     * The lab must not already exist in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"     * @param lab The lab to be added.","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":127,"author":{"gitId":"bryans17"},"content":"    public void addLab(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":128,"author":{"gitId":"bryans17"},"content":"        labs.add(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"channne"},"content":"        students.addLabToAll(lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":132,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"bryans17"},"content":"     * Removes a lab from the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"bryans17"},"content":"     * The lab must already exist in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"bryans17"},"content":"     * @param lab The lab to be removed.","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"bryans17"},"content":"    public void removeLab(Lab lab) {","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"bryans17"},"content":"        Index toRemove \u003d labs.removeLab(lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"bryans17"},"content":"        students.removeLabFromAll(toRemove);","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"channne"},"content":"        return students.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":156,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":157,"author":{"gitId":"bryans17"},"content":"    public MasterLabList getMasterLabList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":158,"author":{"gitId":"bryans17"},"content":"        return labs;","lastModifiedDate":"2022-03-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"channne"},"content":"                \u0026\u0026 students.equals(((AddressBook) other).students));","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"channne"},"content":"        return students.hashCode();","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"channne":32,"-":101,"bryans17":39}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"     * Returns the user prefs\u0027 TAddressBook file path.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"     * Sets the user prefs\u0027 TAddressBook file path.","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"     * Replaces TAddressBook data with the data in {@code addressBook}.","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"    /** Returns the TAddressBook */","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"     * {@code person} must not already exist in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"     * {@code target} must exist in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"     * Returns true if a lab with the same identity as {@code lab} exists in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"    boolean hasLab(Lab lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"bryans17"},"content":"     * Adds the given lab.","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"bryans17"},"content":"     * {@code lab} must not already exist in the TAddressbook.","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"bryans17"},"content":"    void addLab(Lab lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"bryans17"},"content":"     * Removes the given lab.","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"     * {@code lab} must already exist in the TAddressbook.","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"    void removeLab(Lab lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"channne":8,"-":80,"bryans17":17}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":" * Represents the in-memory model of the TAddressBook data.","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"     * Initializes a ModelManager with the given TAddressBook and userPrefs.","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"        logger.fine(\"Initializing with TAddress book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TAddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Lab Related methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"    public boolean hasLab(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"        requireNonNull(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"        return addressBook.hasLab(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"    public void addLab(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"        requireNonNull(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":126,"author":{"gitId":"bryans17"},"content":"        addressBook.addLab(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":127,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":128,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"    public void removeLab(Lab lab) {","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"bryans17"},"content":"        requireNonNull(lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"bryans17"},"content":"        addressBook.removeLab(lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"channne":2,"-":146,"bryans17":23}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.MasterLabList;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"channne"},"content":" * Unmodifiable view of a TAddress book","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"     * Returns an unmodifiable view of the student list.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"     * Returns a MasterLabList containing all the Labs.","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"     * This list will not contain any duplicate Labs.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    MasterLabList getMasterLabList();","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"channne":4,"-":14,"bryans17":6}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"channne"},"content":" * Represents a Student\u0027s email in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"     * Returns if a given string is a valid Email.","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":2,"-":69}},{"path":"src/main/java/seedu/address/model/person/GithubUsername.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"channne"},"content":" * Represents a Student\u0027s GitHub Username in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGithubUsername(String)}","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"public class GithubUsername {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"            \"GitHub usernames should only contain at most 39 alphanumeric characters and hyphens,\"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"                    + \" but cannot have consecutive hyphens and cannot begin or end with hyphens.\";","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    /*","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"     * The first and last character of the GitHub Username must not be a hyphen.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"     * GitHub Usernames can\u0027t have consecutive hyphens","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"     * and can\u0027t be longer than 39 alphanumeric characters.","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}](?:[\\\\p{Alnum}]|-(?\u003d[\\\\p{Alnum}])){0,38}\";","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    public final String username;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"     * Constructs an {@code GithubUsername}.","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"     * @param githubUsername A valid GitHub Username.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    public GithubUsername(String githubUsername) {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        requireNonNull(githubUsername);","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        checkArgument(isValidGithubUsername(githubUsername), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        username \u003d githubUsername;","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"     * Returns true if a given string is a valid GitHub Username.","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"    public static boolean isValidGithubUsername(String test) {","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"    public String toString() {","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        return username;","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"                || (other instanceof GithubUsername // instanceof handles nulls","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"                \u0026\u0026 username.equals(((GithubUsername) other).username)); // state check","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"        return username.hashCode();","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"channne":5,"bryans17":55}},{"path":"src/main/java/seedu/address/model/person/MasterLabList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.exceptions.LabNotFoundException;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.LabList;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"public class MasterLabList extends LabList {","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"     * Removes the given Lab from the MasterLabList and returns the index of the given Lab.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"     * @param lab The Lab that is to be removed","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"     * @return An Index object specifying where the lab is in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"     * @throws LabNotFoundException If the MasterLabList does not contain the given Lab.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    public Index removeLab(Lab lab) throws LabNotFoundException {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"        requireNonNull(lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"        if (!contains(lab)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"            throw new LabNotFoundException(lab.labNumber);","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"        Index toRemove \u003d indexOf(lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"        remove(toRemove);","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"        return toRemove;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"     * Returns the index of the Lab with {@code labNumber}","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"     * @param toIndex The lab number of the Lab to search for.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    private Index indexOf(Lab toIndex) throws LabNotFoundException {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        requireNonNull(toIndex);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        if (!contains(toIndex)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"            throw new LabNotFoundException(toIndex.labNumber);","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        return Index.fromZeroBased(super.asUnmodifiableObservableList().indexOf(toIndex));","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"     * Returns a copy of the {@code masterList}.","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"    public ArrayList\u003cLab\u003e getMasterList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"        ArrayList\u003cLab\u003e t \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"        t.addAll(super.asUnmodifiableObservableList());","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"        return t;","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"                || (other instanceof MasterLabList // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"                \u0026\u0026 super.equals(other));","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"bryans17":60}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"channne"},"content":" * Represents a Student\u0027s name in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"            \"Names should only contain alphanumeric characters and spaces, and should not be blank\";","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"     * @param name A valid Name.","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"     * Returns true if a given string is a valid Name.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":4,"-":54,"bryans17":1}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"    public boolean test(Person student) {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(student.getName().fullName, keyword));","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"channne":2,"-":29}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.LabList;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"channne"},"content":" * Represents a Student in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    private final GithubUsername githubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    private final Telegram telegram;","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    private final LabList labs;","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"    public Person(Name name, Email email, Set\u003cTag\u003e tags,","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"                  GithubUsername githubUsername, Telegram telegram, StudentId studentId) {","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        requireAllNonNull(name, email, tags, githubUsername, studentId);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        this.githubUsername \u003d githubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"        this.labs \u003d new LabList();","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"    public GithubUsername getGithubUsername() {","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"        return githubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"    public Telegram getTelegram() {","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"        return telegram;","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"    public StudentId getStudentId() {","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        return studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"    public LabList getLabs() {","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"        return labs;","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"    public void setLabs(LabList ll) {","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"        labs.setLabs(ll);","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"     * Adds a Lab to the Person\u0027s {@code labs}.","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"     * The Lab must not already exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"     * @param lab The Lab to add.","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"    public void addLab(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"        labs.add(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"bryans17"},"content":"     * Removes the lab at the specified index from the Person\u0027s {@code labs}.","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"     * @param index The index of the lab to be removed.","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"bryans17"},"content":"    public void removeLab(Index index) {","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"bryans17"},"content":"        labs.remove(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"     * Returns true if both Students have the same name.","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"     * This defines a weaker notion of equality between two Students.","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"    public boolean isSamePerson(Person otherStudent) {","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"                \u0026\u0026 otherStudent.getName().equals(getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"     * Returns true if both Students have the same identity and data fields.","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"     * This defines a stronger notion of equality between two Students.","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"channne"},"content":"        Person otherStudent \u003d (Person) other;","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"channne"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"                \u0026\u0026 otherStudent.getEmail().equals(getEmail())","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"channne"},"content":"                \u0026\u0026 otherStudent.getTags().equals(getTags())","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"channne"},"content":"                \u0026\u0026 otherStudent.getGithubUsername().equals(getGithubUsername())","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"channne"},"content":"                \u0026\u0026 otherStudent.getTelegram().equals(getTelegram())","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"channne"},"content":"                \u0026\u0026 otherStudent.getStudentId().equals(getStudentId());","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"bryans17"},"content":"        return Objects.hash(name, email, tags, githubUsername, telegram, studentId);","lastModifiedDate":"2022-03-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"bryans17"},"content":"                .append(\"; Github: \")","lastModifiedDate":"2022-03-04"},{"lineNumber":151,"author":{"gitId":"channne"},"content":"                .append(getGithubUsername())","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"bryans17"},"content":"                .append(\"; Telegram: \")","lastModifiedDate":"2022-03-05"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"                .append(getTelegram())","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"                .append(\"; Student ID: \")","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"channne"},"content":"                .append(getStudentId());","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":28,"-":91,"bryans17":45}},{"path":"src/main/java/seedu/address/model/person/StudentId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"channne"},"content":" * Represents a Student\u0027s StudentId in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"channne"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStudentId(String)}","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"channne"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"public class StudentId {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Student IDs should start with an A, \"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"            + \"followed by 7 numbers, then end with a capital alphabet.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"    /*","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"     * The first character of the Student ID must be an A,","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"     * followed by 7 digits, then a capital alphabet.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"    public static final String VALIDATION_REGEX \u003d \"A\\\\d{7}[A-Z]\";","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"    public final String id;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"     * Constructs an {@code StudentId}.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"     * @param studentId A valid Student ID.","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"    public StudentId(String studentId) {","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"        checkArgument(isValidStudentId(studentId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"        id \u003d studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"     * Returns true if a given string is a valid Student ID.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"    public static boolean isValidStudentId(String test) {","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        return id;","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"                || (other instanceof StudentId // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"                \u0026\u0026 id.equals(((StudentId) other).id)); // state check","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"        return id.hashCode();","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"channne":57}},{"path":"src/main/java/seedu/address/model/person/Telegram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"channne"},"content":" * Represents a Student\u0027s Telegram handle in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegram(String)}","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"public class Telegram {","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"            \"Telegram handles should only contain alphanumeric characters and underscores,\"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"                    + \"and it should be 5 to 32 characters long.\";","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    /*","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"     * The first character of the Telegram handle must not be a whitespace,","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"     * otherwise \" \" (a blank string) becomes a valid input and must be at least","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"     * 5 alphanumeric characters or underscores but no more than 32.","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9_]{5,32}\";","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    public final String handle;","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"     * Constructs a {@code Telegram}.","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"     * @param handle A valid Telegram handle.","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"    public Telegram(String handle) {","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"        requireNonNull(handle);","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        checkArgument(isValidTelegram(handle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        this.handle \u003d handle;","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"     * Returns true if a given string is a valid Telegram handle.","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    public static boolean isValidTelegram(String test) {","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        return handle;","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"                || (other instanceof Telegram // instanceof handles nulls","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"                \u0026\u0026 handle.equals(((Telegram) other).handle)); // state check","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"        return handle.hashCode();","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"channne":2,"bryans17":59}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"channne"},"content":" * A list of Students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"channne"},"content":" * A Student is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"channne"},"content":" * of students uses Person#isSamePerson(Person) for equality so as to ensure that the student being added or updated is","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"channne"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a student uses Person#equals(Object) so","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"channne"},"content":" * as to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"     * Adds a student to the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"    public void setPerson(Person target, Person editedStudent) {","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"        if (!target.isSamePerson(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"     * The student must exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"    public void setPersons(List\u003cPerson\u003e students) {","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"        if (!personsAreUnique(students)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"        internalList.setAll(students);","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"     * Adds the given {@code lab} to every student in the {@code internalList}.","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"     * @param lab The Lab to add.","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"    public void addLabToAll(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"        requireNonNull(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"bryans17"},"content":"        internalList.forEach(person -\u003e person.addLab(lab));","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"bryans17"},"content":"     * Removes the given {@code lab} from every student in the {@code internalList}.","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"     * @param index The Lab to be removed.","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"    public void removeLabFromAll(Index index) {","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"        internalList.forEach(person -\u003e person.removeLab(index));","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"channne"},"content":"        // TODO: refine later","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"channne"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"channne"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e students) {","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"channne"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"channne"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"                if (students.get(i).isSamePerson(students.get(j))) {","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":29,"-":113,"bryans17":18}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateLabException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"public class DuplicateLabException extends RuntimeException {","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"    public DuplicateLabException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"        super(\"Operation would result in duplicate labs\");","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"bryans17":8}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"channne"},"content":" * Signals that the operation will result in duplicate Students (Students are considered duplicates if they have the","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"channne"},"content":" * same identity).","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"channne":2,"-":9}},{"path":"src/main/java/seedu/address/model/person/exceptions/InvalidLabStatusException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"public class InvalidLabStatusException extends RuntimeException {","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"    public InvalidLabStatusException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"        super(\"The Lab Status of the lab is invalid.\");","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"bryans17":8}},{"path":"src/main/java/seedu/address/model/person/exceptions/LabNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"public class LabNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"    public LabNotFoundException(int target) {","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"        super(\"Lab \" + target + \" does not exist yet.\");","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"bryans17":8}},{"path":"src/main/java/seedu/address/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"channne"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"channne":1,"-":5}},{"path":"src/main/java/seedu/address/model/person/lab/Lab.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.person.lab;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.exceptions.DuplicateLabException;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":" * Represents a Lab entry.","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLab(String)}","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"public class Lab {","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"            \"Lab number should be a valid positive integer\";","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    /*","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"     * Lab number has to be a positive Integer.","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"    public static final String VALIDATION_REGEX \u003d \"[1-9]\\\\d*\";","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    public final int labNumber;","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    public final LabStatus labStatus;","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"     * Constructs an {@code Lab}.","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"     * @param labNumber A valid lab number.","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    public Lab(String labNumber) {","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        // labStatus is always initialized to {@code LabStatus.UNSUBMITTED}","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        this(labNumber, LabStatus.UNSUBMITTED);","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"     * Constructs an {@code Lab}.","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"     * @param labNumber A valid lab number.","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"     * @param labStatus The status of the Lab to be created.","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"    private Lab(String labNumber, LabStatus labStatus) {","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        requireNonNull(labNumber);","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"        checkArgument(isValidLab(labNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"        this.labNumber \u003d Integer.parseInt(labNumber);","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        this.labStatus \u003d labStatus;","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"     * Returns true if a given string is a valid lab number.","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"    public static boolean isValidLab(String test) {","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"     * Returns a new immutable lab with the same attributes as this.","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"    public Lab createCopy() {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"        return new Lab(String.valueOf(labNumber), labStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"     * Returns a new immutable lab with the same lab number as this and the given lab status.","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"    public Lab editLabStatus(LabStatus status) throws DuplicateLabException {","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"        if (status.equals(this.labStatus)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"            throw new DuplicateLabException();","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"        return new Lab(String.valueOf(labNumber), status);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"     * Returns a new immutable lab with the same attributes as this.","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"    public Lab of(String labStatusString) {","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"        switch (labStatusString) {","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"        case \"UNSUBMITTED\":","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"            return new Lab(String.valueOf(labNumber), LabStatus.UNSUBMITTED);","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"bryans17"},"content":"        case \"SUBMITTED\":","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"            return new Lab(String.valueOf(labNumber), LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"        case \"GRADED\":","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"            return new Lab(String.valueOf(labNumber), LabStatus.GRADED);","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"        default:","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"            throw new IllegalArgumentException(\"Did not expect \" + labStatusString);","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"     * Returns a new immutable {@code Lab} with the specified {@code LabStatus}","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"    public Lab thatIs(LabStatus labStatus) {","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"        switch (labStatus) {","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"        case UNSUBMITTED:","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"            return new Lab(String.valueOf(labNumber), LabStatus.UNSUBMITTED);","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"        case SUBMITTED:","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"            return new Lab(String.valueOf(labNumber), LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"        case GRADED:","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"            return new Lab(String.valueOf(labNumber), LabStatus.GRADED);","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"        default:","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"            throw new IllegalArgumentException(\"Did not expect \" + labStatus.name());","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"     * Returns true if both Labs have the same lab number.","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"     * This defines a weaker notion of equality between two Labs.","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"bryans17"},"content":"    public boolean isSameLab(Lab otherLab) {","lastModifiedDate":"2022-03-07"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"        if (otherLab \u003d\u003d this) {","lastModifiedDate":"2022-03-07"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"            return true;","lastModifiedDate":"2022-03-07"},{"lineNumber":112,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":113,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"        return otherLab !\u003d null \u0026\u0026 otherLab.labNumber \u003d\u003d this.labNumber;","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"    public String toString() {","lastModifiedDate":"2022-03-07"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"        return \"Lab \" + labNumber;","lastModifiedDate":"2022-03-07"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":122,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"     * Returns true if both Labs have the same lab number and LabStatus.","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"channne"},"content":"     * This defines a stronger notion of equality between two Labs.","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":127,"author":{"gitId":"bryans17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":128,"author":{"gitId":"bryans17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":129,"author":{"gitId":"bryans17"},"content":"                || (other instanceof Lab // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":130,"author":{"gitId":"channne"},"content":"                \u0026\u0026 labNumber \u003d\u003d (((Lab) other).labNumber) // labNumber check","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"                \u0026\u0026 labStatus \u003d\u003d (((Lab) other).labStatus)); // labStatus check","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":133,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":134,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"channne":38,"bryans17":96}},{"path":"src/main/java/seedu/address/model/person/lab/LabList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.person.lab;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import java.util.List;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.exceptions.DuplicateLabException;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.exceptions.LabNotFoundException;","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"public class LabList implements Iterable\u003cLab\u003e {","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"    private final ObservableList\u003cLab\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"    private final ObservableList\u003cLab\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    private final Comparator\u003cLab\u003e sortByLabNumber \u003d new Comparator\u003c\u003e() {","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"        public int compare(Lab l1, Lab l2) {","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"            // Ignoring the case when l1.labNumber \u003d\u003d l2.labNumber as there shouldn\u0027t be duplicate labs in the list.","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"            return l1.labNumber - l2.labNumber;","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    };","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"     * Returns true if the list contains an equivalent Lab as the given argument.","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"     * @param toCheck The Lab to be checked","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    public boolean contains(Lab toCheck) {","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        return internalList.stream().anyMatch(toCheck::isSameLab);","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"    public Lab getLab(Lab labToGet) {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"        requireNonNull(labToGet);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"        if (!contains(labToGet)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"            throw new LabNotFoundException(labToGet.labNumber);","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"        for (Lab l : internalList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"            if (l.isSameLab(labToGet)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"                return l;","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        throw new LabNotFoundException(labToGet.labNumber);","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"     * Searches for and returns a Lab that has the given lab number (but potentially different LabStatus)","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"    public Lab getLabByLabNumber(int labNumberToGet) throws LabNotFoundException {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"        requireNonNull(labNumberToGet);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"        for (Lab l : internalList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"            if (l.labNumber \u003d\u003d labNumberToGet) {","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"                return l.createCopy();","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"        throw new LabNotFoundException(labNumberToGet);","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"     * Adds a Lab to the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"     * The Lab must not already exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"     * Maintains sorted by lab number invariant.","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"     * @param toAdd The Lab to add.","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"    public void add(Lab toAdd) throws DuplicateLabException {","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"bryans17"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-07"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"            throw new DuplicateLabException();","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-07"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"        internalList.sort(sortByLabNumber);","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"     * Replaces the Lab {@code target} in the list with {@code editedLab}.","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"bryans17"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-07"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"     * The lab identity of {@code editedLab} must not be the same as another existing Lab in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":93,"author":{"gitId":"bryans17"},"content":"    public void setLab(Lab target, Lab editedLab) throws LabNotFoundException, DuplicateLabException {","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"bryans17"},"content":"        requireAllNonNull(target, editedLab);","lastModifiedDate":"2022-03-07"},{"lineNumber":95,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"        if (target.equals(editedLab)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"            throw new DuplicateLabException();","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"bryans17"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"bryans17"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-07"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"            throw new LabNotFoundException(target.labNumber);","lastModifiedDate":"2022-03-07"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":105,"author":{"gitId":"bryans17"},"content":"        internalList.set(index, editedLab);","lastModifiedDate":"2022-03-07"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"     * Removes the equivalent Lab from the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"     * The Lab must exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"     * Maintains sorted by lab number invariant.","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"     * @param toRemove The Lab to remove from the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"    public void remove(Lab toRemove) throws LabNotFoundException {","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-07"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"            throw new LabNotFoundException(toRemove.labNumber);","lastModifiedDate":"2022-03-07"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"        internalList.sort(sortByLabNumber);","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":122,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"     * Removes the lab at the specified index.","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"     * The index must be \u003c the size of {@code internalList}.","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"bryans17"},"content":"     * Maintains sorted by lab number invariant.","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"bryans17"},"content":"     * @param index The index of the lab to be removed.","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"    public void remove(Index index) throws LabNotFoundException {","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"bryans17"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"bryans17"},"content":"        // this guard clause should not be invoked","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"bryans17"},"content":"        if (index.getZeroBased() \u003e\u003d internalList.size()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"bryans17"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"bryans17"},"content":"        internalList.remove(index.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"bryans17"},"content":"        internalList.sort(sortByLabNumber);","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"channne"},"content":"     * Replaces the contents of this list with {@code replacement}.","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"channne"},"content":"     * @param replacement is assumed to not contain duplicate Labs.","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"bryans17"},"content":"    public void setLabs(LabList replacement) {","lastModifiedDate":"2022-03-07"},{"lineNumber":147,"author":{"gitId":"bryans17"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-07"},{"lineNumber":148,"author":{"gitId":"bryans17"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-07"},{"lineNumber":149,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":150,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":151,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":152,"author":{"gitId":"bryans17"},"content":"     * Replaces the contents of this list with {@code labs}.","lastModifiedDate":"2022-03-07"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"     * {@code labs} must not contain duplicate Labs.","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":155,"author":{"gitId":"bryans17"},"content":"    public void setLabs(List\u003cLab\u003e labs) throws DuplicateLabException {","lastModifiedDate":"2022-03-12"},{"lineNumber":156,"author":{"gitId":"bryans17"},"content":"        requireAllNonNull(labs);","lastModifiedDate":"2022-03-07"},{"lineNumber":157,"author":{"gitId":"bryans17"},"content":"        if (!labsAreUnique(labs)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":158,"author":{"gitId":"bryans17"},"content":"            throw new DuplicateLabException();","lastModifiedDate":"2022-03-07"},{"lineNumber":159,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":160,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":161,"author":{"gitId":"bryans17"},"content":"        internalList.setAll(labs);","lastModifiedDate":"2022-03-07"},{"lineNumber":162,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":163,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":164,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":165,"author":{"gitId":"bryans17"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-07"},{"lineNumber":166,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":167,"author":{"gitId":"bryans17"},"content":"    public ObservableList\u003cLab\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-07"},{"lineNumber":168,"author":{"gitId":"bryans17"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-07"},{"lineNumber":169,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":170,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":171,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":172,"author":{"gitId":"bryans17"},"content":"    public Iterator\u003cLab\u003e iterator() {","lastModifiedDate":"2022-03-07"},{"lineNumber":173,"author":{"gitId":"bryans17"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-07"},{"lineNumber":174,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":175,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":176,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":177,"author":{"gitId":"bryans17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":178,"author":{"gitId":"bryans17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":179,"author":{"gitId":"bryans17"},"content":"                || (other instanceof LabList // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":180,"author":{"gitId":"bryans17"},"content":"                \u0026\u0026 internalList.equals(((LabList) other).internalList));","lastModifiedDate":"2022-03-07"},{"lineNumber":181,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":182,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":183,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":184,"author":{"gitId":"bryans17"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-07"},{"lineNumber":185,"author":{"gitId":"bryans17"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-07"},{"lineNumber":186,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":187,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":188,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":189,"author":{"gitId":"channne"},"content":"     * Returns true if {@code labs} contains only unique Labs.","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":191,"author":{"gitId":"bryans17"},"content":"    private boolean labsAreUnique(List\u003cLab\u003e labs) {","lastModifiedDate":"2022-03-07"},{"lineNumber":192,"author":{"gitId":"bryans17"},"content":"        for (int i \u003d 0; i \u003c labs.size() - 1; i++) {","lastModifiedDate":"2022-03-07"},{"lineNumber":193,"author":{"gitId":"bryans17"},"content":"            for (int j \u003d i + 1; j \u003c labs.size(); j++) {","lastModifiedDate":"2022-03-07"},{"lineNumber":194,"author":{"gitId":"bryans17"},"content":"                if (labs.get(i).isSameLab(labs.get(j))) {","lastModifiedDate":"2022-03-07"},{"lineNumber":195,"author":{"gitId":"bryans17"},"content":"                    return false;","lastModifiedDate":"2022-03-07"},{"lineNumber":196,"author":{"gitId":"bryans17"},"content":"                }","lastModifiedDate":"2022-03-07"},{"lineNumber":197,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-03-07"},{"lineNumber":198,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":199,"author":{"gitId":"bryans17"},"content":"        return true;","lastModifiedDate":"2022-03-07"},{"lineNumber":200,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":201,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":202,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"channne":50,"bryans17":152}},{"path":"src/main/java/seedu/address/model/person/lab/LabStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.person.lab;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"channne"},"content":" * Represents the possible LabStatuses a Lab can have.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"channne"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"public enum LabStatus {","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"    UNSUBMITTED, SUBMITTED, GRADED;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"            \"LabStatus should be u, s, or g, which respectively stands for \"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"            + \"Unsubmitted, Submitted, and Graded\";","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"    public static final String VALIDATION_REGEX \u003d \"[usg]\";","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"     * Returns true if a given string is a valid LabStatus","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"    public static boolean isValidLabStatus(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"channne":17,"bryans17":5}},{"path":"src/main/java/seedu/address/model/person/lab/StudentHasLabPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.model.person.lab;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":" * Tests that a {@code Student} has a {@code Lab} that matches the specified one","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"public class StudentHasLabPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"    private final Lab lab;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"    public StudentHasLabPredicate(Lab lab) {","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"        this.lab \u003d lab;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"    public boolean test(Person student) {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"        if (!student.getLabs().contains(lab)) { // student does not have lab -\u003e return false","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"        } else { // student has lab -\u003e check if labStatus is same","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"            Lab labForStudent \u003d student.getLabs().getLab(lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"            return labForStudent.equals(lab);","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"                || (other instanceof StudentHasLabPredicate // instanceof handle units","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"                \u0026\u0026 lab.equals(((StudentHasLabPredicate) other).lab)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"channne":4,"geetengtan":32}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"channne"},"content":" * Represents a Tag in the TAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"channne":1,"-":53}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import javafx.util.Pair;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.LabList;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Email(\"alexyeoh@example.com\"), getTagSet(\"friends\"),","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"                new GithubUsername(\"alexyeoh\"), new Telegram(\"alex_yeoh\"), new StudentId(\"A0123456B\")),","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"            new Person(new Name(\"Bernice Yu\"), new Email(\"berniceyu@example.com\"), getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"                new GithubUsername(\"berniceyu\"), new Telegram(\"bernice_yu\"), new StudentId(\"A1234567C\")),","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Email(\"charlotte@example.com\"), getTagSet(\"neighbors\"),","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"                new GithubUsername(\"charlotteoliveiro\"), new Telegram(\"charlotte_oliverio\"),","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"                new StudentId(\"A0123457C\")),","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"            new Person(new Name(\"David Li\"), new Email(\"lidavid@example.com\"), getTagSet(\"family\"),","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"                new GithubUsername(\"davidli\"), new Telegram(\"david_li\"), new StudentId(\"A0123458D\")),","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Email(\"irfan@example.com\"), getTagSet(\"classmates\"),","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"                new GithubUsername(\"irfanibrahim\"), new Telegram(\"irfan_ibrahim\"), new StudentId(\"A0123459E\")),","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Email(\"royb@example.com\"), getTagSet(\"colleagues\"),","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"                new GithubUsername(\"roybalakrishnan\"), new Telegram(\"roy_balakrishnan\"),","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"                new StudentId(\"A0123450F\"))","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"     * Returns a sample TAddressBook based on the sample students.","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"        for (Person sampleStudent : getSamplePersons()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"            sampleAb.addPerson(sampleStudent);","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"     * Returns a LabList containing the list of strings given.","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"    @SafeVarargs","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"    public static LabList getLabSet(Pair\u003cString, String\u003e... strings) {","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"        LabList ll \u003d new LabList();","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"        ll.setLabs(Arrays.stream(strings)","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"                .map(x -\u003e (new Lab(x.getKey())).of(x.getValue()))","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"        return ll;","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"channne":25,"-":38,"bryans17":13}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedLabNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":" * Jackson-friendly version of {@link Lab}.","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"class JsonAdaptedLabNumber {","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"    private final String labNumber;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"     * Constructs a {@code JsonAdaptedLab} with the given {@code labNumber}.","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"    public JsonAdaptedLabNumber(String labNumber) {","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"        this.labNumber \u003d labNumber;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    public JsonAdaptedLabNumber(Lab source) {","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"        labNumber \u003d String.valueOf(source.labNumber);","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    @JsonValue","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"    public String getLabNumber() {","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        return labNumber;","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Lab} object.","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted lab.","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"    public Lab toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        if (!Lab.isValidLab(labNumber)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"            throw new IllegalValueException(Lab.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        return new Lab(labNumber);","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"bryans17":49}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedLabStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":" * Jackson-friendly version of {@link Lab}.","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"class JsonAdaptedLabStatus {","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"    private final String labStatus;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"     * Constructs a {@code JsonAdaptedLab} with the given {@code labNumber}.","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"    public JsonAdaptedLabStatus(String labStatus) {","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"        this.labStatus \u003d labStatus;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    public JsonAdaptedLabStatus(Lab source) {","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"        labStatus \u003d source.labStatus.name();","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"    @JsonValue","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    public String getLabStatus() {","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        return labStatus;","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"bryans17":35}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    private final String githubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"    private final String telegram;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"    private final String studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    private final List\u003cJsonAdaptedLabNumber\u003e labNumbers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    private final List\u003cJsonAdaptedLabStatus\u003e labStatuses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given student details.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged, @JsonProperty(\"github\") String githubUsername,","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"            @JsonProperty(\"telegram\") String telegram, @JsonProperty(\"studentId\") String studentId,","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"            @JsonProperty(\"labNames\") List\u003cJsonAdaptedLabNumber\u003e labNumbers,","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"            @JsonProperty(\"labStatuses\") List\u003cJsonAdaptedLabStatus\u003e labStatuses) {","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"        this.githubUsername \u003d githubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"        if (labNumbers !\u003d null) {","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"            this.labNumbers.addAll(labNumbers);","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"        if (labStatuses !\u003d null) {","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"            this.labStatuses.addAll(labStatuses);","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"        githubUsername \u003d source.getGithubUsername().username;","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"        telegram \u003d source.getTelegram().handle;","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"        studentId \u003d source.getStudentId().id;","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"        labNumbers.addAll(source.getLabs().asUnmodifiableObservableList().stream()","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"                .map(JsonAdaptedLabNumber::new)","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"bryans17"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"        labStatuses.addAll(source.getLabs().asUnmodifiableObservableList().stream()","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"                .map(JsonAdaptedLabStatus::new)","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Person} object.","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"bryans17"},"content":"        final List\u003cLab\u003e personLabs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"bryans17"},"content":"        for (int i \u003d 0; i \u003c labNumbers.size(); i++) {","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"bryans17"},"content":"            personLabs.add(labNumbers.get(i).toModelType().of(labStatuses.get(i).getLabStatus()));","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"        if (githubUsername \u003d\u003d null) {","lastModifiedDate":"2022-03-04"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-04"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"                    GithubUsername.class.getSimpleName()));","lastModifiedDate":"2022-03-04"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"        if (!GithubUsername.isValidGithubUsername(githubUsername)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":122,"author":{"gitId":"bryans17"},"content":"            throw new IllegalValueException(GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"        final GithubUsername modelUsername \u003d new GithubUsername(githubUsername);","lastModifiedDate":"2022-03-04"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":126,"author":{"gitId":"channne"},"content":"        if (telegram \u003d\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"channne"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"channne"},"content":"                    Telegram.class.getSimpleName()));","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"channne"},"content":"        if (!Telegram.isValidTelegram(telegram)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"            throw new IllegalValueException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"channne"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"channne"},"content":"        final Telegram modelTelegram \u003d new Telegram(telegram);","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"channne"},"content":"        if (studentId \u003d\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"channne"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"channne"},"content":"                    StudentId.class.getSimpleName()));","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"channne"},"content":"        if (!StudentId.isValidStudentId(studentId)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"channne"},"content":"            throw new IllegalValueException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"channne"},"content":"        final StudentId modelId \u003d new StudentId(studentId);","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"bryans17"},"content":"        Person p \u003d new Person(modelName, modelEmail, modelTags, modelUsername, modelTelegram, modelId);","lastModifiedDate":"2022-03-08"},{"lineNumber":146,"author":{"gitId":"bryans17"},"content":"        p.getLabs().setLabs(personLabs);","lastModifiedDate":"2022-03-08"},{"lineNumber":147,"author":{"gitId":"bryans17"},"content":"        return p;","lastModifiedDate":"2022-03-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"channne":30,"-":81,"bryans17":39}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"channne"},"content":" * A class to access TAddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"channne":1,"-":79}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"channne"},"content":" * An Immutable TAddressBook that is serializable to JSON format.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    public static final String MESSAGE_DUPLICATE_LAB \u003d \"Persons list contains duplicate lab(s).\";","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    private final List\u003cJsonAdaptedLabNumber\u003e masterList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"masterList\") List\u003cJsonAdaptedLabNumber\u003e masterList,","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"            @JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        this.masterList.addAll(masterList);","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        masterList.addAll(source.getMasterLabList().getMasterList().stream()","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"                .map(JsonAdaptedLabNumber::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"     * Converts this TAddress book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"        for (JsonAdaptedLabNumber jsonAdaptedLabNumber : masterList) {","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"            Lab lab \u003d jsonAdaptedLabNumber.toModelType();","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"            if (addressBook.hasLab(lab)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_LAB);","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"            addressBook.getMasterLabList().add(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"channne":2,"-":57,"bryans17":16}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"channne"},"content":" * Manages storage of TAddressBook data in local storage.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TAddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"channne":2,"-":76}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103-f10-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"channne":1,"-":101}},{"path":"src/main/java/seedu/address/ui/LabLabel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.exceptions.InvalidLabStatusException;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"public class LabLabel extends Label {","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"    private final Lab lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"     * Creates a {@code LabLabel} with the given {@code Lab}.","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    public LabLabel(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"        this.lab \u003d lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"        this.setText(\"Lab \" + lab.labNumber);","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"        setColor();","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    private void setColor() {","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"        switch (lab.labStatus) {","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"        case UNSUBMITTED:","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"            this.setStyle(\"-fx-background-color: red;\");","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"            break;","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"        case SUBMITTED:","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"            this.setStyle(\"-fx-background-color: orange;\");","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"            break;","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"        case GRADED:","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"            this.setStyle(\"-fx-background-color: green;\");","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"            break;","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        default:","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"            throw new InvalidLabStatusException();","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"bryans17":36}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"    private Label github;","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"    private Label telegram;","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"    private Label studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"    private FlowPane labCard;","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"        github.setText(person.getGithubUsername().username);","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"        telegram.setText(person.getTelegram().handle);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        studentId.setText(person.getStudentId().id);","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"        person.getLabs()","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"                .asUnmodifiableObservableList()","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"                .forEach(lab -\u003e labCard.getChildren().add(new LabLabel(lab)));","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"channne":6,"-":73,"bryans17":6}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"channne"},"content":" * Panel containing the list of students.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"channne":1,"-":48}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":354,"author":{"gitId":"bryans17"},"content":"#labCard {","lastModifiedDate":"2022-03-08"},{"lineNumber":355,"author":{"gitId":"bryans17"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-08"},{"lineNumber":356,"author":{"gitId":"bryans17"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":357,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":358,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":359,"author":{"gitId":"bryans17"},"content":"#labCard .label {","lastModifiedDate":"2022-03-08"},{"lineNumber":360,"author":{"gitId":"bryans17"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-08"},{"lineNumber":361,"author":{"gitId":"bryans17"},"content":"    -fx-padding: 2 5 2 5;","lastModifiedDate":"2022-03-08"},{"lineNumber":362,"author":{"gitId":"bryans17"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":363,"author":{"gitId":"bryans17"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":364,"author":{"gitId":"bryans17"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2022-03-08"},{"lineNumber":365,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"-":352,"bryans17":13}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"         title\u003d\"TAddressBook App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":59,"bryans17":1}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"      \u003cFlowPane fx:id\u003d\"labCard\" GridPane.halignment\u003d\"RIGHT\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"      \u003cLabel fx:id\u003d\"github\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$github\" /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"      \u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegram\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"      \u003cLabel fx:id\u003d\"studentId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$student id\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"channne":2,"-":34,"bryans17":2}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + EMAIL_DESC_AMY + GITHUB_DESC_AMY","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"                + TELEGRAM_DESC_AMY + STUDENTID_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"channne":4,"-":158,"bryans17":1}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.MasterLabList;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":152,"author":{"gitId":"bryans17"},"content":"        @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":153,"author":{"gitId":"bryans17"},"content":"        public boolean hasLab(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":154,"author":{"gitId":"bryans17"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-08"},{"lineNumber":155,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":156,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":157,"author":{"gitId":"bryans17"},"content":"        @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":158,"author":{"gitId":"bryans17"},"content":"        public void addLab(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":159,"author":{"gitId":"bryans17"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-08"},{"lineNumber":160,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":161,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"bryans17"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"bryans17"},"content":"        public void removeLab(Lab lab) {","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"bryans17"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"bryans17"},"content":"        @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":180,"author":{"gitId":"bryans17"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-08"},{"lineNumber":181,"author":{"gitId":"bryans17"},"content":"            return new ReadOnlyAddressBook() {","lastModifiedDate":"2022-03-08"},{"lineNumber":182,"author":{"gitId":"bryans17"},"content":"                @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":183,"author":{"gitId":"bryans17"},"content":"                public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":184,"author":{"gitId":"bryans17"},"content":"                    return null;","lastModifiedDate":"2022-03-08"},{"lineNumber":185,"author":{"gitId":"bryans17"},"content":"                }","lastModifiedDate":"2022-03-08"},{"lineNumber":186,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":187,"author":{"gitId":"bryans17"},"content":"                @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":188,"author":{"gitId":"bryans17"},"content":"                public MasterLabList getMasterLabList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":189,"author":{"gitId":"bryans17"},"content":"                    return new MasterLabList();","lastModifiedDate":"2022-03-08"},{"lineNumber":190,"author":{"gitId":"bryans17"},"content":"                }","lastModifiedDate":"2022-03-08"},{"lineNumber":191,"author":{"gitId":"bryans17"},"content":"            };","lastModifiedDate":"2022-03-08"},{"lineNumber":192,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":193,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":200,"author":{"gitId":"bryans17"},"content":"        @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":201,"author":{"gitId":"bryans17"},"content":"        public void addLab(Lab lab) {","lastModifiedDate":"2022-03-08"},{"lineNumber":202,"author":{"gitId":"bryans17"},"content":"            requireNonNull(lab);","lastModifiedDate":"2022-03-08"},{"lineNumber":203,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":193,"bryans17":37}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    public static final String VALID_GITHUB_AMY \u003d \"amyB\";","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    public static final String VALID_GITHUB_BOB \u003d \"bobC\";","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"    public static final String VALID_TELEGRAM_AMY \u003d \"amy_B\";","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"    public static final String VALID_TELEGRAM_BOB \u003d \"bob_C\";","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"    public static final String VALID_STUDENTID_AMY \u003d \"A0123456B\";","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"    public static final String VALID_STUDENTID_BOB \u003d \"A0123457C\";","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"    public static final String GITHUB_DESC_AMY \u003d \" \" + PREFIX_GITHUB + VALID_GITHUB_AMY;","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    public static final String GITHUB_DESC_BOB \u003d \" \" + PREFIX_GITHUB + VALID_GITHUB_BOB;","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"    public static final String TELEGRAM_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"    public static final String TELEGRAM_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"    public static final String STUDENTID_DESC_AMY \u003d \" \" + PREFIX_STUDENTID + VALID_STUDENTID_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"    public static final String STUDENTID_DESC_BOB \u003d \" \" + PREFIX_STUDENTID + VALID_STUDENTID_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"    // cant have consecutive \u0027-\u0027","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"    public static final String INVALID_GITHUB_CONSECUTIVE_HYPHEN_DESC \u003d \" \" + PREFIX_GITHUB + \"invalid--1\";","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"    // cant start with \u0027-\u0027","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"    public static final String INVALID_GITHUB_STARTING_HYPHEN_DESC \u003d \" \" + PREFIX_GITHUB + \"-invalid\";","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"    // cant end with \u0027-\u0027","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"    public static final String INVALID_GITHUB_ENDING_HYPHEN_DESC \u003d \" \" + PREFIX_GITHUB + \"invalid-\";","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"    // cant be longer than 39 alphanumeric characters","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"    public static final String INVALID_GITHUB_LONGER_THAN_39_DESC \u003d \" \" + PREFIX_GITHUB","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"    public static final String INVALID_TELEGRAM_DESC \u003d \" \" + PREFIX_TELEGRAM + \"James\u0026\"; // \u0027\u0026\u0027 not alphanumeric","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"    public static final String INVALID_STUDENTID_START_LETTER_DESC \u003d \" \" + PREFIX_STUDENTID + \"B0123456B\";","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"    public static final String INVALID_STUDENTID_WRONG_LENGTH_DESC \u003d \" \" + PREFIX_STUDENTID + \"A012345B\";","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"    public static final String INVALID_STUDENTID_END_NUMBER_DESC \u003d \" \" + PREFIX_STUDENTID + \"A01234567\";","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"    public static final String INVALID_STUDENTID_MIDDLE_LETTER \u003d \" \" + PREFIX_STUDENTID + \"A012C456B\";","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"                .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"                .withGithub(VALID_GITHUB_AMY)","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"                .withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"                .withStudentId(VALID_STUDENTID_AMY).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"bryans17"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"                .withGithub(VALID_GITHUB_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"                .withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"                .withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"channne":23,"-":112,"bryans17":16}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithoutLabs;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithoutLabs(), new UserPrefs());","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"                .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"channne":3,"-":168,"bryans17":2}},{"path":"src/test/java/seedu/address/logic/commands/EditLabStatusCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.lab.LabList;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.lab.LabStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"public class EditLabStatusCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"    private static final int VALID_LABNUMBER \u003d 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"    private static final LabStatus VALID_LABSTATUS \u003d LabStatus.SUBMITTED;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"    public void execute_validParameters_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        Person editedPerson \u003d new PersonBuilder(personToEdit).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        LabList listToEdit \u003d editedPerson.getLabs();","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"        listToEdit.setLab(listToEdit.getLabByLabNumber(VALID_LABNUMBER),","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"                new Lab(String.valueOf(VALID_LABNUMBER)).of(VALID_LABSTATUS.name()));","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        EditLabStatusCommand command \u003d new EditLabStatusCommand(INDEX_FIRST_PERSON, VALID_LABNUMBER, VALID_LABSTATUS);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(EditLabStatusCommand.MESSAGE_EDIT_LAB_STATUS_SUCCESS,","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"                VALID_LABNUMBER, personToEdit.getName(), VALID_LABSTATUS.name());","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"        EditLabStatusCommand command \u003d new EditLabStatusCommand(outOfBoundIndex, VALID_LABNUMBER, VALID_LABSTATUS);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"        EditLabStatusCommand command \u003d new EditLabStatusCommand(outOfBoundIndex, VALID_LABNUMBER, VALID_LABSTATUS);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"    public void execute_invalidLabNumber_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"        int invalidLabNumber \u003d 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"        EditLabStatusCommand command \u003d new EditLabStatusCommand(INDEX_FIRST_PERSON, invalidLabNumber, VALID_LABSTATUS);","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"        assertCommandFailure(command, model, EditLabStatusCommand.MESSAGE_INVALID_LAB_NUMBER);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"    public void execute_duplicateLab_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"        LabStatus currentStatus \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased())","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"                .getLabs().getLabByLabNumber(VALID_LABNUMBER).labStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"        EditLabStatusCommand command \u003d new EditLabStatusCommand(INDEX_FIRST_PERSON, VALID_LABNUMBER, currentStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"        assertCommandFailure(command, model, EditLabStatusCommand.MESSAGE_INVALID_STATUS_CHANGE);","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"channne"},"content":"        EditLabStatusCommand standardCommand \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"                new EditLabStatusCommand(INDEX_FIRST_PERSON, VALID_LABNUMBER, VALID_LABSTATUS);","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"channne"},"content":"        EditLabStatusCommand changeIndexCommand \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"                new EditLabStatusCommand(INDEX_SECOND_PERSON, VALID_LABNUMBER, VALID_LABSTATUS);","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"        EditLabStatusCommand changeLabCommand \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"                new EditLabStatusCommand(INDEX_FIRST_PERSON, 2, VALID_LABSTATUS);","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"        EditLabStatusCommand changeStatusCommand \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"                new EditLabStatusCommand(INDEX_FIRST_PERSON, VALID_LABNUMBER, LabStatus.GRADED);","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"        EditLabStatusCommand standardCommandCopy \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"                new EditLabStatusCommand(INDEX_FIRST_PERSON, 1, LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"        assertTrue(standardCommand.equals(standardCommandCopy));","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(changeIndexCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(changeLabCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(changeStatusCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"        assertFalse(changeIndexCommand.equals(changeLabCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"channne"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"channne":120}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"import java.util.Hashtable;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.person.lab.LabStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.person.lab.StudentHasLabPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"public class FilterCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"                new StudentHasLabPredicate((new Lab(\"1\")).thatIs(LabStatus.GRADED));","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"                new StudentHasLabPredicate((new Lab(\"1\")).thatIs(LabStatus.UNSUBMITTED));","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate thirdPredicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"                new StudentHasLabPredicate((new Lab(\"3\")).thatIs(LabStatus.GRADED));","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate fourthPredicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"                new StudentHasLabPredicate((new Lab(\"4\")).thatIs(LabStatus.SUBMITTED));","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"        FilterCommand firstFilterCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"        FilterCommand secondFilterCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"        FilterCommand thirdFilterCommand \u003d new FilterCommand(thirdPredicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"        FilterCommand fourthFilterCommand \u003d new FilterCommand(fourthPredicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"        assertTrue(firstFilterCommand.equals(firstFilterCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"geetengtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"geetengtan"},"content":"        FilterCommand firstFilterCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"geetengtan"},"content":"        assertTrue(firstFilterCommand.equals(firstFilterCommandCopy));","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"geetengtan"},"content":"        // same labNumber different labStatus -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"geetengtan"},"content":"        assertFalse(firstFilterCommand.equals(secondFilterCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"geetengtan"},"content":"        // different labNumber same labStatus -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"geetengtan"},"content":"        assertFalse(firstFilterCommand.equals(thirdFilterCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"geetengtan"},"content":"        // different labNumber different labStatus -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"geetengtan"},"content":"        assertFalse(firstFilterCommand.equals(fourthFilterCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"geetengtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"geetengtan"},"content":"        assertFalse(firstFilterCommand.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"geetengtan"},"content":"    public void execute_success_multiplePersonsFound() {","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"geetengtan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate predicate \u003d preparePredicate(\"l/1 s/u\");","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"geetengtan"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"geetengtan"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"geetengtan"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"geetengtan"},"content":"        assertEquals(Arrays.asList(ALICE, CARL, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"geetengtan"},"content":"    private StudentHasLabPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"geetengtan"},"content":"        Pattern pattern \u003d Pattern.compile(\"\\\\s*l/(?\u003clabNum\u003e\\\\d+)\\\\s+s/(?\u003clabStat\u003e[usg])\");","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"geetengtan"},"content":"        Matcher matcher \u003d pattern.matcher(userInput);","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"geetengtan"},"content":"        assertTrue(matcher.matches());","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"geetengtan"},"content":"        Hashtable\u003cString, LabStatus\u003e mapper \u003d new Hashtable\u003c\u003e() { {","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"geetengtan"},"content":"                put(\"u\", LabStatus.UNSUBMITTED);","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"geetengtan"},"content":"                put(\"s\", LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"geetengtan"},"content":"                put(\"g\", LabStatus.GRADED);","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"geetengtan"},"content":"            }};","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"geetengtan"},"content":"        Lab lab \u003d new Lab(matcher.group(\"labNum\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"geetengtan"},"content":"        LabStatus labStatus \u003d mapper.get(matcher.group(\"labStat\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"geetengtan"},"content":"        return new StudentHasLabPredicate(lab.thatIs(labStatus));","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geetengtan":94}},{"path":"src/test/java/seedu/address/logic/commands/RemoveLabCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithoutLabs;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":" * {@code RemoveLabCommand}.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"public class RemoveLabCommandTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    public void execute_validLab_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"        // Lab with lab_number 1 does exist in the TypicalAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"        RemoveLabCommand command \u003d new RemoveLabCommand(new Lab(\"1\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"        String expectedMessage \u003d String.format(RemoveLabCommand.MESSAGE_SUCCESS, \"1\");","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBookWithoutLabs(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    public void execute_invalidLab_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        // Lab with lab_number 3 does not exist in the TypicalAddressBook.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        RemoveLabCommand command \u003d new RemoveLabCommand(new Lab(\"3\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"        String expectedMessage \u003d String.format(RemoveLabCommand.MESSAGE_LAB_NOT_FOUND, \"3\");","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"bryans17":46}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_BOB;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_CONSECUTIVE_HYPHEN_DESC;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_ENDING_HYPHEN_DESC;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_LONGER_THAN_39_DESC;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_STARTING_HYPHEN_DESC;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_END_NUMBER_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_MIDDLE_LETTER;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_START_LETTER_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_WRONG_LENGTH_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"        Person expectedPerson \u003d new PersonBuilder()","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"                .withGithub(VALID_GITHUB_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"                .withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"                .withStudentId(VALID_STUDENTID_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"                + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"                + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB + GITHUB_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"                + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND + GITHUB_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"                + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + EMAIL_DESC_AMY + GITHUB_DESC_AMY + TELEGRAM_DESC_AMY","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_EMAIL_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"        // missing github prefix","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + VALID_GITHUB_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"channne"},"content":"        // missing telegram prefix","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + VALID_TELEGRAM_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"        // missing studentid prefix","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"                + VALID_STUDENTID_BOB, expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_EMAIL_BOB + VALID_GITHUB_BOB + VALID_TELEGRAM_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"channne"},"content":"                + VALID_STUDENTID_BOB, expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + EMAIL_DESC_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_EMAIL_DESC + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":137,"author":{"gitId":"bryans17"},"content":"        // invalid github (consecutive hyphens)","lastModifiedDate":"2022-03-04"},{"lineNumber":138,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + INVALID_GITHUB_CONSECUTIVE_HYPHEN_DESC","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"channne"},"content":"                + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"channne"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":142,"author":{"gitId":"bryans17"},"content":"        // invalid github (starting with hyphen)","lastModifiedDate":"2022-03-04"},{"lineNumber":143,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + INVALID_GITHUB_STARTING_HYPHEN_DESC","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"channne"},"content":"                + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"channne"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":147,"author":{"gitId":"bryans17"},"content":"        // invalid github (ending with hyphen)","lastModifiedDate":"2022-03-04"},{"lineNumber":148,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + INVALID_GITHUB_ENDING_HYPHEN_DESC","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"channne"},"content":"                + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"channne"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":152,"author":{"gitId":"bryans17"},"content":"        // invalid github (longer than 39 alphanumerical characters)","lastModifiedDate":"2022-03-04"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + INVALID_GITHUB_LONGER_THAN_39_DESC","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB + TELEGRAM_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"channne"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"channne"},"content":"        // invalid telegram","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + INVALID_TELEGRAM_DESC","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB + TAG_DESC_HUSBAND, Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"channne"},"content":"        // invalid student id (does not start with A)","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"channne"},"content":"                + INVALID_STUDENTID_START_LETTER_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"channne"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"channne"},"content":"        // invalid student id (wrong length)","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"channne"},"content":"                + INVALID_STUDENTID_WRONG_LENGTH_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"channne"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"channne"},"content":"        // invalid student id (does not end with letter)","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"channne"},"content":"                + INVALID_STUDENTID_END_NUMBER_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"channne"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":175,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"channne"},"content":"        // invalid student id (has a letter in the middle)","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":178,"author":{"gitId":"channne"},"content":"                + INVALID_STUDENTID_MIDDLE_LETTER + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-06"},{"lineNumber":179,"author":{"gitId":"channne"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_EMAIL_DESC + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":183,"author":{"gitId":"channne"},"content":"                + STUDENTID_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":186,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":187,"author":{"gitId":"channne"},"content":"                + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"channne":83,"-":82,"bryans17":25}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_CONSECUTIVE_HYPHEN_DESC;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_ENDING_HYPHEN_DESC;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_LONGER_THAN_39_DESC;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_STARTING_HYPHEN_DESC;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_END_NUMBER_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_MIDDLE_LETTER;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_START_LETTER_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_WRONG_LENGTH_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_AMY;","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"geetengtan"},"content":"        assertParseFailure(parser, \"1 z/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"bryans17"},"content":"        // invalid github (consecutive hyphens)","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GITHUB_CONSECUTIVE_HYPHEN_DESC,","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"bryans17"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"        // invalid github (starting with hyphens)","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GITHUB_STARTING_HYPHEN_DESC,","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"bryans17"},"content":"        // invalid github (ending with hyphens)","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GITHUB_ENDING_HYPHEN_DESC,","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"        // invalid github (consecutive hyphens)","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GITHUB_LONGER_THAN_39_DESC,","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"channne"},"content":"        // invalid telegram","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TELEGRAM_DESC, Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"        // invalid student id (does not start with A)","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENTID_START_LETTER_DESC,","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"channne"},"content":"        // invalid student id (wrong length)","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENTID_WRONG_LENGTH_DESC,","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"channne"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"channne"},"content":"        // invalid student id (ends with number)","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENTID_END_NUMBER_DESC,","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"channne"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"channne"},"content":"        // invalid student id (contains middle letter)","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENTID_MIDDLE_LETTER,","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"channne"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"channne"},"content":"        // invalid email followed by valid github","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC + GITHUB_DESC_AMY, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"channne"},"content":"        // valid email followed by invalid email. The test case for invalid email followed by valid email","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + EMAIL_DESC_BOB + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_GITHUB_AMY","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"channne"},"content":"                + VALID_TELEGRAM_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"channne"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_HUSBAND","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"channne"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"channne"},"content":"                + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB + STUDENTID_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"channne"},"content":"                .withEmail(VALID_EMAIL_AMY).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"channne"},"content":"                .withGithub(VALID_GITHUB_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"channne"},"content":"                .withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"channne"},"content":"        String userInput \u003d targetIndex.getOneBased() + TELEGRAM_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"channne"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":193,"author":{"gitId":"bryans17"},"content":"        // github","lastModifiedDate":"2022-03-04"},{"lineNumber":194,"author":{"gitId":"bryans17"},"content":"        userInput \u003d targetIndex.getOneBased() + GITHUB_DESC_AMY;","lastModifiedDate":"2022-03-04"},{"lineNumber":195,"author":{"gitId":"bryans17"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGithub(VALID_GITHUB_AMY).build();","lastModifiedDate":"2022-03-04"},{"lineNumber":196,"author":{"gitId":"bryans17"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-04"},{"lineNumber":197,"author":{"gitId":"bryans17"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-04"},{"lineNumber":198,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":199,"author":{"gitId":"channne"},"content":"        // telegram","lastModifiedDate":"2022-03-06"},{"lineNumber":200,"author":{"gitId":"channne"},"content":"        userInput \u003d targetIndex.getOneBased() + TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":201,"author":{"gitId":"channne"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTelegram(VALID_TELEGRAM_AMY).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":202,"author":{"gitId":"channne"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":203,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":204,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":205,"author":{"gitId":"channne"},"content":"        // student id","lastModifiedDate":"2022-03-06"},{"lineNumber":206,"author":{"gitId":"channne"},"content":"        userInput \u003d targetIndex.getOneBased() + STUDENTID_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":207,"author":{"gitId":"channne"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withStudentId(VALID_STUDENTID_AMY).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":208,"author":{"gitId":"channne"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":209,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":215,"author":{"gitId":"channne"},"content":"        String userInput \u003d targetIndex.getOneBased() + TELEGRAM_DESC_AMY + GITHUB_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-06"},{"lineNumber":216,"author":{"gitId":"channne"},"content":"                + TAG_DESC_FRIEND + TELEGRAM_DESC_AMY + GITHUB_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-06"},{"lineNumber":217,"author":{"gitId":"channne"},"content":"                + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"channne"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":220,"author":{"gitId":"channne"},"content":"                .withEmail(VALID_EMAIL_BOB).withGithub(VALID_GITHUB_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-06"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":231,"author":{"gitId":"channne"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_EMAIL_DESC + EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":232,"author":{"gitId":"channne"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"channne"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_EMAIL_DESC + GITHUB_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":238,"author":{"gitId":"channne"},"content":"                + EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":239,"author":{"gitId":"channne"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":240,"author":{"gitId":"channne"},"content":"                .withGithub(VALID_GITHUB_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"channne":68,"-":161,"bryans17":25,"geetengtan":1}},{"path":"src/test/java/seedu/address/logic/parser/EditLabStatusCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAB;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABSTATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import seedu.address.logic.commands.EditLabStatusCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.lab.LabStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"public class EditLabStatusCommandParserTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditLabStatusCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"    private static final String VALID_INDEX \u003d \"1 \";","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"    private static final String VALID_LAB \u003d \"1 \";","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"    private static final String VALID_LABSTATUS \u003d \"g\";","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"    private static final String VALID_LAB_DESC \u003d PREFIX_LAB + VALID_LAB;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"    private static final String VALID_LABSTATUS_DESC \u003d PREFIX_LABSTATUS + VALID_LABSTATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"    private EditLabStatusCommandParser parser \u003d new EditLabStatusCommandParser();","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"        // no index specified","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_LAB_DESC + VALID_LABSTATUS_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"        // no lab specified","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LABSTATUS_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        // no status specified","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LAB_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"        // missing prefix","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LAB_DESC + VALID_LABSTATUS, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"        // nothing specified","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"        // negative index","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"-5\" + VALID_LAB_DESC + VALID_LABSTATUS_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"channne"},"content":"        // zero index","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"0\" + VALID_LAB_DESC + VALID_LABSTATUS_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1 some random string\" + VALID_LAB_DESC + VALID_LABSTATUS_DESC,","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, \"1 i/string\" + VALID_LAB_DESC + VALID_LABSTATUS_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        // invalid labs","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + \"l/a \" + VALID_LABSTATUS_DESC, Lab.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + \"l/-1 \" + VALID_LABSTATUS_DESC, Lab.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + \"l/0 \" + VALID_LABSTATUS_DESC, Lab.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + \"l/0001 \" + VALID_LABSTATUS_DESC, Lab.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"        // invalid statuses","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LAB_DESC + \"s/e\", LabStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LAB_DESC + \"s/1\", LabStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"        assertParseFailure(parser, VALID_INDEX + VALID_LAB_DESC + \"s/U\", LabStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"        EditLabStatusCommand expectedCommand \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"                new EditLabStatusCommand(Index.fromOneBased(Integer.parseInt(VALID_INDEX.trim())),","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"                Integer.parseInt(VALID_LAB.trim()), LabStatus.GRADED);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        assertParseSuccess(parser, VALID_INDEX + VALID_LAB_DESC + VALID_LABSTATUS_DESC, expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"channne":84}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"import seedu.address.model.person.lab.StudentHasLabPredicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"        assertParseFailure(parser, \"   \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"        Lab expectedLab \u003d (new Lab(\"1\")).of(\"SUBMITTED\");","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"                new FilterCommand(new StudentHasLabPredicate(expectedLab));","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"        assertParseSuccess(parser, \" l/1 s/s\", expectedFilterCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"    public void parse_missingField_throwsParseException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"        // missing LabStatus Prefix","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"        assertParseFailure(parser, \"l/1 \", expectedMessage);","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"        // missing Lab Prefix","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"        assertParseFailure(parser, \"s/1\", expectedMessage);","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"geetengtan":43}},{"path":"src/test/java/seedu/address/logic/parser/RemoveLabCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import seedu.address.logic.commands.RemoveLabCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"public class RemoveLabCommandParserTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveLabCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    private RemoveLabCommandParser parser \u003d new RemoveLabCommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"        // no lab specified","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \" \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"        // invalid labs","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \" l/a \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \" l/-1 \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"        assertParseFailure(parser, \" l/0001 \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        RemoveLabCommand expectedCommand \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"                new RemoveLabCommand(new Lab(\"1\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        assertParseSuccess(parser, \" l/1\", expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"bryans17":39}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.MasterLabList;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withGithub(VALID_GITHUB_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withGithub(VALID_GITHUB_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"        private final MasterLabList masterLabList \u003d new MasterLabList();","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"        @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"        public MasterLabList getMasterLabList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"bryans17"},"content":"            return masterLabList;","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"channne":3,"-":99,"bryans17":7}},{"path":"src/test/java/seedu/address/model/person/GithubUsernameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"public class GithubUsernameTest {","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GithubUsername(null));","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"        String invalidGithub \u003d \"\";","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GithubUsername(invalidGithub));","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    public void isValidGithubUsername() {","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"        // null name","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e GithubUsername.isValidGithubUsername(null));","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"        // invalid name","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"        assertFalse(GithubUsername.isValidGithubUsername(\"\")); // empty string","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"        assertFalse(GithubUsername.isValidGithubUsername(\" \")); // spaces only","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"        assertFalse(GithubUsername.isValidGithubUsername(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"        assertFalse(GithubUsername.isValidGithubUsername(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        assertFalse(GithubUsername.isValidGithubUsername(\"-peter\")); //starts with a hyphen","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        assertFalse(GithubUsername.isValidGithubUsername(\"peter-\")); //ends with a hyphen","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        assertFalse(GithubUsername.isValidGithubUsername(\"pe--ter\")); //contains consecutive hyphens","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        // valid name","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        assertTrue(GithubUsername.isValidGithubUsername(\"peterjack\")); // alphabets only","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        assertTrue(GithubUsername.isValidGithubUsername(\"12345\")); // numbers only","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        assertTrue(GithubUsername.isValidGithubUsername(\"peterthe2nd\")); // alphanumeric characters","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        assertTrue(GithubUsername.isValidGithubUsername(\"CapitalTan\")); // with capital letters","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        assertTrue(GithubUsername.isValidGithubUsername(\"DavidRogerJacksonRayJr2nd\")); // long names","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"bryans17":43}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"        // Keywords match telegram, email and github, but does not match name","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"alice_P\", \"alice@email.com\", \"aliceP\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withTelegram(\"alice_P\")","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"channne"},"content":"                .withEmail(\"alice@email.com\").withGithub(\"aliceP\").build()));","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"channne":4,"-":71}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"        // different github -\u003e returns false","lastModifiedDate":"2022-03-05"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withGithub(VALID_GITHUB_BOB).build();","lastModifiedDate":"2022-03-05"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-05"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"        // different telegram -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"channne"},"content":"        // different student id -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"channne":11,"-":79,"bryans17":5}},{"path":"src/test/java/seedu/address/model/person/StudentIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"channne"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"channne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"public class StudentIdTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StudentId(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"channne"},"content":"    public void constructor_invalidStudentId_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"        String invalidId \u003d \"\";","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new StudentId(invalidId));","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"channne"},"content":"    public void isValidStudentId() {","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"channne"},"content":"        // null IDs","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"        assertThrows(NullPointerException.class, () -\u003e StudentId.isValidStudentId(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"        // invalid IDs","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"        assertFalse(StudentId.isValidStudentId(\"\")); // empty string","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"channne"},"content":"        assertFalse(StudentId.isValidStudentId(\" \")); // spaces only","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"channne"},"content":"        assertFalse(StudentId.isValidStudentId(\"A00000000B\")); // more than 7 numbers","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"        assertFalse(StudentId.isValidStudentId(\"A012345B\")); // less than 7 numbers","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"        assertFalse(StudentId.isValidStudentId(\"B0123456B\")); // does not start with A","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"        assertFalse(StudentId.isValidStudentId(\"00123456B\")); // does not start with A","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"        assertFalse(StudentId.isValidStudentId(\"A01234561\")); // does not end with alphabet","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        // valid IDs","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        assertTrue(StudentId.isValidStudentId(\"A0123456B\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        assertTrue(StudentId.isValidStudentId(\"A1111111C\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"channne":40}},{"path":"src/test/java/seedu/address/model/person/TelegramTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"public class TelegramTest {","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Telegram(null));","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"        String invalidHandle \u003d \"\";","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Telegram(invalidHandle));","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    public void isValidTelegram() {","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"        // null name","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e Telegram.isValidTelegram(null));","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"        // invalid name","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"        assertFalse(Telegram.isValidTelegram(\"\")); // empty string","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"        assertFalse(Telegram.isValidTelegram(\" \")); // spaces only","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"        assertFalse(Telegram.isValidTelegram(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"        assertFalse(Telegram.isValidTelegram(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        assertFalse(Telegram.isValidTelegram(\"pete\")); // not 5 characters long","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        // valid name","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"        assertTrue(Telegram.isValidTelegram(\"12345\")); // numbers only","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        assertTrue(Telegram.isValidTelegram(\"peterjack\")); // alphabets only","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        assertTrue(Telegram.isValidTelegram(\"peterthe2nd\")); // alphanumeric characters","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        assertTrue(Telegram.isValidTelegram(\"CapitalTan\")); // with capital letters","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        assertTrue(Telegram.isValidTelegram(\"CapitalTan_\")); // with underscores","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        assertTrue(Telegram.isValidTelegram(\"DavidRogerJacksonRayJr2nd\")); // long names","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"bryans17":42}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"channne":3,"-":167}},{"path":"src/test/java/seedu/address/model/person/lab/LabTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package seedu.address.model.person.lab;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"channne"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.exceptions.DuplicateLabException;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"public class LabTest {","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Lab(null));","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    public void constructor_invalidLab_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"        String invalidLabNumber \u003d \"a\";","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Lab(invalidLabNumber));","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    public void isValidLab() {","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"        // null lab","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"        assertThrows(NullPointerException.class, () -\u003e Lab.isValidLab(null));","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"        // blank lab","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"        assertFalse(Lab.isValidLab(\"\")); // empty string","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        assertFalse(Lab.isValidLab(\" \")); // spaces only","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"        // invalid lab","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        assertFalse(Lab.isValidLab(\"1a\")); // invalid lab number","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        // valid lab","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        assertTrue(Lab.isValidLab(\"1\")); // valid integer","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        assertTrue(Lab.isValidLab(\"2\")); // valid integer","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        assertTrue(Lab.isValidLab(\"123456789\")); // valid integer","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"    public void editLabStatus_changeStatus_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        Lab stub \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"channne"},"content":"        stub \u003d stub.editLabStatus(LabStatus.GRADED);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"        assertEquals(new Lab(\"1\").of(LabStatus.GRADED.name()), stub);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"channne"},"content":"        assertNotEquals(new Lab(\"1\"), stub);","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"    public void editLabStatus_sameStatus_throwsDuplicateLabException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"        Lab stub \u003d new Lab(\"1\");","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"        assertThrows(DuplicateLabException.class, () -\u003e stub.editLabStatus(LabStatus.UNSUBMITTED));","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"channne"},"content":"    public void equals_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"channne"},"content":"        Lab lab1 \u003d (new Lab(\"1\")).of(\"SUBMITTED\");","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"channne"},"content":"        Lab lab1copy \u003d (new Lab(\"1\")).of(\"SUBMITTED\");","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"        assertTrue(lab1.equals(lab1copy));","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"channne":17,"bryans17":49}},{"path":"src/test/java/seedu/address/model/person/lab/StudentHasLabPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.address.model.person.lab;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"import javafx.util.Pair;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"public class StudentHasLabPredicateTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"        Lab firstLab \u003d (new Lab(\"1\")).thatIs(LabStatus.SUBMITTED);","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"        Lab secondLab \u003d (new Lab(\"2\")).thatIs(LabStatus.GRADED);","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate firstPredicate \u003d new StudentHasLabPredicate(firstLab);","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate secondPredicate \u003d new StudentHasLabPredicate(secondLab);","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate firstPredicateCopy \u003d new StudentHasLabPredicate(firstLab);","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"    public void test_studentHasSpecifiedLab_returnsTrue() {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate predicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"                new StudentHasLabPredicate((new Lab(\"1\").thatIs(LabStatus.UNSUBMITTED)));","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"                .withLabs(new Pair\u003cString, String\u003e(\"1\", \"UNSUBMITTED\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"                        new Pair\u003cString, String\u003e(\"2\", \"SUBMITTED\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"                        new Pair\u003cString, String\u003e(\"3\", \"SUBMITTED\")).build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"    public void test_studentDoesNotHaveSpecifiedLab_returnsFalse() {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"        // Wrong LabStatus","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"        StudentHasLabPredicate predicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"geetengtan"},"content":"                new StudentHasLabPredicate((new Lab(\"3\").thatIs(LabStatus.SUBMITTED)));","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"geetengtan"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"geetengtan"},"content":"                .withLabs(new Pair\u003cString, String\u003e(\"1\", \"UNSUBMITTED\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"geetengtan"},"content":"                        new Pair\u003cString, String\u003e(\"2\", \"SUBMITTED\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"geetengtan"},"content":"                        new Pair\u003cString, String\u003e(\"3\", \"GRADED\")).build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"geetengtan"},"content":"        // Wrong LabNumber","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"geetengtan"},"content":"        predicate \u003d new StudentHasLabPredicate((new Lab(\"4\").thatIs(LabStatus.UNSUBMITTED)));","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"geetengtan"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"geetengtan"},"content":"                .withLabs(new Pair\u003cString, String\u003e(\"1\", \"UNSUBMITTED\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"geetengtan"},"content":"                        new Pair\u003cString, String\u003e(\"2\", \"SUBMITTED\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"geetengtan"},"content":"                        new Pair\u003cString, String\u003e(\"3\", \"GRADED\")).build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geetengtan":66}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    private static final String INVALID_GITHUB \u003d \"--example\";","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"channne"},"content":"    private static final String INVALID_TELEGRAM \u003d \"R@chel\";","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"channne"},"content":"    private static final String INVALID_STUDENTID \u003d \"A01234567\";","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    private static final String INVALID_LABNUMBER \u003d \"a\";","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    private static final String VALID_GITHUB \u003d BENSON.getGithubUsername().toString();","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"    private static final String VALID_TELEGRAM \u003d BENSON.getTelegram().toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"channne"},"content":"    private static final String VALID_STUDENTID \u003d BENSON.getStudentId().toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    private static final List\u003cJsonAdaptedLabNumber\u003e VALID_LABNUMBERS \u003d BENSON.getLabs().asUnmodifiableObservableList()","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"            .stream()","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"            .map(JsonAdaptedLabNumber::new)","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"    private static final List\u003cJsonAdaptedLabStatus\u003e VALID_LABSTATUSES \u003d BENSON.getLabs().asUnmodifiableObservableList()","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"            .stream()","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"            .map(JsonAdaptedLabStatus::new)","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, VALID_STUDENTID, VALID_LABNUMBERS, VALID_LABSTATUSES);","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_EMAIL, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, VALID_STUDENTID, VALID_LABNUMBERS, VALID_LABSTATUSES);","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"channne"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_EMAIL, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, VALID_STUDENTID, VALID_LABNUMBERS, VALID_LABSTATUSES);","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"channne"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, VALID_STUDENTID, VALID_LABNUMBERS, VALID_LABSTATUSES);","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_EMAIL, invalidTags, VALID_GITHUB,","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, VALID_STUDENTID, VALID_LABNUMBERS, VALID_LABSTATUSES);","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"bryans17"},"content":"    public void toModelType_invalidGithub_throwsIllegalValueException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_EMAIL, VALID_TAGS, INVALID_GITHUB,","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, VALID_STUDENTID, VALID_LABNUMBERS, VALID_LABSTATUSES);","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"bryans17"},"content":"        String expectedMessage \u003d GithubUsername.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"    public void toModelType_nullGithub_throwsIllegalValueException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_EMAIL, VALID_TAGS, null,","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, VALID_STUDENTID, VALID_LABNUMBERS, VALID_LABSTATUSES);","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, GithubUsername.class.getSimpleName());","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"channne"},"content":"    public void toModelType_invalidTelegram_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"channne"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"bryans17"},"content":"                INVALID_TELEGRAM, VALID_STUDENTID, VALID_LABNUMBERS, VALID_LABSTATUSES);","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d Telegram.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"channne"},"content":"    public void toModelType_nullTelegram_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"channne"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"bryans17"},"content":"                null, VALID_STUDENTID, VALID_LABNUMBERS, VALID_LABSTATUSES);","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Telegram.class.getSimpleName());","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"channne"},"content":"    public void toModelType_invalidStudentId_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"channne"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, INVALID_STUDENTID, VALID_LABNUMBERS, VALID_LABSTATUSES);","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d StudentId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"channne"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"channne"},"content":"    public void toModelType_nullStudentId_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"channne"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, null, VALID_LABNUMBERS, VALID_LABSTATUSES);","lastModifiedDate":"2022-03-08"},{"lineNumber":139,"author":{"gitId":"channne"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StudentId.class.getSimpleName());","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"channne"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":144,"author":{"gitId":"bryans17"},"content":"    public void toModelType_invalidLabNumber_throwsIllegalValueException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":145,"author":{"gitId":"bryans17"},"content":"        JsonAdaptedLabNumber invalid \u003d new JsonAdaptedLabNumber(INVALID_LABNUMBER);","lastModifiedDate":"2022-03-08"},{"lineNumber":146,"author":{"gitId":"bryans17"},"content":"        List\u003cJsonAdaptedLabNumber\u003e invalidList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":147,"author":{"gitId":"bryans17"},"content":"        invalidList.add(invalid);","lastModifiedDate":"2022-03-08"},{"lineNumber":148,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":149,"author":{"gitId":"bryans17"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_GITHUB,","lastModifiedDate":"2022-03-08"},{"lineNumber":150,"author":{"gitId":"bryans17"},"content":"                VALID_TELEGRAM, VALID_STUDENTID, invalidList, VALID_LABSTATUSES);","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"bryans17"},"content":"        String expectedMessage \u003d Lab.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-08"},{"lineNumber":152,"author":{"gitId":"bryans17"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"channne":32,"-":84,"bryans17":39}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        descriptor.setGithubUsername(person.getGithubUsername());","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"channne"},"content":"        descriptor.setTelegram(person.getTelegram());","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"        descriptor.setStudentId(person.getStudentId());","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"     * Sets the {@code GithubUsername} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"    public EditPersonDescriptorBuilder withGithub(String githubUsername) {","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"        descriptor.setGithubUsername(new GithubUsername(githubUsername));","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"channne"},"content":"     * Sets the {@code Telegram} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"channne"},"content":"    public EditPersonDescriptorBuilder withTelegram(String telegram) {","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"channne"},"content":"        descriptor.setTelegram(new Telegram(telegram));","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"channne"},"content":"        return this;","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"     * Sets the {@code StudentId} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"channne"},"content":"    public EditPersonDescriptorBuilder withStudentId(String studentId) {","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"channne"},"content":"        descriptor.setStudentId(new StudentId(studentId));","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"channne":15,"-":77,"bryans17":5}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"import javafx.util.Pair;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"channne"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.LabList;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    public static final String DEFAULT_GITHUB \u003d \"amyB123\";","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"channne"},"content":"    public static final String DEFAULT_TELEGRAM \u003d \"amy_B\";","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"channne"},"content":"    public static final String DEFAULT_STUDENTID \u003d \"A1123456B\";","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"    private GithubUsername githubUsername;","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"channne"},"content":"    private Telegram telegram;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"    private StudentId studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"    private LabList labs;","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        githubUsername \u003d new GithubUsername(DEFAULT_GITHUB);","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"channne"},"content":"        telegram \u003d new Telegram(DEFAULT_TELEGRAM);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"channne"},"content":"        studentId \u003d new StudentId(DEFAULT_STUDENTID);","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        labs \u003d new LabList();","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"        githubUsername \u003d personToCopy.getGithubUsername();","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"        telegram \u003d personToCopy.getTelegram();","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"channne"},"content":"        studentId \u003d personToCopy.getStudentId();","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"        labs \u003d personToCopy.getLabs();","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"     * Sets the {@code GithubUsername} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"bryans17"},"content":"    public PersonBuilder withGithub(String githubUsername) {","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"bryans17"},"content":"        this.githubUsername \u003d new GithubUsername(githubUsername);","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"channne"},"content":"     * Sets the {@code Telegram} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"channne"},"content":"    public PersonBuilder withTelegram(String telegram) {","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"channne"},"content":"        this.telegram \u003d new Telegram(telegram);","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"channne"},"content":"        return this;","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"channne"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"channne"},"content":"     * Sets the {@code StudentId} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"channne"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"channne"},"content":"    public PersonBuilder withStudentId(String studentId) {","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"channne"},"content":"        this.studentId \u003d new StudentId(studentId);","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"     * Parses the {@code labs} into a {@code LabList} and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"geetengtan"},"content":"    @SafeVarargs","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"geetengtan"},"content":"    public final PersonBuilder withLabs(Pair\u003cString, String\u003e... labs) {","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"        this.labs \u003d SampleDataUtil.getLabSet(labs);","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"     * Parses the {@code Person}.","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"        Person p \u003d new Person(name, email, tags, githubUsername, telegram, studentId);","lastModifiedDate":"2022-03-08"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"        p.setLabs(labs);","lastModifiedDate":"2022-03-08"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"        return p;","lastModifiedDate":"2022-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"channne":21,"-":79,"geetengtan":3,"bryans17":25}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"channne"},"content":"        sb.append(PREFIX_GITHUB + person.getGithubUsername().username + \" \");","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"channne"},"content":"        sb.append(PREFIX_TELEGRAM + person.getTelegram().handle + \" \");","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"channne"},"content":"        sb.append(PREFIX_STUDENTID + person.getStudentId().id + \" \");","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"channne"},"content":"        descriptor.getGithubUsername().ifPresent(git -\u003e sb.append(PREFIX_GITHUB).append(git.username).append(\" \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"channne"},"content":"        descriptor.getTelegram().ifPresent(telegram -\u003e sb.append(PREFIX_TELEGRAM).append(telegram.handle).append(\" \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"channne"},"content":"        descriptor.getStudentId().ifPresent(studentId -\u003e sb.append(PREFIX_STUDENTID)","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"channne"},"content":"                .append(studentId.id).append(\" \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"channne":9,"-":56,"bryans17":1}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_AMY;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"channne"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"import javafx.util.Pair;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.Lab;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"import seedu.address.model.person.lab.LabList;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"channne"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"channne"},"content":"            .withGithub(\"aliceP\")","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"channne"},"content":"            .withTelegram(\"alice_P\")","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123456B\")","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"            .withLabs(new Pair\u003cString, String\u003e(\"1\", \"UNSUBMITTED\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"                    new Pair\u003cString, String\u003e(\"2\", \"GRADED\")).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"channne"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"channne"},"content":"            .withGithub(\"bensonM\")","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"channne"},"content":"            .withTelegram(\"benson_M\")","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123457C\")","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"            .withLabs(new Pair\u003cString, String\u003e(\"1\", \"SUBMITTED\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"                    new Pair\u003cString, String\u003e(\"2\", \"UNSUBMITTED\")).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"channne"},"content":"            .withGithub(\"carlK\")","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"channne"},"content":"            .withTelegram(\"carl_K\")","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123458D\")","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"            .withLabs(new Pair\u003cString, String\u003e(\"1\", \"UNSUBMITTED\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"geetengtan"},"content":"                    new Pair\u003cString, String\u003e(\"2\", \"UNSUBMITTED\")).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"channne"},"content":"            .withGithub(\"danielM\")","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"channne"},"content":"            .withTelegram(\"daniel_M\")","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123459E\")","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"geetengtan"},"content":"            .withLabs(new Pair\u003cString, String\u003e(\"1\", \"UNSUBMITTED\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"geetengtan"},"content":"                    new Pair\u003cString, String\u003e(\"2\", \"UNSUBMITTED\")).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"channne"},"content":"            .withGithub(\"elleM\")","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"channne"},"content":"            .withTelegram(\"elle_M\")","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123411A\")","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"geetengtan"},"content":"            .withLabs(new Pair\u003cString, String\u003e(\"1\", \"GRADED\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"geetengtan"},"content":"                    new Pair\u003cString, String\u003e(\"2\", \"GRADED\")).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"channne"},"content":"            .withGithub(\"fionaK\")","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"channne"},"content":"            .withTelegram(\"fiona_K\")","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123412B\")","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"geetengtan"},"content":"            .withLabs(new Pair\u003cString, String\u003e(\"1\", \"SUBMITTED\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"geetengtan"},"content":"                    new Pair\u003cString, String\u003e(\"2\", \"GRADED\")).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"channne"},"content":"            .withGithub(\"georgeB\")","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"channne"},"content":"            .withTelegram(\"george_B\")","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123413C\")","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"geetengtan"},"content":"            .withLabs(new Pair\u003cString, String\u003e(\"1\", \"GRADED\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"geetengtan"},"content":"                    new Pair\u003cString, String\u003e(\"2\", \"UNSUBMITTED\")).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"channne"},"content":"            .withGithub(\"hoonM\")","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"channne"},"content":"            .withTelegram(\"hoon_M\")","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123414D\")","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"geetengtan"},"content":"            .withLabs(new Pair\u003cString, String\u003e(\"1\", \"UNSUBMITTED\")).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"bryans17"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"bryans17"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"channne"},"content":"            .withGithub(\"idaM\")","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"channne"},"content":"            .withTelegram(\"ida_M\")","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"bryans17"},"content":"            .withStudentId(\"A0123415E\")","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"geetengtan"},"content":"            .withLabs(new Pair\u003cString, String\u003e(\"1\", \"UNSUBMITTED\")).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":98,"author":{"gitId":"bryans17"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"bryans17"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"bryans17"},"content":"            .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"channne"},"content":"            .withGithub(VALID_GITHUB_AMY)","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"channne"},"content":"            .withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"            .withStudentId(VALID_STUDENTID_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"            .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"bryans17"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"channne"},"content":"            .withGithub(VALID_GITHUB_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"channne"},"content":"            .withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"            .withStudentId(VALID_STUDENTID_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"            Person temp \u003d new PersonBuilder(person).build(); // Ensures that we have a fresh copy for each test case.","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"            ab.addPerson(temp);","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"bryans17"},"content":"        ab.getMasterLabList().add(new Lab(\"1\"));","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"bryans17"},"content":"        return ab;","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"bryans17"},"content":"     * Returns an {@code AddressBook} with all the typical persons but without any Lab.","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"bryans17"},"content":"    public static AddressBook getTypicalAddressBookWithoutLabs() {","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"bryans17"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"bryans17"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"bryans17"},"content":"            Person temp \u003d new PersonBuilder(person).build(); // Ensures that we have a fresh copy for each test case.","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"bryans17"},"content":"            temp.setLabs(new LabList());","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"bryans17"},"content":"            ab.addPerson(temp);","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"channne":28,"-":46,"bryans17":55,"geetengtan":17}}]
