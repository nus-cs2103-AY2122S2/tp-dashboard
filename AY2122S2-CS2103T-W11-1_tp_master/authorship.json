[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W11-1/tp//workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W11-1/tp/actions)","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W11-1/tp/branch/master/graph/badge.svg?token\u003dEQL5RQUWFN)](https://codecov.io/gh/AY2122S2-CS2103T-W11-1/tp)","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"### NUSocials","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"* The project simulates an ongoing software project for a desktop application (called _NUSocials_) used for managing contact details.","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"* Example usages:","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"  * Keep track of how and where you met each contact","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"  * Search for contacts","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"* It is named `NUSocials` because we envision an application that helps NUS students maintain a professional contact list to help them stay socially connected.","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"* For the detailed documentation of this project, see the **[NUSocials Product Website](https://ay2122s2-cs2103t-w11-1.github.io/tp/)**.","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"This project is based on the AddressBook-Level3 project, created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"ongkimlai":12,"-":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"### Frederick Tang","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"\u003cimg src\u003d\"images/fredtwt.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"[[github](https://github.com/fredtwt)][[portfolio](team/fredtwt.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"* Role: Team Lead / Developer [tbd]","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"* Responsibilities:","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"  * Oversee the entire project","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"### Ong Kim Lai","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"\u003cimg src\u003d\"images/ongkimlai.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"[[github](http://github.com/ongkimlai)][[portfolio](team/ongkimlai.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"* Role: Deliverables and deadlines / Developer [tbd]","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"* Responsibilities:","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"  * Handle project deliverables and plan deadlines","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"### Vikrant","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"viki0526"},"content":"\u003cimg src\u003d\"images/viki0526.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"viki0526"},"content":"[[github](http://github.com/viki0526)] [[portfolio](team/viki0526.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"* Role: Testing / Developer [tbd]","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"* Responsibilities:","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"  * Testing of project to ensure everything is proper","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"### Manusha","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"manu2002g"},"content":"\u003cimg src\u003d\"images/manu2002g.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"manu2002g"},"content":"[[github](http://github.com/manu2002g)]","lastModifiedDate":"2022-03-01"},{"lineNumber":47,"author":{"gitId":"manu2002g"},"content":"[[portfolio](team/manu2002g.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"* Role: Documentation / Code Quality / Developer [tbd]","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"* Responsibilities:","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"  * Ensures project documentation done properly","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"  * Ensures code adheres to coding standards","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"fredtwt":12,"viki0526":2,"manu2002g":3,"-":26,"ongkimlai":9}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"fredtwt"},"content":"* university students who like to maintain a professional contact list ","lastModifiedDate":"2022-03-01"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"fredtwt"},"content":"**Value proposition**: to facilitate a convenient way for university students to manage their professional networks with fellow acquaintances ","lastModifiedDate":"2022-03-01"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                   | I want to …​                                     | So that I can…​                                                                                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"fredtwt"},"content":"|----------|-----------------------------------------------------------|--------------------------------------------------|--------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                                  | see usage instructions                           | refer to instructions when I forget how to use the App                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"fredtwt"},"content":"| `* * *`  | user                                                      | view all of my contacts                          |                                                                                                  |","lastModifiedDate":"2022-03-01"},{"lineNumber":277,"author":{"gitId":"fredtwt"},"content":"| `* * *`  | user                                                      | add a new contact                                |","lastModifiedDate":"2022-03-01"},{"lineNumber":278,"author":{"gitId":"fredtwt"},"content":"| `* * *`  | user                                                      | delete a contact                                 | remove entries that I no longer need                                                             |","lastModifiedDate":"2022-03-01"},{"lineNumber":279,"author":{"gitId":"fredtwt"},"content":"| `* * *`  | user                                                      | delete multiple contacts at once                 | delete unwanted entries faster                                                                   |","lastModifiedDate":"2022-03-07"},{"lineNumber":280,"author":{"gitId":"fredtwt"},"content":"| `* * *`  | user                                                      | edit an existing contact                         | update the information when needed                                                               |","lastModifiedDate":"2022-03-01"},{"lineNumber":281,"author":{"gitId":"fredtwt"},"content":"| `* * *`  | user                                                      | tag additional information to an existing contact | keep a memo of such details for future references                                                |","lastModifiedDate":"2022-03-01"},{"lineNumber":282,"author":{"gitId":"fredtwt"},"content":"| `* * `   | user                                                      | find a person by name                            | locate details of persons without having to go through the entire list                           |","lastModifiedDate":"2022-03-01"},{"lineNumber":283,"author":{"gitId":"fredtwt"},"content":"| `* * `   | user                                                      | find a person by module                          | locate details of persons with identical modules, without having to go through the entire list   |","lastModifiedDate":"2022-03-07"},{"lineNumber":284,"author":{"gitId":"fredtwt"},"content":"| `* * `   | user                                                      | find a person by internship                      | locate details of persons with identical intership, without having to go through the entire list |","lastModifiedDate":"2022-03-07"},{"lineNumber":285,"author":{"gitId":"fredtwt"},"content":"| `* * `   | user                                                      | find a person by cca                             | locate details of persons with identical cca, without having to go through the entire list       |","lastModifiedDate":"2022-03-07"},{"lineNumber":286,"author":{"gitId":"fredtwt"},"content":"| `* * `   | user                                                      | find a person by education                       | locate details of persons with identical education, without having to go through the entire list |","lastModifiedDate":"2022-03-07"},{"lineNumber":287,"author":{"gitId":"fredtwt"},"content":"| `* *`    | user with too many irrelevant persons in the contact list | delete all my contacts                           | reset my contact list                                                                            |","lastModifiedDate":"2022-03-07"},{"lineNumber":288,"author":{"gitId":"fredtwt"},"content":"| `*`      | user that tagged a lot of information to the contacts     | remove a specific tag of a contact               | avoid going through the trouble of retagging all the inforamtion again                           |","lastModifiedDate":"2022-03-01"},{"lineNumber":289,"author":{"gitId":"fredtwt"},"content":"| `*`      | user with many persons in the contact list                | sort persons by name                             | locate a person easily                                                                           |","lastModifiedDate":"2022-03-01"},{"lineNumber":290,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"fredtwt"},"content":"(For all use cases below, the **System** is the `NUSocials` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-01"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"fredtwt"},"content":"2.  NUSocials shows a list of persons","lastModifiedDate":"2022-03-01"},{"lineNumber":304,"author":{"gitId":"fredtwt"},"content":"3.  User requests to delete a specific person(s) in the list","lastModifiedDate":"2022-03-01"},{"lineNumber":305,"author":{"gitId":"fredtwt"},"content":"4.  AddressBook deletes the person(s)","lastModifiedDate":"2022-03-01"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"fredtwt"},"content":"    * 3a1. NUSocials shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"fredtwt"},"content":"**Use case: Add a person**","lastModifiedDate":"2022-03-01"},{"lineNumber":322,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":323,"author":{"gitId":"fredtwt"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":324,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":325,"author":{"gitId":"fredtwt"},"content":"1. User adds a new person in the given command format (see User Guide) ","lastModifiedDate":"2022-03-01"},{"lineNumber":326,"author":{"gitId":"fredtwt"},"content":"2. NUSocials adds the new person to the list","lastModifiedDate":"2022-03-01"},{"lineNumber":327,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":328,"author":{"gitId":"fredtwt"},"content":"    Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":329,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":330,"author":{"gitId":"fredtwt"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":331,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":332,"author":{"gitId":"fredtwt"},"content":"* 3a. The given add command is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":333,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":334,"author":{"gitId":"fredtwt"},"content":"    * 3a1. NUSocials shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":335,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":336,"author":{"gitId":"fredtwt"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-03-01"},{"lineNumber":337,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":338,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":339,"author":{"gitId":"fredtwt"},"content":"**Use case: Tag a person**","lastModifiedDate":"2022-03-01"},{"lineNumber":340,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":341,"author":{"gitId":"fredtwt"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":342,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":343,"author":{"gitId":"fredtwt"},"content":"1. User requests to list all persons","lastModifiedDate":"2022-03-01"},{"lineNumber":344,"author":{"gitId":"fredtwt"},"content":"2. NUSocials shows a list of all persons","lastModifiedDate":"2022-03-01"},{"lineNumber":345,"author":{"gitId":"fredtwt"},"content":"3. User inputs command to tag a specific person in the list","lastModifiedDate":"2022-03-01"},{"lineNumber":346,"author":{"gitId":"fredtwt"},"content":"4. NUSocials tags the person","lastModifiedDate":"2022-03-01"},{"lineNumber":347,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":348,"author":{"gitId":"fredtwt"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":349,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":350,"author":{"gitId":"fredtwt"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":351,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":352,"author":{"gitId":"fredtwt"},"content":"* 2a. The list is empty. ","lastModifiedDate":"2022-03-01"},{"lineNumber":353,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":354,"author":{"gitId":"fredtwt"},"content":"  Use case ends","lastModifiedDate":"2022-03-01"},{"lineNumber":355,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":356,"author":{"gitId":"fredtwt"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":357,"author":{"gitId":"fredtwt"},"content":"  * 3a1. NUSocials shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":358,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":359,"author":{"gitId":"fredtwt"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-03-01"},{"lineNumber":360,"author":{"gitId":"fredtwt"},"content":"* 3b. The given tag command is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":361,"author":{"gitId":"fredtwt"},"content":"  * 3b1. NUSocials shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":362,"author":{"gitId":"fredtwt"},"content":"    ","lastModifiedDate":"2022-03-01"},{"lineNumber":363,"author":{"gitId":"fredtwt"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-03-01"},{"lineNumber":364,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":365,"author":{"gitId":"fredtwt"},"content":"**Use case: Edit a person**","lastModifiedDate":"2022-03-01"},{"lineNumber":366,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":367,"author":{"gitId":"fredtwt"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":368,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":369,"author":{"gitId":"fredtwt"},"content":"1. User requests to list all persons","lastModifiedDate":"2022-03-01"},{"lineNumber":370,"author":{"gitId":"fredtwt"},"content":"2. NUSocials shows a list of all persons","lastModifiedDate":"2022-03-01"},{"lineNumber":371,"author":{"gitId":"fredtwt"},"content":"3. Users requests to overwrite certain fields and tags of the person with updated information","lastModifiedDate":"2022-03-01"},{"lineNumber":372,"author":{"gitId":"fredtwt"},"content":"4. NUSocials tags the person","lastModifiedDate":"2022-03-01"},{"lineNumber":373,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":374,"author":{"gitId":"fredtwt"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":375,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":376,"author":{"gitId":"fredtwt"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":377,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":378,"author":{"gitId":"fredtwt"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-03-01"},{"lineNumber":379,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":380,"author":{"gitId":"fredtwt"},"content":"  Use case end","lastModifiedDate":"2022-03-01"},{"lineNumber":381,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":382,"author":{"gitId":"fredtwt"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":383,"author":{"gitId":"fredtwt"},"content":"    * 3a1. NUSocials shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":384,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":385,"author":{"gitId":"fredtwt"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-01"},{"lineNumber":386,"author":{"gitId":"fredtwt"},"content":"* 3b. The given edit command is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":387,"author":{"gitId":"fredtwt"},"content":"    * 3b1. NUSocials shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-01"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":391,"author":{"gitId":"fredtwt"},"content":"**Use case: Viewing all persons**","lastModifiedDate":"2022-03-01"},{"lineNumber":392,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":393,"author":{"gitId":"fredtwt"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":394,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":395,"author":{"gitId":"fredtwt"},"content":"1. User requests to list all persons","lastModifiedDate":"2022-03-01"},{"lineNumber":396,"author":{"gitId":"fredtwt"},"content":"2. NUSocials displays all persons in a list","lastModifiedDate":"2022-03-01"},{"lineNumber":397,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":398,"author":{"gitId":"fredtwt"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":399,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":400,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"fredtwt"},"content":"1. Should work on _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2022-03-07"},{"lineNumber":405,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"fredtwt"},"content":"4. The system should work on both 32-bit and 64-bit environments.","lastModifiedDate":"2022-03-01"},{"lineNumber":408,"author":{"gitId":"fredtwt"},"content":"5. The system should respond within 3 seconds.","lastModifiedDate":"2022-03-01"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"fredtwt"},"content":"* **Mainstream OS**: Windows, macOS ","lastModifiedDate":"2022-03-07"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fredtwt":103,"-":364}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"NUSocials is a **desktop app for university students to maintain a professional contact list, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). The value of the app is to facilitate a convenient way for university students to manage their professional networks with fellow acquaintances.","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"1. Download the latest `nusocials.jar` from [here]() [coming soon].","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for NUSocials.","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"   * **`add`**`n/fred p/99998888 e/fred@example.com a/fred street, block 123, #01-01` : Adds a contact named `fred` to the Address Book.","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"   * **`tag`** `2 edu/computer science m/CS2040S` : Tags the 2nd contact shown in the current list with a Computer Science degree and CS2040S module.","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"    ","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"   * **`delete`**`3 5` : Deletes the 3rd and 5th contact shown in the current list.","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"    ","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"   * **`find`**`n/fred` : Finds persons that match the name \u0027fred\u0027.","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    ","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"   * **`find -s`**`n/fred m/cs2040s edu/computer science` : Finds persons that match the name \u0027fred\u0027 AND takes the module \u0027cs2040s\u0027 AND is studying \u0027computer science\u0027.","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"* Words in `UPPER_CASE` are mandatory parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/Kim Lai`.","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/Kim Lai t/friend` or as `n/Kim Lai`.","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"  e.g. `[m/MODULES]…​` can be used as ` ` (i.e. 0 times), `m/CS2040S`, `m/CS2030S m/CS2100` etc.","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"fredtwt"},"content":"  e.g. if you specify `p/12345678 p/87654321`, onbly `p/87654321` will be taken.","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"* ","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"fredtwt"},"content":"* All commands are case-sensitive.","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"fredtwt"},"content":"![help message]()","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"fredtwt"},"content":"### Adding a person: `add` [coming in V1.2]","lastModifiedDate":"2022-02-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"fredtwt"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`","lastModifiedDate":"2022-02-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"fredtwt"},"content":"* `add n/Kim Lai p/12345678 e/kimlai222@example.com a/KL street, block 123, #01-01`","lastModifiedDate":"2022-02-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":91,"author":{"gitId":"fredtwt"},"content":"### Tagging a person: `tag` [coming in V1.2]","lastModifiedDate":"2022-02-26"},{"lineNumber":92,"author":{"gitId":"fredtwt"},"content":"Tags additional information to an existing contact.","lastModifiedDate":"2022-02-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"fredtwt"},"content":"Format: `tag INDEX [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`","lastModifiedDate":"2022-02-26"},{"lineNumber":95,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":96,"author":{"gitId":"fredtwt"},"content":"* Tags the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-02-26"},{"lineNumber":97,"author":{"gitId":"fredtwt"},"content":"* At least one of the prefixes must be provided.","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"* If a prefix is used, the input after must not be blank.","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"* Input tag values will be accumulated to the existing tags.","lastModifiedDate":"2022-02-26"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"Examples:","lastModifiedDate":"2022-02-26"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"* `tag 1 i/abc-company m/CS2100 m/CS2030S` Tags the internship company and 2 modules to the 1st person.","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"fredtwt"},"content":"### Listing all persons : `list` [coming in V1.2]","lastModifiedDate":"2022-02-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"viki0526"},"content":"* All existing persons are automatically rendered when the application is launched","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"viki0526"},"content":"* The different tags are listed as follows: yellow for education, blue for modules, orange for CCAs and red for internships","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"viki0526"},"content":"* Personal details are listed in the following order: Phone number, Address, Email","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"fredtwt"},"content":"### Editing a person : `edit` [coming in V1.2]","lastModifiedDate":"2022-02-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`","lastModifiedDate":"2022-02-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"fredtwt"},"content":"* You can remove the person’s respective tags by typing `i/`, `m/`, `c/`, `edu/` without","lastModifiedDate":"2022-02-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"fredtwt"},"content":"* `edit 1 p/91234567 e/KL123@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `KL123@example.com` respectively.","lastModifiedDate":"2022-02-26"},{"lineNumber":128,"author":{"gitId":"fredtwt"},"content":"* `edit 2 m/CS2040s` Clears all module tags of the 2nd person and tag `CS2040s` as a module.","lastModifiedDate":"2022-02-26"},{"lineNumber":129,"author":{"gitId":"fredtwt"},"content":"* `edit 2 edu/ m/` Clears all education and module tags of the 2nd person.","lastModifiedDate":"2022-02-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"fredtwt"},"content":"### Locating persons: `find` [coming in v1.2]","lastModifiedDate":"2022-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"fredtwt"},"content":"Finds persons that match any of the given fields.","lastModifiedDate":"2022-03-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"fredtwt"},"content":"Format: `find [n/NAME]…​ [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`","lastModifiedDate":"2022-03-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"fredtwt"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"fredtwt"},"content":"* Persons matching at least one of the field will be returned (i.e. `OR` search).","lastModifiedDate":"2022-03-07"},{"lineNumber":141,"author":{"gitId":"fredtwt"},"content":"  e.g. `n/Hans m/cs2040s` will return `Hans`, `Bo Yang` (i.e. Bo Yang is tagged with cs2040s)","lastModifiedDate":"2022-03-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"fredtwt"},"content":"* `find n/John` returns `john` ","lastModifiedDate":"2022-03-07"},{"lineNumber":145,"author":{"gitId":"fredtwt"},"content":"* `find i/Shopee m/cs2040s m/cs2030s` returns `Alex Yeoh` (i.e Alex Yeoh is tagged with Shopee), `David Li` (i.e. David Li is tagged with cs2040s, cs2030s)\u003cbr\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"fredtwt"},"content":"  ![result for \u0027find i/Shopee m/cs2040s cs2030s\u0027]()","lastModifiedDate":"2022-03-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":148,"author":{"gitId":"fredtwt"},"content":"### Locating specific persons: `find -s` [coming in v1.2]","lastModifiedDate":"2022-03-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"fredtwt"},"content":"Finds persons that match all given fields.","lastModifiedDate":"2022-03-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"fredtwt"},"content":"Format: `find -s [n/NAME]…​ [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`","lastModifiedDate":"2022-03-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"fredtwt"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-03-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"fredtwt"},"content":"* Only persons matching all fields will be returned (i.e. `AND` search).","lastModifiedDate":"2022-03-07"},{"lineNumber":158,"author":{"gitId":"fredtwt"},"content":"  e.g. `n/Bo Yang m/cs2040s` will return `Bo Yang` (i.e. Bo Yang is tagged with cs2040s)","lastModifiedDate":"2022-03-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"fredtwt"},"content":"* `find -s n/John Doe` returns `John Doe`","lastModifiedDate":"2022-03-07"},{"lineNumber":162,"author":{"gitId":"fredtwt"},"content":"* `find -s n/David Li m/cs2040s m/cs2030s` returns `David Li` (i.e. David Li is tagged with cs2040s, cs2030s)\u003cbr\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"fredtwt"},"content":"  ![result for \u0027find -s n/David Li m/cs2040s cs2030s\u0027]()","lastModifiedDate":"2022-03-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"fredtwt"},"content":"### Deleting a person : `delete` [coming in V1.2]","lastModifiedDate":"2022-02-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"ongkimlai"},"content":"Alternate Format: `delete INDEX…​`","lastModifiedDate":"2022-03-09"},{"lineNumber":180,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":181,"author":{"gitId":"ongkimlai"},"content":"* Deletes multiple persons at the specified `INDEX`\u0027s.","lastModifiedDate":"2022-03-09"},{"lineNumber":182,"author":{"gitId":"ongkimlai"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"ongkimlai"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-09"},{"lineNumber":184,"author":{"gitId":"ongkimlai"},"content":"* Each index **must be separated by a whitespace**","lastModifiedDate":"2022-03-09"},{"lineNumber":185,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"ongkimlai"},"content":"Examples:","lastModifiedDate":"2022-03-09"},{"lineNumber":187,"author":{"gitId":"ongkimlai"},"content":"* `list` followed by `delete 2 5 7` deletes the 2nd, 5th and 7th person in the address book.","lastModifiedDate":"2022-03-09"},{"lineNumber":188,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"fredtwt"},"content":"Clears all entries from NUSocials.","lastModifiedDate":"2022-02-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"fredtwt"},"content":"NUSocials data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-02-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":207,"author":{"gitId":"fredtwt"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/nusocials.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-02-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":210,"author":{"gitId":"fredtwt"},"content":"If your changes to the data file makes its format invalid, NUSocials will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-02-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"fredtwt"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665`","lastModifiedDate":"2022-02-26"},{"lineNumber":231,"author":{"gitId":"fredtwt"},"content":"**Tag** | `tag INDEX [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`\u003cbr\u003e e.g.,`tag 1 m/CS2105`","lastModifiedDate":"2022-02-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"ongkimlai"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3` \u003cbr\u003e `delete INDEX…​INDEX` \u003cbr\u003e e.g. `delete 1 3 5`","lastModifiedDate":"2022-03-09"},{"lineNumber":234,"author":{"gitId":"fredtwt"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`\u003cbr\u003e e.g.,`edit 2 n/Fred e/fred111@example.com`","lastModifiedDate":"2022-02-26"},{"lineNumber":235,"author":{"gitId":"fredtwt"},"content":"**Find** | `find [n/NAME]…​ [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`\u003cbr\u003e e.g., `find n/john edu/computer science`  ","lastModifiedDate":"2022-03-07"},{"lineNumber":236,"author":{"gitId":"fredtwt"},"content":"**Find -s** | `find -s [n/NAME]…​ [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`\u003cbr\u003e e.g., `find -s n/john i/bytedance edu/computer science`","lastModifiedDate":"2022-03-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fredtwt":68,"viki0526":5,"-":152,"ongkimlai":13}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"ongkimlai"},"content":"    content: \"NUSocials\";","lastModifiedDate":"2022-02-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"ongkimlai":1}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"title: NUSocials","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W11-1/tp//workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W11-1/tp/actions)","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W11-1/tp/branch/master/graph/badge.svg?token\u003dEQL5RQUWFN)](https://codecov.io/gh/AY2122S2-CS2103T-W11-1/tp)","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"**NUSocials is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"* If you are interested in using NUSocials, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"* If you are interested about developing NUSocials, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":13,"ongkimlai":6}},{"path":"docs/team/fredtwt.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"title: Frederick Tang\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"### Project: NUSocials","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"NUSocials is a desktop address book application for university students who like to maintain a professional contact list. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"* **New Feature (to be added soon)**: Added the ability to tag additional information to an existing contact entry.","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"    * What it does: allows the user to tag additional information to an existing contact.","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    * Justification: This feature improves the product significantly because a user can tag important information to their own contacts for future references.","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"    * Highlights: This enhancement affects the existing UI layout. It required an in-depth analysis of how the tagged information should be displayed alongside with their respective contacts.","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"* **Enhancements to existing features:**","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"  * Removed the tag functionality from add command and separate it into a tag command instead.","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"   ","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        * Added documentation for the features `add` and `tag` [\\#72]()","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"      * Added user stories for the features `add`, `tag` and `find`.","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":26,"ongkimlai":1}},{"path":"docs/team/manu2002g.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"manu2002g"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"manu2002g"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"manu2002g"},"content":"title: Manusha Galappaththi\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"manu2002g"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"manu2002g"},"content":"### Project: NUSocials","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"manu2002g"},"content":"NUSocials is a desktop address book application for university students who like to maintain a professional contact list. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"manu2002g"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"manu2002g"},"content":"* **New Feature (to be added soon)**: Added the ability to view all contact entries.","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"manu2002g"},"content":"  * What it does: allows the user to view a list of all contacts in the stored in the database","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"manu2002g"},"content":"  * Justification: This feature improves the product significantly because a user can view all their contacts and choose which ones to tag or delete.","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"manu2002g"},"content":"  * Highlights: This enhancement required an analysis of the UI design layout to find the best possible way to display the result.","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"manu2002g"},"content":"* **New Feature (to be added soon)**: Added the ability to edit previously added entries","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"manu2002g"},"content":"  * What it does: allows the user to change the details or tags of a previously added contact","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"manu2002g"},"content":"  * Justification:  Users may make mistakes when entering contact details or tags. We should allow them to rectify this using an edit command","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"manu2002g"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"manu2002g"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dmanu2002g\u0026tabRepo\u003dAY2122S2-CS2103T-W11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"manu2002g"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"manu2002g"},"content":"  * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"manu2002g"},"content":"    * {to be added}","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"manu2002g"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"manu2002g"},"content":"    * {to be added}","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"manu2002g":30}},{"path":"docs/team/ongkimlai.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"title: Ong Kim Lai\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"### Project: NUSocials","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"NUSocials is a desktop address book application for university students who like to maintain a professional contact list. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"* **New Feature**: Added the ability to tag previous contacts.","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"  * What it does: allows the user to tag additional information to an existing contact.","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"  * Justification: This feature improves the product significantly because a user can tag important information to their own contacts for future references.","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"  * Highlights: This enhancement affects the existing UI layout. It required an in-depth analysis of how the tagged information should be displayed alongside with their respective contacts.","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"* **New Feature**: Added the ability to delete multiple contacts.","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"  * What it does: allows the user to delete multiple contacts in a single command.","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"  * Justification: This feature improves the product as a user can efficiently delete many contacts at once instead of inputting a delete command for each contact that he or she wants to delete.","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dongkimlai\u0026tabRepo\u003dAY2122S2-CS2103T-W11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026zA\u003dongkimlai\u0026zR\u003dAY2122S2-CS2103T-W11-1%2Ftp%5Bmaster%5D\u0026zACS\u003d81.23391812865498\u0026zS\u003d2022-02-18\u0026zFS\u003d\u0026zU\u003d2022-02-26\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"  * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"    * Added documentation for the features `add` and `tag`","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"    * {to be added}","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"  * README:","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    * Updated the README page","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"* **Tools**:","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"  * Integrated Codecov into team repo","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"ongkimlai":32}},{"path":"docs/team/viki0526.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"title: Vikrant Prakash\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":"### Project: NUSocials","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"NUSocials is a desktop address book application for university students who like to maintain a professional contact list. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"* **New Feature (to be added soon)**: Added the ability to view all contact entries.","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"    * What it does: allows the user to view a list of all contacts in the stored in the database","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"    * Justification: This feature improves the product significantly because a user can view all their contacts and choose which ones to tag or delete.","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"    * Highlights: This enhancement required an analysis of the UI design layout to find the best possible way to display the result.","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"* **New Feature (to be added soon)**: Added the ability to edit previously added entries","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"    * What it does: allows the user to change the details or tags of a previously added contact","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"    * Justification:  Users may make mistakes when entering contact details or tags. We should allow them to rectify this using an edit command","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"viki0526"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"viki0526"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"viki0526"},"content":"    * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"viki0526"},"content":"    * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"viki0526"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"viki0526"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#20]()","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"viki0526":30}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"public class Index implements Comparable\u003cIndex\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"    private final int originalZeroBasedIndex;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        this.originalZeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"    public int getOriginalZeroBased() {","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"    public Index getOriginalZeroBasedAsIndex() {","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        return new Index(getOriginalZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"    public int getOrignalOneBased() {","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"     * Decreases the index by 1","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"    public void decreaseIndex() {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"        zeroBasedIndex--;","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"                //\u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"                \u0026\u0026 originalZeroBasedIndex \u003d\u003d ((Index) other).originalZeroBasedIndex); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"    public int compareTo(Index other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"ongkimlai"},"content":"        return other.originalZeroBasedIndex - originalZeroBasedIndex;","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":52,"ongkimlai":30}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"     * Returns true if {@code s} contains multiple entries, does not check for validness.","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"     * Returns false if {@code s} is only a single entry.","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"     * e.g. \"1\", \"2\" returns false, \"1 2 3\", \"5    10\" (multiple whitespaces) returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"     * @param s trimmed string of arguments","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"    public static boolean containsMultipleIndex(String s) {","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"ongkimlai"},"content":"        String[] indexes \u003d s.split(\" \");","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"ongkimlai"},"content":"        return indexes.length !\u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"ongkimlai"},"content":"     * Returns true if {@code s} contains multiple all unique entries (integers), does not check for validness.","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"ongkimlai"},"content":"     * Returns false if {@code s} contains duplicate entries (integers).","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"ongkimlai"},"content":"     * e.g.:","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"ongkimlai"},"content":"     * \"1 1\", \"1 2 1 3\" returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"ongkimlai"},"content":"     * \"1 2 3\", \"5 10 2 3\" (multiple whitespaces) returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"ongkimlai"},"content":"     * @param s trimmed string of arguments","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"ongkimlai"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"ongkimlai"},"content":"    public static boolean isAllUniqueIntegers(String s) {","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"ongkimlai"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"ongkimlai"},"content":"        String[] indexes \u003d s.split(\" \");","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"ongkimlai"},"content":"        HashSet\u003cInteger\u003e hashSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"ongkimlai"},"content":"        for (String t : indexes) {","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"ongkimlai"},"content":"            int n \u003d Integer.parseInt(t);","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"ongkimlai"},"content":"            if (!hashSet.contains(n)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"ongkimlai"},"content":"                hashSet.add(n);","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"ongkimlai"},"content":"            } else {","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"ongkimlai"},"content":"                return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"ongkimlai"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"ongkimlai"},"content":"        return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"ongkimlai"},"content":"     * Returns true if every entry in {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"ongkimlai"},"content":"     * e.g. \"5 6 7 8\"","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"ongkimlai"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"ongkimlai"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"1 a\" (contains letters)","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"ongkimlai"},"content":"     * \"1, 2 3\" (contains comma), \"1   2 3\" (multiple whitespaces between adjacent integers)","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"ongkimlai"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"ongkimlai"},"content":"    public static boolean isAllNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"ongkimlai"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"ongkimlai"},"content":"        String[] indexes \u003d s.split(\" \");","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"ongkimlai"},"content":"        boolean result \u003d true;","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"ongkimlai"},"content":"        for (String t : indexes) {","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"ongkimlai"},"content":"            result \u003d result \u0026\u0026 isNonZeroUnsignedInteger(t);","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"ongkimlai"},"content":"        return result;","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":68,"ongkimlai":61}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \";","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fredtwt":1,"-":62}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"            + \": Deletes the person identified by the index number(s) used in the displayed person list.\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"            + \"OR\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"            + \"Parameters: INDEX... (all indexes must be unique and positive integers)\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 3 5\";","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person:%n%1$s\";","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"    public static final String MESSAGE_DELETE_MULTIPLE_PERSON_SUCCESS \u003d \"Deleted Persons:%n%1$s\";","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"    private final Index[] targetIndexArr;","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for DeleteCommand, for singular deletion","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"     * @param targetIndex the person to be deleted","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"        this.targetIndexArr \u003d new Index[]{targetIndex};","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for DeleteCommand, for multiple deletions","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"     * @param targetIndexArr the persons to be deleted","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"    public DeleteCommand(Index[] targetIndexArr) {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"        this.targetIndexArr \u003d targetIndexArr;","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"        this.targetIndex \u003d targetIndexArr[0];","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"     * In the multiple deletion case, ensures all user input indexes are within range of the list.","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"     * @param listSize the size of the last displayed list.","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"     * @return true if every index is within the range of the list.","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"    private boolean checkIndexRange(int listSize) {","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"        boolean result \u003d true;","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"        for (Index target : targetIndexArr) {","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"            result \u003d result \u0026\u0026 (target.getZeroBased() \u003c listSize);","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"        return result;","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"    private String extractDeletedInfo(List\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"        final StringBuilder deletedPersonOrPersons \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"        for (int i \u003d 0; i \u003c targetIndexArr.length; i++) {","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"            Index target \u003d targetIndexArr[i];","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"            Person personToDelete \u003d lastShownList.get(target.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"            if (i \u003e 0) {","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"                deletedPersonOrPersons.append(System.lineSeparator());","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"            deletedPersonOrPersons.append(personToDelete.toString());","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"ongkimlai"},"content":"        return deletedPersonOrPersons.toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"ongkimlai"},"content":"    private void deleteFromList(Model model, List\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"ongkimlai"},"content":"        Index[] targetIndexArrClone \u003d targetIndexArr.clone();","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"        Arrays.sort(targetIndexArrClone);","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"ongkimlai"},"content":"        for (Index target : targetIndexArrClone) {","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"ongkimlai"},"content":"            Person personToDelete \u003d lastShownList.get(target.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"ongkimlai"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"ongkimlai"},"content":"        int lastShownListSize \u003d lastShownList.size();","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"ongkimlai"},"content":"        if (!checkIndexRange(lastShownListSize)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"ongkimlai"},"content":"        String deletedPersonOrPersons \u003d extractDeletedInfo(lastShownList);","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"ongkimlai"},"content":"        deleteFromList(model, lastShownList);","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"ongkimlai"},"content":"        return targetIndexArr.length \u003d\u003d 1","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"ongkimlai"},"content":"                ? new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, deletedPersonOrPersons))","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"ongkimlai"},"content":"                : new CommandResult(String.format(MESSAGE_DELETE_MULTIPLE_PERSON_SUCCESS, deletedPersonOrPersons));","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":46,"ongkimlai":69}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"fredtwt"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress);","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"fredtwt"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address);","lastModifiedDate":"2022-03-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"fredtwt"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress());","lastModifiedDate":"2022-03-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"fredtwt":3,"-":196}},{"path":"src/main/java/seedu/address/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":" * Tags additional information of an existing person in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Tags additional information to the person identified \"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"            + \"If there are existing tags, the new tags will be appended to them.\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_EDUCATION + \"[EDUCATION]... \"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_CCA + \"[CCA]... \"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_INTERNSHIP + \"[INTERNSHIP]... \"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_MODULE + \"[MODULE]...\"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_EDUCATION + \"Computer Science \"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_CCA + \"Bouldering \"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_INTERNSHIP + \"GIC \"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_MODULE + \"CS2040S\";","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_ADD_TAG_SUCCESS \u003d \"Added tag to Person: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"    public static final String MESSAGE_NO_PARAMETERS \u003d \"At least 1 field must be used and not blank.\";","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Education: %2$s, Internship: %3$s, Module: %4$s, \"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"            + \"CCA: %5$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"    private final Index index;","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cTag\u003e educations;","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cTag\u003e internships;","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cTag\u003e modules;","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cTag\u003e ccas;","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"     * @param index of the person in the filtered person list to tag","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"     * @param education of the person to be updated to","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"     * @param internship of the person to be updated to","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"     * @param module of the person to be updated to","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"     * @param cca of the person to be updated to","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"    public TagCommand(Index index, List\u003cTag\u003e education, List\u003cTag\u003e internship, List\u003cTag\u003e module, List\u003cTag\u003e cca) {","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"        requireAllNonNull(index, education, internship, module, cca);","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"        this.educations \u003d education;","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"        this.internships \u003d internship;","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"        this.modules \u003d module;","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"fredtwt"},"content":"        this.ccas \u003d cca;","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"fredtwt"},"content":"    private static String convertToString(List\u003cTag\u003e lst) {","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"fredtwt"},"content":"        if (lst.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"fredtwt"},"content":"            return \"\";","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"fredtwt"},"content":"        } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"fredtwt"},"content":"            return Arrays.toString(lst.toArray());","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"fredtwt"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"fredtwt"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"fredtwt"},"content":"        if (index.getOneBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"fredtwt"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"ongkimlai"},"content":"        if (isAllEmpty()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"            throw new CommandException(MESSAGE_NO_PARAMETERS);","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"fredtwt"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"fredtwt"},"content":"        Set\u003cTag\u003e currEducations \u003d new HashSet\u003c\u003e(personToEdit.getEducations());","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"fredtwt"},"content":"        Set\u003cTag\u003e currInternships \u003d new HashSet\u003c\u003e(personToEdit.getInternships());","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"fredtwt"},"content":"        Set\u003cTag\u003e currModules \u003d new HashSet\u003c\u003e(personToEdit.getModules());","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"fredtwt"},"content":"        Set\u003cTag\u003e currCcas \u003d new HashSet\u003c\u003e(personToEdit.getCcas());","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"ongkimlai"},"content":"        currEducations.addAll(educations);","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"ongkimlai"},"content":"        currInternships.addAll(internships);","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"ongkimlai"},"content":"        currModules.addAll(modules);","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"ongkimlai"},"content":"        currCcas.addAll(ccas);","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(), personToEdit.getAddress(),","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"ongkimlai"},"content":"                new ArrayList\u003c\u003e(currEducations), new ArrayList\u003c\u003e(currInternships),","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"ongkimlai"},"content":"                new ArrayList\u003c\u003e(currModules), new ArrayList\u003c\u003e(currCcas));","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"fredtwt"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"fredtwt"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"fredtwt"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"ongkimlai"},"content":"    private boolean isAllEmpty() {","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"ongkimlai"},"content":"        return educations.isEmpty() \u0026\u0026 internships.isEmpty() \u0026\u0026 modules.isEmpty() \u0026\u0026 ccas.isEmpty();","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"fredtwt"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"fredtwt"},"content":"     * the tag is added to or removed from","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"fredtwt"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"fredtwt"},"content":"        String message \u003d MESSAGE_ADD_TAG_SUCCESS;","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"fredtwt"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"fredtwt"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"fredtwt"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"fredtwt"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"fredtwt"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"fredtwt"},"content":"        if (!(other instanceof TagCommand)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"fredtwt"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"fredtwt"},"content":"        // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"fredtwt"},"content":"        TagCommand e \u003d (TagCommand) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"fredtwt"},"content":"        return index.equals(e.index) \u0026\u0026 educations.equals(e.educations) \u0026\u0026 internships.equals(e.internships)","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 modules.equals(e.modules) \u0026\u0026 ccas.equals(e.ccas);","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":127,"ongkimlai":14}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"        Person person \u003d new Person(name, phone, email, address);","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"fredtwt":2,"-":54}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"        case TagCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"            return new TagCommandParser().parse(arguments);","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fredtwt":4,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"    public static final Prefix PREFIX_INTERNSHIP \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    public static final Prefix PREFIX_MODULE \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"    public static final Prefix PREFIX_CCA \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    public static final Prefix PREFIX_EDUCATION \u003d new Prefix(\"edu/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"fredtwt":4,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"            Index[] index \u003d ParserUtil.parseIndexes(args);","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":28,"ongkimlai":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"    /*","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"    /*","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"fredtwt"},"content":"    */","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"fredtwt":4,"-":71}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Cca;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Internship;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"    public static final String MESSAGE_INVALID_INDEX_MULTIPLE \u003d \"All indexes must be unique\"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"                + \" and a non-zero unsigned integer.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"    public static final String INVALID_TAGTYPE \u003d \"The tag type is invalid!\";","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"     * trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"     * @throws ParseException if the specified any of the indexes are invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"    public static Index[] parseIndexes(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"        boolean isMultipleIndex \u003d StringUtil.containsMultipleIndex(trimmedIndex);","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"        boolean isAllValidIntegers \u003d isMultipleIndex \u0026\u0026 StringUtil.isAllNonZeroUnsignedInteger(trimmedIndex);","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"        boolean isValidMultipleIndex \u003d isAllValidIntegers \u0026\u0026 StringUtil.isAllUniqueIntegers(trimmedIndex);","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"        if (!isMultipleIndex \u0026\u0026 !StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"        } else if (isMultipleIndex \u0026\u0026 !isValidMultipleIndex) {","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX_MULTIPLE);","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"        return getIndexes(trimmedIndex);","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"     * Transforms a string of valid one-based indexes into an array of {@code Index}.","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"    private static Index[] getIndexes(String trimmedIndex) {","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"        String[] oneBasedArr \u003d trimmedIndex.split(\" \");","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"        Index[] indexArr \u003d new Index[oneBasedArr.length];","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"        for (int i \u003d 0; i \u003c oneBasedArr.length; i++) {","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"            indexArr[i] \u003d Index.fromOneBased(Integer.parseInt(oneBasedArr[i]));","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"        return indexArr;","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"fredtwt"},"content":"    * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"fredtwt"},"content":"    * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"fredtwt"},"content":"    *","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"fredtwt"},"content":"    * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"fredtwt"},"content":"    */","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"fredtwt"},"content":"    public static Tag parseTag(String tag, String type) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"fredtwt"},"content":"        switch (type) {","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"fredtwt"},"content":"        case Tag.EDUCATION:","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"fredtwt"},"content":"            if (!Education.isValidTagName(trimmedTag)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"fredtwt"},"content":"                throw new ParseException(Education.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"fredtwt"},"content":"            return new Education(trimmedTag);","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"fredtwt"},"content":"        case Tag.INTERNSHIP:","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"fredtwt"},"content":"            if (!Internship.isValidTagName(trimmedTag)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"fredtwt"},"content":"                throw new ParseException(Internship.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"fredtwt"},"content":"            return new Internship(trimmedTag);","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"fredtwt"},"content":"        case Tag.MODULE:","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"fredtwt"},"content":"            if (!Module.isValidTagName(trimmedTag)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"fredtwt"},"content":"                throw new ParseException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"fredtwt"},"content":"            return new Module(trimmedTag);","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"fredtwt"},"content":"        case Tag.CCA:","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"fredtwt"},"content":"            if (!Cca.isValidTagName(trimmedTag)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"fredtwt"},"content":"                throw new ParseException(Cca.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"fredtwt"},"content":"            return new Cca(trimmedTag);","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"fredtwt"},"content":"        default:","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"fredtwt"},"content":"            throw new ParseException(INVALID_TAGTYPE);","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"fredtwt"},"content":"    * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"fredtwt"},"content":"    */","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"fredtwt"},"content":"    public static List\u003cTag\u003e parseTags(Collection\u003cString\u003e tags, String type) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2022-03-10"},{"lineNumber":182,"author":{"gitId":"fredtwt"},"content":"            tagSet.add(parseTag(tagName, type));","lastModifiedDate":"2022-03-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":184,"author":{"gitId":"fredtwt"},"content":"        return new ArrayList\u003c\u003e(tagSet);","lastModifiedDate":"2022-03-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"fredtwt":42,"-":110,"ongkimlai":34}},{"path":"src/main/java/seedu/address/logic/parser/TagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":" * Parses input arguments and creates a new {@Code TagCommand} object","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"public class TagCommandParser implements Parser\u003cTagCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"     * Parses the given {@code String} of arguments in the context of the TagCommand","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"     * and returns an TagCommand object for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"    public TagCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CCA, PREFIX_EDUCATION,","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"                PREFIX_MODULE, PREFIX_INTERNSHIP);","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"        Index index;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"        List\u003cTag\u003e education \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_EDUCATION), Tag.EDUCATION);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"        List\u003cTag\u003e internship \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_INTERNSHIP), Tag.INTERNSHIP);","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"        List\u003cTag\u003e module \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_MODULE), Tag.MODULE);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"        List\u003cTag\u003e cca \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_CCA), Tag.CCA);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"        return new TagCommand(index, education, internship, module, cca);","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":48}},{"path":"src/main/java/seedu/address/model/person/Cca.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":" * Represents a Person\u0027s cca tag in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"public class Cca extends Tag {","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Cca can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    public final String value;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"     * Constructs a {@code Cca}.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"     * @param cca a cca tag.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    public Cca(String cca) {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        super(requireNonNull(cca));","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        checkArgument(isValidTagName(cca), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"        this.value \u003d cca.trim().toLowerCase();","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"                || (other instanceof Cca","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 this.value.equals(((Cca) other).value));","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":39}},{"path":"src/main/java/seedu/address/model/person/Education.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":" * Represents a Person\u0027s education tag in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"public class Education extends Tag {","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Education can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"    public final String value;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"     * Constructs a {@code Education}.","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"     * @param education an education tag.","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"    public Education(String education) {","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"        super(requireNonNull(education));","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        checkArgument(isValidTagName(education), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        this.value \u003d education.trim().toLowerCase();","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"                || (other instanceof Education","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 this.value.equals(((Education) other).value));","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":38}},{"path":"src/main/java/seedu/address/model/person/Internship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":" * Represents a Person\u0027s internship tag in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"public class Internship extends Tag {","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Internship can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    public final String value;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"     * Constructs a {@code Internship}.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"     * @param internship an internship tag.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    public Internship(String internship) {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        super(requireNonNull(internship));","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        checkArgument(isValidTagName(internship), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"        this.value \u003d internship.trim().toLowerCase();","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"                || (other instanceof Internship","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 this.value.equals(((Internship) other).value));","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":39}},{"path":"src/main/java/seedu/address/model/person/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":" * Represents a Person\u0027s cca tag in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"public class Module extends Tag {","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Internship can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    public final String value;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"     * Constructs a {@code Module}.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"     * @param module a module tag.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    public Module(String module) {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        super(requireNonNull(module));","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        checkArgument(isValidTagName(module), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"        this.value \u003d module.trim().toLowerCase();","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"                || (other instanceof Module","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 this.value.equals(((Module) other).value));","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":39}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cTag\u003e educations;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cTag\u003e internships;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cTag\u003e modules;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cTag\u003e ccas;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"    public Person(Name name, Phone phone, Email email, Address address) {","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"        requireAllNonNull(name, phone, email, address);","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"        this.educations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"        this.internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"        this.modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"        this.ccas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"     * Second constructor for Person.","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"    public Person(Name name, Phone phone, Email email, Address address, List\u003cTag\u003e educations, List\u003cTag\u003e internships,","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"                  List\u003cTag\u003e modules, List\u003cTag\u003e ccas) {","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"        requireAllNonNull(name, phone, email, address, educations, internships, modules, ccas);","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"        this.educations \u003d educations;","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"        this.internships \u003d internships;","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"        this.ccas \u003d ccas;","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"fredtwt"},"content":"    public List\u003cTag\u003e getEducations() {","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"fredtwt"},"content":"        return educations;","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"fredtwt"},"content":"    public List\u003cTag\u003e getInternships() {","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"fredtwt"},"content":"        return internships;","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"fredtwt"},"content":"    public List\u003cTag\u003e getModules() {","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"fredtwt"},"content":"        return modules;","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"fredtwt"},"content":"    public List\u003cTag\u003e getCcas() {","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"fredtwt"},"content":"        return ccas;","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 otherPerson.getEducations().equals(getEducations())","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 otherPerson.getInternships().equals(getInternships())","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 otherPerson.getModules().equals(getModules())","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 otherPerson.getCcas().equals(getCcas());","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"fredtwt"},"content":"        return Objects.hash(name, phone, email, address, educations, internships, modules, ccas);","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":145,"author":{"gitId":"fredtwt"},"content":"                .append(getAddress())","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"fredtwt"},"content":"                .append(\"; Educations: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"fredtwt"},"content":"                .append(getEducations())","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"fredtwt"},"content":"                .append(\"; Internships: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"fredtwt"},"content":"                .append(getInternships())","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"fredtwt"},"content":"                .append(\"; Modules: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"fredtwt"},"content":"                .append(getModules())","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"fredtwt"},"content":"                .append(\"; Ccas: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"fredtwt"},"content":"                .append(getCcas());","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fredtwt":56,"-":102}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"public abstract class Tag {","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"    public static final String CCA \u003d \"cca\";","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"    public static final String EDUCATION \u003d \"education\";","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"    public static final String INTERNSHIP \u003d \"internship\";","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"    public static final String MODULE \u003d \"module\";","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"        return tagName;","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fredtwt":6,"-":32,"ongkimlai":1}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\")),","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\")),","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\")),","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\")),","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\")),","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"))","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"fredtwt":6,"-":34}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Cca;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Internship;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cJsonAdaptedTag\u003e ccas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cJsonAdaptedTag\u003e educations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cJsonAdaptedTag\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cJsonAdaptedTag\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"            @JsonProperty(\"educations\") List\u003cJsonAdaptedTag\u003e educations,","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"            @JsonProperty(\"internships\") List\u003cJsonAdaptedTag\u003e internships,","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"            @JsonProperty(\"modules\") List\u003cJsonAdaptedTag\u003e modules,","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"            @JsonProperty(\"ccas\") List\u003cJsonAdaptedTag\u003e ccas) {","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"        if (educations !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"            this.educations.addAll(educations);","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"        if (internships !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"            this.internships.addAll(internships);","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"        if (modules !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"            this.modules.addAll(modules);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"        if (ccas !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"            this.ccas.addAll(ccas);","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"fredtwt"},"content":"        educations.addAll(new HashSet\u003c\u003e(source.getEducations()).stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"fredtwt"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"fredtwt"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"fredtwt"},"content":"        internships.addAll(new HashSet\u003c\u003e(source.getInternships()).stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"fredtwt"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"fredtwt"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"fredtwt"},"content":"        modules.addAll(new HashSet\u003c\u003e(source.getModules()).stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"fredtwt"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"fredtwt"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"fredtwt"},"content":"        ccas.addAll(new HashSet\u003c\u003e(source.getCcas()).stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"fredtwt"},"content":"        final List\u003cTag\u003e modelCcas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"fredtwt"},"content":"        final List\u003cTag\u003e modelEducations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"fredtwt"},"content":"        final List\u003cTag\u003e modelInternships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"        final List\u003cTag\u003e modelModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"        for (JsonAdaptedTag curr : educations) {","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"            if (!Education.isValidTagName(curr.getTagName())) {","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"                throw new IllegalValueException(Education.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"fredtwt"},"content":"            modelEducations.add(curr.toModelType(\"education\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"fredtwt"},"content":"        for (JsonAdaptedTag curr : ccas) {","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"fredtwt"},"content":"            if (!Cca.isValidTagName(curr.getTagName())) {","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"                throw new IllegalValueException(Cca.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"fredtwt"},"content":"            modelCcas.add(curr.toModelType(\"cca\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"fredtwt"},"content":"        for (JsonAdaptedTag curr : internships) {","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"fredtwt"},"content":"            if (!Internship.isValidTagName(curr.getTagName())) {","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"fredtwt"},"content":"                throw new IllegalValueException(Internship.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"            modelInternships.add(curr.toModelType(\"internship\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"fredtwt"},"content":"        for (JsonAdaptedTag curr : modules) {","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"fredtwt"},"content":"            if (!Module.isValidTagName(curr.getTagName())) {","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"fredtwt"},"content":"                throw new IllegalValueException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"fredtwt"},"content":"            modelModules.add(curr.toModelType(\"module\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"fredtwt"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelEducations, modelInternships,","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"fredtwt"},"content":"                modelModules, modelCcas);","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fredtwt":66,"-":97}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Cca;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Internship;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"    public static final String INVALID_TAGTYPE \u003d \"The tag type is invalid!\";","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"    public Tag toModelType(String tagType) throws IllegalValueException {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"        switch (tagType) {","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"        case Tag.CCA:","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"            return new Cca(tagName);","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"        case Tag.EDUCATION:","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"            return new Education(tagName);","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"        case Tag.INTERNSHIP:","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"            return new Internship(tagName);","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"        case Tag.MODULE:","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"            return new Module(tagName);","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"        default:","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"            throw new IllegalValueException(INVALID_TAGTYPE);","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fredtwt":19,"-":44}},{"path":"src/main/java/seedu/address/ui/PersonCardComponent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"public class PersonCardComponent extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"    private FlowPane educations;","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"    private FlowPane internships;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"    private FlowPane modules;","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"    private FlowPane ccas;","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"viki0526"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"viki0526"},"content":"    private Label l;","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"viki0526"},"content":"    public PersonCardComponent(Person person, int displayedIndex) {","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"viki0526"},"content":"        educations.setHgap(8);","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"viki0526"},"content":"        educations.setVgap(8);","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"viki0526"},"content":"        internships.setHgap(8);","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"viki0526"},"content":"        internships.setVgap(8);","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"viki0526"},"content":"        modules.setHgap(8);","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"viki0526"},"content":"        modules.setVgap(8);","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"viki0526"},"content":"        ccas.setHgap(8);","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"viki0526"},"content":"        ccas.setVgap(8);","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"fredtwt"},"content":"        person.getEducations().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"fredtwt"},"content":"                .sorted(Comparator.comparing(edu -\u003e edu.tagName))","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"viki0526"},"content":"                .forEach(edu -\u003e educations.getChildren().add(new TagComponent(edu).getTagLabel()));","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"fredtwt"},"content":"        person.getInternships().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"fredtwt"},"content":"                .sorted(Comparator.comparing(intern -\u003e intern.tagName))","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"viki0526"},"content":"                .forEach(intern -\u003e internships.getChildren().add(new TagComponent(intern).getTagLabel()));","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"fredtwt"},"content":"        person.getModules().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"fredtwt"},"content":"                .sorted(Comparator.comparing(module -\u003e module.tagName))","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"viki0526"},"content":"                .forEach(module -\u003e modules.getChildren().add(new TagComponent(module).getTagLabel()));","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"fredtwt"},"content":"        person.getCcas().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"fredtwt"},"content":"                .sorted(Comparator.comparing(cca -\u003e cca.tagName))","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"viki0526"},"content":"                .forEach(cca -\u003e ccas.getChildren().add(new TagComponent(cca).getTagLabel()));","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"viki0526"},"content":"        if (!(other instanceof PersonCardComponent)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"viki0526"},"content":"        PersonCardComponent card \u003d (PersonCardComponent) other;","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"fredtwt":16,"viki0526":18,"-":68}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"viki0526"},"content":"                setGraphic(new PersonCardComponent(person, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"viki0526":1,"-":48}},{"path":"src/main/java/seedu/address/ui/TagComponent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.person.Cca;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.person.Internship;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"public class TagComponent {","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"    private final Tag tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"    public TagComponent(Tag tag) {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"    public Label getTagLabel() {","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"        Label l \u003d new Label(tag.tagName);","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"viki0526"},"content":"        if (tag instanceof Internship) {","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"viki0526"},"content":"            l.setStyle(\"-fx-padding:2;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-border-width: 0;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-border-color: green;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-border-radius: 2;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-background-color: red;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-border-insets: 2;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-text-fill: white;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-font-size: 12;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-line-spacing: 5;\");","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"viki0526"},"content":"        if (tag instanceof Education) {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"viki0526"},"content":"            l.setStyle(\"-fx-padding:2;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-border-width: 0;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-border-color: green;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-border-radius: 2;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-background-color: yellow;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-border-insets: 2;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-text-fill: black;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-font-size: 12;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-line-spacing: 5;\");","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"viki0526"},"content":"        if (tag instanceof Module) {","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"viki0526"},"content":"            l.setStyle(\"-fx-padding:2;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-border-width: 0;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-border-color: green;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-border-radius: 2;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-background-color: blue;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-border-insets: 2;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-text-fill: white;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-font-size: 12;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-line-spacing: 5;\");","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"viki0526"},"content":"        if (tag instanceof Cca) {","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"viki0526"},"content":"            l.setStyle(\"-fx-padding:2;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-border-width: 0;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-border-color: green;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-border-radius: 2;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-background-color: orange;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-border-insets: 2;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-text-fill: black;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-font-size: 12;\"","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"viki0526"},"content":"                    + \"-fx-line-spacing: -2;\");","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"viki0526"},"content":"        return l;","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"viki0526":69}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"      \u003cFlowPane fx:id\u003d\"educations\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"      \u003cFlowPane fx:id\u003d\"modules\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"      \u003cFlowPane fx:id\u003d\"ccas\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"      \u003cFlowPane fx:id\u003d\"internships\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fredtwt":4,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"fredtwt"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"fredtwt":1,"-":161}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"    public static final String VALID_EDUCATION_AMY \u003d \"Computer Science\";","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"    public static final String VALID_EDUCATION_BOB \u003d \"Computer Engineering\";","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    public static final String VALID_CCA_AMY \u003d \"Netball\";","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"    public static final String VALID_CCA_BOB \u003d \"Basketball\";","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"    public static final String VALID_INTERNSHIP_AMY \u003d \"GIC\";","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"    public static final String VALID_INTERNSHIP_BOB \u003d \"Bosch\";","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"    public static final String VALID_MODULE_AMY \u003d \"CS2040S\";","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"    public static final String VALID_MODULE_BOB \u003d \"CS2100\";","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"fredtwt"},"content":"                .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"fredtwt"},"content":"                .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"fredtwt":11,"-":120}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"    private Model model;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    @AfterEach","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"    public void tearDown() {","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        model \u003d null;","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"ongkimlai"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON.getOriginalZeroBasedAsIndex();","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"ongkimlai"},"content":"    public void execute_validIndexUnfilteredListMultipleOutOfOrder_success() {","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete1 \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete2 \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete3 \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"ongkimlai"},"content":"        StringBuilder personsToDelete \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"ongkimlai"},"content":"        personsToDelete.append(personToDelete3)","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"ongkimlai"},"content":"                .append(System.lineSeparator()).append(personToDelete1)","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"ongkimlai"},"content":"                .append(System.lineSeparator()).append(personToDelete2);","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"ongkimlai"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"ongkimlai"},"content":"                new Index[]{INDEX_THIRD_PERSON, INDEX_FIRST_PERSON, INDEX_SECOND_PERSON});","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"ongkimlai"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_MULTIPLE_PERSON_SUCCESS, personsToDelete);","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"ongkimlai"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"ongkimlai"},"content":"        // Order below does not affect deletion, it is done by name of person.","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"ongkimlai"},"content":"        // Order of deletion decided by constructor of deleteCommand.","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete1);","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete2);","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete3);","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"ongkimlai"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"ongkimlai"},"content":"    public void execute_validIndexUnfilteredListMultipleInOrder_success() {","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete1 \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete2 \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete3 \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"ongkimlai"},"content":"        StringBuilder personsToDelete \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"ongkimlai"},"content":"        personsToDelete.append(personToDelete1)","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"ongkimlai"},"content":"                    .append(System.lineSeparator()).append(personToDelete2)","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"ongkimlai"},"content":"                    .append(System.lineSeparator()).append(personToDelete3);","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"ongkimlai"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"ongkimlai"},"content":"                new Index[]{INDEX_FIRST_PERSON, INDEX_SECOND_PERSON, INDEX_THIRD_PERSON});","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"ongkimlai"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_MULTIPLE_PERSON_SUCCESS, personsToDelete);","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"ongkimlai"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"ongkimlai"},"content":"        // Order below does not affect deletion, it is done by name of person.","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"ongkimlai"},"content":"        // Order of deletion decided by constructor of deleteCommand.","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete1);","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete2);","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete3);","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"ongkimlai"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":143,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":144,"author":{"gitId":"ongkimlai"},"content":"    public void execute_validIndexUnfilteredListMultipleReverseOrder_success() {","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete1 \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete2 \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete3 \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":148,"author":{"gitId":"ongkimlai"},"content":"        StringBuilder personsToDelete \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"ongkimlai"},"content":"        personsToDelete.append(personToDelete3)","lastModifiedDate":"2022-03-09"},{"lineNumber":150,"author":{"gitId":"ongkimlai"},"content":"                .append(System.lineSeparator()).append(personToDelete2)","lastModifiedDate":"2022-03-09"},{"lineNumber":151,"author":{"gitId":"ongkimlai"},"content":"                .append(System.lineSeparator()).append(personToDelete1);","lastModifiedDate":"2022-03-09"},{"lineNumber":152,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":153,"author":{"gitId":"ongkimlai"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(","lastModifiedDate":"2022-03-09"},{"lineNumber":154,"author":{"gitId":"ongkimlai"},"content":"                new Index[]{INDEX_THIRD_PERSON, INDEX_SECOND_PERSON, INDEX_FIRST_PERSON});","lastModifiedDate":"2022-03-09"},{"lineNumber":155,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"ongkimlai"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_MULTIPLE_PERSON_SUCCESS, personsToDelete);","lastModifiedDate":"2022-03-09"},{"lineNumber":157,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"ongkimlai"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-09"},{"lineNumber":159,"author":{"gitId":"ongkimlai"},"content":"        // Order below does not affect deletion, it is done by name of person.","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"ongkimlai"},"content":"        // Order of deletion decided by constructor of deleteCommand.","lastModifiedDate":"2022-03-09"},{"lineNumber":161,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete1);","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete2);","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete3);","lastModifiedDate":"2022-03-09"},{"lineNumber":164,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":165,"author":{"gitId":"ongkimlai"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":106,"ongkimlai":91}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"fredtwt":2,"-":169}},{"path":"src/test/java/seedu/address/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":" * Contains integration tests (interaction with the Model) and unit tests for TagCommand.","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"public class TagCommandTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":7,"ongkimlai":2}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"fredtwt"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"fredtwt"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"fredtwt"},"content":"        // invalid address","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"fredtwt"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"fredtwt"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"fredtwt"},"content":"                + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"fredtwt":17,"-":109}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        assertParseSuccess(parser, \" 1 \", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"        assertParseSuccess(parser, \"  1 2 3   \", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"        // Contains non-zero integer -\u003e Fail","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"        // \"+1\" can be parsed into 1, should be detected and rejected -\u003e Fail","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"        assertParseFailure(parser, \"+1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        // Contains non-zero integer in the multiple case -\u003e Fail","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"        assertParseFailure(parser, \"1 a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        // Contains non-zero integer in the multiple case -\u003e Fail","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        assertParseFailure(parser, \"1 -1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"        // Contains than 1 white space between 2 integers -\u003e Fail","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        assertParseFailure(parser, \"1  2 3\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"                    DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"        // Contains zero -\u003e Fail","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"        assertParseFailure(parser, \"1 0 3\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"        // Contains duplicate integer -\u003e Fail","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"        assertParseFailure(parser, \"1 1 3\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":32,"ongkimlai":17}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"    private static final String TAG_EMPTY \u003d \" \";","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":97,"author":{"gitId":"fredtwt"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"                + NAME_DESC_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"fredtwt"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-08"},{"lineNumber":152,"author":{"gitId":"fredtwt"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"fredtwt"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"fredtwt":7,"-":172}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"    //    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"    //    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"    //    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"fredtwt"},"content":"    /*","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"fredtwt"},"content":"    */","lastModifiedDate":"2022-03-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"fredtwt":5,"-":185}},{"path":"src/test/java/seedu/address/logic/parser/TagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"public class TagCommandParserTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"    private TagCommandParser parser \u003d new TagCommandParser();","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"    private final String nonEmptyEducation \u003d \"Some education\";","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"    private final String nonEmptyModule \u003d \"Some module\";","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"    /*","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"        // have tags","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"                + PREFIX_EDUCATION + nonEmptyEducation + \" \"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"                + PREFIX_MODULE + nonEmptyModule;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"        TagCommand expectedCommand \u003d new TagCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"                TagCommandParser.convertToList(nonEmptyEducation, \"education\"), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"                TagCommandParser.convertToList(nonEmptyModule, \"module\"), new ArrayList\u003c\u003e());","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"        // no tags","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_EDUCATION + \" \" + PREFIX_MODULE;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        expectedCommand \u003d new TagCommand(INDEX_FIRST_PERSON, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"                new ArrayList\u003c\u003e());","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"        // no parameters","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"        assertParseFailure(parser, TagCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"        // no index","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"        assertParseFailure(parser, TagCommand.COMMAND_WORD + \" \" + nonEmptyEducation, expectedMessage);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":46}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"fredtwt"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"fredtwt":2,"-":97}},{"path":"src/test/java/seedu/address/model/person/CcaTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"public class CcaTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Cca(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"        String invalidCca \u003d \" \";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Cca(invalidCca));","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    public void isValidTagName() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        // null cca","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e Cca.isValidTagName(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"        // invalid cca","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Cca.isValidTagName(\"\")); // empty string","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Cca.isValidTagName(\" \")); // spaces only","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Cca.isValidTagName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Cca.isValidTagName(\"bouldering*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"        // valid cca","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Cca.isValidTagName(\"bouldering\")); // alphabets only","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Cca.isValidTagName(\"12345\")); // numbers only","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Cca.isValidTagName(\"bould3ring\")); // alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Cca.isValidTagName(\"Bouldering\")); // with capital letters","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Cca.isValidTagName(\"NUS Bouldering and Climbing Team\")); // long names","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"fredtwt":40}},{"path":"src/test/java/seedu/address/model/person/EducationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"public class EducationTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Education(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"        String invalidEducation \u003d \" \";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Education(invalidEducation));","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    public void isValidTagName() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        // null education","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e Education.isValidTagName(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"        // invalid education","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Education.isValidTagName(\"\")); // empty string","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Education.isValidTagName(\" \")); // spaces only","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Education.isValidTagName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Education.isValidTagName(\"Computer Science*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"        // valid education","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Education.isValidTagName(\"computer science\")); // alphabets only","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Education.isValidTagName(\"12345\")); // numbers only","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Education.isValidTagName(\"computer science 2nd year\")); // alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Education.isValidTagName(\"Computer Science\")); // with capital letters","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Education.isValidTagName(\"Computer Science specialising in software engineering\")); // long names","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"fredtwt":40}},{"path":"src/test/java/seedu/address/model/person/InternshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"public class InternshipTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Internship(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"        String invalidInternship \u003d \" \";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Internship(invalidInternship));","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    public void isValidTagName() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        // null internship","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e Internship.isValidTagName(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"        // invalid internship","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Internship.isValidTagName(\"\")); // empty string","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Internship.isValidTagName(\" \")); // spaces only","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Internship.isValidTagName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Internship.isValidTagName(\"bytedance*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"        // valid internship","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Internship.isValidTagName(\"bytedance\")); // alphabets only","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Internship.isValidTagName(\"12345\")); // numbers only","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Internship.isValidTagName(\"byt3danc3\")); // alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Internship.isValidTagName(\"ByteDance\")); // with capital letters","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Internship.isValidTagName(\"Oversea Chinese Banking Corporation\")); // long names","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"fredtwt":40}},{"path":"src/test/java/seedu/address/model/person/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"public class ModuleTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Module(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"        String invalidModule \u003d \" \";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Module(invalidModule));","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    public void isValidTagName() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        // null module","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e Module.isValidTagName(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"        // invalid module","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Module.isValidTagName(\"\")); // empty string","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Module.isValidTagName(\" \")); // spaces only","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Module.isValidTagName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Module.isValidTagName(\"cs2040s*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"        // valid module","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Module.isValidTagName(\"discrete math\")); // alphabets only","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Module.isValidTagName(\"12345\")); // numbers only","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Module.isValidTagName(\"cs2040s\")); // alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Module.isValidTagName(\"CS2040S\")); // with capital letters","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Module.isValidTagName(\"Effective Communication for Computing Professionals\")); // long names","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"fredtwt":40}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"fredtwt":1,"-":78}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"fredtwt"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"fredtwt":2,"-":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Cca;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Internship;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"    private static final List\u003cJsonAdaptedTag\u003e INVALID_CCAS \u003d Arrays.asList(new JsonAdaptedTag(\"track \u0026 field\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"    private static final List\u003cJsonAdaptedTag\u003e INVALID_EDUCATIONS \u003d Arrays.asList(new JsonAdaptedTag(\"computer \"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"            + \"science 2nd \" + \"year!\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"    private static final List\u003cJsonAdaptedTag\u003e INVALID_INTERNSHIPS \u003d Arrays.asList(new JsonAdaptedTag(\"bosch*\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"    private static final List\u003cJsonAdaptedTag\u003e INVALID_MODULES \u003d Arrays.asList(new JsonAdaptedTag(\"cs2040s~\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_EDUCATIONS \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"            AMY.getEducations().stream().map(JsonAdaptedTag::new).collect(Collectors.toList());","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_INTERNSHIPS \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"            AMY.getEducations().stream().map(JsonAdaptedTag::new).collect(Collectors.toList());","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_MODULES \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"            AMY.getEducations().stream().map(JsonAdaptedTag::new).collect(Collectors.toList());","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_CCAS \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"            AMY.getEducations().stream().map(JsonAdaptedTag::new).collect(Collectors.toList());","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(AMY);","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"        assertEquals(AMY, person.toModelType());","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"                        VALID_EDUCATIONS, VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"fredtwt"},"content":"                VALID_EDUCATIONS, VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"fredtwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_EDUCATIONS,","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"fredtwt"},"content":"                        VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"fredtwt"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"fredtwt"},"content":"                VALID_EDUCATIONS, VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"fredtwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_EDUCATIONS,","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"fredtwt"},"content":"                        VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"                VALID_EDUCATIONS, VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_EDUCATIONS,","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"                        VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_EDUCATIONS,","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"                VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"fredtwt"},"content":"    public void toModelType_invalidEducation_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"fredtwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_EDUCATIONS,","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"fredtwt"},"content":"                        VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"fredtwt"},"content":"        String expectedMessage \u003d Education.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"fredtwt"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"fredtwt"},"content":"    public void toModelType_invalidInternship_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"fredtwt"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"fredtwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_EDUCATIONS,","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"fredtwt"},"content":"                        INVALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"fredtwt"},"content":"        String expectedMessage \u003d Internship.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"fredtwt"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"fredtwt"},"content":"    public void toModelType_invalidModule_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"fredtwt"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"fredtwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_EDUCATIONS,","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"fredtwt"},"content":"                        VALID_INTERNSHIPS, INVALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"fredtwt"},"content":"        String expectedMessage \u003d Module.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"fredtwt"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"fredtwt"},"content":"    public void toModelType_invalidCca_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"fredtwt"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"fredtwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_EDUCATIONS,","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"fredtwt"},"content":"                        VALID_INTERNSHIPS, VALID_MODULES, INVALID_CCAS);","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"fredtwt"},"content":"        String expectedMessage \u003d Cca.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"fredtwt"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fredtwt":68,"-":90}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Cca;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Internship;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"    private List\u003cTag\u003e educations;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"    private List\u003cTag\u003e internships;","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"    private List\u003cTag\u003e modules;","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"    private List\u003cTag\u003e ccas;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"        educations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"        internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"        modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"        ccas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"        educations \u003d personToCopy.getEducations();","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"        internships \u003d personToCopy.getInternships();","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"        modules \u003d personToCopy.getModules();","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"        ccas \u003d personToCopy.getCcas();","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"     * Sets the {@code Education} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"    public PersonBuilder withEducation(String education) {","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"        educations.add(new Education(education));","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"     * Sets the {@code Internship} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"fredtwt"},"content":"    public PersonBuilder withInternship(String internship) {","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"        internships.add(new Internship(internship));","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"fredtwt"},"content":"     * Sets the {@code Module} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"fredtwt"},"content":"    public PersonBuilder withModule(String module) {","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"        modules.add(new Module(module));","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"fredtwt"},"content":"     * Sets the {@code Cca} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"fredtwt"},"content":"    public PersonBuilder withCca(String cca) {","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"fredtwt"},"content":"        ccas.add(new Cca(cca));","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"fredtwt"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":130,"author":{"gitId":"fredtwt"},"content":"        return new Person(name, phone, email, address);","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"fredtwt":52,"-":81}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EDUCATION_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EDUCATION_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERNSHIP_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERNSHIP_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"            .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"            .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").build();","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withEducation(VALID_EDUCATION_AMY)","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"            .withCca(VALID_CCA_AMY).withInternship(VALID_INTERNSHIP_AMY).withModule(VALID_MODULE_AMY)","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"            .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withEducation(VALID_EDUCATION_BOB)","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"            .withCca(VALID_CCA_BOB).withInternship(VALID_INTERNSHIP_BOB).withModule(VALID_MODULE_BOB)","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"fredtwt":16,"-":69}}]
