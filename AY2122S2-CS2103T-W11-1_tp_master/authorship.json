[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W11-1/tp//workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W11-1/tp/actions)","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W11-1/tp/branch/master/graph/badge.svg?token\u003dEQL5RQUWFN)](https://codecov.io/gh/AY2122S2-CS2103T-W11-1/tp)","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"### NUSocials","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"* The project simulates an ongoing software project for a desktop application (called _NUSocials_) used for managing contact details.","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"* Example usages:","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"  * Keep track of how and where you met each contact","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"  * Search for contacts","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"* It is named `NUSocials` because we envision an application that helps NUS students maintain a professional contact list to help them stay socially connected.","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"* For the detailed documentation of this project, see the **[NUSocials Product Website](https://ay2122s2-cs2103t-w11-1.github.io/tp/)**.","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"This project is based on the AddressBook-Level3 project, created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"ongkimlai":12,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"    archiveName \u003d \u0027NUSocials.jar\u0027","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"run {","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":73,"ongkimlai":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"### Frederick Tang","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"\u003cimg src\u003d\"images/fredtwt.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"[[github](https://github.com/fredtwt)][[portfolio](team/fredtwt.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"* Role: Team Lead / Developer [tbd]","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"* Responsibilities:","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"  * Oversee the entire project","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"### Ong Kim Lai","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"\u003cimg src\u003d\"images/ongkimlai.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"[[github](http://github.com/ongkimlai)][[portfolio](team/ongkimlai.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"* Role: Deliverables and deadlines / Developer [tbd]","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"* Responsibilities:","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"  * Handle project deliverables and plan deadlines","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"### Vikrant","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"viki0526"},"content":"\u003cimg src\u003d\"images/viki0526.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"viki0526"},"content":"[[github](http://github.com/viki0526)] [[portfolio](team/viki0526.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"* Role: Testing / Developer [tbd]","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"* Responsibilities:","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"  * Testing of project to ensure everything is proper","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"### Manusha","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"manu2002g"},"content":"\u003cimg src\u003d\"images/manu2002g.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"manu2002g"},"content":"[[github](http://github.com/manu2002g)]","lastModifiedDate":"2022-03-01"},{"lineNumber":47,"author":{"gitId":"manu2002g"},"content":"[[portfolio](team/manu2002g.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"* Role: Documentation / Code Quality / Developer [tbd]","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"* Responsibilities:","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"  * Ensures project documentation done properly","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"  * Ensures code adheres to coding standards","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"fredtwt":12,"viki0526":2,"manu2002g":3,"-":26,"ongkimlai":9}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"1. Referred to [CS2103T textbook](https://nus-cs2103-ay2122s2.github.io/website/se-book-adapted/index.html) for fundamental knowledge on software development.","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S2-CS2103T-W11-1/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S2-CS2103T-W11-1/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S2-CS2103T-W11-1/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"ongkimlai"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S2-CS2103T-W11-1/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"ongkimlai"},"content":"**API** : [`Model.java`](https://github.com/AY2122S2-CS2103T-W11-1/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"ongkimlai"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S2-CS2103T-W11-1/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"ongkimlai"},"content":"### Delete multiple persons enhancement","lastModifiedDate":"2022-03-23"},{"lineNumber":161,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"ongkimlai"},"content":"#### Original implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"ongkimlai"},"content":"Originally, the idea was to simply call `deletePerson` on each integer, but this will not work as the indexes of each person","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"ongkimlai"},"content":"in the contact list might change depending on the order of deletion. \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":165,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":166,"author":{"gitId":"ongkimlai"},"content":"**For example:** \u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"ongkimlai"},"content":"In a list with only 3 contacts, `delete 1 2 3` will not be allowed as there is no longer an index 3 during the 3rd deletion.","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"ongkimlai"},"content":"#### Current implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"ongkimlai"},"content":"The delete command now has to accept multiple indexes as a valid input. The ParserUtil class can easily facilitate this","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"ongkimlai"},"content":"behaviour by extending the validity checks on the entire string of input.","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"ongkimlai"},"content":"The workaround is then to delete each person from the largest to the smallest index. The success message displays the details","lastModifiedDate":"2022-03-23"},{"lineNumber":175,"author":{"gitId":"ongkimlai"},"content":"of those deleted, so in order to show them in the same order as the input, all the details are first extracted out before deletion.\u003cbr\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"ongkimlai"},"content":"**For example:** \u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"ongkimlai"},"content":"Similarly, in a list with only 3 contacts, `delete 1 2 3` will now be allowed.","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"ongkimlai"},"content":"Step 1. User enters `delete 1 2 3` and `LogicManager` would execute it.","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"ongkimlai"},"content":"Step 2. `LogicManager` would pass the arguments to `AddressBookParser` to parse the command as a `DeleteCommand`.","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"ongkimlai"},"content":"Step 3. The arguments `1 2 3` would be passed into `DeleteCommandParser` to detect if the deletion is for multiple persons using `ParserUtil`.","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"ongkimlai"},"content":"Step 4. Information about Person 1, Person 2 and Person 3 will be extracted according to the last shown list.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"ongkimlai"},"content":"Step 5. The deletion process starts sequentially. Person 3 gets deleted followed by Person 2, then Person 1. This ensures correctness in the deletion process.","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"ongkimlai"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the `execute(\"delete 1 2 3\")` API call.","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":193,"author":{"gitId":"ongkimlai"},"content":"![Interactions Inside the Logic Component for the `delete 1 2 3` Command](images/DeleteMultipleSequenceDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":194,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":195,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":196,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":197,"author":{"gitId":"ongkimlai"},"content":"### Tag feature","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"ongkimlai"},"content":"#### Current Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"ongkimlai"},"content":"The current tagging feature is originally a functionality in the `Add` command. However, it was extracted out and made","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"ongkimlai"},"content":"into its own command in order to help facilitate a clearer distinction between those features. The `Tag` command would","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"ongkimlai"},"content":"allow users to tag additional information to existing persons in the address book.","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"ongkimlai"},"content":"With this new introduction of the Tag Command, it led to the creation of the abstract class `Tag`. The idea was to only","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"ongkimlai"},"content":"allow subclasses of `Tag` to be tagged to a person. Currently, there are 4 of such subclasses that extends from `Tag`:","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"ongkimlai"},"content":"* `Cca` - stores information about the person\u0027s cca","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"ongkimlai"},"content":"* `Education` - stores information about the person\u0027s degree course","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"ongkimlai"},"content":"* `Module` - stores information about the person\u0027s module","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"ongkimlai"},"content":"* `Internship` - stores information about the person\u0027s internship","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"ongkimlai"},"content":"![Class diagram for Tag](images/TagClassDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"fredtwt"},"content":"Given below is an example usage scenario and how the tagging mechanism behaves at each step.","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"fredtwt"},"content":"Step 1. The user enters the following valid `TagCommand`: `tag 1 edu/computer science m/cs2030s m/cs2040s` and `LogicManager`","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"fredtwt"},"content":"would execute it.","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"fredtwt"},"content":"Step 2. `LogicManger` would pass the argument to `AddressBookParser` to parse the command and identify it as a `TagCommand`.","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"fredtwt"},"content":"It will then pass the arguments to `TagCommandParser` to handle the parsing for the identified `TagCommand`.","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"fredtwt"},"content":"Step 3. `TagCommandParser` would first parse the index using `ParserUtil#parseIndex()` to identify the person to tag to.","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"fredtwt"},"content":"Afterwards, `TagCommandParser` would parse the tag arguments provided using `ParserUtil#parseTags()` to identify the individual","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"fredtwt"},"content":"tag types for the arguments provided.","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":225,"author":{"gitId":"fredtwt"},"content":"Step 4. After parsing the arguments, the control is handed over to `TagCommand` where it will return a `TagCommand` object. It","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"fredtwt"},"content":"will eventually return to `LogicManager` which will call `TagCommand#execute()` to execute the command.","lastModifiedDate":"2022-03-24"},{"lineNumber":227,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"fredtwt"},"content":"Step 5. Upon execution, the person will be fetched and tagged using `Model#setPerson`. The edited person would then be updated","lastModifiedDate":"2022-03-24"},{"lineNumber":229,"author":{"gitId":"fredtwt"},"content":"and stored in the addressbook.`CommandResult` would then generate a success message to inform the user the person has been tagged","lastModifiedDate":"2022-03-24"},{"lineNumber":230,"author":{"gitId":"fredtwt"},"content":"successfully.","lastModifiedDate":"2022-03-24"},{"lineNumber":231,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":232,"author":{"gitId":"fredtwt"},"content":"![The following sequence diagram shows how the tag operation works:](images/TagSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":234,"author":{"gitId":"manu2002g"},"content":"### Edit Feature","lastModifiedDate":"2022-03-24"},{"lineNumber":235,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":236,"author":{"gitId":"ongkimlai"},"content":"#### Original implementation","lastModifiedDate":"2022-03-26"},{"lineNumber":237,"author":{"gitId":"manu2002g"},"content":"The edit command uses an `EditPersonDescriptor` to store the new information that is to be changed in the person. The","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"manu2002g"},"content":"`EditCommandParser` parses the information input and then creates an `EditPersonDescriptor` where the unchanged fields","lastModifiedDate":"2022-03-24"},{"lineNumber":239,"author":{"gitId":"manu2002g"},"content":"are copied over from the existing person and the fields to be overwritten are changed. The Find command then takes in","lastModifiedDate":"2022-03-24"},{"lineNumber":240,"author":{"gitId":"manu2002g"},"content":"the descriptor and simply changes the persons attribute values to the values stated in the descriptor.","lastModifiedDate":"2022-03-24"},{"lineNumber":241,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":242,"author":{"gitId":"ongkimlai"},"content":"#### Current Implementation","lastModifiedDate":"2022-03-26"},{"lineNumber":243,"author":{"gitId":"manu2002g"},"content":"The edit command has now been upgraded to support the functionality for overwriting multiple tag lists.","lastModifiedDate":"2022-03-24"},{"lineNumber":244,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":246,"author":{"gitId":"ongkimlai"},"content":"### Removetag feature","lastModifiedDate":"2022-03-24"},{"lineNumber":247,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":248,"author":{"gitId":"viki0526"},"content":"### Find/Find -s/Find -e feature","lastModifiedDate":"2022-03-25"},{"lineNumber":249,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":250,"author":{"gitId":"ongkimlai"},"content":"#### Original implementation","lastModifiedDate":"2022-03-26"},{"lineNumber":251,"author":{"gitId":"viki0526"},"content":"The existing Find feature in ab3 only allowed contacts to be searched for by name. We added additional functionalities","lastModifiedDate":"2022-03-24"},{"lineNumber":252,"author":{"gitId":"viki0526"},"content":"to allow for greater flexibility when filtering large contacts lists according to specific predicates. The `Find` and","lastModifiedDate":"2022-03-24"},{"lineNumber":253,"author":{"gitId":"viki0526"},"content":"`Find -s` command now allow the user to search for specific contact details (name, phone number, email and address) or","lastModifiedDate":"2022-03-24"},{"lineNumber":254,"author":{"gitId":"viki0526"},"content":"specific tags.","lastModifiedDate":"2022-03-24"},{"lineNumber":255,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":256,"author":{"gitId":"ongkimlai"},"content":"#### Current Implementation","lastModifiedDate":"2022-03-26"},{"lineNumber":257,"author":{"gitId":"viki0526"},"content":"The `Find`command searches for contacts that satisfy any of the given predicates while the `Find -s` command searches","lastModifiedDate":"2022-03-24"},{"lineNumber":258,"author":{"gitId":"viki0526"},"content":"for contacts that satisfy all the given predicates. Do note that the conjunction and disjunction also applies within","lastModifiedDate":"2022-03-24"},{"lineNumber":259,"author":{"gitId":"viki0526"},"content":"each tag field (see User Guide for more details).","lastModifiedDate":"2022-03-24"},{"lineNumber":260,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":261,"author":{"gitId":"ongkimlai"},"content":"### Event feature","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":349,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":352,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"fredtwt"},"content":"* university students who like to maintain a professional contact list","lastModifiedDate":"2022-03-01"},{"lineNumber":363,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":366,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"fredtwt"},"content":"**Value proposition**: to facilitate a convenient way for university students to manage their professional networks with fellow acquaintances","lastModifiedDate":"2022-03-01"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                  | I want to …​                                             | So that I can…​                                                                                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"fredtwt"},"content":"|----------|----------------------------------------------------------|----------------------------------------------------------|--------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-24"},{"lineNumber":377,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                                 | see usage instructions                                   | refer to instructions when I forget how to use the App                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"fredtwt"},"content":"| `* * *`  | user                                                     | view all of my contacts                                  |                                                                                                  |","lastModifiedDate":"2022-03-01"},{"lineNumber":379,"author":{"gitId":"fredtwt"},"content":"| `* * *`  | user                                                     | add a new contact                                        |","lastModifiedDate":"2022-03-01"},{"lineNumber":380,"author":{"gitId":"fredtwt"},"content":"| `* * *`  | user                                                     | delete a contact                                         | remove entries that I no longer need                                                             |","lastModifiedDate":"2022-03-01"},{"lineNumber":381,"author":{"gitId":"fredtwt"},"content":"| `* * *`  | user                                                     | delete multiple contacts at once                         | delete unwanted entries faster                                                                   |","lastModifiedDate":"2022-03-07"},{"lineNumber":382,"author":{"gitId":"fredtwt"},"content":"| `* * *`  | user                                                     | edit an existing contact                                 | update the information when needed                                                               |","lastModifiedDate":"2022-03-01"},{"lineNumber":383,"author":{"gitId":"fredtwt"},"content":"| `* * *`  | user                                                     | tag additional information to an existing contact        | keep a memo of such details for future references                                                |","lastModifiedDate":"2022-03-01"},{"lineNumber":384,"author":{"gitId":"fredtwt"},"content":"| `* * `   | user                                                     | add an event and tag relevant persons in my contact list | keep a memo of such upcoming events with my contacts for future references                       |","lastModifiedDate":"2022-03-24"},{"lineNumber":385,"author":{"gitId":"fredtwt"},"content":"| `* * `   | user                                                     | find a person by name                                    | locate details of persons without having to go through the entire list                           |","lastModifiedDate":"2022-03-01"},{"lineNumber":386,"author":{"gitId":"ongkimlai"},"content":"| `* * `   | user                                                     | find a person by phone number                            | locate details of persons without having to go through the entire list                           |","lastModifiedDate":"2022-03-23"},{"lineNumber":387,"author":{"gitId":"ongkimlai"},"content":"| `* * `   | user                                                     | find a person by email address                           | locate details of persons without having to go through the entire list                           |","lastModifiedDate":"2022-03-23"},{"lineNumber":388,"author":{"gitId":"fredtwt"},"content":"| `* * `   | user                                                     | find a person by module                                  | locate details of persons with identical modules, without having to go through the entire list   |","lastModifiedDate":"2022-03-07"},{"lineNumber":389,"author":{"gitId":"ongkimlai"},"content":"| `* * `   | user                                                     | find a person by internship                              | locate details of persons with identical internship, without having to go through the entire list |","lastModifiedDate":"2022-03-18"},{"lineNumber":390,"author":{"gitId":"fredtwt"},"content":"| `* * `   | user                                                     | find a person by cca                                     | locate details of persons with identical cca, without having to go through the entire list       |","lastModifiedDate":"2022-03-07"},{"lineNumber":391,"author":{"gitId":"fredtwt"},"content":"| `* * `   | user                                                     | find a person by education                               | locate details of persons with identical education, without having to go through the entire list |","lastModifiedDate":"2022-03-07"},{"lineNumber":392,"author":{"gitId":"fredtwt"},"content":"| `* *`    | user with too many irrelevant persons in the contact list | delete all my contacts                                   | reset my contact list                                                                            |","lastModifiedDate":"2022-03-07"},{"lineNumber":393,"author":{"gitId":"ongkimlai"},"content":"| `*`      | user that tagged a lot of information to the contacts    | remove a specific tag of a contact                       | avoid going through the trouble of re-tagging all the information again                          |","lastModifiedDate":"2022-03-18"},{"lineNumber":394,"author":{"gitId":"ongkimlai"},"content":"| `*`      | user with many persons in the contact list               | sort persons by name in alphabetical order               | locate a person easily                                                                           |","lastModifiedDate":"2022-03-23"},{"lineNumber":395,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"fredtwt"},"content":"(For all use cases below, the **System** is the `NUSocials` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-01"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"ongkimlai"},"content":"### Use case 1: Delete a person","lastModifiedDate":"2022-03-24"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":406,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"fredtwt"},"content":"2.  NUSocials shows a list of persons","lastModifiedDate":"2022-03-01"},{"lineNumber":408,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2022-03-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2022-03-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":413,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":415,"author":{"gitId":"ongkimlai"},"content":"2a. The list is empty.","lastModifiedDate":"2022-03-18"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"ongkimlai"},"content":"3a. The given index is invalid.","lastModifiedDate":"2022-03-18"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"ongkimlai"},"content":"    - 3a1. NUSocials shows an error message.","lastModifiedDate":"2022-03-18"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"ongkimlai"},"content":"### Use case 2: Add a person","lastModifiedDate":"2022-03-24"},{"lineNumber":427,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":428,"author":{"gitId":"fredtwt"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":429,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":430,"author":{"gitId":"fredtwt"},"content":"1. User adds a new person in the given command format (see User Guide)","lastModifiedDate":"2022-03-01"},{"lineNumber":431,"author":{"gitId":"fredtwt"},"content":"2. NUSocials adds the new person to the list","lastModifiedDate":"2022-03-01"},{"lineNumber":432,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":433,"author":{"gitId":"fredtwt"},"content":"    Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":434,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":435,"author":{"gitId":"fredtwt"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":436,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":437,"author":{"gitId":"ongkimlai"},"content":"2a. The given add command is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":438,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":439,"author":{"gitId":"ongkimlai"},"content":"    - 2a1. NUSocials shows an error message.","lastModifiedDate":"2022-03-23"},{"lineNumber":440,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":441,"author":{"gitId":"fredtwt"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-03-01"},{"lineNumber":442,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":443,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":444,"author":{"gitId":"ongkimlai"},"content":"### Use case 3: Tag a person","lastModifiedDate":"2022-03-24"},{"lineNumber":445,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":446,"author":{"gitId":"fredtwt"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":447,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":448,"author":{"gitId":"fredtwt"},"content":"1. User requests to list all persons","lastModifiedDate":"2022-03-01"},{"lineNumber":449,"author":{"gitId":"fredtwt"},"content":"2. NUSocials shows a list of all persons","lastModifiedDate":"2022-03-01"},{"lineNumber":450,"author":{"gitId":"fredtwt"},"content":"3. User inputs command to tag a specific person in the list","lastModifiedDate":"2022-03-01"},{"lineNumber":451,"author":{"gitId":"fredtwt"},"content":"4. NUSocials tags the person","lastModifiedDate":"2022-03-01"},{"lineNumber":452,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":453,"author":{"gitId":"fredtwt"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":454,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":455,"author":{"gitId":"fredtwt"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":456,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":457,"author":{"gitId":"ongkimlai"},"content":"2a. The list is empty.","lastModifiedDate":"2022-03-18"},{"lineNumber":458,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":459,"author":{"gitId":"fredtwt"},"content":"  Use case ends","lastModifiedDate":"2022-03-01"},{"lineNumber":460,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":461,"author":{"gitId":"ongkimlai"},"content":"3a. The given index is invalid.","lastModifiedDate":"2022-03-18"},{"lineNumber":462,"author":{"gitId":"ongkimlai"},"content":"  - 3a1. NUSocials shows an error message.","lastModifiedDate":"2022-03-18"},{"lineNumber":463,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":464,"author":{"gitId":"fredtwt"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-03-01"},{"lineNumber":465,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":466,"author":{"gitId":"ongkimlai"},"content":"3b. The given tag command is invalid.","lastModifiedDate":"2022-03-18"},{"lineNumber":467,"author":{"gitId":"ongkimlai"},"content":"  - 3b1. NUSocials shows an error message.","lastModifiedDate":"2022-03-18"},{"lineNumber":468,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":469,"author":{"gitId":"ongkimlai"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-03-18"},{"lineNumber":470,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":471,"author":{"gitId":"ongkimlai"},"content":"### Use case 4: Edit a person","lastModifiedDate":"2022-03-24"},{"lineNumber":472,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":473,"author":{"gitId":"fredtwt"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":474,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":475,"author":{"gitId":"fredtwt"},"content":"1. User requests to list all persons","lastModifiedDate":"2022-03-01"},{"lineNumber":476,"author":{"gitId":"fredtwt"},"content":"2. NUSocials shows a list of all persons","lastModifiedDate":"2022-03-01"},{"lineNumber":477,"author":{"gitId":"fredtwt"},"content":"3. Users requests to overwrite certain fields and tags of the person with updated information","lastModifiedDate":"2022-03-01"},{"lineNumber":478,"author":{"gitId":"fredtwt"},"content":"4. NUSocials tags the person","lastModifiedDate":"2022-03-01"},{"lineNumber":479,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":480,"author":{"gitId":"fredtwt"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":481,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":482,"author":{"gitId":"fredtwt"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":483,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":484,"author":{"gitId":"ongkimlai"},"content":"2a. The list is empty.","lastModifiedDate":"2022-03-18"},{"lineNumber":485,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":486,"author":{"gitId":"fredtwt"},"content":"  Use case end","lastModifiedDate":"2022-03-01"},{"lineNumber":487,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":488,"author":{"gitId":"ongkimlai"},"content":"3a. The given index is invalid.","lastModifiedDate":"2022-03-18"},{"lineNumber":489,"author":{"gitId":"ongkimlai"},"content":"    - 3a1. NUSocials shows an error message.","lastModifiedDate":"2022-03-18"},{"lineNumber":490,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":491,"author":{"gitId":"fredtwt"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-01"},{"lineNumber":492,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":493,"author":{"gitId":"ongkimlai"},"content":"3b. The given edit command is invalid.","lastModifiedDate":"2022-03-18"},{"lineNumber":494,"author":{"gitId":"ongkimlai"},"content":"    - 3b1. NUSocials shows an error message.","lastModifiedDate":"2022-03-18"},{"lineNumber":495,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":496,"author":{"gitId":"fredtwt"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-01"},{"lineNumber":497,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":498,"author":{"gitId":"ongkimlai"},"content":"### Use case 5: Viewing all persons","lastModifiedDate":"2022-03-24"},{"lineNumber":499,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":500,"author":{"gitId":"fredtwt"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":501,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":502,"author":{"gitId":"fredtwt"},"content":"1. User requests to list all persons","lastModifiedDate":"2022-03-01"},{"lineNumber":503,"author":{"gitId":"fredtwt"},"content":"2. NUSocials displays all persons in a list","lastModifiedDate":"2022-03-01"},{"lineNumber":504,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":505,"author":{"gitId":"fredtwt"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":506,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":507,"author":{"gitId":"ongkimlai"},"content":"### Use case 6: Finding a person (any field)","lastModifiedDate":"2022-03-24"},{"lineNumber":508,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":509,"author":{"gitId":"ongkimlai"},"content":"**MSS**","lastModifiedDate":"2022-03-18"},{"lineNumber":510,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":511,"author":{"gitId":"ongkimlai"},"content":"1. User requests to find any person using specific fields","lastModifiedDate":"2022-03-23"},{"lineNumber":512,"author":{"gitId":"ongkimlai"},"content":"2. NUSocials shows a list of persons matching any fields","lastModifiedDate":"2022-03-23"},{"lineNumber":513,"author":{"gitId":"ongkimlai"},"content":"    Use case ends.","lastModifiedDate":"2022-03-18"},{"lineNumber":514,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":515,"author":{"gitId":"ongkimlai"},"content":"**Extensions**","lastModifiedDate":"2022-03-24"},{"lineNumber":516,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":517,"author":{"gitId":"ongkimlai"},"content":"2a. The given find command is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":518,"author":{"gitId":"ongkimlai"},"content":"    - 2a1. NUSocials shows an error message.","lastModifiedDate":"2022-03-23"},{"lineNumber":519,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":520,"author":{"gitId":"ongkimlai"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-03-18"},{"lineNumber":521,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-23"},{"lineNumber":522,"author":{"gitId":"ongkimlai"},"content":"### Use case 7: Finding a person (all fields)","lastModifiedDate":"2022-03-24"},{"lineNumber":523,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":524,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-23"},{"lineNumber":525,"author":{"gitId":"ongkimlai"},"content":"Similar to Use case 6, except now:","lastModifiedDate":"2022-03-23"},{"lineNumber":526,"author":{"gitId":"ongkimlai"},"content":"The user wants to find a person that has every field instead.","lastModifiedDate":"2022-03-23"},{"lineNumber":527,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":528,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":529,"author":{"gitId":"ongkimlai"},"content":"### Use case 8: Removing specific tags","lastModifiedDate":"2022-03-24"},{"lineNumber":530,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":531,"author":{"gitId":"ongkimlai"},"content":"**MSS**","lastModifiedDate":"2022-03-18"},{"lineNumber":532,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":533,"author":{"gitId":"ongkimlai"},"content":"1. User requests to list all persons","lastModifiedDate":"2022-03-18"},{"lineNumber":534,"author":{"gitId":"ongkimlai"},"content":"2. NUSocials shows a list of all persons","lastModifiedDate":"2022-03-18"},{"lineNumber":535,"author":{"gitId":"ongkimlai"},"content":"3. User requests to remove certain tags from the person","lastModifiedDate":"2022-03-18"},{"lineNumber":536,"author":{"gitId":"ongkimlai"},"content":"4. NUSocials removes the specific tags","lastModifiedDate":"2022-03-18"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":538,"author":{"gitId":"ongkimlai"},"content":"    Use case ends.","lastModifiedDate":"2022-03-18"},{"lineNumber":539,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":540,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-03-24"},{"lineNumber":541,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":542,"author":{"gitId":"ongkimlai"},"content":"2a. The list is empty.","lastModifiedDate":"2022-03-18"},{"lineNumber":543,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":544,"author":{"gitId":"ongkimlai"},"content":"  Use case end","lastModifiedDate":"2022-03-18"},{"lineNumber":545,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":546,"author":{"gitId":"ongkimlai"},"content":"3a. The given index is invalid.","lastModifiedDate":"2022-03-18"},{"lineNumber":547,"author":{"gitId":"ongkimlai"},"content":"    - 3a1. NUSocials shows an error message.","lastModifiedDate":"2022-03-18"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":549,"author":{"gitId":"ongkimlai"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-18"},{"lineNumber":550,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":551,"author":{"gitId":"ongkimlai"},"content":"3b. The given removetag command is invalid.","lastModifiedDate":"2022-03-18"},{"lineNumber":552,"author":{"gitId":"ongkimlai"},"content":"    - 3b1. NUSocials shows an error message.","lastModifiedDate":"2022-03-18"},{"lineNumber":553,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":554,"author":{"gitId":"ongkimlai"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-18"},{"lineNumber":555,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":556,"author":{"gitId":"ongkimlai"},"content":"3c. The request contains non-existent tags to be removed.","lastModifiedDate":"2022-03-18"},{"lineNumber":557,"author":{"gitId":"ongkimlai"},"content":"    - 3c1. NUSocials shows an error message.","lastModifiedDate":"2022-03-18"},{"lineNumber":558,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":559,"author":{"gitId":"ongkimlai"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-18"},{"lineNumber":560,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-18"},{"lineNumber":561,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":562,"author":{"gitId":"ongkimlai"},"content":"### Use case 9: Delete multiple persons","lastModifiedDate":"2022-03-24"},{"lineNumber":563,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":564,"author":{"gitId":"ongkimlai"},"content":"**MSS**","lastModifiedDate":"2022-03-23"},{"lineNumber":565,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-23"},{"lineNumber":566,"author":{"gitId":"ongkimlai"},"content":"Similar to Use case 1, except now:","lastModifiedDate":"2022-03-23"},{"lineNumber":567,"author":{"gitId":"ongkimlai"},"content":"The user wants to delete multiple persons instead.","lastModifiedDate":"2022-03-23"},{"lineNumber":568,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-23"},{"lineNumber":569,"author":{"gitId":"ongkimlai"},"content":"**Extensions**","lastModifiedDate":"2022-03-23"},{"lineNumber":570,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-23"},{"lineNumber":571,"author":{"gitId":"ongkimlai"},"content":"2a. The list is empty.","lastModifiedDate":"2022-03-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-03-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":575,"author":{"gitId":"ongkimlai"},"content":"3a. One or more of given indexes are invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":577,"author":{"gitId":"ongkimlai"},"content":"    - 3a1. NUSocials shows an error message.","lastModifiedDate":"2022-03-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-23"},{"lineNumber":580,"author":{"gitId":"ongkimlai"},"content":"````","lastModifiedDate":"2022-03-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"ongkimlai"},"content":"### Use case 10: Adding events","lastModifiedDate":"2022-03-24"},{"lineNumber":583,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":584,"author":{"gitId":"fredtwt"},"content":"**MSS**","lastModifiedDate":"2022-03-24"},{"lineNumber":585,"author":{"gitId":"fredtwt"},"content":"````","lastModifiedDate":"2022-03-24"},{"lineNumber":586,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":587,"author":{"gitId":"fredtwt"},"content":"````","lastModifiedDate":"2022-03-24"},{"lineNumber":588,"author":{"gitId":"fredtwt"},"content":"**Extensions**","lastModifiedDate":"2022-03-24"},{"lineNumber":589,"author":{"gitId":"fredtwt"},"content":"````","lastModifiedDate":"2022-03-24"},{"lineNumber":590,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":591,"author":{"gitId":"fredtwt"},"content":"````","lastModifiedDate":"2022-03-24"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":593,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"fredtwt"},"content":"1. Should work on _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2022-03-07"},{"lineNumber":596,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"fredtwt"},"content":"4. The system should work on both 32-bit and 64-bit environments.","lastModifiedDate":"2022-03-01"},{"lineNumber":599,"author":{"gitId":"fredtwt"},"content":"5. The system should respond within 3 seconds.","lastModifiedDate":"2022-03-01"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"fredtwt"},"content":"* **Mainstream OS**: Windows, macOS","lastModifiedDate":"2022-03-07"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"ongkimlai"},"content":"    1. Double-click the jar file\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":625,"author":{"gitId":"ongkimlai"},"content":"        Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2022-03-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"ongkimlai"},"content":"2. Saving window preferences","lastModifiedDate":"2022-03-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"ongkimlai"},"content":"       Expected: The most recent window size and location are retained.","lastModifiedDate":"2022-03-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"ongkimlai"},"content":"3. Subsequent launch","lastModifiedDate":"2022-03-23"},{"lineNumber":635,"author":{"gitId":"ongkimlai"},"content":"    1. Make some changes to the addressbook and close the application.","lastModifiedDate":"2022-03-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":637,"author":{"gitId":"ongkimlai"},"content":"    1. Reopen the application by double-clicking the jar file\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":638,"author":{"gitId":"ongkimlai"},"content":"        Expected: Shows the GUI and loads contacts from the addressbook. Should reflect the changes made previously.","lastModifiedDate":"2022-03-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"ongkimlai"},"content":"### Deleting person","lastModifiedDate":"2022-03-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"ongkimlai"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2022-03-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"ongkimlai"},"content":"1. Deleting multiple persons while all persons are being shown","lastModifiedDate":"2022-03-23"},{"lineNumber":656,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":657,"author":{"gitId":"ongkimlai"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":658,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":659,"author":{"gitId":"ongkimlai"},"content":"    1. Test case: `delete 1 2 3`\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":660,"author":{"gitId":"ongkimlai"},"content":"        Expected: First, second and third contacts are deleted from the list. Details of the deleted contacts shown in the status message.","lastModifiedDate":"2022-03-23"},{"lineNumber":661,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":662,"author":{"gitId":"ongkimlai"},"content":"    1. Test case: `delete 1 0 2 3` , `delete 0 1 2 3`\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":663,"author":{"gitId":"ongkimlai"},"content":"      Expected: No persons are deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-03-23"},{"lineNumber":664,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":665,"author":{"gitId":"ongkimlai"},"content":"    1. Test case: `delete 1 x 2 3`, `delete 1 2 3 x` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":666,"author":{"gitId":"ongkimlai"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-03-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fredtwt":105,"viki0526":10,"manu2002g":7,"-":350,"ongkimlai":203}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"NUSocials is a **desktop app for university students to maintain a professional contact list, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). The value of the app is to facilitate a convenient way for university students to manage their professional networks with fellow acquaintances.","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"2. Download the latest `nusocials.jar` from [here]() [coming soon].","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for NUSocials.","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"    * **`list`**\u003cbr\u003eLists all contacts.","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    * **`add`**`n/fred p/99998888 e/fred@example.com a/fred street, block 123, #01-01`\u003cbr\u003eAdds a contact named `fred` to the Address Book.","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"    * **`tag`** `2 edu/computer science m/CS2040S`\u003cbr\u003eTags the 2nd contact shown in the current list with a Computer Science degree and CS2040S module.","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"    * **`removetag`**`2 m/cs2100 i/Shopee`\u003cbr\u003eRemoves the specified tags of the 2nd contact shown in the current list.","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    * **`edit`**`2 n/Alice edu/computer engineering m/cs2100`\u003cbr\u003eEdits the name to `Alice`, overwrites both the education and module tag to `computer engineering` and `cs2100` respectively.","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    * **`event`** `name/Lunch appointment info/Having lunch at Hai Di Lao d/2023-11-15 t/23:19`","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"    * **`cancelevent`**`1`\u003cbr\u003eDeletes the 1st event shown in the current event list.","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"    * **`cancelevent`**`1 4`\u003cbr\u003eDeletes the 1st and fourth event shown in the current event list.","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"    * **`delete`**`3`\u003cbr\u003eDeletes the 3rd contact shown in the current list.","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"    * **`delete`**`3 5`\u003cbr\u003eDeletes the 3rd and 5th contact shown in the current list.","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"    * **`find`**`n/fred`\u003cbr\u003eFinds persons that match the name \u0027fred\u0027.","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"    * **`find -s`**`n/fred m/cs2040s edu/computer science`\u003cbr\u003eFinds persons that match the name \u0027fred\u0027 AND takes the module \u0027cs2040s\u0027 AND is studying \u0027computer science\u0027.","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"    * **`find -e`**`name/lunch info/lunch at UTown dt/2022-05-05 12:00`\u003cbr\u003eFinds events that match the name \u0027lunch\u0027 OR the info \u0027lunch at UTown\u0027 OR the date and time \u00272022-05-05 12:00\u0027","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"    * **`clear`**\u003cbr\u003eDeletes all contacts.","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"    * **`exit`**\u003cbr\u003eExits the app.","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"fredtwt"},"content":"* Words in `UPPER_CASE` are mandatory parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"fredtwt"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/Kim Lai`.","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"fredtwt"},"content":"  e.g `n/NAME [edu/EDUCATION]` can be used as `n/Kim Lai edu/computer science` or as `n/Kim Lai`.","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"fredtwt"},"content":"  e.g. `[m/MODULES]…​` can be used as ` ` (i.e. 0 times), `m/CS2040S`, `m/CS2030S m/CS2100` etc.","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"fredtwt"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"fredtwt"},"content":"  e.g. if you specify `p/12345678 p/87654321`, only `p/87654321` will be taken.","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"fredtwt"},"content":"*","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"fredtwt"},"content":"* All commands are case-sensitive.","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"viki0526"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"fredtwt"},"content":"![help message](images/help_message.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"ongkimlai"},"content":"### Listing all persons : `list`","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"ongkimlai"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"ongkimlai"},"content":"Format: `list`","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"ongkimlai"},"content":"* All existing persons are automatically rendered when the application is launched","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"ongkimlai"},"content":"* The different tags are listed as follows: yellow for education, blue for modules, orange for CCAs and red for internships","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"ongkimlai"},"content":"* Personal details are listed in the following order: Phone number, Address, Email","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"fredtwt"},"content":"### Adding a person: `add`","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`","lastModifiedDate":"2022-02-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"* `add n/Kim Lai p/12345678 e/kimlai222@example.com a/KL street, block 123, #01-01`","lastModifiedDate":"2022-02-26"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":111,"author":{"gitId":"fredtwt"},"content":"### Tagging a person: `tag`","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"fredtwt"},"content":"Tags additional information to an existing contact.","lastModifiedDate":"2022-02-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"fredtwt"},"content":"Format: `tag INDEX [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`","lastModifiedDate":"2022-02-26"},{"lineNumber":115,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":116,"author":{"gitId":"fredtwt"},"content":"* Tags the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-02-26"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"* At least one of the prefixes must be provided.","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"* If a prefix is used, the input after must not be blank.","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"fredtwt"},"content":"* Input tag values will be accumulated to the existing tags.","lastModifiedDate":"2022-02-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-02-26"},{"lineNumber":122,"author":{"gitId":"fredtwt"},"content":"* `tag 1 i/abc-company m/CS2100 m/CS2030S` Tags the internship company and 2 modules to the 1st person.","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"ongkimlai"},"content":"### Removing specific tags from person: `removetag`","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"ongkimlai"},"content":"Removes the specific tags of an existing contact.","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"ongkimlai"},"content":"Format: `removetag INDEX [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"ongkimlai"},"content":"* Removes the tags from the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"ongkimlai"},"content":"* At least one of the prefixes must be provided.","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"ongkimlai"},"content":"* If a prefix is used, the input after must not be blank.","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"ongkimlai"},"content":"* All arguments for tags provided must be an exact match to existing tags.","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"ongkimlai"},"content":"* Input tag values will be removed from the existing tags.","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"ongkimlai"},"content":"Examples:","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"ongkimlai"},"content":"* `removetag 1 i/abc-company m/CS2100 m/CS2030S` Removes the internship company and 2 modules tags from the 1st person.","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"fredtwt"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`","lastModifiedDate":"2022-02-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"fredtwt"},"content":"* You can remove the person’s respective tags by typing `i/`, `m/`, `c/`, `edu/` without","lastModifiedDate":"2022-02-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"fredtwt"},"content":"* `edit 1 p/91234567 e/KL123@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `KL123@example.com` respectively.","lastModifiedDate":"2022-02-26"},{"lineNumber":152,"author":{"gitId":"fredtwt"},"content":"* `edit 2 m/CS2040s` Clears all module tags of the 2nd person and tag `CS2040s` as a module.","lastModifiedDate":"2022-02-26"},{"lineNumber":153,"author":{"gitId":"fredtwt"},"content":"* `edit 2 edu/ m/` Clears all education and module tags of the 2nd person.","lastModifiedDate":"2022-02-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"ongkimlai"},"content":"### Adding an event: `event`","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"ongkimlai"},"content":"Adds an event into the address book.","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"ongkimlai"},"content":"Format: `event INDEX…​ name/EVENT NAME info/EVENT DETAILS d/DATE t/TIME`","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"ongkimlai"},"content":"* Tags the participating persons to the events based on the specified `INDEX…​`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"ongkimlai"},"content":"* All fields must be provided.","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"ongkimlai"},"content":"* Argument provided for `DATE` has to be in the format of `yyyy-MM-dd`.","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"ongkimlai"},"content":"* Argument provided for `TIME` has to be in the format of `HH:mm`.","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"ongkimlai"},"content":"* Arguments for `DATE` and `TIME` has to be valid (i.e Date and Time specified must be after the current date and time)","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"ongkimlai"},"content":"* `EVENT NAME` has a limit of 100 characters.","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"ongkimlai"},"content":"* `EVENT DETAILS` has a limit of 300 characters.","lastModifiedDate":"2022-03-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"ongkimlai"},"content":"* `event 1 2 name/lunch appointment info/Having lunch at Hai Di Lao VivoCity d/2022-10-20 t/12:15` Creates the Event and adds into the address book.","lastModifiedDate":"2022-03-26"},{"lineNumber":170,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":171,"author":{"gitId":"ongkimlai"},"content":"### Cancelling an event : `cancelevent`","lastModifiedDate":"2022-03-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"ongkimlai"},"content":"Deletes the specified event from the address book.","lastModifiedDate":"2022-03-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"ongkimlai"},"content":"Format: `cancelevent INDEX`","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"ongkimlai"},"content":"* Deletes the event at the specified `INDEX`.","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"ongkimlai"},"content":"* The index refers to the index number shown in the displayed event list.","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"ongkimlai"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"ongkimlai"},"content":"* `list` followed by `cancelevent 2` deletes the 2nd event in the address book.","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"ongkimlai"},"content":"Alternate Format: `cancelevent INDEX…​`","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"ongkimlai"},"content":"* Deletes multiple events at the specified `INDEX`\u0027s.","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"ongkimlai"},"content":"* The index refers to the index number shown in the displayed event list.","lastModifiedDate":"2022-03-26"},{"lineNumber":188,"author":{"gitId":"ongkimlai"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"ongkimlai"},"content":"* Each index **must be separated by a whitespace**","lastModifiedDate":"2022-03-26"},{"lineNumber":190,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"viki0526"},"content":"Examples:","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"ongkimlai"},"content":"* `list` followed by `cancelevent 2 5 7` deletes the 2nd, 5th and 7th events in the address book.","lastModifiedDate":"2022-03-26"},{"lineNumber":193,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"ongkimlai"},"content":"Alternate Format: `delete INDEX…​`","lastModifiedDate":"2022-03-09"},{"lineNumber":210,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":211,"author":{"gitId":"ongkimlai"},"content":"* Deletes multiple persons at the specified `INDEX`\u0027s.","lastModifiedDate":"2022-03-09"},{"lineNumber":212,"author":{"gitId":"ongkimlai"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-03-09"},{"lineNumber":213,"author":{"gitId":"ongkimlai"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-09"},{"lineNumber":214,"author":{"gitId":"ongkimlai"},"content":"* Each index **must be separated by a whitespace**","lastModifiedDate":"2022-03-09"},{"lineNumber":215,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":216,"author":{"gitId":"ongkimlai"},"content":"Examples:","lastModifiedDate":"2022-03-09"},{"lineNumber":217,"author":{"gitId":"ongkimlai"},"content":"* `list` followed by `delete 2 5 7` deletes the 2nd, 5th and 7th person in the address book.","lastModifiedDate":"2022-03-09"},{"lineNumber":218,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":219,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":220,"author":{"gitId":"ongkimlai"},"content":"### Locating persons: `find`","lastModifiedDate":"2022-03-26"},{"lineNumber":221,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":222,"author":{"gitId":"ongkimlai"},"content":"Finds persons that match any of the given fields and tags.","lastModifiedDate":"2022-03-26"},{"lineNumber":223,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":224,"author":{"gitId":"ongkimlai"},"content":"Format: `find [n/NAME]…​ [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`","lastModifiedDate":"2022-03-26"},{"lineNumber":225,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":226,"author":{"gitId":"ongkimlai"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2022-03-26"},{"lineNumber":227,"author":{"gitId":"ongkimlai"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-03-26"},{"lineNumber":228,"author":{"gitId":"ongkimlai"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2022-03-26"},{"lineNumber":229,"author":{"gitId":"ongkimlai"},"content":"* Persons matching at least one of the field will be returned (i.e. `OR` search).","lastModifiedDate":"2022-03-26"},{"lineNumber":230,"author":{"gitId":"ongkimlai"},"content":"* Persons matching at least one tag of a particular type of tag will be returned. \u003cbr\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":231,"author":{"gitId":"ongkimlai"},"content":"  For example:\u003cbr\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":232,"author":{"gitId":"ongkimlai"},"content":"  `find m/cs2030s m/cs2040s` returns anyone tagged with either `cs2030s` or `cs2040s` or both \u003cbr\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":233,"author":{"gitId":"ongkimlai"},"content":"  `find n/Hans m/cs2040s` will return `Hans`, `Bo Yang` (i.e. Bo Yang is tagged with cs2040s)","lastModifiedDate":"2022-03-26"},{"lineNumber":234,"author":{"gitId":"ongkimlai"},"content":"* All arguments for tags provided must be an exact match to existing tags.","lastModifiedDate":"2022-03-26"},{"lineNumber":235,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":236,"author":{"gitId":"fredtwt"},"content":"Examples:","lastModifiedDate":"2022-03-23"},{"lineNumber":237,"author":{"gitId":"ongkimlai"},"content":"* `find i/Shopee m/cs2040s m/cs2030s` returns `Alex Yeoh` (i.e Alex Yeoh is tagged with Shopee), `David Li` (i.e. David Li is tagged with cs2040s, cs2030s)\u003cbr\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":238,"author":{"gitId":"ongkimlai"},"content":"  ![result for \u0027find i/Shopee m/cs2040s cs2030s\u0027](images/findShopeeCS2040sCS2030sResult.png)","lastModifiedDate":"2022-03-26"},{"lineNumber":239,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":240,"author":{"gitId":"ongkimlai"},"content":"### Locating specific persons: `find -s`","lastModifiedDate":"2022-03-26"},{"lineNumber":241,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":242,"author":{"gitId":"ongkimlai"},"content":"Finds persons that match all given fields and tags.","lastModifiedDate":"2022-03-26"},{"lineNumber":243,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":244,"author":{"gitId":"ongkimlai"},"content":"Format: `find -s [n/NAME]…​ [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`","lastModifiedDate":"2022-03-26"},{"lineNumber":245,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":246,"author":{"gitId":"ongkimlai"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2022-03-26"},{"lineNumber":247,"author":{"gitId":"ongkimlai"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-03-26"},{"lineNumber":248,"author":{"gitId":"ongkimlai"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2022-03-26"},{"lineNumber":249,"author":{"gitId":"ongkimlai"},"content":"* Only persons matching all fields will be returned (i.e. `AND` search).","lastModifiedDate":"2022-03-26"},{"lineNumber":250,"author":{"gitId":"ongkimlai"},"content":"  e.g. `n/Bo Yang m/cs2040s` will return `Bo Yang` (i.e. Bo Yang is tagged with cs2040s)","lastModifiedDate":"2022-03-26"},{"lineNumber":251,"author":{"gitId":"ongkimlai"},"content":"* Persons matching all tags of a particular type will be returned. For example, \u0027find -s m/cs2030s m/cs2040s\u0027 will only return a person tagged with both \u0027cs2030s\u0027 and \u0027cs2040s\u0027","lastModifiedDate":"2022-03-26"},{"lineNumber":252,"author":{"gitId":"ongkimlai"},"content":"* All arguments for tags provided must be an exact match to existing tags.","lastModifiedDate":"2022-03-26"},{"lineNumber":253,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":254,"author":{"gitId":"fredtwt"},"content":"Examples:","lastModifiedDate":"2022-03-25"},{"lineNumber":255,"author":{"gitId":"ongkimlai"},"content":"* `find -s i/Shopee m/cs2040s m/cs2030s` returns `Alex Yeoh` (i.e. Alex Yeoh is tagged with cs2040s, cs2030s and Shopee)\u003cbr\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":256,"author":{"gitId":"ongkimlai"},"content":"  ![result for \u0027find -s i/Shopee m/cs2040s cs2030s\u0027](images/find-sShopeeCS2040sCS2030s.png)","lastModifiedDate":"2022-03-26"},{"lineNumber":257,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":258,"author":{"gitId":"ongkimlai"},"content":"### Locating an event: `find -e`","lastModifiedDate":"2022-03-26"},{"lineNumber":259,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":260,"author":{"gitId":"ongkimlai"},"content":"Finds an event that matches any of the given details","lastModifiedDate":"2022-03-26"},{"lineNumber":261,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":262,"author":{"gitId":"ongkimlai"},"content":"Format: `find -e [name/EVENT NAME]…​ [info/INFORMATION]…​ [part/PARTICPANT]…​ [dt/DATE AND TIME]…​`","lastModifiedDate":"2022-03-26"},{"lineNumber":263,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":264,"author":{"gitId":"ongkimlai"},"content":"* The search is case-insensitive. e.g `lunch` will match `Lunch`","lastModifiedDate":"2022-03-26"},{"lineNumber":265,"author":{"gitId":"ongkimlai"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-03-26"},{"lineNumber":266,"author":{"gitId":"ongkimlai"},"content":"* Only full words will be matched e.g. `lunch` will not match `Lunch`","lastModifiedDate":"2022-03-26"},{"lineNumber":267,"author":{"gitId":"ongkimlai"},"content":"* Events matching at least one of the field will be returned (i.e. `OR` search).","lastModifiedDate":"2022-03-26"},{"lineNumber":268,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":269,"author":{"gitId":"fredtwt"},"content":"Examples:","lastModifiedDate":"2022-03-25"},{"lineNumber":270,"author":{"gitId":"ongkimlai"},"content":"* `find -e name/lunch part/alex` returns all lunch events and events involving Alex\u003cbr\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":271,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"fredtwt"},"content":"Clears all entries from NUSocials.","lastModifiedDate":"2022-02-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"fredtwt"},"content":"NUSocials data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-02-26"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":290,"author":{"gitId":"fredtwt"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/nusocials.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-02-26"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":293,"author":{"gitId":"fredtwt"},"content":"If your changes to the data file makes its format invalid, NUSocials will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-02-26"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":296,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"fredtwt"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665`","lastModifiedDate":"2022-03-23"},{"lineNumber":314,"author":{"gitId":"ongkimlai"},"content":"**Tag** | `tag INDEX [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`\u003cbr\u003e e.g.,`tag 1 m/CS2105 m/CS2106`","lastModifiedDate":"2022-03-18"},{"lineNumber":315,"author":{"gitId":"fredtwt"},"content":"**Removetag** | `removetag INDEX [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​` \u003cbr\u003e e.g.,`removetag 1 c/Bouldering m/CS2105 m/CS2106`","lastModifiedDate":"2022-03-25"},{"lineNumber":316,"author":{"gitId":"fredtwt"},"content":"**Event** | `event INDEX…​ name/EVENT NAME info/EVENT DETAILS d/DATE t/TIME` \u003cbr\u003e e.g., `event 1 name/Dinner Date info/Having Dinner at Bread Street Kitchen by Gordon Ramsay d/2022-12-20 t/20:15`","lastModifiedDate":"2022-03-23"},{"lineNumber":317,"author":{"gitId":"fredtwt"},"content":"**Cancelevent** | `cancelevent INDEX…​` \u003cbr\u003e e.g.,`cancelevent 1 2 3`","lastModifiedDate":"2022-03-25"},{"lineNumber":318,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"ongkimlai"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3` \u003cbr\u003e `delete INDEX…​INDEX` \u003cbr\u003e e.g. `delete 1 3 5`","lastModifiedDate":"2022-03-09"},{"lineNumber":320,"author":{"gitId":"fredtwt"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`\u003cbr\u003e e.g.,`edit 2 n/Fred e/fred111@example.com`","lastModifiedDate":"2022-02-26"},{"lineNumber":321,"author":{"gitId":"fredtwt"},"content":"**Find** | `find [n/NAME]…​ [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`\u003cbr\u003e e.g., `find n/john edu/computer science`","lastModifiedDate":"2022-03-07"},{"lineNumber":322,"author":{"gitId":"fredtwt"},"content":"**Find -s** | `find -s [n/NAME]…​ [i/INTERNSHIP]…​ [m/MODULES]…​ [c/CCA]…​ [edu/EDUCATION]…​`\u003cbr\u003e e.g., `find -s n/john i/bytedance edu/computer science`","lastModifiedDate":"2022-03-07"},{"lineNumber":323,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fredtwt":65,"viki0526":7,"-":143,"ongkimlai":109}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"ongkimlai"},"content":"    content: \"NUSocials\";","lastModifiedDate":"2022-02-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"ongkimlai":1}},{"path":"docs/diagrams/DeleteMultipleSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"[-\u003e LogicManager : execute(\"delete 1 2 3\")","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"activate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1 2 3\")","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"create DeleteCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"activate DeleteCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1 2 3\")","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"activate DeleteCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"DeleteCommandParser -\u003e ParserUtil : parseIndexes(\"1 2 3\")","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"activate ParserUtil","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"create DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"ParserUtil -\u003e DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"activate DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"DeleteCommand --\u003e ParserUtil : d","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"deactivate DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"ParserUtil --\u003e DeleteCommandParser : d","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"deactivate ParserUtil","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"activate DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"DeleteCommand -\u003e DeleteCommand : deleteFromList()","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"activate DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"DeleteCommand -\u003e Model : deletePerson(Person3)","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"DeleteCommand -\u003e Model : deletePerson(Person2)","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"DeleteCommand -\u003e Model : deletePerson(Person1)","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"DeleteCommand --\u003e DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"deactivate DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"create CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"activate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"ongkimlai"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"ongkimlai"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"ongkimlai"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"deactivate DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"ongkimlai"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"ongkimlai"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"ongkimlai"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"ongkimlai":89}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"DeleteCommandParser -\u003e ParserUtil : parseIndexes(\"1\")","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"activate ParserUtil","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"ParserUtil -\u003e DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"DeleteCommand --\u003e ParserUtil : d","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"ParserUtil --\u003e DeleteCommandParser : d","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"deactivate ParserUtil","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"DeleteCommand -\u003e DeleteCommand : deleteFromList()","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"activate DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"DeleteCommand -\u003e Model : deletePerson(Person1)","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"DeleteCommand --\u003e DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"deactivate DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":65,"ongkimlai":14}},{"path":"docs/diagrams/TagClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"Class \"{abstract}\\nTag\" as Tag","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"Person -down-\u003e \"*\" Tag","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"Cca -up-|\u003e Tag","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"Education -up-|\u003e Tag","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"Internship -up-|\u003e Tag","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"Module -up-|\u003e Tag","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"Person *-up-\u003e \"1\" Name","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"Person *-up-\u003e \"1\" Phone","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"Person *-up-\u003e \"1\" Email","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"Person *-up-\u003e \"1 \"Address","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"fredtwt":22}},{"path":"docs/diagrams/TagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"participant \":TagCommandParser\" as TagCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"participant \"t:TagCommand\" as TagCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"participant \"p1:Person\" as Person MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"[-\u003e LogicManager : execute(\"tag 1 \\nedu/computer science \\nm/cs2030s m/cs2040s\")","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"activate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"tag 1 \\nedu/computer science \\nm/cs2030s m/cs2040s\")","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"create TagCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"AddressBookParser -\u003e TagCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"activate TagCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"TagCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"deactivate TagCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"AddressBookParser -\u003e TagCommandParser : parse(\"1\")","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"activate TagCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"TagCommandParser -\u003e ParserUtil : parseTags(\"computer science\")","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"activate ParserUtil","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"TagCommandParser -\u003e ParserUtil : parseTags(\"cs2030s, cs2040s\")","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"create TagCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"ParserUtil -\u003e TagCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"activate TagCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"TagCommand --\u003e ParserUtil : t","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"deactivate TagCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"ParserUtil --\u003e TagCommandParser : t","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"deactivate ParserUtil","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"TagCommandParser --\u003e AddressBookParser : t","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"deactivate TagCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"TagCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"destroy TagCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"AddressBookParser --\u003e LogicManager : t","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"LogicManager -\u003e TagCommand : execute()","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"activate TagCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"create Person","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"TagCommand -\u003e Person","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"activate Person","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"Person --\u003e TagCommand : p1","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"deactivate Person","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"TagCommand -\u003e Model : setPerson(oldp1, p1)","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"fredtwt"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"Model --\u003e TagCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"fredtwt"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"fredtwt"},"content":"create CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"fredtwt"},"content":"TagCommand -\u003e CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"fredtwt"},"content":"activate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"fredtwt"},"content":"CommandResult --\u003e TagCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"fredtwt"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"fredtwt"},"content":"TagCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"fredtwt"},"content":"deactivate TagCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"fredtwt"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"fredtwt"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"fredtwt"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"fredtwt":81}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"Class EventListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"Class EventCard","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"MainWindow *-down-\u003e \"1\" EventListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"EventListPanel -down-\u003e \"*\" EventCard","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"EventListPanel --|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"EventCard --|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"EventCard ..\u003e Model","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":60,"ongkimlai":7}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"title: NUSocials","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W11-1/tp//workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W11-1/tp/actions)","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W11-1/tp/branch/master/graph/badge.svg?token\u003dEQL5RQUWFN)](https://codecov.io/gh/AY2122S2-CS2103T-W11-1/tp)","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"**NUSocials is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"* If you are interested in using NUSocials, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"* If you are interested about developing NUSocials, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":13,"ongkimlai":6}},{"path":"docs/team/fredtwt.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"title: Frederick Tang\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"### Project: NUSocials","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"NUSocials is a desktop address book application for university students who like to maintain a professional contact list. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"* **New Feature**: Added the ability to tag additional information to an existing contact entry.","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"    * What it does: allows the user to tag additional information to an existing contact.","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    * Justification: This feature improves the product significantly because a user can tag important information to their own contacts for future references.","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"    * Highlights: This enhancement affects the existing UI layout. It required an in-depth analysis of how the tagged information should be displayed alongside with their respective contacts.","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"* **New Feature**: Added the ability to add events to the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"    * What it does: allows the user to add events and tag them to contacts that are participating.","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"    * Justification: This feature improves the product significantly because a user can keep track of upcoming events they have with their contacts.","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"    * Highlights: This enhancement affects the existing UI layout. It required an in-depth analysis of how the event information should be displayed alongside the contact list in the application.","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dfredtwt\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dfredtwt\u0026tabRepo\u003dAY2122S2-CS2103T-W11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"* **Enhancements to existing features:**","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"  * Removed the tag functionality from add command","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"  * Created a tag command that can tag specific fields to existing contact entries","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"    * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        * Added documentation for the features `find`, `event` and `tag`","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"        * Did cosmetic tweaks on the documentation for existing features `list` and `delete`","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"        * Did cosmetic tweaks on the command summary to reflect NUSocials command format","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"      * Added user stories for the features `add`, `tag`, `event`.","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"        * Added use cases for the features `add`, `tag`, `event`.","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"fredtwt":35,"ongkimlai":1}},{"path":"docs/team/manu2002g.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"manu2002g"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"manu2002g"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"manu2002g"},"content":"title: Manusha Galappaththi\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"manu2002g"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"manu2002g"},"content":"### Project: NUSocials","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"manu2002g"},"content":"NUSocials is a desktop address book application for university students who like to maintain a professional contact list. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"manu2002g"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"manu2002g"},"content":"* **New Feature (to be added soon)**: Added the ability to view all contact entries.","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"manu2002g"},"content":"  * What it does: allows the user to view a list of all contacts in the stored in the database","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"manu2002g"},"content":"  * Justification: This feature improves the product significantly because a user can view all their contacts and choose which ones to tag or delete.","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"manu2002g"},"content":"  * Highlights: This enhancement required an analysis of the UI design layout to find the best possible way to display the result.","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"manu2002g"},"content":"* **New Feature (to be added soon)**: Added the ability to edit previously added entries","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"manu2002g"},"content":"  * What it does: allows the user to change the details or tags of a previously added contact","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"manu2002g"},"content":"  * Justification:  Users may make mistakes when entering contact details or tags. We should allow them to rectify this using an edit command","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"manu2002g"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"manu2002g"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dmanu2002g\u0026tabRepo\u003dAY2122S2-CS2103T-W11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"manu2002g"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"manu2002g"},"content":"  * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"manu2002g"},"content":"    * {to be added}","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"manu2002g"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"manu2002g"},"content":"    * {to be added}","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"manu2002g":30}},{"path":"docs/team/ongkimlai.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"title: Ong Kim Lai\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"### Project: NUSocials","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"NUSocials is a desktop address book application for university students who like to maintain a professional contact list. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"* **New Feature**: Added the ability to tag existing contacts.","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"  * What it does: allows the user to tag additional information to an existing contact.","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"  * Justification: This feature improves the product significantly because a user can tag important information to their own contacts for future references.","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"  * Highlights: This enhancement affects the existing UI layout. It required an in-depth analysis of how the tagged information should be displayed alongside with their respective contacts.","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"* **Feature Enhancement**: Added the ability to delete multiple contacts.","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"  * What it does: allows the user to delete multiple contacts in a single command.","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"  * Justification: This feature improves the product as a user can efficiently delete many contacts at once instead of inputting a delete command for each contact that he or she wants to delete.","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"* **New Feature**: Added the ability to remove tags from existing contacts.","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"  * What it does: allows the user to remove tags from an existing contact.","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"  * Justification: This feature improves the product significantly because a user does not have to key in every tag again with the `edit` command just to remove a few tags.","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"* Updated the UI to fit requirements for new features","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"  * Added a splitpane to fit 2 panels (contacts panel and events panel)","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"  * Designed the events panel","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dongkimlai\u0026tabRepo\u003dAY2122S2-CS2103T-W11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026zA\u003dongkimlai\u0026zR\u003dAY2122S2-CS2103T-W11-1%2Ftp%5Bmaster%5D\u0026zACS\u003d81.23391812865498\u0026zS\u003d2022-02-18\u0026zFS\u003d\u0026zU\u003d2022-02-26\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"  * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"    * Added documentation for the features `add` and `tag`","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"    * Added documentation for feature `delete` enhancement","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    * Added documentation for new feature `removetag`","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"    * Updated documentation for exact tag names for `find` and `tag`","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    * Added screenshots for `find` and `find -s` examples","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"    * Added user stories for `removetag` and `delete` multiple contacts","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"    * Added use cases for `removetag` and `find`","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"    * Added implementation for delete multiple contacts and UML diagrams","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"* **Tools**:","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"  * Integrated Codecov into team repo","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"ongkimlai":44}},{"path":"docs/team/viki0526.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"title: Vikrant Prakash\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":"### Project: NUSocials","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"NUSocials is a desktop address book application for university students who like to maintain a professional contact list. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"* **New Feature (to be added soon)**: Added the ability to view all contact entries.","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"    * What it does: allows the user to view a list of all contacts in the stored in the database","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"    * Justification: This feature improves the product significantly because a user can view all their contacts and choose which ones to tag or delete.","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"    * Highlights: This enhancement required an analysis of the UI design layout to find the best possible way to display the result.","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"* **New Feature (to be added soon)**: Added the ability to edit previously added entries","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"    * What it does: allows the user to change the details or tags of a previously added contact","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"    * Justification:  Users may make mistakes when entering contact details or tags. We should allow them to rectify this using an edit command","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"viki0526"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"viki0526"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"viki0526"},"content":"    * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"viki0526"},"content":"    * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"viki0526"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"viki0526"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#20]()","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"viki0526":30}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"    public static final String MESSAGE_EVENTS_LISTED_OVERVIEW \u003d \"%1$d events listed!\";","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"viki0526":1,"-":13}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"public class Index implements Comparable\u003cIndex\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"    private final int originalZeroBasedIndex;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        this.originalZeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"    public int getOriginalZeroBased() {","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"    public Index getOriginalZeroBasedAsIndex() {","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        return new Index(getOriginalZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"    public int getOrignalOneBased() {","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"     * Decreases the index by 1","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"    public void decreaseIndex() {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"        zeroBasedIndex--;","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"                //\u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"                \u0026\u0026 originalZeroBasedIndex \u003d\u003d ((Index) other).originalZeroBasedIndex); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"    public int compareTo(Index other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"ongkimlai"},"content":"        return other.originalZeroBasedIndex - originalZeroBasedIndex;","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":52,"ongkimlai":30}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"manu2002g"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"manu2002g"},"content":"     * Returns true if the {@code string} contains the {@code substring}.","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"manu2002g"},"content":"     *   Ignores case, a full substring match is required.","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"manu2002g"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"manu2002g"},"content":"     * @param string cannot be null","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"manu2002g"},"content":"     * @param substring cannot be null, cannot be empty","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"manu2002g"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"manu2002g"},"content":"    public static boolean containsSubstringIgnoreCase(String string, String substring) {","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"manu2002g"},"content":"        requireNonNull(string);","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"manu2002g"},"content":"        requireNonNull(substring);","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"manu2002g"},"content":"        String preppedSubstring \u003d substring.trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"manu2002g"},"content":"        checkArgument(!preppedSubstring.isEmpty(), \"Substring parameter cannot be empty\");","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"manu2002g"},"content":"        return string.contains(preppedSubstring);","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":86,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"ongkimlai"},"content":"     * Returns true if {@code s} contains multiple entries, does not check for validness.","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"ongkimlai"},"content":"     * Returns false if {@code s} is only a single entry.","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"ongkimlai"},"content":"     * e.g. \"1\", \"2\" returns false, \"1 2 3\", \"5    10\" (multiple whitespaces) returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"ongkimlai"},"content":"     * @param s trimmed string of arguments","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"ongkimlai"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"ongkimlai"},"content":"    public static boolean containsMultipleIndex(String s) {","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"ongkimlai"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"ongkimlai"},"content":"        String[] indexes \u003d s.split(\" \");","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"ongkimlai"},"content":"        return indexes.length !\u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"ongkimlai"},"content":"     * Returns true if {@code s} contains multiple all unique entries (integers), does not check for validness.","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"ongkimlai"},"content":"     * Returns false if {@code s} contains duplicate entries (integers).","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"ongkimlai"},"content":"     * e.g.:","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"ongkimlai"},"content":"     * \"1 1\", \"1 2 1 3\" returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"ongkimlai"},"content":"     * \"1 2 3\", \"5 10 2 3\" (multiple whitespaces) returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"ongkimlai"},"content":"     * @param s trimmed string of arguments","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"ongkimlai"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"ongkimlai"},"content":"    public static boolean isAllUniqueIntegers(String s) {","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"ongkimlai"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"ongkimlai"},"content":"        String[] indexes \u003d s.split(\" \");","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"ongkimlai"},"content":"        HashSet\u003cInteger\u003e hashSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"ongkimlai"},"content":"        for (String t : indexes) {","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"ongkimlai"},"content":"            int n \u003d Integer.parseInt(t);","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"ongkimlai"},"content":"            if (!hashSet.contains(n)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"ongkimlai"},"content":"                hashSet.add(n);","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"ongkimlai"},"content":"            } else {","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"ongkimlai"},"content":"                return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"ongkimlai"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"ongkimlai"},"content":"        return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"ongkimlai"},"content":"     * Returns true if every entry in {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"ongkimlai"},"content":"     * e.g. \"5 6 7 8\"","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"ongkimlai"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"ongkimlai"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"1 a\" (contains letters)","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"ongkimlai"},"content":"     * \"1, 2 3\" (contains comma), \"1   2 3\" (multiple whitespaces between adjacent integers)","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"ongkimlai"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"ongkimlai"},"content":"    public static boolean isAllNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"ongkimlai"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"ongkimlai"},"content":"        String[] indexes \u003d s.split(\" \");","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"ongkimlai"},"content":"        boolean result \u003d true;","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"ongkimlai"},"content":"        for (String t : indexes) {","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"ongkimlai"},"content":"            result \u003d result \u0026\u0026 isNonZeroUnsignedInteger(t);","lastModifiedDate":"2022-03-09"},{"lineNumber":143,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":144,"author":{"gitId":"ongkimlai"},"content":"        return result;","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"manu2002g":17,"-":68,"ongkimlai":61}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    /** Returns an unmodifiable view of the filtered list of events */","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":50,"ongkimlai":4}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_UPCOMING_EVENTS;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_UPCOMING_EVENTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":80,"ongkimlai":9}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \";","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %n%1$s\";","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd.displayPersonForAdd()));","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fredtwt":3,"-":60}},{"path":"src/main/java/seedu/address/logic/commands/CancelEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":" * Deletes an event identified using it\u0027s displayed index from the address book","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"public class CancelEventCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"    public static final String COMMAND_WORD \u003d \"cancelevent\";","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"            + \": Deletes the event identified by the index number(s) used in the displayed event\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"            + \"Example: \" + COMMAND_WORD + \"1\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"            + \"OR\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"            + \"Parameters: INDEX... (all indexes must be unique and positive integers)\"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"            + \"Example: \" + COMMAND_WORD + \"1 3 5\";","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Cancelled Event:%n%1$s\";","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_DELETE_EVENTS_SUCCESS \u003d \"Cancelled Events:%n%1$s\";","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"    private final Index[] targetIndexArr;","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"     * Constructor for CancelEventCommand, for singular deletion","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"     * @param targetIndex the event to be deleted","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"    public CancelEventCommand(Index targetIndex) {","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"        this.targetIndexArr \u003d new Index[]{targetIndex};","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"     * Constructor for CancelEventCommand, for multiple deletions","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"     * @param targetIndexArr the events to be deleted","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"    public CancelEventCommand(Index[] targetIndexArr) {","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"        this.targetIndexArr \u003d targetIndexArr;","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"        this.targetIndex \u003d targetIndexArr[0];","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"     * In the multiple deletion case, ensures all user input indexes are within range of the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"     * @param listSize the size of the last displayed list.","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"     * @return true if every index is within the range of the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"    private boolean checkIndexRange(int listSize) {","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"        boolean result \u003d true;","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"        for (Index target : targetIndexArr) {","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"            result \u003d result \u0026\u0026 (target.getZeroBased() \u003c listSize);","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"        return result;","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"fredtwt"},"content":"     * Extracts the information before deletion for the success message.","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"fredtwt"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"fredtwt"},"content":"     * @param lastShownList the last displayed list.","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"fredtwt"},"content":"     * @return a string containing all the information of the event(s) to be deleted.","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"fredtwt"},"content":"    private String extractDeletedInfo(List\u003cEvent\u003e lastShownList) {","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"fredtwt"},"content":"        final StringBuilder deletedEventOrEvents \u003d new StringBuilder();","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"fredtwt"},"content":"        for (int i \u003d 0; i \u003c targetIndexArr.length; i++) {","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"fredtwt"},"content":"            Index target \u003d targetIndexArr[i];","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"fredtwt"},"content":"            Event eventToDelete \u003d lastShownList.get(target.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"fredtwt"},"content":"            if (i \u003e 0) {","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"fredtwt"},"content":"                deletedEventOrEvents.append(System.lineSeparator());","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"fredtwt"},"content":"            deletedEventOrEvents.append(eventToDelete.displayForCancelEvent());","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"fredtwt"},"content":"        return deletedEventOrEvents.toString();","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"fredtwt"},"content":"     * Deletes the events specified in the targetIndexArr.","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"fredtwt"},"content":"     * A copy of targetIndexArr is created for defensive programming.","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"fredtwt"},"content":"     * targetIndexArrClone is sorted in descending order so that the deletion process will not delete the wrong event.","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"fredtwt"},"content":"     * Example: If index 1 is deleted first, the original index 2 becomes index 1.","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"fredtwt"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"fredtwt"},"content":"     * @param model the addressbook model","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"fredtwt"},"content":"     * @param lastShownList the last displayed person list","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"fredtwt"},"content":"    private void deleteFromList(Model model, List\u003cEvent\u003e lastShownList) {","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"        Index[] targetIndexArrClone \u003d targetIndexArr.clone();","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"        Arrays.sort(targetIndexArrClone);","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"        for (Index target : targetIndexArrClone) {","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"            Event eventToDelete \u003d lastShownList.get(target.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"            model.deleteEvent(eventToDelete);","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"fredtwt"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"        int lastShownListSize \u003d lastShownList.size();","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"fredtwt"},"content":"        if (!checkIndexRange(lastShownListSize)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"fredtwt"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"fredtwt"},"content":"        String deletedEventOrEvents \u003d extractDeletedInfo(lastShownList);","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"fredtwt"},"content":"        deleteFromList(model, lastShownList);","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"        return targetIndexArr.length \u003d\u003d 1","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"fredtwt"},"content":"                ? new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, deletedEventOrEvents))","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"fredtwt"},"content":"                : new CommandResult(String.format(MESSAGE_DELETE_EVENTS_SUCCESS, deletedEventOrEvents));","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"fredtwt"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"fredtwt"},"content":"                || (other instanceof CancelEventCommand // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 targetIndex.equals(((CancelEventCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"fredtwt":129}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    /** The application should toggle visibility of right panel to events. */","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"    private final boolean isListCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    /** The application should toggle visibility of right panel to events. */","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    private final boolean isViewCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean isList, boolean isView) {","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"        this.isListCommand \u003d isList;","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"        this.isViewCommand \u003d isView;","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        this(feedbackToUser, showHelp, exit, false, false);","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"        this(feedbackToUser, false, false, false, false);","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"    public boolean isListCommand() {","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"        return isListCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"    public boolean isViewCommand() {","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"        return isViewCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":69,"ongkimlai":22}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"            + \": Deletes the person identified by the index number(s) used in the displayed person list.\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"            + \"OR\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"            + \"Parameters: INDEX... (all indexes must be unique and positive integers)\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 3 5\";","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person:%n%1$s\";","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"    public static final String MESSAGE_DELETE_MULTIPLE_PERSON_SUCCESS \u003d \"Deleted Persons:%n%1$s\";","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    private final Index[] targetIndexArr;","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for DeleteCommand, for singular deletion","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"     * @param targetIndex the person to be deleted","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"        this.targetIndexArr \u003d new Index[]{targetIndex};","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for DeleteCommand, for multiple deletions","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"     * @param targetIndexArr the persons to be deleted","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"    public DeleteCommand(Index[] targetIndexArr) {","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"        this.targetIndexArr \u003d targetIndexArr;","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"        this.targetIndex \u003d targetIndexArr[0];","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"     * In the multiple deletion case, ensures all user input indexes are within range of the list.","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"     * @param listSize the size of the last displayed list.","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"     * @return true if every index is within the range of the list.","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"    private boolean checkIndexRange(int listSize) {","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"        boolean result \u003d true;","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"        for (Index target : targetIndexArr) {","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"            result \u003d result \u0026\u0026 (target.getZeroBased() \u003c listSize);","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"        return result;","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"     * Extracts the information before deletion for the success message.","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"     * @param lastShownList the last displayed list.","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"     * @return a string containing all the information of the person(s) to be deleted.","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"    private String extractDeletedInfo(List\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"        final StringBuilder deletedPersonOrPersons \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"ongkimlai"},"content":"        for (int i \u003d 0; i \u003c targetIndexArr.length; i++) {","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"ongkimlai"},"content":"            Index target \u003d targetIndexArr[i];","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"ongkimlai"},"content":"            Person personToDelete \u003d lastShownList.get(target.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"ongkimlai"},"content":"            if (i \u003e 0) {","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"ongkimlai"},"content":"                deletedPersonOrPersons.append(System.lineSeparator());","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"fredtwt"},"content":"            deletedPersonOrPersons.append(personToDelete.displayPersonForDelete());","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"ongkimlai"},"content":"        return deletedPersonOrPersons.toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"ongkimlai"},"content":"     * Deletes the persons specified in the targetIndexArr.","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"ongkimlai"},"content":"     * A copy of targetIndexArr is created for defensive programming.","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"ongkimlai"},"content":"     * targetIndexArrClone is sorted in descending order so that the deletion process will not delete the wrong person.","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"ongkimlai"},"content":"     * Example: If index 1 is deleted first, the original index 2 becomes index 1.","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"ongkimlai"},"content":"     * @param model the addressbook model","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"     * @param lastShownList the last displayed person list","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"     * @param lastEventList the last display event list","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"    private void deleteFromList(Model model, List\u003cPerson\u003e lastShownList, List\u003cEvent\u003e lastEventList) {","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"ongkimlai"},"content":"        Index[] targetIndexArrClone \u003d targetIndexArr.clone();","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"ongkimlai"},"content":"        Arrays.sort(targetIndexArrClone);","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"ongkimlai"},"content":"        for (Index target : targetIndexArrClone) {","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"ongkimlai"},"content":"            Person personToDelete \u003d lastShownList.get(target.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"            updateEvents(model, personToDelete, lastEventList);","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"ongkimlai"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"fredtwt"},"content":"    private void updateEvents(Model model, Person person, List\u003cEvent\u003e lastEventList) {","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"fredtwt"},"content":"        Name name \u003d person.getName();","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"fredtwt"},"content":"        for (int i \u003d 0; i \u003c lastEventList.size(); i++) {","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"fredtwt"},"content":"            Event currEvent \u003d lastEventList.get(i);","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"fredtwt"},"content":"            List\u003cName\u003e editedParticipants \u003d currEvent.getParticipants();","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"            if (editedParticipants.contains(name) \u0026\u0026 editedParticipants.size() \u003d\u003d 1) {","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"                model.deleteEvent(currEvent);","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"fredtwt"},"content":"            } else if (editedParticipants.contains(name) \u0026\u0026 editedParticipants.size() \u003e 1) {","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"fredtwt"},"content":"                editedParticipants.remove(name);","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"fredtwt"},"content":"                Event editedEvent \u003d new Event(currEvent.getEventName(), currEvent.getEventInfo(), editedParticipants,","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"fredtwt"},"content":"                        currEvent.getDateTime());","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"fredtwt"},"content":"                model.setEvent(currEvent, editedEvent);","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"fredtwt"},"content":"        List\u003cEvent\u003e lastEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"ongkimlai"},"content":"        int lastShownListSize \u003d lastShownList.size();","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"ongkimlai"},"content":"        if (!checkIndexRange(lastShownListSize)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"ongkimlai"},"content":"        String deletedPersonOrPersons \u003d extractDeletedInfo(lastShownList);","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"fredtwt"},"content":"        deleteFromList(model, lastShownList, lastEventList);","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"ongkimlai"},"content":"        return targetIndexArr.length \u003d\u003d 1","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"ongkimlai"},"content":"                ? new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, deletedPersonOrPersons))","lastModifiedDate":"2022-03-09"},{"lineNumber":143,"author":{"gitId":"ongkimlai"},"content":"                : new CommandResult(String.format(MESSAGE_DELETE_MULTIPLE_PERSON_SUCCESS, deletedPersonOrPersons));","lastModifiedDate":"2022-03-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fredtwt":24,"-":48,"ongkimlai":80}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"fredtwt"},"content":"        List\u003cEvent\u003e lastEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"fredtwt"},"content":"        updateEvent(model, personToEdit, editedPerson, lastEventList);","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"fredtwt"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson.displayPersonForAdd()));","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"fredtwt"},"content":"     * Updates the event to reflect the new participants","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"fredtwt"},"content":"     * @param model the current model","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"fredtwt"},"content":"     * @param personToEdit the person that is being edited","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"fredtwt"},"content":"     * @param editedPerson the person that has been edited","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"fredtwt"},"content":"     * @param lastEventList the event list","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"fredtwt"},"content":"    public void updateEvent(Model model, Person personToEdit, Person editedPerson, List\u003cEvent\u003e lastEventList) {","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"fredtwt"},"content":"        Name oldName \u003d personToEdit.getName();","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"fredtwt"},"content":"        Name newName \u003d editedPerson.getName();","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"        for (int i \u003d 0; i \u003c lastEventList.size(); i++) {","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"            Event currEvent \u003d lastEventList.get(i);","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"            List\u003cName\u003e participants \u003d currEvent.getParticipants();","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"            if (participants.remove(oldName)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"fredtwt"},"content":"                participants.add(newName);","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"fredtwt"},"content":"            model.setEvent(currEvent, new Event(currEvent.getEventName(), currEvent.getEventInfo(), participants,","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"                    currEvent.getDateTime()));","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"fredtwt"},"content":"        List\u003cTag\u003e updatedEducations \u003d editPersonDescriptor.getEducations().isEmpty()","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"                ? personToEdit.getEducations()","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"                : editPersonDescriptor.getEducations();","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"fredtwt"},"content":"        List\u003cTag\u003e updatedCcas \u003d editPersonDescriptor.getCcas().isEmpty()","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"fredtwt"},"content":"                ? personToEdit.getCcas()","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"fredtwt"},"content":"                : editPersonDescriptor.getCcas();","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"fredtwt"},"content":"        List\u003cTag\u003e updatedInternships \u003d editPersonDescriptor.getInternships().isEmpty()","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"fredtwt"},"content":"                ? personToEdit.getInternships()","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"fredtwt"},"content":"                : editPersonDescriptor.getInternships();","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"fredtwt"},"content":"        List\u003cTag\u003e updatedModules \u003d editPersonDescriptor.getModules().isEmpty()","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"fredtwt"},"content":"                ? personToEdit.getModules()","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"fredtwt"},"content":"                : editPersonDescriptor.getModules();","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"manu2002g"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2022-03-12"},{"lineNumber":135,"author":{"gitId":"fredtwt"},"content":"                updatedEducations, updatedInternships, updatedModules, updatedCcas);","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"fredtwt"},"content":"        private List\u003cTag\u003e educations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"fredtwt"},"content":"        private List\u003cTag\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"fredtwt"},"content":"        private List\u003cTag\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"fredtwt"},"content":"        private List\u003cTag\u003e ccas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":181,"author":{"gitId":"manu2002g"},"content":"            setEducations(toCopy.educations);","lastModifiedDate":"2022-03-12"},{"lineNumber":182,"author":{"gitId":"manu2002g"},"content":"            setInternships(toCopy.internships);","lastModifiedDate":"2022-03-12"},{"lineNumber":183,"author":{"gitId":"manu2002g"},"content":"            setModules(toCopy.modules);","lastModifiedDate":"2022-03-12"},{"lineNumber":184,"author":{"gitId":"manu2002g"},"content":"            setCcas(toCopy.ccas);","lastModifiedDate":"2022-03-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"fredtwt"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address)","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"fredtwt"},"content":"                    \u0026\u0026 educations.isEmpty()","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"fredtwt"},"content":"                    \u0026\u0026 internships.isEmpty()","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"fredtwt"},"content":"                    \u0026\u0026 modules.isEmpty()","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"fredtwt"},"content":"                    \u0026\u0026 ccas.isEmpty();","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"manu2002g"},"content":"        public void setEducations(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-12"},{"lineNumber":231,"author":{"gitId":"fredtwt"},"content":"            this.educations \u003d tags;","lastModifiedDate":"2022-03-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":234,"author":{"gitId":"fredtwt"},"content":"        public List\u003cTag\u003e getEducations() {","lastModifiedDate":"2022-03-25"},{"lineNumber":235,"author":{"gitId":"fredtwt"},"content":"            return educations;","lastModifiedDate":"2022-03-25"},{"lineNumber":236,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":237,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":238,"author":{"gitId":"manu2002g"},"content":"        public void setInternships(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-12"},{"lineNumber":239,"author":{"gitId":"fredtwt"},"content":"            this.internships \u003d tags;","lastModifiedDate":"2022-03-25"},{"lineNumber":240,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":241,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":242,"author":{"gitId":"fredtwt"},"content":"        public List\u003cTag\u003e getInternships() {","lastModifiedDate":"2022-03-25"},{"lineNumber":243,"author":{"gitId":"fredtwt"},"content":"            return internships;","lastModifiedDate":"2022-03-25"},{"lineNumber":244,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":245,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":246,"author":{"gitId":"manu2002g"},"content":"        public void setModules(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-12"},{"lineNumber":247,"author":{"gitId":"fredtwt"},"content":"            this.modules \u003d tags;","lastModifiedDate":"2022-03-25"},{"lineNumber":248,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":249,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":250,"author":{"gitId":"fredtwt"},"content":"        public List\u003cTag\u003e getModules() {","lastModifiedDate":"2022-03-25"},{"lineNumber":251,"author":{"gitId":"fredtwt"},"content":"            return modules;","lastModifiedDate":"2022-03-25"},{"lineNumber":252,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":253,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":254,"author":{"gitId":"manu2002g"},"content":"        public void setCcas(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-12"},{"lineNumber":255,"author":{"gitId":"fredtwt"},"content":"            this.ccas \u003d tags;","lastModifiedDate":"2022-03-25"},{"lineNumber":256,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":257,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":258,"author":{"gitId":"fredtwt"},"content":"        public List\u003cTag\u003e getCcas() {","lastModifiedDate":"2022-03-25"},{"lineNumber":259,"author":{"gitId":"fredtwt"},"content":"            return ccas;","lastModifiedDate":"2022-03-25"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2022-03-11"},{"lineNumber":281,"author":{"gitId":"manu2002g"},"content":"                    \u0026\u0026 getEducations().equals(e.getEducations())","lastModifiedDate":"2022-03-12"},{"lineNumber":282,"author":{"gitId":"manu2002g"},"content":"                    \u0026\u0026 getInternships().equals(e.getInternships())","lastModifiedDate":"2022-03-12"},{"lineNumber":283,"author":{"gitId":"manu2002g"},"content":"                    \u0026\u0026 getModules().equals(e.getModules())","lastModifiedDate":"2022-03-12"},{"lineNumber":284,"author":{"gitId":"manu2002g"},"content":"                    \u0026\u0026 getCcas().equals(e.getCcas());","lastModifiedDate":"2022-03-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"fredtwt":58,"manu2002g":25,"-":203,"ongkimlai":1}},{"path":"src/main/java/seedu/address/logic/commands/EventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFO;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Information;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Tags an event to the person identified by the index \"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"            + \"number.\"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"            + \"\\nParameters: INDEX (must be a positive integer) \" + PREFIX_EVENT_NAME + \"EVENT NAME \" + PREFIX_INFO","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"            + \"EVENT DETAILS \" + PREFIX_DATE + \"yyyy-MM-dd \" + PREFIX_TIME + \"HH:mm\";","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Tagged following event to %1$s:\" + \"\\n%2$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"    private final Index[] indexes;","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"    private final EventName name;","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"    private final Information information;","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    private final DateTime dateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"    private final Set\u003cString\u003e names;","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"     * Constructor for EventCommand.","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"     * @param indexes the indexes of the persons tagged to this event","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"     * @param name the name of the event","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"     * @param information the details of the event","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"     * @param dateTime the date and time of the event","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"    public EventCommand(Index[] indexes, EventName name, Information information, DateTime dateTime) {","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"        requireAllNonNull(indexes, name, information, dateTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"        this.information \u003d information;","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"        this.names \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"     * In the multiple deletion case, ensures all user input indexes are within range of the list.","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"     * @param listSize the size of the last displayed list.","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"     * @return true if every index is within the range of the list.","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"    private boolean checkIndexRange(int listSize) {","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"fredtwt"},"content":"        boolean result \u003d true;","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"        for (Index target : indexes) {","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"fredtwt"},"content":"            result \u003d result \u0026\u0026 (target.getZeroBased() \u003c listSize);","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"fredtwt"},"content":"        return result;","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"fredtwt"},"content":"    private Event createEvent(List\u003cPerson\u003e lst, Index[] indexes) {","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"fredtwt"},"content":"        Set\u003cName\u003e tempList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"fredtwt"},"content":"        for (Index currIndex : indexes) {","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"fredtwt"},"content":"            tempList.add(lst.get(currIndex.getZeroBased()).getName());","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"fredtwt"},"content":"        return new Event(this.name, this.information, new ArrayList\u003c\u003e(tempList), this.dateTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"fredtwt"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"fredtwt"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"fredtwt"},"content":"        int listSize \u003d lastShownList.size();","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"fredtwt"},"content":"        if (!checkIndexRange(listSize)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"fredtwt"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"fredtwt"},"content":"        // Creating the event with the list of participants provided","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"fredtwt"},"content":"        Event currEvent \u003d createEvent(lastShownList, indexes);","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"fredtwt"},"content":"        // Tagging the event to each participant","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"fredtwt"},"content":"        for (Index currIndex : indexes) {","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"fredtwt"},"content":"            Person currPerson \u003d lastShownList.get(currIndex.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"fredtwt"},"content":"            names.add(currPerson.getName().toString());","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"        model.addEvent(currEvent);","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"        model.updateFilteredEventList(Model.PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"        return new CommandResult(String.format(MESSAGE_ARGUMENTS, names, currEvent));","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"fredtwt"},"content":"            return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"        if (!(other instanceof EventCommand)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"fredtwt"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"fredtwt"},"content":"        EventCommand e \u003d (EventCommand) other;","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"fredtwt"},"content":"        return name.equals(e.name) \u0026\u0026 information.equals(e.information)","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 Arrays.equals(indexes, e.indexes) \u0026\u0026 dateTime.equals(e.dateTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"fredtwt":118}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"manu2002g"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"manu2002g"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"manu2002g"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"manu2002g"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"manu2002g"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"manu2002g"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"manu2002g"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"manu2002g"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"manu2002g"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"manu2002g"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"viki0526"},"content":" * Finds and lists all persons or events in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"viki0526"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"manu2002g"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose fields contain any of \"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"manu2002g"},"content":"            + \"Use find -s to find all person where fields must contain all the keywords provided. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"manu2002g"},"content":"            + \"Parameters: [\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"manu2002g"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"manu2002g"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"manu2002g"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"manu2002g"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"manu2002g"},"content":"            + \"[\" + PREFIX_INTERNSHIP + \"INTERNSHIP]\"","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"manu2002g"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice e/gmail.com i/Facebook\"","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"manu2002g"},"content":"            + \"Note: \"","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"manu2002g"},"content":"            + COMMAND_WORD + \" n/Alex Yeoh returns the same result as \"","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"manu2002g"},"content":"            + COMMAND_WORD + \" n/Alex Yeoh\";","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"manu2002g"},"content":"    public static final String MESSAGE_NO_PARAMETERS \u003d \"At least one field must be provided.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"manu2002g"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"manu2002g"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"manu2002g"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"viki0526"},"content":"     * Stores the details to find the person with. Each non-empty field value will","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"viki0526"},"content":"     * be added to the predicate to filter the contact list","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"manu2002g"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"manu2002g"},"content":"    public static class FindPersonDescriptor {","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"manu2002g"},"content":"        private List\u003cName\u003e names;","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"manu2002g"},"content":"        private List\u003cPhone\u003e phones;","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"manu2002g"},"content":"        private List\u003cString\u003e emails; //This is String to facilitate the use of partial emails for searching.","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"manu2002g"},"content":"        private List\u003cAddress\u003e addresses;","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"viki0526"},"content":"        private List\u003cTag\u003e educations;","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"viki0526"},"content":"        private List\u003cTag\u003e internships;","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"viki0526"},"content":"        private List\u003cTag\u003e modules;","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"viki0526"},"content":"        private List\u003cTag\u003e ccas;","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"manu2002g"},"content":"        public FindPersonDescriptor() {","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"manu2002g"},"content":"        /**","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"manu2002g"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"manu2002g"},"content":"         */","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"manu2002g"},"content":"        public FindPersonDescriptor(FindPersonDescriptor toCopy) {","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"manu2002g"},"content":"            setNames(toCopy.names);","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"manu2002g"},"content":"            setPhones(toCopy.phones);","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"manu2002g"},"content":"            setEmails(toCopy.emails);","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"manu2002g"},"content":"            setAddresses(toCopy.addresses);","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"viki0526"},"content":"            setEducations(toCopy.educations);","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"viki0526"},"content":"            setInternships(toCopy.internships);","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"viki0526"},"content":"            setModules(toCopy.modules);","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"viki0526"},"content":"            setCcas(toCopy.ccas);","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"manu2002g"},"content":"        /**","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"manu2002g"},"content":"         * Returns true if at least one field is searched for.","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"manu2002g"},"content":"         */","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"manu2002g"},"content":"        public boolean isAnyFieldPresent() {","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"viki0526"},"content":"            return CollectionUtil.isAnyNonNull(names, phones, emails, addresses,","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"viki0526"},"content":"                    educations, internships, modules, ccas);","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"manu2002g"},"content":"        public void setNames(List\u003cName\u003e names) {","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"manu2002g"},"content":"            this.names \u003d names;","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"manu2002g"},"content":"        public Optional\u003cList\u003cName\u003e\u003e getNames() {","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"manu2002g"},"content":"            return Optional.ofNullable(names);","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"manu2002g"},"content":"        public Optional\u003cList\u003cString\u003e\u003e getStringNames() {","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"manu2002g"},"content":"            return getNames().map(names -\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"manu2002g"},"content":"                    names.stream().map(name -\u003e name.fullName).collect(Collectors.toList()));","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"manu2002g"},"content":"        public void setPhones(List\u003cPhone\u003e phones) {","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"manu2002g"},"content":"            this.phones \u003d phones;","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"manu2002g"},"content":"        public Optional\u003cList\u003cPhone\u003e\u003e getPhones() {","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"manu2002g"},"content":"            return Optional.ofNullable(phones);","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"manu2002g"},"content":"        public Optional\u003cList\u003cString\u003e\u003e getStringPhones() {","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"manu2002g"},"content":"            return getPhones().map(list -\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"manu2002g"},"content":"                    list.stream().map(name -\u003e name.value).collect(Collectors.toList()));","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"manu2002g"},"content":"        public void setEmails(List\u003cString\u003e emails) {","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"manu2002g"},"content":"            this.emails \u003d emails;","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"manu2002g"},"content":"        public Optional\u003cList\u003cString\u003e\u003e getEmails() {","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"manu2002g"},"content":"            return Optional.ofNullable(emails);","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"manu2002g"},"content":"        public Optional\u003cList\u003cString\u003e\u003e getStringEmails() {","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"manu2002g"},"content":"            return getEmails();","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"manu2002g"},"content":"        public void setAddresses(List\u003cAddress\u003e addresses) {","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"manu2002g"},"content":"            this.addresses \u003d addresses;","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"manu2002g"},"content":"        public Optional\u003cList\u003cAddress\u003e\u003e getAddresses() {","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"manu2002g"},"content":"            return Optional.ofNullable(addresses);","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"manu2002g"},"content":"        public Optional\u003cList\u003cString\u003e\u003e getStringAddresses() {","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"manu2002g"},"content":"            return getAddresses().map(list -\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"manu2002g"},"content":"                    list.stream().map(name -\u003e name.value).collect(Collectors.toList()));","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-22"},{"lineNumber":162,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"viki0526"},"content":"        //Methods for getting and setting tag lists","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"viki0526"},"content":"        public void setEducations(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"viki0526"},"content":"            this.educations \u003d tags;","lastModifiedDate":"2022-03-17"},{"lineNumber":167,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":168,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":169,"author":{"gitId":"viki0526"},"content":"        public Optional\u003cList\u003cTag\u003e\u003e getEducations() {","lastModifiedDate":"2022-03-17"},{"lineNumber":170,"author":{"gitId":"viki0526"},"content":"            return Optional.ofNullable(educations);","lastModifiedDate":"2022-03-17"},{"lineNumber":171,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":172,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":173,"author":{"gitId":"viki0526"},"content":"        public Optional\u003cList\u003cString\u003e\u003e getStringEducations() {","lastModifiedDate":"2022-03-17"},{"lineNumber":174,"author":{"gitId":"viki0526"},"content":"            return getEducations().map(list -\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"viki0526"},"content":"                    list.stream().map(Tag::getTagString).collect(Collectors.toList()));","lastModifiedDate":"2022-03-17"},{"lineNumber":176,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":177,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":178,"author":{"gitId":"viki0526"},"content":"        public void setInternships(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"viki0526"},"content":"            this.internships \u003d tags;","lastModifiedDate":"2022-03-17"},{"lineNumber":180,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":181,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":182,"author":{"gitId":"viki0526"},"content":"        public Optional\u003cList\u003cTag\u003e\u003e getInternships() {","lastModifiedDate":"2022-03-17"},{"lineNumber":183,"author":{"gitId":"viki0526"},"content":"            return Optional.ofNullable(internships);","lastModifiedDate":"2022-03-17"},{"lineNumber":184,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":185,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":186,"author":{"gitId":"viki0526"},"content":"        public Optional\u003cList\u003cString\u003e\u003e getStringInternships() {","lastModifiedDate":"2022-03-17"},{"lineNumber":187,"author":{"gitId":"viki0526"},"content":"            return getInternships().map(list -\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":188,"author":{"gitId":"viki0526"},"content":"                    list.stream().map(Tag::getTagString).collect(Collectors.toList()));","lastModifiedDate":"2022-03-17"},{"lineNumber":189,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":190,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":191,"author":{"gitId":"viki0526"},"content":"        public void setModules(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-17"},{"lineNumber":192,"author":{"gitId":"viki0526"},"content":"            this.modules \u003d tags;","lastModifiedDate":"2022-03-17"},{"lineNumber":193,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":194,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":195,"author":{"gitId":"viki0526"},"content":"        public Optional\u003cList\u003cTag\u003e\u003e getModules() {","lastModifiedDate":"2022-03-17"},{"lineNumber":196,"author":{"gitId":"viki0526"},"content":"            return Optional.ofNullable(modules);","lastModifiedDate":"2022-03-17"},{"lineNumber":197,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":198,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":199,"author":{"gitId":"viki0526"},"content":"        public Optional\u003cList\u003cString\u003e\u003e getStringModules() {","lastModifiedDate":"2022-03-17"},{"lineNumber":200,"author":{"gitId":"viki0526"},"content":"            return getModules().map(list -\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":201,"author":{"gitId":"viki0526"},"content":"                    list.stream().map(Tag::getTagString).collect(Collectors.toList()));","lastModifiedDate":"2022-03-17"},{"lineNumber":202,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":203,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":204,"author":{"gitId":"viki0526"},"content":"        public void setCcas(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-17"},{"lineNumber":205,"author":{"gitId":"viki0526"},"content":"            this.ccas \u003d tags;","lastModifiedDate":"2022-03-17"},{"lineNumber":206,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":207,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":208,"author":{"gitId":"viki0526"},"content":"        public Optional\u003cList\u003cTag\u003e\u003e getCcas() {","lastModifiedDate":"2022-03-17"},{"lineNumber":209,"author":{"gitId":"viki0526"},"content":"            return Optional.ofNullable(ccas);","lastModifiedDate":"2022-03-17"},{"lineNumber":210,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":211,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":212,"author":{"gitId":"viki0526"},"content":"        public Optional\u003cList\u003cString\u003e\u003e getStringCcas() {","lastModifiedDate":"2022-03-17"},{"lineNumber":213,"author":{"gitId":"viki0526"},"content":"            return getCcas().map(list -\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":214,"author":{"gitId":"viki0526"},"content":"                    list.stream().map(Tag::getTagString).collect(Collectors.toList()));","lastModifiedDate":"2022-03-17"},{"lineNumber":215,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":216,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":217,"author":{"gitId":"manu2002g"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":218,"author":{"gitId":"manu2002g"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":219,"author":{"gitId":"manu2002g"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":220,"author":{"gitId":"manu2002g"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":221,"author":{"gitId":"manu2002g"},"content":"                return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":222,"author":{"gitId":"manu2002g"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":223,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":224,"author":{"gitId":"manu2002g"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"viki0526"},"content":"            if (!(other instanceof FindCommand.FindPersonDescriptor)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":226,"author":{"gitId":"manu2002g"},"content":"                return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":227,"author":{"gitId":"manu2002g"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":228,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":229,"author":{"gitId":"manu2002g"},"content":"            // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":230,"author":{"gitId":"manu2002g"},"content":"            FindPersonDescriptor e \u003d (FindPersonDescriptor) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":231,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":232,"author":{"gitId":"manu2002g"},"content":"            return getNames().equals(e.getNames())","lastModifiedDate":"2022-03-15"},{"lineNumber":233,"author":{"gitId":"manu2002g"},"content":"                    \u0026\u0026 getPhones().equals(e.getPhones())","lastModifiedDate":"2022-03-15"},{"lineNumber":234,"author":{"gitId":"manu2002g"},"content":"                    \u0026\u0026 getEmails().equals(e.getEmails())","lastModifiedDate":"2022-03-15"},{"lineNumber":235,"author":{"gitId":"manu2002g"},"content":"                    \u0026\u0026 getAddresses().equals(e.getAddresses());","lastModifiedDate":"2022-03-15"},{"lineNumber":236,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":237,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":239,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":240,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"viki0526":72,"manu2002g":131,"-":37}},{"path":"src/main/java/seedu/address/logic/commands/FindEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.event.Information;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"public class FindEventCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"viki0526"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all events whose details contain any of \"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"viki0526"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"viki0526"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"viki0526"},"content":"            + \"Example: \" + COMMAND_WORD + \" name/lunch appointment\";","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"viki0526"},"content":"    public static final String MESSAGE_NO_PARAMETERS \u003d \"At least one field must be provided.\";","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"viki0526"},"content":"    private final Predicate\u003cEvent\u003e predicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"viki0526"},"content":"    public FindEventCommand(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"viki0526"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"viki0526"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"viki0526"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"viki0526"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"viki0526"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"viki0526"},"content":"                String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW, model.getFilteredEventList().size()));","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"viki0526"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"viki0526"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"viki0526"},"content":"                || (other instanceof FindEventCommand // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"viki0526"},"content":"                \u0026\u0026 predicate.equals(((FindEventCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"viki0526"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"viki0526"},"content":"     * Stores the details to find an event with. Each non-empty field value will","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"viki0526"},"content":"     * be added to the predicate to filter the contact list","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"viki0526"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"viki0526"},"content":"    public static class FindEventDescriptor {","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"viki0526"},"content":"        private List\u003cEventName\u003e names;","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"viki0526"},"content":"        private List\u003cInformation\u003e informations;","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"viki0526"},"content":"        private List\u003cName\u003e participants;","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"viki0526"},"content":"        private List\u003cDateTime\u003e dateTimes;","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"viki0526"},"content":"        public FindEventDescriptor() {","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"viki0526"},"content":"        /**","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"viki0526"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"viki0526"},"content":"         */","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"viki0526"},"content":"        public FindEventDescriptor(FindEventCommand.FindEventDescriptor toCopy) {","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"viki0526"},"content":"            setNames(toCopy.names);","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"viki0526"},"content":"            setInformations(toCopy.informations);","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"viki0526"},"content":"            setParticipants(toCopy.participants);","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"viki0526"},"content":"            setDateTimes(toCopy.dateTimes);","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"viki0526"},"content":"        /**","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"viki0526"},"content":"         * Returns true if at least one field is searched for.","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"viki0526"},"content":"         */","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"viki0526"},"content":"        public boolean isAnyFieldPresent() {","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"viki0526"},"content":"            return CollectionUtil.isAnyNonNull(names, informations, participants, dateTimes);","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"viki0526"},"content":"        public void setNames(List\u003cEventName\u003e names) {","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"viki0526"},"content":"            this.names \u003d names;","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"viki0526"},"content":"        public Optional\u003cList\u003cEventName\u003e\u003e getNames() {","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"viki0526"},"content":"            return Optional.ofNullable(names);","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"viki0526"},"content":"        public Optional\u003cList\u003cString\u003e\u003e getStringNames() {","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"viki0526"},"content":"            return getNames().map(names -\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"viki0526"},"content":"                    names.stream().map(name -\u003e name.value).collect(Collectors.toList()));","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"viki0526"},"content":"        public void setInformations(List\u003cInformation\u003e informations) {","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"viki0526"},"content":"            this.informations \u003d informations;","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"viki0526"},"content":"        public Optional\u003cList\u003cInformation\u003e\u003e getInformations() {","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"viki0526"},"content":"            return Optional.ofNullable(informations);","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"viki0526"},"content":"        public Optional\u003cList\u003cString\u003e\u003e getStringInformations() {","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"viki0526"},"content":"            return getInformations().map(list -\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"viki0526"},"content":"                    list.stream().map(info -\u003e info.value).collect(Collectors.toList()));","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"viki0526"},"content":"        public void setParticipants(List\u003cName\u003e participants) {","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"viki0526"},"content":"            this.participants \u003d participants;","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"viki0526"},"content":"        public Optional\u003cList\u003cName\u003e\u003e getParticipants() {","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"viki0526"},"content":"            return Optional.ofNullable(participants);","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"viki0526"},"content":"        public Optional\u003cList\u003cString\u003e\u003e getStringParticipants() {","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"viki0526"},"content":"            return getParticipants().map(list -\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"viki0526"},"content":"                    list.stream().map(participants -\u003e participants.fullName).collect(Collectors.toList()));","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"viki0526"},"content":"        public void setDateTimes(List\u003cDateTime\u003e dateTimes) {","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"viki0526"},"content":"            this.dateTimes \u003d dateTimes;","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"viki0526"},"content":"        public Optional\u003cList\u003cDateTime\u003e\u003e getDateTimes() {","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"viki0526"},"content":"            return Optional.ofNullable(dateTimes);","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"viki0526"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"viki0526"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"viki0526"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"viki0526"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"viki0526"},"content":"                return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"viki0526"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"viki0526"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"viki0526"},"content":"            if (!(other instanceof FindEventCommand.FindEventDescriptor)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"viki0526"},"content":"                return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"viki0526"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"viki0526"},"content":"            // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"viki0526"},"content":"            FindEventCommand.FindEventDescriptor e \u003d (FindEventCommand.FindEventDescriptor) other;","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"viki0526"},"content":"            return getNames().equals(e.getNames())","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"viki0526"},"content":"                    \u0026\u0026 getNames().equals(e.getInformations())","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"viki0526"},"content":"                    \u0026\u0026 getInformations().equals(e.getParticipants());","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"viki0526":149}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_UPCOMING_EVENTS;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons and upcoming events\";","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_UPCOMING_EVENTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true, false);","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fredtwt":1,"viki0526":1,"-":22,"ongkimlai":3}},{"path":"src/main/java/seedu/address/logic/commands/RemoveTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"public class RemoveTagCommand extends Command {","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    public static final String COMMAND_WORD \u003d \"removetag\";","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes the specified tags from the person identified \"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"            + \"If there are non-existing tags, the command will not work.\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"            + PREFIX_EDUCATION + \"[EDUCATION]... \"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"            + PREFIX_CCA + \"[CCA]... \"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"            + PREFIX_INTERNSHIP + \"[INTERNSHIP]... \"","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"            + PREFIX_MODULE + \"[MODULE]...\"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"            + PREFIX_EDUCATION + \"Computer Science \"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"            + PREFIX_CCA + \"Tennis \"","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"            + PREFIX_INTERNSHIP + \"Grab \"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"            + PREFIX_MODULE + \"CS2040S\";","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    public static final String MESSAGE_NO_PARAMETERS \u003d \"At least 1 field must be used and not blank.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"    public static final String MESSAGE_NO_TAG_FOUND \u003d \"Deleting a non-existent tag cannot be done. \"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"            + \"All specified tags must be present in %1$s\";","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Name: %1$s, Education: %2$s, Internship: %3$s, Module: %4$s, \"","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"            + \"CCA: %5$s\";","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"    private final Index index;","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e educations;","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e internships;","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e modules;","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e ccas;","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"     * @param index of the person in the filtered person list to tag","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"     * @param education of the person to be updated to","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"     * @param internship of the person to be updated to","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"     * @param module of the person to be updated to","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"     * @param cca of the person to be updated to","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"    public RemoveTagCommand(Index index, List\u003cTag\u003e education, List\u003cTag\u003e internship, List\u003cTag\u003e module, List\u003cTag\u003e cca) {","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"        requireAllNonNull(index, education, internship, module, cca);","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"        this.educations \u003d education;","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"        this.internships \u003d internship;","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"        this.modules \u003d module;","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"        this.ccas \u003d cca;","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"    private boolean isAllEmpty() {","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"        return educations.isEmpty() \u0026\u0026 internships.isEmpty() \u0026\u0026 modules.isEmpty() \u0026\u0026 ccas.isEmpty();","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"     * the tag is added to or removed from","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"        return String.format(MESSAGE_ARGUMENTS,","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"                personToEdit.getName(),","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"                personToEdit.getEducations(),","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"                personToEdit.getInternships(),","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"ongkimlai"},"content":"                personToEdit.getModules(),","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"ongkimlai"},"content":"                personToEdit.getCcas());","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"ongkimlai"},"content":"    private boolean isAllTagsPresent(Set\u003cTag\u003e eduSet, Set\u003cTag\u003e internSet, Set\u003cTag\u003e moduleSet, Set\u003cTag\u003e ccaSet) {","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"        return eduSet.containsAll(educations) \u0026\u0026 internSet.containsAll(internships)","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"ongkimlai"},"content":"                \u0026\u0026 moduleSet.containsAll(modules) \u0026\u0026 moduleSet.containsAll(modules) \u0026\u0026 ccaSet.containsAll(ccas);","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"ongkimlai"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"ongkimlai"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"ongkimlai"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"ongkimlai"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"ongkimlai"},"content":"        if (isAllEmpty()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"ongkimlai"},"content":"            throw new CommandException(MESSAGE_NO_PARAMETERS);","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"ongkimlai"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"ongkimlai"},"content":"        Set\u003cTag\u003e currEducations \u003d new HashSet\u003c\u003e(personToEdit.getEducations());","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"ongkimlai"},"content":"        Set\u003cTag\u003e currInternships \u003d new HashSet\u003c\u003e(personToEdit.getInternships());","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"ongkimlai"},"content":"        Set\u003cTag\u003e currModules \u003d new HashSet\u003c\u003e(personToEdit.getModules());","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"ongkimlai"},"content":"        Set\u003cTag\u003e currCcas \u003d new HashSet\u003c\u003e(personToEdit.getCcas());","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"ongkimlai"},"content":"        if (!isAllTagsPresent(currEducations, currInternships, currModules, currCcas)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"ongkimlai"},"content":"            throw new CommandException(String.format(MESSAGE_NO_TAG_FOUND, personToEdit.getName()));","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"ongkimlai"},"content":"        currEducations.removeAll(educations);","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"ongkimlai"},"content":"        currInternships.removeAll(internships);","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"ongkimlai"},"content":"        currModules.removeAll(modules);","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"ongkimlai"},"content":"        currCcas.removeAll(ccas);","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"ongkimlai"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"ongkimlai"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(), personToEdit.getAddress(),","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"ongkimlai"},"content":"                new ArrayList\u003c\u003e(currEducations), new ArrayList\u003c\u003e(currInternships),","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"ongkimlai"},"content":"                new ArrayList\u003c\u003e(currModules), new ArrayList\u003c\u003e(currCcas));","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"ongkimlai"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"ongkimlai"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"ongkimlai"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"ongkimlai"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"ongkimlai"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"ongkimlai"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"ongkimlai"},"content":"            return true;","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"ongkimlai"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"ongkimlai"},"content":"        if (!(other instanceof RemoveTagCommand)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"ongkimlai"},"content":"            return false;","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"ongkimlai"},"content":"        // state check","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"ongkimlai"},"content":"        RemoveTagCommand e \u003d (RemoveTagCommand) other;","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"ongkimlai"},"content":"        return index.equals(e.index) \u0026\u0026 educations.equals(e.educations) \u0026\u0026 internships.equals(e.internships)","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"ongkimlai"},"content":"                \u0026\u0026 modules.equals(e.modules) \u0026\u0026 ccas.equals(e.ccas);","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"ongkimlai":144}},{"path":"src/main/java/seedu/address/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":" * Tags additional information of an existing person in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Tags additional information to the person identified \"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"            + \"If there are existing tags, the new tags will be appended to them.\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_EDUCATION + \"[EDUCATION]... \"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_CCA + \"[CCA]... \"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_INTERNSHIP + \"[INTERNSHIP]... \"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_MODULE + \"[MODULE]...\"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_EDUCATION + \"Computer Science \"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_CCA + \"Bouldering \"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_INTERNSHIP + \"GIC \"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"            + PREFIX_MODULE + \"CS2040S\";","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_ADD_TAG_SUCCESS \u003d \"Added tag to Person: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"    public static final String MESSAGE_NO_PARAMETERS \u003d \"At least 1 field must be used and not blank.\";","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Name: %1$s, Education: %2$s, Internship: %3$s, Module: %4$s, \"","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"            + \"CCA: %5$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"    private final Index index;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cTag\u003e educations;","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cTag\u003e internships;","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cTag\u003e modules;","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cTag\u003e ccas;","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"     * @param index of the person in the filtered person list to tag","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"     * @param education of the person to be updated to","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"     * @param internship of the person to be updated to","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"     * @param module of the person to be updated to","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"     * @param cca of the person to be updated to","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"    public TagCommand(Index index, List\u003cTag\u003e education, List\u003cTag\u003e internship, List\u003cTag\u003e module, List\u003cTag\u003e cca) {","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"        requireAllNonNull(index, education, internship, module, cca);","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"        this.educations \u003d education;","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"        this.internships \u003d internship;","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"        this.modules \u003d module;","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"        this.ccas \u003d cca;","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"fredtwt"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"fredtwt"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"fredtwt"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"fredtwt"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"        if (isAllEmpty()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"            throw new CommandException(MESSAGE_NO_PARAMETERS);","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"fredtwt"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"fredtwt"},"content":"        Set\u003cTag\u003e currEducations \u003d new HashSet\u003c\u003e(personToEdit.getEducations());","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"fredtwt"},"content":"        Set\u003cTag\u003e currInternships \u003d new HashSet\u003c\u003e(personToEdit.getInternships());","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"fredtwt"},"content":"        Set\u003cTag\u003e currModules \u003d new HashSet\u003c\u003e(personToEdit.getModules());","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"fredtwt"},"content":"        Set\u003cTag\u003e currCcas \u003d new HashSet\u003c\u003e(personToEdit.getCcas());","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"        currEducations.addAll(educations);","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"ongkimlai"},"content":"        currInternships.addAll(internships);","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"ongkimlai"},"content":"        currModules.addAll(modules);","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"ongkimlai"},"content":"        currCcas.addAll(ccas);","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"fredtwt"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"fredtwt"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(), personToEdit.getAddress(),","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"ongkimlai"},"content":"                new ArrayList\u003c\u003e(currEducations), new ArrayList\u003c\u003e(currInternships),","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"ongkimlai"},"content":"                new ArrayList\u003c\u003e(currModules), new ArrayList\u003c\u003e(currCcas));","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"fredtwt"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"fredtwt"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"ongkimlai"},"content":"    private boolean isAllEmpty() {","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"ongkimlai"},"content":"        return educations.isEmpty() \u0026\u0026 internships.isEmpty() \u0026\u0026 modules.isEmpty() \u0026\u0026 ccas.isEmpty();","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"fredtwt"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"fredtwt"},"content":"     * the tag is added to or removed from","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"fredtwt"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"ongkimlai"},"content":"        return String.format(MESSAGE_ARGUMENTS,","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"ongkimlai"},"content":"                    personToEdit.getName(),","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"ongkimlai"},"content":"                    personToEdit.getEducations(),","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"ongkimlai"},"content":"                    personToEdit.getInternships(),","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"ongkimlai"},"content":"                    personToEdit.getModules(),","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"ongkimlai"},"content":"                    personToEdit.getCcas());","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"fredtwt"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"fredtwt"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"fredtwt"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"fredtwt"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"fredtwt"},"content":"        if (!(other instanceof TagCommand)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"fredtwt"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"fredtwt"},"content":"        // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"fredtwt"},"content":"        TagCommand e \u003d (TagCommand) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"fredtwt"},"content":"        return index.equals(e.index) \u0026\u0026 educations.equals(e.educations) \u0026\u0026 internships.equals(e.internships)","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 modules.equals(e.modules) \u0026\u0026 ccas.equals(e.ccas);","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":115,"viki0526":1,"ongkimlai":21}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"        Person person \u003d new Person(name, phone, email, address);","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"fredtwt":2,"-":54}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.commands.CancelEventCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.commands.EventCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.logic.commands.RemoveTagCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"        case TagCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"            return new TagCommandParser().parse(arguments);","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"        case RemoveTagCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"            return new RemoveTagCommandParser().parse(arguments);","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"fredtwt"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"fredtwt"},"content":"            return new EventCommandParser().parse(arguments);","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"fredtwt"},"content":"        case CancelEventCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"fredtwt"},"content":"            return new CancelEventCommandParser().parse(arguments);","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fredtwt":12,"-":76,"ongkimlai":4}},{"path":"src/main/java/seedu/address/logic/parser/CancelEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.commands.CancelEventCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":" * Parses input arguments and creates a new CancelEventCommand object","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"public class CancelEventCommandParser implements Parser\u003cCancelEventCommand\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"     * Parses the give {@code String} of argument sin the context of the CancelEventCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"     * and returns a CancelEventCommand object for execution.","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"    public CancelEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"            Index[] indexes \u003d ParserUtil.parseIndexes(args);","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"            return new CancelEventCommand(indexes);","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CancelEventCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"fredtwt":28}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"    public static final Prefix PREFIX_INTERNSHIP \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    public static final Prefix PREFIX_MODULE \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"    public static final Prefix PREFIX_CCA \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    public static final Prefix PREFIX_EDUCATION \u003d new Prefix(\"edu/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"    public static final Prefix PREFIX_EVENT_NAME \u003d new Prefix(\"name/\");","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"    public static final Prefix PREFIX_INFO \u003d new Prefix(\"info/\");","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"viki0526"},"content":"    public static final Prefix PREFIX_PARTICIPANTS \u003d new Prefix(\"part/\");","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"viki0526"},"content":"    public static final Prefix PREFIX_DATETIME \u003d new Prefix(\"dt/\");","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"fredtwt":8,"viki0526":3,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"            Index[] indexes \u003d ParserUtil.parseIndexes(args);","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"            return new DeleteCommand(indexes);","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"fredtwt":2,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"manu2002g"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"manu2002g"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"manu2002g"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"manu2002g"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"manu2002g"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"manu2002g"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"manu2002g"},"content":"                        PREFIX_CCA, PREFIX_EDUCATION, PREFIX_MODULE, PREFIX_INTERNSHIP);","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"manu2002g"},"content":"        if (argMultimap.getValue(PREFIX_CCA).isPresent()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"manu2002g"},"content":"            List\u003cTag\u003e cca \u003d ParserUtil.parseTagsForEdit(argMultimap.getAllValues(PREFIX_CCA), Tag.CCA);","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"manu2002g"},"content":"            editPersonDescriptor.setCcas(cca);","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"manu2002g"},"content":"        if (argMultimap.getValue(PREFIX_EDUCATION).isPresent()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"manu2002g"},"content":"            List\u003cTag\u003e education \u003d ParserUtil.parseTagsForEdit(argMultimap.getAllValues(PREFIX_EDUCATION),","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"manu2002g"},"content":"                    Tag.EDUCATION);","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"manu2002g"},"content":"            editPersonDescriptor.setEducations(education);","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"manu2002g"},"content":"        if (argMultimap.getValue(PREFIX_MODULE).isPresent()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"manu2002g"},"content":"            List\u003cTag\u003e module \u003d ParserUtil.parseTagsForEdit(argMultimap.getAllValues(PREFIX_MODULE), Tag.MODULE);","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"manu2002g"},"content":"            editPersonDescriptor.setModules(module);","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"manu2002g"},"content":"        if (argMultimap.getValue(PREFIX_INTERNSHIP).isPresent()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"manu2002g"},"content":"            List\u003cTag\u003e internship \u003d ParserUtil.parseTagsForEdit(argMultimap.getAllValues(PREFIX_INTERNSHIP),","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"manu2002g"},"content":"                    Tag.INTERNSHIP);","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"manu2002g"},"content":"            editPersonDescriptor.setInternships(internship);","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"fredtwt"},"content":"    /*","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"fredtwt"},"content":"    /*","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"    */","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"fredtwt":3,"manu2002g":25,"-":73}},{"path":"src/main/java/seedu/address/logic/parser/EventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFO;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.commands.EventCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Information;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":" * Parses input arguments and creates a new {@Code EventCommand} object","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"public class EventCommandParser implements Parser\u003cEventCommand\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"     * Parses the given {@code String} of arguments in the context of the EventCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"     * and returns an EventCommand object for execution.","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"    public EventCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_EVENT_NAME, PREFIX_INFO,","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"                PREFIX_TIME, PREFIX_DATE);","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EVENT_NAME, PREFIX_INFO, PREFIX_TIME, PREFIX_DATE)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EventCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"        Index[] indexes;","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"            indexes \u003d ParserUtil.parseIndexes(argMultimap.getPreamble());","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EventCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"        EventName eventName \u003d ParserUtil.parseEventName(argMultimap.getValue(PREFIX_EVENT_NAME).get());","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"        Information info \u003d ParserUtil.parseInfo(argMultimap.getValue(PREFIX_INFO).get());","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"        DateTime dateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATE).get(),","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"                argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"        return new EventCommand(indexes, eventName, info, dateTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"fredtwt":62}},{"path":"src/main/java/seedu/address/logic/parser/FindAndPredicateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"manu2002g"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"manu2002g"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"manu2002g"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"manu2002g"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"manu2002g"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicateAnd;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.person.CcaContainsKeywordsPredicateAnd;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.person.EducationContainsKeywordsPredicateAnd;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicateAnd;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.person.InternshipContainsKeywordsPredicateAnd;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.person.ModuleContainsKeywordsPredicateAnd;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicateAnd;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicateAnd;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"manu2002g"},"content":"public class FindAndPredicateParser {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"manu2002g"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"manu2002g"},"content":"     * Parses a FindPersonDescriptor into a single predicate that is true if any of the predicates in each field","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"viki0526"},"content":"     * of the descriptor are satisfied. A field is satisfied if any item from the list appears. The combined predicate","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"viki0526"},"content":"     * is satisfied if all the fields are satisfied.","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"manu2002g"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"viki0526"},"content":"     * @param personDescriptor an object describing the predicate list for each field.","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"manu2002g"},"content":"     * @return a FindCommand to be executed.","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"manu2002g"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"manu2002g"},"content":"    public FindCommand parse(FindCommand.FindPersonDescriptor personDescriptor) {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"manu2002g"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"manu2002g"},"content":"        personDescriptor.getStringNames().ifPresent(names -\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"manu2002g"},"content":"                predicateList.add(new NameContainsKeywordsPredicateAnd(names)));","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"manu2002g"},"content":"        personDescriptor.getStringPhones().ifPresent(phones -\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"manu2002g"},"content":"                predicateList.add(new PhoneContainsKeywordsPredicateAnd(phones)));","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"manu2002g"},"content":"        personDescriptor.getStringEmails().ifPresent(emails -\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"manu2002g"},"content":"                predicateList.add(new EmailContainsKeywordsPredicateAnd(emails)));","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"manu2002g"},"content":"        personDescriptor.getStringAddresses().ifPresent(list -\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"manu2002g"},"content":"                predicateList.add(new AddressContainsKeywordsPredicateAnd(list)));","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"viki0526"},"content":"        personDescriptor.getStringEducations().ifPresent(list -\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"viki0526"},"content":"                predicateList.add(new EducationContainsKeywordsPredicateAnd(list)));","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"viki0526"},"content":"        personDescriptor.getStringInternships().ifPresent(list -\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"viki0526"},"content":"                predicateList.add(new InternshipContainsKeywordsPredicateAnd(list)));","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"viki0526"},"content":"        personDescriptor.getStringModules().ifPresent(list -\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"viki0526"},"content":"                predicateList.add(new ModuleContainsKeywordsPredicateAnd(list)));","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"viki0526"},"content":"        personDescriptor.getStringCcas().ifPresent(list -\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"viki0526"},"content":"                predicateList.add(new CcaContainsKeywordsPredicateAnd(list)));","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"manu2002g"},"content":"        Predicate\u003cPerson\u003e predicate \u003d predicateList.stream().reduce(x-\u003etrue, Predicate::and);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"manu2002g"},"content":"        return new FindCommand(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"manu2002g"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"viki0526":17,"manu2002g":36}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"manu2002g"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"manu2002g"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"manu2002g"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFO;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARTICIPANTS;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"manu2002g"},"content":"import seedu.address.logic.commands.FindCommand.FindPersonDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"viki0526"},"content":"import seedu.address.logic.commands.FindEventCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"viki0526"},"content":"import seedu.address.logic.commands.FindEventCommand.FindEventDescriptor;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"viki0526"},"content":"public class FindCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"viki0526"},"content":"    public static final String DATE_TIME_FORMAT \u003d \"Please provide the date followed by time\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"viki0526"},"content":"            + \"Eg: find -e dt/2022-08-08 03:00\";","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"manu2002g"},"content":"    public static final String EMPTY_EMAIL \u003d \"Please provide a valid string for email.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":43,"author":{"gitId":"manu2002g"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"manu2002g"},"content":"     * @return a FindCommand object that will execute the search.","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"manu2002g"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"viki0526"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"manu2002g"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"manu2002g"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"viki0526"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"viki0526"},"content":"                        PREFIX_CCA, PREFIX_EDUCATION, PREFIX_MODULE, PREFIX_INTERNSHIP, PREFIX_EVENT_NAME,","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"viki0526"},"content":"                        PREFIX_INFO, PREFIX_PARTICIPANTS, PREFIX_DATETIME);","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"manu2002g"},"content":"        boolean isAndSearch \u003d false;","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"viki0526"},"content":"        boolean isEventSearch \u003d false;","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"manu2002g"},"content":"        if (argMultimap.getPreamble().equals(\"-s\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"manu2002g"},"content":"            isAndSearch \u003d true;","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"viki0526"},"content":"        } else if (argMultimap.getPreamble().equals(\"-e\")) {","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"viki0526"},"content":"            isEventSearch \u003d true;","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"manu2002g"},"content":"        } else if (!argMultimap.getPreamble().equals(\"\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"manu2002g"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"viki0526"},"content":"        if (!isEventSearch) {","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"manu2002g"},"content":"            FindPersonDescriptor personDescriptor \u003d new FindCommand.FindPersonDescriptor();","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"manu2002g"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"manu2002g"},"content":"                personDescriptor.setNames(ParserUtil.parseNames(argMultimap.getAllValues(PREFIX_NAME)));","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"manu2002g"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"manu2002g"},"content":"            if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"manu2002g"},"content":"                personDescriptor.setPhones(ParserUtil.parsePhones(argMultimap.getAllValues(PREFIX_PHONE)));","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"manu2002g"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"manu2002g"},"content":"            if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"manu2002g"},"content":"                List\u003cString\u003e emails \u003d argMultimap.getAllValues(PREFIX_EMAIL);","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"manu2002g"},"content":"                if (emails.contains(\"\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"manu2002g"},"content":"                    throw new ParseException(EMPTY_EMAIL);","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"manu2002g"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"manu2002g"},"content":"                personDescriptor.setEmails(emails);","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"manu2002g"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"manu2002g"},"content":"            if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"manu2002g"},"content":"                personDescriptor.setAddresses(ParserUtil.parseAddresses(argMultimap.getAllValues(PREFIX_ADDRESS)));","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"manu2002g"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"viki0526"},"content":"            if (argMultimap.getValue(PREFIX_CCA).isPresent()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"ongkimlai"},"content":"                List\u003cTag\u003e cca \u003d ParserUtil.parseTagsForFind(argMultimap.getAllValues(PREFIX_CCA), Tag.CCA);","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"viki0526"},"content":"                personDescriptor.setCcas(cca);","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"viki0526"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"viki0526"},"content":"            if (argMultimap.getValue(PREFIX_EDUCATION).isPresent()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"ongkimlai"},"content":"                List\u003cTag\u003e education \u003d ParserUtil.parseTagsForFind(argMultimap.getAllValues(PREFIX_EDUCATION),","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"viki0526"},"content":"                        Tag.EDUCATION);","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"viki0526"},"content":"                personDescriptor.setEducations(education);","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"viki0526"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"viki0526"},"content":"            if (argMultimap.getValue(PREFIX_MODULE).isPresent()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"ongkimlai"},"content":"                List\u003cTag\u003e module \u003d ParserUtil.parseTagsForFind(argMultimap.getAllValues(PREFIX_MODULE), Tag.MODULE);","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"viki0526"},"content":"                personDescriptor.setModules(module);","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"viki0526"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"viki0526"},"content":"            if (argMultimap.getValue(PREFIX_INTERNSHIP).isPresent()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"ongkimlai"},"content":"                List\u003cTag\u003e internship \u003d ParserUtil.parseTagsForFind(argMultimap.getAllValues(PREFIX_INTERNSHIP),","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"viki0526"},"content":"                        Tag.INTERNSHIP);","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"viki0526"},"content":"                personDescriptor.setInternships(internship);","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"viki0526"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"manu2002g"},"content":"            if (!personDescriptor.isAnyFieldPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"manu2002g"},"content":"                throw new ParseException(FindCommand.MESSAGE_NO_PARAMETERS);","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"manu2002g"},"content":"            if (isAndSearch) {","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"manu2002g"},"content":"                return new FindAndPredicateParser().parse(personDescriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"manu2002g"},"content":"            } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"manu2002g"},"content":"                return new FindOrPredicateParser().parse(personDescriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"manu2002g"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"viki0526"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"viki0526"},"content":"            FindEventDescriptor eventDescriptor \u003d new FindEventCommand.FindEventDescriptor();","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"viki0526"},"content":"            if (argMultimap.getValue(PREFIX_EVENT_NAME).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"viki0526"},"content":"                eventDescriptor.setNames(ParserUtil.parseEventNames(argMultimap.getAllValues(PREFIX_EVENT_NAME)));","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"viki0526"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"viki0526"},"content":"            if (argMultimap.getValue(PREFIX_INFO).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"viki0526"},"content":"                eventDescriptor.setInformations(ParserUtil.parseInfos(argMultimap.getAllValues(PREFIX_INFO)));","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"viki0526"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"viki0526"},"content":"            if (argMultimap.getValue(PREFIX_PARTICIPANTS).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"viki0526"},"content":"                eventDescriptor.setParticipants(ParserUtil.parseNames(argMultimap.getAllValues(PREFIX_PARTICIPANTS)));","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"viki0526"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"viki0526"},"content":"            if (argMultimap.getValue(PREFIX_DATETIME).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"viki0526"},"content":"                eventDescriptor.setDateTimes(ParserUtil.parseDateTimes(argMultimap.getAllValues(PREFIX_DATETIME)));","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"viki0526"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"viki0526"},"content":"            if (!eventDescriptor.isAnyFieldPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"viki0526"},"content":"                throw new ParseException(FindCommand.MESSAGE_NO_PARAMETERS);","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"viki0526"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"viki0526"},"content":"            return new FindEventPredicateParser().parse(eventDescriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"viki0526":63,"manu2002g":42,"-":24,"ongkimlai":4}},{"path":"src/main/java/seedu/address/logic/parser/FindEventPredicateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":"import seedu.address.logic.commands.FindEventCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.event.DateTimePredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.event.EventInfoContainsKeywordsPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.event.EventParticipantsContainsKeywordsPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"public class FindEventPredicateParser {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"     * Parses a FindEventDescriptor into a single predicate that is true if any of the predicates in each field","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"     * of the descriptor are satisfied.","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"     * @param eventDescriptor an object describing the predicate list for each field.","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"     * @return a FindCommand to be executed.","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"viki0526"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"viki0526"},"content":"    public FindEventCommand parse(FindEventCommand.FindEventDescriptor eventDescriptor) {","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"viki0526"},"content":"        List\u003cPredicate\u003cEvent\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"viki0526"},"content":"        eventDescriptor.getStringNames().ifPresent(names -\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"viki0526"},"content":"                predicateList.add(new EventNameContainsKeywordsPredicate(names)));","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"viki0526"},"content":"        eventDescriptor.getStringInformations().ifPresent(infos -\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"viki0526"},"content":"                predicateList.add(new EventInfoContainsKeywordsPredicate(infos)));","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"viki0526"},"content":"        eventDescriptor.getStringParticipants().ifPresent(parts -\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"viki0526"},"content":"                predicateList.add(new EventParticipantsContainsKeywordsPredicate(parts)));","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"viki0526"},"content":"        eventDescriptor.getDateTimes().ifPresent(datetime -\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"viki0526"},"content":"                predicateList.add(new DateTimePredicate(datetime)));","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"viki0526"},"content":"        Predicate\u003cEvent\u003e predicate \u003d predicateList.stream().reduce(x-\u003efalse, Predicate::or);","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"viki0526"},"content":"        return new FindEventCommand(predicate);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"viki0526":38}},{"path":"src/main/java/seedu/address/logic/parser/FindOrPredicateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"manu2002g"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"manu2002g"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"manu2002g"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"manu2002g"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"manu2002g"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"manu2002g"},"content":"import seedu.address.logic.commands.FindCommand.FindPersonDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicateOr;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.person.CcaContainsKeywordsPredicateOr;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.person.EducationContainsKeywordsPredicateOr;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicateOr;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.person.InternshipContainsKeywordsPredicateOr;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"import seedu.address.model.person.ModuleContainsKeywordsPredicateOr;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicateOr;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicateOr;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"manu2002g"},"content":"public class FindOrPredicateParser {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"manu2002g"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"manu2002g"},"content":"     * Parses a FindPersonDescriptor into a single predicate that is true if any of the predicates in each field","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"viki0526"},"content":"     * of the descriptor are satisfied. A field is satisfied if any item from the list appears. The combined predicate","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"viki0526"},"content":"     * is satisfied if any of the fields are satisfied.","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"manu2002g"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"manu2002g"},"content":"     * @param personDescriptor an object describing the predicte list for each field.","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"manu2002g"},"content":"     * @return a FindCommand to be executed.","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"manu2002g"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"manu2002g"},"content":"    public FindCommand parse(FindPersonDescriptor personDescriptor) {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"manu2002g"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"manu2002g"},"content":"        personDescriptor.getStringNames().ifPresent(names -\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"manu2002g"},"content":"                predicateList.add(new NameContainsKeywordsPredicateOr(names)));","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"manu2002g"},"content":"        personDescriptor.getStringPhones().ifPresent(phones -\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"manu2002g"},"content":"                predicateList.add(new PhoneContainsKeywordsPredicateOr(phones)));","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"manu2002g"},"content":"        personDescriptor.getStringEmails().ifPresent(emails -\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"manu2002g"},"content":"                predicateList.add(new EmailContainsKeywordsPredicateOr(emails)));","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"manu2002g"},"content":"        personDescriptor.getStringAddresses().ifPresent(list -\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"manu2002g"},"content":"                predicateList.add(new AddressContainsKeywordsPredicateOr(list)));","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"viki0526"},"content":"        personDescriptor.getStringEducations().ifPresent(list -\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"viki0526"},"content":"                predicateList.add(new EducationContainsKeywordsPredicateOr(list)));","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"viki0526"},"content":"        personDescriptor.getStringInternships().ifPresent(list -\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"viki0526"},"content":"                predicateList.add(new InternshipContainsKeywordsPredicateOr(list)));","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"viki0526"},"content":"        personDescriptor.getStringModules().ifPresent(list -\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"viki0526"},"content":"                predicateList.add(new ModuleContainsKeywordsPredicateOr(list)));","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"viki0526"},"content":"        personDescriptor.getStringCcas().ifPresent(list -\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"viki0526"},"content":"                predicateList.add(new CcaContainsKeywordsPredicateOr(list)));","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"manu2002g"},"content":"        Predicate\u003cPerson\u003e predicate \u003d predicateList.stream().reduce(x-\u003efalse, Predicate::or);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"manu2002g"},"content":"        return new FindCommand(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"manu2002g"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"viki0526":16,"manu2002g":39}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Information;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Cca;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Internship;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"    public static final String MESSAGE_INVALID_INDEX_MULTIPLE \u003d \"All indexes must be unique\"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"                + \" and a non-zero unsigned integer.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"    public static final String INVALID_TAGTYPE \u003d \"The tag type is invalid!\";","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"     * trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"     * @throws ParseException if the specified any of the indexes are invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"    public static Index[] parseIndexes(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"        boolean isMultipleIndex \u003d StringUtil.containsMultipleIndex(trimmedIndex);","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"        boolean isAllValidIntegers \u003d isMultipleIndex \u0026\u0026 StringUtil.isAllNonZeroUnsignedInteger(trimmedIndex);","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"        boolean isValidMultipleIndex \u003d isAllValidIntegers \u0026\u0026 StringUtil.isAllUniqueIntegers(trimmedIndex);","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"        if (!isMultipleIndex \u0026\u0026 !StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"        } else if (isMultipleIndex \u0026\u0026 !isValidMultipleIndex) {","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX_MULTIPLE);","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"        return getIndexes(trimmedIndex);","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"     * Transforms a string of valid one-based indexes into an array of {@code Index}.","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"    private static Index[] getIndexes(String trimmedIndex) {","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"        String[] oneBasedArr \u003d trimmedIndex.split(\" \");","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"        Index[] indexArr \u003d new Index[oneBasedArr.length];","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"        for (int i \u003d 0; i \u003c oneBasedArr.length; i++) {","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"            indexArr[i] \u003d Index.fromOneBased(Integer.parseInt(oneBasedArr[i]));","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"        return indexArr;","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"manu2002g"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"manu2002g"},"content":"     * Parses a  {@code List\u003cString\u003e } into a {@code List\u003cName\u003e}.","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"manu2002g"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"manu2002g"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"manu2002g"},"content":"     * @throws ParseException through parseName.","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"manu2002g"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"manu2002g"},"content":"    public static List\u003cName\u003e parseNames(List\u003cString\u003e list) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"manu2002g"},"content":"        requireNonNull(list);","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"manu2002g"},"content":"        final Set\u003cName\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"manu2002g"},"content":"        for (String value : list) {","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"manu2002g"},"content":"            for (String s: value.split(\" \")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"manu2002g"},"content":"                set.add(parseName(s.trim()));","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"manu2002g"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"manu2002g"},"content":"        return new ArrayList\u003c\u003e(set);","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"manu2002g"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"manu2002g"},"content":"     * Parses a {@code List\u003cString\u003e } into a {@code List\u003cPhone\u003e}.","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"manu2002g"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"manu2002g"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"manu2002g"},"content":"     * @throws ParseException through parsePhone.","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"manu2002g"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"manu2002g"},"content":"    public static List\u003cPhone\u003e parsePhones(List\u003cString\u003e list) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"manu2002g"},"content":"        requireNonNull(list);","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"manu2002g"},"content":"        final Set\u003cPhone\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"manu2002g"},"content":"        for (String value : list) {","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"manu2002g"},"content":"            for (String s: value.split(\" \")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"manu2002g"},"content":"                set.add(parsePhone(s.trim()));","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"manu2002g"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"manu2002g"},"content":"        return new ArrayList\u003c\u003e(set);","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"manu2002g"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"manu2002g"},"content":"     * Parses a {@code List\u003cString\u003e } into a {@code List\u003cAddress\u003e}.","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"manu2002g"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"manu2002g"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"manu2002g"},"content":"     * @throws ParseException through parseAddress.","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"manu2002g"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"manu2002g"},"content":"    public static List\u003cAddress\u003e parseAddresses(List\u003cString\u003e list) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"manu2002g"},"content":"        requireNonNull(list);","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"manu2002g"},"content":"        final Set\u003cAddress\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"manu2002g"},"content":"        for (String value : list) {","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"manu2002g"},"content":"            for (String s: value.split(\" \")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"manu2002g"},"content":"                set.add(parseAddress(s.trim()));","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"manu2002g"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"manu2002g"},"content":"        return new ArrayList\u003c\u003e(set);","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":195,"author":{"gitId":"manu2002g"},"content":"     * Parses a {@code List\u003cString\u003e } into a {@code List\u003cEmail\u003e}.","lastModifiedDate":"2022-03-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"manu2002g"},"content":"    public static List\u003cEmail\u003e parseEmails(List\u003cString\u003e list) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"manu2002g"},"content":"        requireNonNull(list);","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"manu2002g"},"content":"        final Set\u003cEmail\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"manu2002g"},"content":"        for (String value : list) {","lastModifiedDate":"2022-03-15"},{"lineNumber":203,"author":{"gitId":"manu2002g"},"content":"            for (String s: value.split(\" \")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"manu2002g"},"content":"                set.add(parseEmail(s.trim()));","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"manu2002g"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":206,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":207,"author":{"gitId":"manu2002g"},"content":"        return new ArrayList\u003c\u003e(set);","lastModifiedDate":"2022-03-15"},{"lineNumber":208,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":209,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":210,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":211,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"fredtwt"},"content":"    * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"fredtwt"},"content":"    * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"fredtwt"},"content":"    *","lastModifiedDate":"2022-03-10"},{"lineNumber":215,"author":{"gitId":"fredtwt"},"content":"    * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2022-03-10"},{"lineNumber":216,"author":{"gitId":"fredtwt"},"content":"    */","lastModifiedDate":"2022-03-10"},{"lineNumber":217,"author":{"gitId":"fredtwt"},"content":"    public static Tag parseTag(String tag, String type) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-03-10"},{"lineNumber":219,"author":{"gitId":"ongkimlai"},"content":"        String trimmedTag \u003d tag.trim().toLowerCase();","lastModifiedDate":"2022-03-11"},{"lineNumber":220,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":221,"author":{"gitId":"fredtwt"},"content":"        switch (type) {","lastModifiedDate":"2022-03-10"},{"lineNumber":222,"author":{"gitId":"fredtwt"},"content":"        case Tag.EDUCATION:","lastModifiedDate":"2022-03-10"},{"lineNumber":223,"author":{"gitId":"fredtwt"},"content":"            if (!Education.isValidTagName(trimmedTag)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":224,"author":{"gitId":"fredtwt"},"content":"                throw new ParseException(Education.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":225,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":226,"author":{"gitId":"fredtwt"},"content":"            return new Education(trimmedTag);","lastModifiedDate":"2022-03-10"},{"lineNumber":227,"author":{"gitId":"fredtwt"},"content":"        case Tag.INTERNSHIP:","lastModifiedDate":"2022-03-10"},{"lineNumber":228,"author":{"gitId":"fredtwt"},"content":"            if (!Internship.isValidTagName(trimmedTag)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":229,"author":{"gitId":"fredtwt"},"content":"                throw new ParseException(Internship.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":230,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":231,"author":{"gitId":"fredtwt"},"content":"            return new Internship(trimmedTag);","lastModifiedDate":"2022-03-10"},{"lineNumber":232,"author":{"gitId":"fredtwt"},"content":"        case Tag.MODULE:","lastModifiedDate":"2022-03-10"},{"lineNumber":233,"author":{"gitId":"fredtwt"},"content":"            if (!Module.isValidTagName(trimmedTag)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":234,"author":{"gitId":"fredtwt"},"content":"                throw new ParseException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":235,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":236,"author":{"gitId":"fredtwt"},"content":"            return new Module(trimmedTag);","lastModifiedDate":"2022-03-10"},{"lineNumber":237,"author":{"gitId":"fredtwt"},"content":"        case Tag.CCA:","lastModifiedDate":"2022-03-10"},{"lineNumber":238,"author":{"gitId":"fredtwt"},"content":"            if (!Cca.isValidTagName(trimmedTag)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":239,"author":{"gitId":"fredtwt"},"content":"                throw new ParseException(Cca.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":240,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":241,"author":{"gitId":"fredtwt"},"content":"            return new Cca(trimmedTag);","lastModifiedDate":"2022-03-10"},{"lineNumber":242,"author":{"gitId":"fredtwt"},"content":"        default:","lastModifiedDate":"2022-03-10"},{"lineNumber":243,"author":{"gitId":"fredtwt"},"content":"            throw new ParseException(INVALID_TAGTYPE);","lastModifiedDate":"2022-03-10"},{"lineNumber":244,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":245,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":246,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":247,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":248,"author":{"gitId":"viki0526"},"content":"    * Parses {@code Collection\u003cString\u003e tags} into a {@code List\u003cTag\u003e}.","lastModifiedDate":"2022-03-17"},{"lineNumber":249,"author":{"gitId":"fredtwt"},"content":"    */","lastModifiedDate":"2022-03-10"},{"lineNumber":250,"author":{"gitId":"fredtwt"},"content":"    public static List\u003cTag\u003e parseTags(Collection\u003cString\u003e tags, String type) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":251,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(tags);","lastModifiedDate":"2022-03-10"},{"lineNumber":252,"author":{"gitId":"fredtwt"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":253,"author":{"gitId":"fredtwt"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2022-03-10"},{"lineNumber":254,"author":{"gitId":"fredtwt"},"content":"            tagSet.add(parseTag(tagName, type));","lastModifiedDate":"2022-03-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":256,"author":{"gitId":"fredtwt"},"content":"        return new ArrayList\u003c\u003e(tagSet);","lastModifiedDate":"2022-03-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2022-03-12"},{"lineNumber":261,"author":{"gitId":"manu2002g"},"content":"     * Returns an empty ArrayList if the tags list is [\"\"], this is the case that the tag list is to be cleared.","lastModifiedDate":"2022-03-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":263,"author":{"gitId":"manu2002g"},"content":"    public static List\u003cTag\u003e parseTagsForEdit(Collection\u003cString\u003e tags, String type) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2022-03-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-12"},{"lineNumber":266,"author":{"gitId":"manu2002g"},"content":"        // This is the case that the tag list is meant to be cleared","lastModifiedDate":"2022-03-12"},{"lineNumber":267,"author":{"gitId":"manu2002g"},"content":"        if (tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":268,"author":{"gitId":"manu2002g"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-12"},{"lineNumber":269,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2022-03-12"},{"lineNumber":271,"author":{"gitId":"manu2002g"},"content":"            tagSet.add(parseTag(tagName, type));","lastModifiedDate":"2022-03-12"},{"lineNumber":272,"author":{"gitId":"manu2002g"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":273,"author":{"gitId":"manu2002g"},"content":"        return new ArrayList\u003c\u003e(tagSet);","lastModifiedDate":"2022-03-12"},{"lineNumber":274,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":275,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":276,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":277,"author":{"gitId":"ongkimlai"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2022-03-18"},{"lineNumber":278,"author":{"gitId":"ongkimlai"},"content":"     * Returns a list with all tagNames split using whitespace and trimmed.","lastModifiedDate":"2022-03-18"},{"lineNumber":279,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":280,"author":{"gitId":"ongkimlai"},"content":"    public static List\u003cTag\u003e parseTagsForFind(Collection\u003cString\u003e tags, String type) throws ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":281,"author":{"gitId":"ongkimlai"},"content":"        requireNonNull(tags);","lastModifiedDate":"2022-03-18"},{"lineNumber":282,"author":{"gitId":"ongkimlai"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-18"},{"lineNumber":283,"author":{"gitId":"ongkimlai"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2022-03-18"},{"lineNumber":284,"author":{"gitId":"ongkimlai"},"content":"            for (String s : tagName.split(\" \")) {","lastModifiedDate":"2022-03-18"},{"lineNumber":285,"author":{"gitId":"ongkimlai"},"content":"                tagSet.add(parseTag(s.trim(), type));","lastModifiedDate":"2022-03-18"},{"lineNumber":286,"author":{"gitId":"ongkimlai"},"content":"            }","lastModifiedDate":"2022-03-18"},{"lineNumber":287,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":288,"author":{"gitId":"ongkimlai"},"content":"        return new ArrayList\u003c\u003e(tagSet);","lastModifiedDate":"2022-03-18"},{"lineNumber":289,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":290,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":291,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":292,"author":{"gitId":"fredtwt"},"content":"     * Parses {@code String name} into an {@code EventName}.","lastModifiedDate":"2022-03-23"},{"lineNumber":293,"author":{"gitId":"fredtwt"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-23"},{"lineNumber":294,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":295,"author":{"gitId":"fredtwt"},"content":"    public static EventName parseEventName(String name) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":296,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-22"},{"lineNumber":297,"author":{"gitId":"fredtwt"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2022-03-22"},{"lineNumber":298,"author":{"gitId":"fredtwt"},"content":"        if (!EventName.isValidEventName(trimmedName)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":299,"author":{"gitId":"fredtwt"},"content":"            throw new ParseException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":300,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":301,"author":{"gitId":"fredtwt"},"content":"        return new EventName(trimmedName);","lastModifiedDate":"2022-03-22"},{"lineNumber":302,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":303,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":304,"author":{"gitId":"viki0526"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":305,"author":{"gitId":"viki0526"},"content":"     * Parses a {@code List\u003cString\u003e } into a {@code List\u003cEventName\u003e}.","lastModifiedDate":"2022-03-25"},{"lineNumber":306,"author":{"gitId":"viki0526"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-25"},{"lineNumber":307,"author":{"gitId":"viki0526"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":308,"author":{"gitId":"viki0526"},"content":"     * @throws ParseException if any single list item has more than one word.","lastModifiedDate":"2022-03-25"},{"lineNumber":309,"author":{"gitId":"viki0526"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":310,"author":{"gitId":"viki0526"},"content":"    public static List\u003cEventName\u003e parseEventNames(List\u003cString\u003e list) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":311,"author":{"gitId":"viki0526"},"content":"        requireNonNull(list);","lastModifiedDate":"2022-03-25"},{"lineNumber":312,"author":{"gitId":"viki0526"},"content":"        final Set\u003cEventName\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":313,"author":{"gitId":"viki0526"},"content":"        for (String value : list) {","lastModifiedDate":"2022-03-25"},{"lineNumber":314,"author":{"gitId":"viki0526"},"content":"            for (String s : value.split(\" \")) {","lastModifiedDate":"2022-03-25"},{"lineNumber":315,"author":{"gitId":"viki0526"},"content":"                set.add(parseEventName(s.trim()));","lastModifiedDate":"2022-03-25"},{"lineNumber":316,"author":{"gitId":"viki0526"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":317,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":318,"author":{"gitId":"viki0526"},"content":"        return new ArrayList\u003c\u003e(set);","lastModifiedDate":"2022-03-25"},{"lineNumber":319,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":320,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":321,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":322,"author":{"gitId":"fredtwt"},"content":"     * Parses {@code String info} into an {@code Information}.","lastModifiedDate":"2022-03-23"},{"lineNumber":323,"author":{"gitId":"fredtwt"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-23"},{"lineNumber":324,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":325,"author":{"gitId":"fredtwt"},"content":"    public static Information parseInfo(String info) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":326,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(info);","lastModifiedDate":"2022-03-22"},{"lineNumber":327,"author":{"gitId":"fredtwt"},"content":"        String trimmedInfo \u003d info.trim();","lastModifiedDate":"2022-03-22"},{"lineNumber":328,"author":{"gitId":"fredtwt"},"content":"        if (!Information.isValidInformation(trimmedInfo)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":329,"author":{"gitId":"fredtwt"},"content":"            throw new ParseException(Information.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":330,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":331,"author":{"gitId":"fredtwt"},"content":"        return new Information(trimmedInfo);","lastModifiedDate":"2022-03-22"},{"lineNumber":332,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":333,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":334,"author":{"gitId":"viki0526"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":335,"author":{"gitId":"viki0526"},"content":"     * Parses a {@code List\u003cString\u003e } into a {@code List\u003cInformation\u003e}.","lastModifiedDate":"2022-03-25"},{"lineNumber":336,"author":{"gitId":"viki0526"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-25"},{"lineNumber":337,"author":{"gitId":"viki0526"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":338,"author":{"gitId":"viki0526"},"content":"     * @throws ParseException if any single list item has more than one word.","lastModifiedDate":"2022-03-25"},{"lineNumber":339,"author":{"gitId":"viki0526"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":340,"author":{"gitId":"viki0526"},"content":"    public static List\u003cInformation\u003e parseInfos(List\u003cString\u003e list) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":341,"author":{"gitId":"viki0526"},"content":"        requireNonNull(list);","lastModifiedDate":"2022-03-25"},{"lineNumber":342,"author":{"gitId":"viki0526"},"content":"        final Set\u003cInformation\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":343,"author":{"gitId":"viki0526"},"content":"        for (String value : list) {","lastModifiedDate":"2022-03-25"},{"lineNumber":344,"author":{"gitId":"viki0526"},"content":"            for (String s : value.split(\" \")) {","lastModifiedDate":"2022-03-25"},{"lineNumber":345,"author":{"gitId":"viki0526"},"content":"                set.add(parseInfo(s.trim()));","lastModifiedDate":"2022-03-25"},{"lineNumber":346,"author":{"gitId":"viki0526"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":347,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":348,"author":{"gitId":"viki0526"},"content":"        return new ArrayList\u003c\u003e(set);","lastModifiedDate":"2022-03-25"},{"lineNumber":349,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":350,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":351,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":352,"author":{"gitId":"fredtwt"},"content":"     * Parses {@code String date} and {@code String time} into a {@code DateTime}.","lastModifiedDate":"2022-03-23"},{"lineNumber":353,"author":{"gitId":"fredtwt"},"content":"     * Returns a DateTime object that contains formatted date and time of the event.","lastModifiedDate":"2022-03-23"},{"lineNumber":354,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":355,"author":{"gitId":"fredtwt"},"content":"    public static DateTime parseDateTime(String date, String time) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":356,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-22"},{"lineNumber":357,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(time);","lastModifiedDate":"2022-03-22"},{"lineNumber":358,"author":{"gitId":"fredtwt"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-03-22"},{"lineNumber":359,"author":{"gitId":"fredtwt"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2022-03-22"},{"lineNumber":360,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":361,"author":{"gitId":"fredtwt"},"content":"        if (!DateTime.isValidTime(trimmedTime)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":362,"author":{"gitId":"fredtwt"},"content":"            throw new ParseException(DateTime.TIME_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":363,"author":{"gitId":"fredtwt"},"content":"        } else if (!DateTime.isValidDate(trimmedDate)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":364,"author":{"gitId":"fredtwt"},"content":"            throw new ParseException(DateTime.DATE_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":365,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":366,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":367,"author":{"gitId":"fredtwt"},"content":"        String[] tempDate \u003d trimmedDate.split(\"-\");","lastModifiedDate":"2022-03-22"},{"lineNumber":368,"author":{"gitId":"fredtwt"},"content":"        String[] tempTime \u003d trimmedTime.split(\":\");","lastModifiedDate":"2022-03-22"},{"lineNumber":369,"author":{"gitId":"fredtwt"},"content":"        int year \u003d Integer.parseInt(tempDate[0]);","lastModifiedDate":"2022-03-23"},{"lineNumber":370,"author":{"gitId":"fredtwt"},"content":"        int month \u003d Integer.parseInt(tempDate[1]);","lastModifiedDate":"2022-03-23"},{"lineNumber":371,"author":{"gitId":"fredtwt"},"content":"        int day \u003d Integer.parseInt(tempDate[2]);","lastModifiedDate":"2022-03-23"},{"lineNumber":372,"author":{"gitId":"fredtwt"},"content":"        int hour \u003d Integer.parseInt(tempTime[0]);","lastModifiedDate":"2022-03-23"},{"lineNumber":373,"author":{"gitId":"fredtwt"},"content":"        int min \u003d Integer.parseInt(tempTime[1]);","lastModifiedDate":"2022-03-23"},{"lineNumber":374,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":375,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":376,"author":{"gitId":"fredtwt"},"content":"        if (!DateTime.isValidDateTime(year, month, day, hour, min)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":377,"author":{"gitId":"fredtwt"},"content":"            throw new ParseException(DateTime.DATETIME_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":378,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":379,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":380,"author":{"gitId":"fredtwt"},"content":"        return new DateTime(year, month, day, hour, min);","lastModifiedDate":"2022-03-23"},{"lineNumber":381,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":382,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":383,"author":{"gitId":"viki0526"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":384,"author":{"gitId":"viki0526"},"content":"     * Parses string find prefix for date and time into a DateTime object","lastModifiedDate":"2022-03-25"},{"lineNumber":385,"author":{"gitId":"viki0526"},"content":"     * @param dateTime","lastModifiedDate":"2022-03-25"},{"lineNumber":386,"author":{"gitId":"viki0526"},"content":"     * @throws ParseException","lastModifiedDate":"2022-03-25"},{"lineNumber":387,"author":{"gitId":"viki0526"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":388,"author":{"gitId":"viki0526"},"content":"    public static DateTime parseDateTimeForFind(String dateTime) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":389,"author":{"gitId":"viki0526"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":390,"author":{"gitId":"viki0526"},"content":"        if (trimmedDateTime.split(\" \").length !\u003d 2) {","lastModifiedDate":"2022-03-25"},{"lineNumber":391,"author":{"gitId":"viki0526"},"content":"            throw new ParseException(FindCommandParser.DATE_TIME_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":392,"author":{"gitId":"viki0526"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":393,"author":{"gitId":"viki0526"},"content":"        return parseDateTime(trimmedDateTime.split(\" \")[0], trimmedDateTime.split(\" \")[1]);","lastModifiedDate":"2022-03-25"},{"lineNumber":394,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":395,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":396,"author":{"gitId":"viki0526"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":397,"author":{"gitId":"viki0526"},"content":"     * Parses a list of string DateTimes into a list of DateTime objects","lastModifiedDate":"2022-03-25"},{"lineNumber":398,"author":{"gitId":"viki0526"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":399,"author":{"gitId":"viki0526"},"content":"     * @param stringDateTimes","lastModifiedDate":"2022-03-25"},{"lineNumber":400,"author":{"gitId":"viki0526"},"content":"     * @throws ParseException","lastModifiedDate":"2022-03-25"},{"lineNumber":401,"author":{"gitId":"viki0526"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":402,"author":{"gitId":"viki0526"},"content":"    public static List\u003cDateTime\u003e parseDateTimes(List\u003cString\u003e stringDateTimes) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":403,"author":{"gitId":"viki0526"},"content":"        requireNonNull(stringDateTimes);","lastModifiedDate":"2022-03-25"},{"lineNumber":404,"author":{"gitId":"viki0526"},"content":"        final Set\u003cDateTime\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":405,"author":{"gitId":"viki0526"},"content":"        for (String value : stringDateTimes) {","lastModifiedDate":"2022-03-25"},{"lineNumber":406,"author":{"gitId":"viki0526"},"content":"            set.add(parseDateTimeForFind(value.trim()));","lastModifiedDate":"2022-03-25"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":408,"author":{"gitId":"viki0526"},"content":"        return new ArrayList\u003c\u003e(set);","lastModifiedDate":"2022-03-25"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":410,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"fredtwt":110,"viki0526":61,"manu2002g":75,"-":114,"ongkimlai":50}},{"path":"src/main/java/seedu/address/logic/parser/RemoveTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.logic.commands.RemoveTagCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"public class RemoveTagCommandParser implements Parser\u003cRemoveTagCommand\u003e {","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveTagCommand","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     * and returns an RemoveTagCommand object for execution.","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"    public RemoveTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CCA, PREFIX_EDUCATION,","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"                PREFIX_MODULE, PREFIX_INTERNSHIP);","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"        Index index;","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveTagCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        List\u003cTag\u003e education \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_EDUCATION), Tag.EDUCATION);","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        List\u003cTag\u003e internship \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_INTERNSHIP), Tag.INTERNSHIP);","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"        List\u003cTag\u003e module \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_MODULE), Tag.MODULE);","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        List\u003cTag\u003e cca \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_CCA), Tag.CCA);","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"        return new RemoveTagCommand(index, education, internship, module, cca);","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"ongkimlai":45}},{"path":"src/main/java/seedu/address/logic/parser/TagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":" * Parses input arguments and creates a new TagCommand object","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"public class TagCommandParser implements Parser\u003cTagCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"     * Parses the given {@code String} of arguments in the context of the TagCommand","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"     * and returns an TagCommand object for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"    public TagCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CCA, PREFIX_EDUCATION,","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"                PREFIX_MODULE, PREFIX_INTERNSHIP);","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"        Index index;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"        List\u003cTag\u003e education \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_EDUCATION), Tag.EDUCATION);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"        List\u003cTag\u003e internship \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_INTERNSHIP), Tag.INTERNSHIP);","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"        List\u003cTag\u003e module \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_MODULE), Tag.MODULE);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"        List\u003cTag\u003e cca \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_CCA), Tag.CCA);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"        return new TagCommand(index, education, internship, module, cca);","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":47,"viki0526":1}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":115,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"fredtwt"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"fredtwt"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"fredtwt"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"fredtwt"},"content":"    //// person-level operations","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"fredtwt"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"fredtwt"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(event);","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"fredtwt"},"content":"        return events.contains(event);","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"fredtwt"},"content":"     * Adds an event to the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"fredtwt"},"content":"     * The event must not already exist in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"fredtwt"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"fredtwt"},"content":"        events.add(e);","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"fredtwt"},"content":"     * Replaces the given event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"fredtwt"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"fredtwt"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"fredtwt"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"fredtwt"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2022-03-23"},{"lineNumber":150,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":151,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"fredtwt"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"fredtwt"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"fredtwt"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"fredtwt"},"content":"        events.remove(key);","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"fredtwt"},"content":"    //// util methods","lastModifiedDate":"2022-03-23"},{"lineNumber":161,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":163,"author":{"gitId":"fredtwt"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"fredtwt"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-23"},{"lineNumber":165,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":166,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 events.equals(((AddressBook) other).events));","lastModifiedDate":"2022-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"fredtwt"},"content":"        return persons.hashCode() + events.hashCode();","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fredtwt":61,"-":118}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_UPCOMING_EVENTS \u003d event -\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        return event.getDateTime().value.isAfter(now);","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"    };","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_PAST_EVENTS \u003d event -\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"        return event.getDateTime().value.isBefore(now);","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"    };","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"fredtwt"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"fredtwt"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"     * Deletes the given event.","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"     * The event must exist in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"fredtwt"},"content":"    void deleteEvent(Event target);","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"     * Adds the given event.","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"fredtwt"},"content":"     * {@code event} must not already exist in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"    void addEvent(Event event);","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"fredtwt"},"content":"     * Replaces the given event {@code target} with {@code editedEvent}.","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"fredtwt"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"fredtwt"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"fredtwt"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"fredtwt"},"content":"    /** Returns an unmodifiable view of the filtered event list */","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"fredtwt"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"fredtwt"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"fredtwt"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"fredtwt"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"fredtwt":48,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList());","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"fredtwt"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EventBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"fredtwt"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(event);","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"fredtwt"},"content":"        return addressBook.hasEvent(event);","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":161,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"fredtwt"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2022-03-23"},{"lineNumber":163,"author":{"gitId":"fredtwt"},"content":"        addressBook.removeEvent(target);","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":165,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":166,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":167,"author":{"gitId":"fredtwt"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"fredtwt"},"content":"        addressBook.addEvent(event);","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"fredtwt"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":171,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":173,"author":{"gitId":"fredtwt"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-03-23"},{"lineNumber":174,"author":{"gitId":"fredtwt"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2022-03-23"},{"lineNumber":175,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"fredtwt"},"content":"        addressBook.setEvent(target, editedEvent);","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"fredtwt"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"fredtwt"},"content":"        return filteredEvents;","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":185,"author":{"gitId":"fredtwt"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":186,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"fredtwt"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"fredtwt":40,"-":150}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fredtwt":7,"-":17}},{"path":"src/main/java/seedu/address/model/event/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.event;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"public class DateTime implements Comparable\u003cDateTime\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"    public static final String DATETIME_MESSAGE_CONSTRAINTS \u003d \"Date and Time has to be valid!\";","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"    public static final String DATE_MESSAGE_CONSTRAINTS \u003d \"Date has to be in the format of yyyy-MM-DD!\";","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"    public static final String TIME_MESSAGE_CONSTRAINTS \u003d \"Time has to be in the format of HH:mm!\";","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"    public static final DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"    public static final String DATE_VALIDATION_REGEX \u003d \"^(\\\\d{4})-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$\";","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    public static final String TIME_VALIDATION_REGEX \u003d \"([01]?[0-9]|2[0-3]):[0-5][0-9]\";","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"     * Constructs a {@Code DateTime}","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"     * @param year the event year","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"     * @param month the event month","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"     * @param day the event day","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"     * @param hour the event hour","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"     * @param min the event min","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"    public DateTime(int year, int month, int day, int hour, int min) {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"        value \u003d LocalDateTime.of(year, month, day, hour, min);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"     * Returns true if a given date and time is valid.","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"    public static boolean isValidDateTime(int year, int month, int day, int hour, int min) {","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        return LocalDateTime.of(year, month, day, hour, min).isAfter(now);","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"        return test.matches(DATE_VALIDATION_REGEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"        return test.matches(TIME_VALIDATION_REGEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"    public String displayDateTime() {","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"        return value.format(DISPLAY_FORMATTER);","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"    public String toString() {","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"        return value.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"                || (other instanceof DateTime","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 value.isEqual(((DateTime) other).value));","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"    public int compareTo(DateTime other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"        return value.compareTo(other.value);","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"fredtwt":63,"ongkimlai":8}},{"path":"src/main/java/seedu/address/model/event/DateTimePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.model.event;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":"public class DateTimePredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"    private final List\u003cDateTime\u003e keywords;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"    private final Function\u003cEvent, DateTime\u003e field;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"     * Constructor for DateTimePredicate","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"     * @param keywords","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"    public DateTimePredicate(List\u003cDateTime\u003e keywords) {","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"        this.field \u003d event -\u003e event.getDateTime();","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"viki0526"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"viki0526"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"viki0526"},"content":"                .anyMatch(keyword -\u003e keyword.equals(field.apply(event)));","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"viki0526"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"viki0526"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"viki0526"},"content":"                || (other instanceof DateTimePredicate // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"viki0526"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"viki0526":32}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.event;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":" * Represents an Event in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"public class Event implements Comparable\u003cEvent\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"    // Identity fields","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"    private final EventName name;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"    private final Information info;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cName\u003e participants;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"    private final DateTime dateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"    public Event(EventName name, Information info, List\u003cName\u003e participants, DateTime dateTime) {","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"        requireAllNonNull(name, info, participants, dateTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"        this.info \u003d info;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        this.participants \u003d participants;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"    public EventName getEventName() {","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        return name;","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    public Information getEventInfo() {","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"        return info;","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"    public List\u003cName\u003e getParticipants() {","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"        return participants;","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"viki0526"},"content":"    public List\u003cString\u003e getParticipantStrings() {","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"viki0526"},"content":"        return getParticipants().stream().map(participant -\u003e participant.fullName)","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"viki0526"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"    public DateTime getDateTime() {","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"        return dateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"    public boolean isParticipantsEmpty() {","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"        return participants.isEmpty();","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"     * Returns true if both events have the same identity fields.","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"            return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"fredtwt"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"fredtwt"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"fredtwt"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"fredtwt"},"content":"        return otherEvent.getEventName().equals(getEventName())","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 otherEvent.getEventInfo().equals(getEventInfo())","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 otherEvent.getParticipants().equals(getParticipants())","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 otherEvent.getDateTime().equals(getDateTime());","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"fredtwt"},"content":"     * Displays the formatted details for cancel event command","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"fredtwt"},"content":"    public String displayForCancelEvent() {","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"fredtwt"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"fredtwt"},"content":"        builder.append(getEventName())","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"fredtwt"},"content":"                .append(\" | Details: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"fredtwt"},"content":"                .append(getEventInfo())","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"fredtwt"},"content":"                .append(\" | Date \u0026 Time: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"fredtwt"},"content":"                .append(getDateTime())","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"fredtwt"},"content":"                .append(\" | Participants: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"fredtwt"},"content":"                .append(getParticipants());","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"fredtwt"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"fredtwt"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"fredtwt"},"content":"        return Objects.hash(name, info, participants, dateTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"    public String toString() {","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"        builder.append(\"Event Name: \")","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"                .append(getEventName())","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"fredtwt"},"content":"                .append(\"\\nDetails: \")","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"fredtwt"},"content":"                .append(getEventInfo())","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"fredtwt"},"content":"                .append(\"\\nDate \u0026 Time: \")","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"                .append(getDateTime())","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"fredtwt"},"content":"                .append(\"\\nParticipants: \")","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"fredtwt"},"content":"                .append(getParticipants());","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"ongkimlai"},"content":"    public int compareTo(Event other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"ongkimlai"},"content":"        return dateTime.compareTo(other.dateTime);","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"fredtwt":104,"viki0526":6,"ongkimlai":6}},{"path":"src/main/java/seedu/address/model/event/EventFieldContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.model.event;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"public class EventFieldContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"    private final Function\u003cEvent, String\u003e field;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"    EventFieldContainsKeywordsPredicate(List\u003cString\u003e keywords, Function\u003cEvent, String\u003e field) {","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"        this.field \u003d field;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"viki0526"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(field.apply(event), keyword));","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"viki0526"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"viki0526"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"viki0526"},"content":"                || (other instanceof EventFieldContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"viki0526"},"content":"                \u0026\u0026 keywords.equals(((EventFieldContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"viki0526":30}},{"path":"src/main/java/seedu/address/model/event/EventInfoContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.model.event;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"public class EventInfoContainsKeywordsPredicate extends EventFieldContainsKeywordsPredicate {","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":"    public EventInfoContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":"        super(keywords, event -\u003e event.getEventInfo().value);","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"                || (other instanceof EventInfoContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"viki0526":16}},{"path":"src/main/java/seedu/address/model/event/EventName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.event;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":" * Represents an Event\u0027s name in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEventName(String)}","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"public class EventName {","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Name can take in at most 100 characters and it should not be \"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"            + \"blank\";","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"     * otherwise \" \" (a blank string becomes a valid input.","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"     * There is also a 100 characters constraint.","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].{1,100}\";","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"    public final String value;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"     * Constructs an {@code Name}","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"     * @param name A valid event name.","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"    public EventName(String name) {","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        checkArgument(isValidEventName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"        value \u003d name;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"    public static boolean isValidEventName(String test) {","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"    public String toString() {","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"        return value;","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"                || (other instanceof EventName","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 value.equalsIgnoreCase(((EventName) other).value));","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"fredtwt":57}},{"path":"src/main/java/seedu/address/model/event/EventNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.model.event;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"public class EventNameContainsKeywordsPredicate extends EventFieldContainsKeywordsPredicate {","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":"    public EventNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":"        super(keywords, event -\u003e event.getEventName().value);","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"                || (other instanceof EventNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"viki0526":16}},{"path":"src/main/java/seedu/address/model/event/EventParticipantsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.model.event;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"public class EventParticipantsContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"    private final Function\u003cEvent, List\u003cString\u003e\u003e field;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"     * Constructor for EventParticipantsContainsKeywordsPredicate","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"     * @param keywords","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"    public EventParticipantsContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"        this.field \u003d event -\u003e event.getParticipantStrings();","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"viki0526"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"viki0526"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"viki0526"},"content":"                .anyMatch(keyword -\u003e field.apply(event).stream()","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"viki0526"},"content":"                        .anyMatch(detail -\u003e StringUtil.containsWordIgnoreCase(detail, keyword)));","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"viki0526"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"viki0526"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"viki0526"},"content":"                || (other instanceof EventParticipantsContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"viki0526"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"viki0526":35}},{"path":"src/main/java/seedu/address/model/event/Information.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.event;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":" * Represents an Event\u0027s information in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidInformation(String)}","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"public class Information {","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Name can take in at most 300 characters and it should not be \"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"            + \"blank\";","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"     * otherwise \" \" (a blank string becomes a valid input.","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"     * There is also a 300 characters constraint.","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].{1,300}\";","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"    public final String value;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"     * Constructs an {@code Information}","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"     * @param information A valid event information.","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"    public Information(String information) {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(information);","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"        checkArgument(isValidInformation(information), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        value \u003d information;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"     * Returns true if a given string is a valid information.","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"    public static boolean isValidInformation(String test) {","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"    public String toString() {","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"        return value;","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"                || (other instanceof Information","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 value.equalsIgnoreCase(((Information) other).value));","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"fredtwt":56}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.event;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"            FXCollections.unmodifiableObservableList(internalList).sorted();","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"     * Adds an event to the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"     * Replaces the event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"        if (!target.equals(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"     * The event must exist in the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"fredtwt"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"fredtwt"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"fredtwt"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"fredtwt"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"fredtwt"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"fredtwt"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"fredtwt"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"fredtwt"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"fredtwt"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"fredtwt"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"fredtwt"},"content":"        internalList.setAll(events);","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"fredtwt"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"fredtwt"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"fredtwt"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"fredtwt"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"fredtwt"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"fredtwt"},"content":"                || (other instanceof UniqueEventList // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 internalList.equals(((UniqueEventList) other).internalList));","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"fredtwt"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"fredtwt"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"fredtwt"},"content":"                if (events.get(i).equals(events.get(j))) {","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"fredtwt"},"content":"                    return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"fredtwt"},"content":"                }","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"fredtwt"},"content":"        return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"fredtwt":126}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"        super(\"Operation would result in duplicate events\");","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"fredtwt":7}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"public class EventNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"fredtwt":4}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take in any values, and it should not be blank\";","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fredtwt":2,"-":55}},{"path":"src/main/java/seedu/address/model/person/AddressContainsKeywordsPredicateAnd.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"manu2002g"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"manu2002g"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"manu2002g"},"content":"public class AddressContainsKeywordsPredicateAnd extends FieldContainsKeywordsPredicateAnd {","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"manu2002g"},"content":"    public AddressContainsKeywordsPredicateAnd(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"manu2002g"},"content":"        super(keywords, person -\u003e person.getAddress().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"manu2002g"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"manu2002g"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"manu2002g"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"manu2002g"},"content":"                || (other instanceof AddressContainsKeywordsPredicateAnd // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"manu2002g"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"manu2002g"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"manu2002g":17}},{"path":"src/main/java/seedu/address/model/person/AddressContainsKeywordsPredicateOr.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"manu2002g"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"manu2002g"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"manu2002g"},"content":"public class AddressContainsKeywordsPredicateOr extends FieldContainsKeywordsPredicateOr {","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"manu2002g"},"content":"    public AddressContainsKeywordsPredicateOr(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"manu2002g"},"content":"        super(keywords, person -\u003e person.getAddress().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"manu2002g"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"manu2002g"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"manu2002g"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"manu2002g"},"content":"                || (other instanceof AddressContainsKeywordsPredicateOr // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"manu2002g"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"manu2002g"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"manu2002g":17}},{"path":"src/main/java/seedu/address/model/person/Cca.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":" * Represents a Person\u0027s cca tag in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"public class Cca extends Tag {","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Cca can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    public final String value;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"     * Constructs a {@code Cca}.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"     * @param cca a cca tag.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    public Cca(String cca) {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        super(requireNonNull(cca));","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        checkArgument(isValidTagName(cca), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"        this.value \u003d cca.trim().toLowerCase();","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"viki0526"},"content":"    public String getTagString() {","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"viki0526"},"content":"        return this.value;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"                || (other instanceof Cca","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 this.value.equals(((Cca) other).value));","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":39,"viki0526":5}},{"path":"src/main/java/seedu/address/model/person/CcaContainsKeywordsPredicateAnd.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":" * Tests that a {@code Person}\u0027s {@code Cca} matches any of the keywords given.","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"public class CcaContainsKeywordsPredicateAnd extends TagContainsKeywordsPredicateAnd {","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"    public CcaContainsKeywordsPredicateAnd(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"        super(keywords, person -\u003e person.getCcaStrings());","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"                || (other instanceof CcaContainsKeywordsPredicateAnd // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"viki0526":19}},{"path":"src/main/java/seedu/address/model/person/CcaContainsKeywordsPredicateOr.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":" * Tests that a {@code Person}\u0027s {@code Cca} matches any of the keywords given.","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"public class CcaContainsKeywordsPredicateOr extends TagContainsKeywordsPredicateOr {","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"    public CcaContainsKeywordsPredicateOr(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"        super(keywords, person -\u003e person.getCcaStrings());","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"                || (other instanceof CcaContainsKeywordsPredicateAnd // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"viki0526":19}},{"path":"src/main/java/seedu/address/model/person/ContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"public abstract class ContainsKeywordsPredicate\u003cT\u003e implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"    private final Function\u003cPerson, T\u003e field;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"    ContainsKeywordsPredicate(List\u003cString\u003e keywords, Function\u003cPerson, T\u003e field) {","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"        requireNonNull(field);","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"        this.field \u003d field;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"viki0526":21}},{"path":"src/main/java/seedu/address/model/person/Education.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":" * Represents a Person\u0027s education tag in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"public class Education extends Tag {","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Education can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"    public final String value;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"     * Constructs a {@code Education}.","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"     * @param education an education tag.","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"    public Education(String education) {","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"        super(requireNonNull(education));","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        checkArgument(isValidTagName(education), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        this.value \u003d education.trim().toLowerCase();","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"viki0526"},"content":"    public String getTagString() {","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"viki0526"},"content":"        return this.value;","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"                || (other instanceof Education","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 this.value.equals(((Education) other).value));","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":38,"viki0526":5}},{"path":"src/main/java/seedu/address/model/person/EducationContainsKeywordsPredicateAnd.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":" * Tests that a {@code Person}\u0027s {@code Education} matches any of the keywords given.","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"public class EducationContainsKeywordsPredicateAnd extends TagContainsKeywordsPredicateAnd {","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"    public EducationContainsKeywordsPredicateAnd(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"        super(keywords, person -\u003e person.getEducationStrings());","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"                || (other instanceof EducationContainsKeywordsPredicateAnd // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"viki0526":22}},{"path":"src/main/java/seedu/address/model/person/EducationContainsKeywordsPredicateOr.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":" * Tests that a {@code Person}\u0027s {@code Education} matches any of the keywords given.","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"public class EducationContainsKeywordsPredicateOr extends TagContainsKeywordsPredicateOr {","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"    public EducationContainsKeywordsPredicateOr(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"        super(keywords, person -\u003e person.getEducationStrings());","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"                || (other instanceof EducationContainsKeywordsPredicateAnd // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"viki0526":22}},{"path":"src/main/java/seedu/address/model/person/EmailContainsKeywordsPredicateAnd.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"manu2002g"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"manu2002g"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"manu2002g"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"manu2002g"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"manu2002g"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"manu2002g"},"content":"public class EmailContainsKeywordsPredicateAnd implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"manu2002g"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"manu2002g"},"content":"    private final Function\u003cPerson, String\u003e field;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"manu2002g"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"manu2002g"},"content":"     * Constructor for EmailContainsKeywordPredicateAnd. THis class was detached from the other","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"manu2002g"},"content":"     * FieldContainsKeywordPredicate classes to support functionality for searching for a substring.","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"manu2002g"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"manu2002g"},"content":"     * @param keywords The list of keywords to be searched for.","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"manu2002g"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"manu2002g"},"content":"    public EmailContainsKeywordsPredicateAnd(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"manu2002g"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"manu2002g"},"content":"        this.field \u003d person -\u003e person.getEmail().value;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"manu2002g"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"manu2002g"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"manu2002g"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"manu2002g"},"content":"                .allMatch(keyword -\u003e StringUtil.containsSubstringIgnoreCase(field.apply(person), keyword));","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"manu2002g"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"manu2002g"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"manu2002g"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"manu2002g"},"content":"                || (other instanceof EmailContainsKeywordsPredicateAnd // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"manu2002g"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"manu2002g"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"manu2002g":37}},{"path":"src/main/java/seedu/address/model/person/EmailContainsKeywordsPredicateOr.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"manu2002g"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"manu2002g"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"manu2002g"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"manu2002g"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"manu2002g"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"manu2002g"},"content":"public class EmailContainsKeywordsPredicateOr implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"manu2002g"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"manu2002g"},"content":"    private final Function\u003cPerson, String\u003e field;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"manu2002g"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"manu2002g"},"content":"     * Constructor for EmailContainsKeywordPredicateOr. THis class was detached from the other","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"manu2002g"},"content":"     * FieldContainsKeywordPredicate classes to support functionality for searching for a substring.","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"manu2002g"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"manu2002g"},"content":"     * @param keywords The list of keywords to be searched for.","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"manu2002g"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"manu2002g"},"content":"    public EmailContainsKeywordsPredicateOr(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"manu2002g"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"manu2002g"},"content":"        this.field \u003d person -\u003e person.getEmail().value;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"manu2002g"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"manu2002g"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"manu2002g"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"manu2002g"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsSubstringIgnoreCase(field.apply(person), keyword));","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"manu2002g"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"manu2002g"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"manu2002g"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"manu2002g"},"content":"                || (other instanceof EmailContainsKeywordsPredicateOr // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"manu2002g"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"manu2002g"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"manu2002g":37}},{"path":"src/main/java/seedu/address/model/person/FieldContainsKeywordsPredicateAnd.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"manu2002g"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"manu2002g"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"manu2002g"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"manu2002g"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"manu2002g"},"content":"public abstract class FieldContainsKeywordsPredicateAnd extends ContainsKeywordsPredicate\u003cString\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"manu2002g"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"manu2002g"},"content":"    private final Function\u003cPerson, String\u003e field;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"manu2002g"},"content":"    FieldContainsKeywordsPredicateAnd(List\u003cString\u003e keywords, Function\u003cPerson, String\u003e field) {","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"        super(keywords, field);","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"manu2002g"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"manu2002g"},"content":"        this.field \u003d field;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"manu2002g"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"manu2002g"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"manu2002g"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"manu2002g"},"content":"                .allMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(field.apply(person), keyword));","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"manu2002g"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"manu2002g"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"manu2002g"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"manu2002g"},"content":"                || (other instanceof FieldContainsKeywordsPredicateAnd // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"manu2002g"},"content":"                \u0026\u0026 keywords.equals(((FieldContainsKeywordsPredicateAnd) other).keywords)); // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"manu2002g"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"viki0526":1,"manu2002g":29}},{"path":"src/main/java/seedu/address/model/person/FieldContainsKeywordsPredicateOr.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"manu2002g"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"manu2002g"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"manu2002g"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"manu2002g"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"manu2002g"},"content":"public abstract class FieldContainsKeywordsPredicateOr extends ContainsKeywordsPredicate\u003cString\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"manu2002g"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"manu2002g"},"content":"    private final Function\u003cPerson, String\u003e field;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"manu2002g"},"content":"    FieldContainsKeywordsPredicateOr(List\u003cString\u003e keywords, Function\u003cPerson, String\u003e field) {","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"        super(keywords, field);","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"manu2002g"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"manu2002g"},"content":"        this.field \u003d field;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"manu2002g"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"manu2002g"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"manu2002g"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"manu2002g"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(field.apply(person), keyword));","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"manu2002g"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"manu2002g"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"manu2002g"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"manu2002g"},"content":"                || (other instanceof FieldContainsKeywordsPredicateOr // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"manu2002g"},"content":"                \u0026\u0026 keywords.equals(((FieldContainsKeywordsPredicateOr) other).keywords)); // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"manu2002g"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"viki0526":1,"manu2002g":30}},{"path":"src/main/java/seedu/address/model/person/Internship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":" * Represents a Person\u0027s internship tag in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"public class Internship extends Tag {","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Internship can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    public final String value;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"     * Constructs a {@code Internship}.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"     * @param internship an internship tag.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    public Internship(String internship) {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        super(requireNonNull(internship));","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        checkArgument(isValidTagName(internship), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"        this.value \u003d internship.trim().toLowerCase();","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"viki0526"},"content":"    public String getTagString() {","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"viki0526"},"content":"        return this.value;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"                || (other instanceof Internship","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 this.value.equals(((Internship) other).value));","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":39,"viki0526":5}},{"path":"src/main/java/seedu/address/model/person/InternshipContainsKeywordsPredicateAnd.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":" * Tests that a {@code Person}\u0027s {@code Internship} matches any of the keywords given.","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"public class InternshipContainsKeywordsPredicateAnd extends TagContainsKeywordsPredicateAnd {","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"    public InternshipContainsKeywordsPredicateAnd(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"        super(keywords, person -\u003e person.getInternshipStrings());","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"                || (other instanceof InternshipContainsKeywordsPredicateAnd // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"viki0526":20}},{"path":"src/main/java/seedu/address/model/person/InternshipContainsKeywordsPredicateOr.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":" * Tests that a {@code Person}\u0027s {@code Internship} matches any of the keywords given.","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"public class InternshipContainsKeywordsPredicateOr extends TagContainsKeywordsPredicateOr {","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"    public InternshipContainsKeywordsPredicateOr(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"        super(keywords, person -\u003e person.getInternshipStrings());","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"                || (other instanceof EducationContainsKeywordsPredicateAnd // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"viki0526":22}},{"path":"src/main/java/seedu/address/model/person/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":" * Represents a Person\u0027s cca tag in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"public class Module extends Tag {","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"manu2002g"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Module can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    public final String value;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"     * Constructs a {@code Module}.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"     * @param module a module tag.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    public Module(String module) {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        super(requireNonNull(module));","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        checkArgument(isValidTagName(module), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"        this.value \u003d module.trim().toLowerCase();","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"viki0526"},"content":"    public String getTagString() {","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"viki0526"},"content":"        return this.value;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"                || (other instanceof Module","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 this.value.equals(((Module) other).value));","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":38,"viki0526":5,"manu2002g":1}},{"path":"src/main/java/seedu/address/model/person/ModuleContainsKeywordsPredicateAnd.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"public class ModuleContainsKeywordsPredicateAnd extends TagContainsKeywordsPredicateAnd {","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":"    public ModuleContainsKeywordsPredicateAnd(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"        super(keywords, person -\u003e person.getModuleStrings());","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"                || (other instanceof ModuleContainsKeywordsPredicateAnd // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"viki0526":17}},{"path":"src/main/java/seedu/address/model/person/ModuleContainsKeywordsPredicateOr.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":" * Tests that a {@code Person}\u0027s {@code Module} matches any of the keywords given.","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"public class ModuleContainsKeywordsPredicateOr extends TagContainsKeywordsPredicateOr {","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"    public ModuleContainsKeywordsPredicateOr(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"        super(keywords, person -\u003e person.getModuleStrings());","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"                || (other instanceof InternshipContainsKeywordsPredicateAnd // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"viki0526":20}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"                \u0026\u0026 fullName.equalsIgnoreCase(((Name) other).fullName)); // state check","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":57,"ongkimlai":2}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicateAnd.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"manu2002g"},"content":"public class NameContainsKeywordsPredicateAnd extends FieldContainsKeywordsPredicateAnd {","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"manu2002g"},"content":"    public NameContainsKeywordsPredicateAnd(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"manu2002g"},"content":"        super(keywords, person -\u003e person.getName().fullName);","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"manu2002g"},"content":"                || (other instanceof NameContainsKeywordsPredicateAnd // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"manu2002g"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"manu2002g":5,"-":16}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicateOr.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"manu2002g"},"content":"public class NameContainsKeywordsPredicateOr extends FieldContainsKeywordsPredicateOr {","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"manu2002g"},"content":"    public NameContainsKeywordsPredicateOr(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"manu2002g"},"content":"        super(keywords, person -\u003e person.getName().fullName);","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"manu2002g"},"content":"                || (other instanceof NameContainsKeywordsPredicateOr // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"manu2002g"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"manu2002g":5,"-":16}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"public class Person implements Comparable\u003cPerson\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"viki0526"},"content":"    private final Address address;","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cTag\u003e educations;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cTag\u003e internships;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cTag\u003e modules;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cTag\u003e ccas;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"    public Person(Name name, Phone phone, Email email, Address address) {","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        requireAllNonNull(name, phone, email, address);","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"        this.educations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"        this.internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"        this.modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"        this.ccas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"     * Second constructor for Person.","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"    public Person(Name name, Phone phone, Email email, Address address, List\u003cTag\u003e educations, List\u003cTag\u003e internships,","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"                  List\u003cTag\u003e modules, List\u003cTag\u003e ccas) {","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"        requireAllNonNull(name, phone, email, address, educations, internships, modules, ccas);","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"        this.educations \u003d educations;","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"        this.internships \u003d internships;","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"        this.ccas \u003d ccas;","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"     * Fourth constructor for Person.","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"fredtwt"},"content":"    public Person(Person person, Event event) {","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"        requireAllNonNull(person, event);","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"fredtwt"},"content":"        this.name \u003d person.name;","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"fredtwt"},"content":"        this.phone \u003d person.phone;","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"fredtwt"},"content":"        this.email \u003d person.email;","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"fredtwt"},"content":"        this.address \u003d person.address;","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"fredtwt"},"content":"        this.educations \u003d person.educations;","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"fredtwt"},"content":"        this.internships \u003d person.internships;","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"fredtwt"},"content":"        this.modules \u003d person.modules;","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"fredtwt"},"content":"        this.ccas \u003d person.ccas;","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":93,"author":{"gitId":"fredtwt"},"content":"    public List\u003cTag\u003e getEducations() {","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"fredtwt"},"content":"        return educations;","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"fredtwt"},"content":"    public List\u003cTag\u003e getInternships() {","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"        return internships;","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"    public List\u003cTag\u003e getModules() {","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"        return modules;","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"fredtwt"},"content":"    public List\u003cTag\u003e getCcas() {","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"        return ccas;","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"    public Person addEvent(Event event) {","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"        return new Person(this, event);","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"viki0526"},"content":"    public List\u003cString\u003e getEducationStrings() {","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"viki0526"},"content":"        return getEducations().stream().map(education -\u003e education.getTagString())","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"viki0526"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"viki0526"},"content":"    public List\u003cString\u003e getInternshipStrings() {","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"viki0526"},"content":"        return getInternships().stream().map(internship -\u003e internship.getTagString())","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"viki0526"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"viki0526"},"content":"    public List\u003cString\u003e getModuleStrings() {","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"viki0526"},"content":"        return getModules().stream().map(module -\u003e module.getTagString())","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"viki0526"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"viki0526"},"content":"    public List\u003cString\u003e getCcaStrings() {","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"viki0526"},"content":"        return getCcas().stream().map(cca -\u003e cca.getTagString())","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"viki0526"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 otherPerson.getEducations().equals(getEducations())","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 otherPerson.getInternships().equals(getInternships())","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 otherPerson.getModules().equals(getModules())","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"fredtwt"},"content":"                \u0026\u0026 otherPerson.getCcas().equals(getCcas());","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"fredtwt"},"content":"     * Displays the formatted details for delete command","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"fredtwt"},"content":"    public String displayPersonForDelete() {","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"fredtwt"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"fredtwt"},"content":"        builder.append(getName())","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"fredtwt"},"content":"                .append(\" | Phone: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"fredtwt"},"content":"                .append(getPhone())","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"fredtwt"},"content":"                .append(\" | Email: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"fredtwt"},"content":"                .append(getEmail())","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"fredtwt"},"content":"                .append(\" | Address: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"fredtwt"},"content":"                .append(getAddress())","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"fredtwt"},"content":"                .append(\" | Educations: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"fredtwt"},"content":"                .append(getEducations())","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"fredtwt"},"content":"                .append(\" | Internships: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"fredtwt"},"content":"                .append(getInternships())","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"fredtwt"},"content":"                .append(\" | Modules: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"fredtwt"},"content":"                .append(getModules())","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"fredtwt"},"content":"                .append(\" | Ccas: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"fredtwt"},"content":"                .append(getCcas());","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"fredtwt"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"fredtwt"},"content":"     * Displays the formatted details for add command","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"fredtwt"},"content":"    public String displayPersonForAdd() {","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"fredtwt"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"fredtwt"},"content":"        builder.append(getName())","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"fredtwt"},"content":"                .append(\"\\nPhone: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"fredtwt"},"content":"                .append(getPhone())","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"fredtwt"},"content":"                .append(\"\\nEmail: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"fredtwt"},"content":"                .append(getEmail())","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"fredtwt"},"content":"                .append(\"\\nAddress: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"fredtwt"},"content":"                .append(getAddress())","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"fredtwt"},"content":"                .append(\"\\nEducations: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"fredtwt"},"content":"                .append(getEducations())","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"fredtwt"},"content":"                .append(\"\\nInternships: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"fredtwt"},"content":"                .append(getInternships())","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"fredtwt"},"content":"                .append(\"\\nModules: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":211,"author":{"gitId":"fredtwt"},"content":"                .append(getModules())","lastModifiedDate":"2022-03-25"},{"lineNumber":212,"author":{"gitId":"fredtwt"},"content":"                .append(\"\\nCcas: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":213,"author":{"gitId":"fredtwt"},"content":"                .append(getCcas());","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"fredtwt"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":221,"author":{"gitId":"fredtwt"},"content":"        return Objects.hash(name, phone, email, address, educations, internships, modules, ccas);","lastModifiedDate":"2022-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":233,"author":{"gitId":"fredtwt"},"content":"                .append(getAddress())","lastModifiedDate":"2022-03-10"},{"lineNumber":234,"author":{"gitId":"fredtwt"},"content":"                .append(\"; Educations: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":235,"author":{"gitId":"fredtwt"},"content":"                .append(getEducations())","lastModifiedDate":"2022-03-10"},{"lineNumber":236,"author":{"gitId":"fredtwt"},"content":"                .append(\"; Internships: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":237,"author":{"gitId":"fredtwt"},"content":"                .append(getInternships())","lastModifiedDate":"2022-03-10"},{"lineNumber":238,"author":{"gitId":"fredtwt"},"content":"                .append(\"; Modules: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":239,"author":{"gitId":"fredtwt"},"content":"                .append(getModules())","lastModifiedDate":"2022-03-10"},{"lineNumber":240,"author":{"gitId":"fredtwt"},"content":"                .append(\"; Ccas: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":241,"author":{"gitId":"fredtwt"},"content":"                .append(getCcas());","lastModifiedDate":"2022-03-10"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":246,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":247,"author":{"gitId":"ongkimlai"},"content":"    public int compareTo(Person other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":248,"author":{"gitId":"ongkimlai"},"content":"        return name.fullName.compareToIgnoreCase(other.getName().fullName);","lastModifiedDate":"2022-03-24"},{"lineNumber":249,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fredtwt":120,"viki0526":19,"-":106,"ongkimlai":5}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsKeywordsPredicateAnd.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"manu2002g"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"manu2002g"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"manu2002g"},"content":"public class PhoneContainsKeywordsPredicateAnd extends FieldContainsKeywordsPredicateAnd {","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"manu2002g"},"content":"    public PhoneContainsKeywordsPredicateAnd(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"manu2002g"},"content":"        super(keywords, person -\u003e person.getPhone().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"manu2002g"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"manu2002g"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"manu2002g"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"manu2002g"},"content":"                || (other instanceof PhoneContainsKeywordsPredicateAnd // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"manu2002g"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"manu2002g"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"manu2002g":17}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsKeywordsPredicateOr.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"manu2002g"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"manu2002g"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"manu2002g"},"content":"public class PhoneContainsKeywordsPredicateOr extends FieldContainsKeywordsPredicateOr {","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"manu2002g"},"content":"    public PhoneContainsKeywordsPredicateOr(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"manu2002g"},"content":"        super(keywords, person -\u003e person.getPhone().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"manu2002g"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"manu2002g"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"manu2002g"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"manu2002g"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"manu2002g"},"content":"                || (other instanceof PhoneContainsKeywordsPredicateOr // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"manu2002g"},"content":"                \u0026\u0026 super.equals(other)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"manu2002g"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"manu2002g"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"manu2002g":17}},{"path":"src/main/java/seedu/address/model/person/TagContainsKeywordsPredicateAnd.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"public abstract class TagContainsKeywordsPredicateAnd extends ContainsKeywordsPredicate\u003cList\u003cString\u003e\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"    private final Function\u003cPerson, List\u003cString\u003e\u003e field;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"    TagContainsKeywordsPredicateAnd(List\u003cString\u003e keywords, Function\u003cPerson, List\u003cString\u003e\u003e field) {","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"        super(keywords, field);","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"        this.field \u003d field;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"viki0526"},"content":"                .allMatch(keyword -\u003e field.apply(person).stream()","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"viki0526"},"content":"                        .anyMatch(tag -\u003e StringUtil.containsWordIgnoreCase(tag, keyword)));","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"viki0526"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"viki0526"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"viki0526"},"content":"                || (other instanceof TagContainsKeywordsPredicateAnd // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"viki0526"},"content":"                \u0026\u0026 keywords.equals(((TagContainsKeywordsPredicateAnd) other).keywords)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"viki0526":32}},{"path":"src/main/java/seedu/address/model/person/TagContainsKeywordsPredicateOr.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"viki0526"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"viki0526"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"viki0526"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"viki0526"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"viki0526"},"content":"public abstract class TagContainsKeywordsPredicateOr extends ContainsKeywordsPredicate\u003cList\u003cString\u003e\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"viki0526"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"viki0526"},"content":"    private final Function\u003cPerson, List\u003cString\u003e\u003e field;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"viki0526"},"content":"    TagContainsKeywordsPredicateOr(List\u003cString\u003e keywords, Function\u003cPerson, List\u003cString\u003e\u003e field) {","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"        super(keywords, field);","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"viki0526"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"viki0526"},"content":"        this.field \u003d field;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"viki0526"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"viki0526"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"viki0526"},"content":"                .anyMatch(keyword -\u003e field.apply(person).stream()","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"viki0526"},"content":"                        .anyMatch(tag -\u003e StringUtil.containsWordIgnoreCase(tag, keyword)));","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"viki0526"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"viki0526"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"viki0526"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"viki0526"},"content":"                || (other instanceof TagContainsKeywordsPredicateOr // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"viki0526"},"content":"                \u0026\u0026 keywords.equals(((TagContainsKeywordsPredicateOr) other).keywords)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"viki0526"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"viki0526"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"viki0526"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"viki0526":34}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"            FXCollections.unmodifiableObservableList(internalList).sorted();","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":136,"ongkimlai":1}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"public abstract class Tag {","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"    public static final String CCA \u003d \"cca\";","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"    public static final String EDUCATION \u003d \"education\";","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"    public static final String INTERNSHIP \u003d \"internship\";","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"    public static final String MODULE \u003d \"module\";","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"viki0526"},"content":"    public abstract String getTagString();","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"        return tagName;","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fredtwt":6,"viki0526":1,"-":32,"ongkimlai":1}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\")),","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\")),","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\")),","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\")),","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\")),","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"))","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"fredtwt":6,"-":34}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Information;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"    private final String eventName;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"    private final String info;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"    private final Set\u003cJsonAdaptedName\u003e participants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"    private final String dateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given person details.","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String eventName,","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"                            @JsonProperty(\"info\") String info,","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"                            @JsonProperty(\"participants\") List\u003cJsonAdaptedName\u003e participants,","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"                            @JsonProperty(\"dateTime\") String dateTime) {","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"        this.info \u003d info;","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"        this.participants.addAll(participants);","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"        this.eventName \u003d source.getEventName().value;","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"        this.info \u003d source.getEventInfo().value;","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"        this.participants.addAll(new HashSet\u003c\u003e(source.getParticipants()).stream()","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"                .map(JsonAdaptedName::new)","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"        this.dateTime \u003d source.getDateTime().toString();","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Event} object.","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"        Set\u003cName\u003e modelParticipants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"fredtwt"},"content":"        if (eventName \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"fredtwt"},"content":"                    EventName.class.getSimpleName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"fredtwt"},"content":"        if (!EventName.isValidEventName(eventName)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"fredtwt"},"content":"            throw new IllegalValueException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"fredtwt"},"content":"        final EventName modelEventName \u003d new EventName(eventName);","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"fredtwt"},"content":"        if (info \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"fredtwt"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"fredtwt"},"content":"                    Information.class.getSimpleName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"fredtwt"},"content":"        if (!Information.isValidInformation(info)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"fredtwt"},"content":"            throw new IllegalValueException(Information.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"fredtwt"},"content":"        final Information modelInfo \u003d new Information(info);","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"fredtwt"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"fredtwt"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"fredtwt"},"content":"                    DateTime.class.getSimpleName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"fredtwt"},"content":"        int[] dateTimeArr \u003d convertDateTime(dateTime);","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"fredtwt"},"content":"        final DateTime modelDateTime \u003d new DateTime(dateTimeArr[0], dateTimeArr[1], dateTimeArr[2], dateTimeArr[3],","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"fredtwt"},"content":"                dateTimeArr[4]);","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"fredtwt"},"content":"        for (JsonAdaptedName curr : participants) {","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"fredtwt"},"content":"            if (curr \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"fredtwt"},"content":"                throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"fredtwt"},"content":"                        EventName.class.getSimpleName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"fredtwt"},"content":"            if (!Name.isValidName(curr.getName())) {","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"fredtwt"},"content":"                throw new IllegalValueException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"            modelParticipants.add(new Name(curr.getName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"        return new Event(modelEventName, modelInfo, new ArrayList\u003c\u003e(modelParticipants), modelDateTime);","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"fredtwt"},"content":"     * Converts the date time into an int array that splits into year, month, day, hour and min.","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"     * @param dateTime the string input of the date and time","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"fredtwt"},"content":"     * @return int array that contains year, month, day, hour and min","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"fredtwt"},"content":"     * @throws IllegalValueException if date or time is invalid","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"    public int[] convertDateTime(String dateTime) throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"fredtwt"},"content":"        String[] tempDateTime \u003d dateTime.split(\" \");","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"fredtwt"},"content":"        String date \u003d tempDateTime[0];","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"fredtwt"},"content":"        String time \u003d tempDateTime[1];","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"fredtwt"},"content":"        if (!DateTime.isValidDate(date)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"fredtwt"},"content":"            throw new IllegalValueException(DateTime.DATE_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"        if (!DateTime.isValidTime(time)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"fredtwt"},"content":"            throw new IllegalValueException(DateTime.TIME_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"fredtwt"},"content":"        String[] validDate \u003d date.split(\"-\");","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"fredtwt"},"content":"        String[] validTime \u003d time.split(\":\");","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"fredtwt"},"content":"        int[] outputDateTime \u003d new int[5];","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"fredtwt"},"content":"        outputDateTime[0] \u003d Integer.parseInt(validDate[0]);","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"fredtwt"},"content":"        outputDateTime[1] \u003d Integer.parseInt(validDate[1]);","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"fredtwt"},"content":"        outputDateTime[2] \u003d Integer.parseInt(validDate[2]);","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"fredtwt"},"content":"        outputDateTime[3] \u003d Integer.parseInt(validTime[0]);","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"fredtwt"},"content":"        outputDateTime[4] \u003d Integer.parseInt(validTime[1]);","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"fredtwt"},"content":"        return outputDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"fredtwt":132}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"public class JsonAdaptedName {","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"    private final String name;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"     * Constructs a {@code JsonAdaptedName} with the given {@code Name}.","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"    public JsonAdaptedName(String name) {","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"     * Converts a given {@code Name} into this class for Jackson use.","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"    public JsonAdaptedName(Name source) {","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        this.name \u003d source.fullName;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"    @JsonValue","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"    public String getName() {","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        return name;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"     * Converts this Jackson-friendly adapted name object into the model\u0027s {@code Name} object.","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted name.","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    public Name toModelType(String name) throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"        return new Name(name);","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"fredtwt":44}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Cca;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Internship;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"    private final Set\u003cJsonAdaptedTag\u003e ccas \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"    private final Set\u003cJsonAdaptedTag\u003e educations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"    private final Set\u003cJsonAdaptedTag\u003e internships \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    private final Set\u003cJsonAdaptedTag\u003e modules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"            @JsonProperty(\"educations\") List\u003cJsonAdaptedTag\u003e educations,","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"            @JsonProperty(\"internships\") List\u003cJsonAdaptedTag\u003e internships,","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"            @JsonProperty(\"modules\") List\u003cJsonAdaptedTag\u003e modules,","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"            @JsonProperty(\"ccas\") List\u003cJsonAdaptedTag\u003e ccas) {","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"        if (educations !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"            this.educations.addAll(educations);","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"        if (internships !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"            this.internships.addAll(internships);","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"        if (modules !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"            this.modules.addAll(modules);","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"        if (ccas !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"            this.ccas.addAll(ccas);","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"fredtwt"},"content":"        educations.addAll(new HashSet\u003c\u003e(source.getEducations()).stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"fredtwt"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"fredtwt"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"fredtwt"},"content":"        internships.addAll(new HashSet\u003c\u003e(source.getInternships()).stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"fredtwt"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"fredtwt"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"fredtwt"},"content":"        modules.addAll(new HashSet\u003c\u003e(source.getModules()).stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"fredtwt"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"fredtwt"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"fredtwt"},"content":"        ccas.addAll(new HashSet\u003c\u003e(source.getCcas()).stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"fredtwt"},"content":"        final Set\u003cTag\u003e modelCcas \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"fredtwt"},"content":"        final Set\u003cTag\u003e modelEducations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"        final Set\u003cTag\u003e modelInternships \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"        final Set\u003cTag\u003e modelModules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"        for (JsonAdaptedTag curr : educations) {","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"            if (!Education.isValidTagName(curr.getTagName())) {","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"fredtwt"},"content":"                throw new IllegalValueException(Education.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"fredtwt"},"content":"            modelEducations.add(curr.toModelType(\"education\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"fredtwt"},"content":"        for (JsonAdaptedTag curr : ccas) {","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"            if (!Cca.isValidTagName(curr.getTagName())) {","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"                throw new IllegalValueException(Cca.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"fredtwt"},"content":"            modelCcas.add(curr.toModelType(\"cca\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"fredtwt"},"content":"        for (JsonAdaptedTag curr : internships) {","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"fredtwt"},"content":"            if (!Internship.isValidTagName(curr.getTagName())) {","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"                throw new IllegalValueException(Internship.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"fredtwt"},"content":"            modelInternships.add(curr.toModelType(\"internship\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"fredtwt"},"content":"        for (JsonAdaptedTag curr : modules) {","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"fredtwt"},"content":"            if (!Module.isValidTagName(curr.getTagName())) {","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"fredtwt"},"content":"                throw new IllegalValueException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"fredtwt"},"content":"            modelModules.add(curr.toModelType(\"module\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"fredtwt"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, new ArrayList\u003c\u003e(modelEducations),","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"fredtwt"},"content":"                new ArrayList\u003c\u003e(modelInternships), new ArrayList\u003c\u003e(modelModules), new ArrayList\u003c\u003e(modelCcas));","lastModifiedDate":"2022-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fredtwt":66,"-":98}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Cca;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Internship;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"    public static final String INVALID_TAGTYPE \u003d \"The tag type is invalid!\";","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"        this.tagName \u003d source.tagName;","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"    public Tag toModelType(String tagType) throws IllegalValueException {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"        switch (tagType) {","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"        case Tag.CCA:","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"            return new Cca(tagName);","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"        case Tag.EDUCATION:","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"            return new Education(tagName);","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"        case Tag.INTERNSHIP:","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"            return new Internship(tagName);","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"        case Tag.MODULE:","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"            return new Module(tagName);","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"        default:","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"            throw new IllegalValueException(INVALID_TAGTYPE);","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fredtwt":20,"-":42}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Events list contains duplicate event(s).\";","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"            if (addressBook.hasEvent(event)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"fredtwt"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"            addressBook.addEvent(event);","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fredtwt":11,"-":60}},{"path":"src/main/java/seedu/address/ui/EventCardComponent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":" * An UI component that displays information of an {@code Event}.","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"public class EventCardComponent extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"    public final Event event;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    private Label eventname;","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"    private Label id;","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"    private Label info;","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"    private Label datetime;","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"    private FlowPane participants;","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"     * Creates a {@code EventCode} with the given {@code Event} and index to display.","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    public EventCardComponent(Event event, int displayedIndex) {","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        super(FXML);","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        this.event \u003d event;","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        eventname.setText(event.getEventName().toString());","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"        datetime.setText(event.getDateTime().displayDateTime());","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"        info.setText(\"Details: \" + event.getEventInfo().toString());","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"        event.getParticipants().stream()","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"                .sorted(Comparator.comparing(p -\u003e p.fullName))","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"                .forEach(p -\u003e participants.getChildren().add(new Label(p.fullName)));","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"            return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"        if (!(other instanceof EventCardComponent)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"            return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"        // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"        EventCardComponent card \u003d (EventCardComponent) other;","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"ongkimlai":66}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":" * Panel containing the list of events.","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    private Label header;","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"        super(FXML);","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"        header.setText(\"UPCOMING EVENTS\");","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListPanel.EventListViewCell());","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"     * Custom {@code ListCell} that displays the graphics of an {@code Event} using an {@code EventCard}.","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"                setText(null);","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"            } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"                setGraphic(new EventCardComponent(event, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"ongkimlai":52}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-w11-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"ongkimlai":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"    private StackPane singlePersonPanelPlaceholder;","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"ongkimlai"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"ongkimlai"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"ongkimlai"},"content":"    private void showEventsInRightPanel(boolean isList) {","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"ongkimlai"},"content":"        if (isList) {","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"ongkimlai"},"content":"            eventListPanelPlaceholder.setVisible(true);","lastModifiedDate":"2022-03-24"},{"lineNumber":183,"author":{"gitId":"ongkimlai"},"content":"            singlePersonPanelPlaceholder.setVisible(false);","lastModifiedDate":"2022-03-24"},{"lineNumber":184,"author":{"gitId":"ongkimlai"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":185,"author":{"gitId":"ongkimlai"},"content":"            eventListPanelPlaceholder.setVisible(false);","lastModifiedDate":"2022-03-24"},{"lineNumber":186,"author":{"gitId":"ongkimlai"},"content":"            singlePersonPanelPlaceholder.setVisible(true);","lastModifiedDate":"2022-03-24"},{"lineNumber":187,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"ongkimlai"},"content":"            if (commandResult.isListCommand() || commandResult.isViewCommand()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"ongkimlai"},"content":"                showEventsInRightPanel(commandResult.isListCommand());","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"ongkimlai"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":196,"ongkimlai":24}},{"path":"src/main/java/seedu/address/ui/PersonCardComponent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"viki0526"},"content":"public class PersonCardComponent extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"    private FlowPane educations;","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"    private FlowPane internships;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"    private FlowPane modules;","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"    private FlowPane ccas;","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"viki0526"},"content":"    public PersonCardComponent(Person person, int displayedIndex) {","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"        person.getEducations().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"                .sorted(Comparator.comparing(edu -\u003e edu.tagName))","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"                .forEach(edu -\u003e educations.getChildren().add(new Label(edu.tagName)));","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"fredtwt"},"content":"        person.getInternships().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"                .sorted(Comparator.comparing(intern -\u003e intern.tagName))","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"                .forEach(intern -\u003e internships.getChildren().add(new Label(intern.tagName)));","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"fredtwt"},"content":"        person.getModules().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"fredtwt"},"content":"                .sorted(Comparator.comparing(module -\u003e module.tagName))","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"                .forEach(module -\u003e modules.getChildren().add(new Label(module.tagName)));","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"fredtwt"},"content":"        person.getCcas().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"fredtwt"},"content":"                .sorted(Comparator.comparing(cca -\u003e cca.tagName))","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"                .forEach(cca -\u003e ccas.getChildren().add(new Label(cca.tagName)));","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"viki0526"},"content":"        if (!(other instanceof PersonCardComponent)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"viki0526"},"content":"        PersonCardComponent card \u003d (PersonCardComponent) other;","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"fredtwt":16,"viki0526":4,"-":69,"ongkimlai":5}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"viki0526"},"content":"                setGraphic(new PersonCardComponent(person, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"viki0526":1,"-":48}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"ongkimlai"},"content":".cell_bigger_label {","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"ongkimlai"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"ongkimlai"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"ongkimlai"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"ongkimlai"},"content":"#header {","lastModifiedDate":"2022-03-24"},{"lineNumber":347,"author":{"gitId":"ongkimlai"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-03-24"},{"lineNumber":348,"author":{"gitId":"ongkimlai"},"content":"    -fx-font-size: 28px;","lastModifiedDate":"2022-03-24"},{"lineNumber":349,"author":{"gitId":"ongkimlai"},"content":"    -fx-text-fill: #E6E6FA;","lastModifiedDate":"2022-03-25"},{"lineNumber":350,"author":{"gitId":"ongkimlai"},"content":"    -fx-padding: 0 50 0 50;","lastModifiedDate":"2022-03-25"},{"lineNumber":351,"author":{"gitId":"ongkimlai"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-03-25"},{"lineNumber":352,"author":{"gitId":"ongkimlai"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-25"},{"lineNumber":353,"author":{"gitId":"ongkimlai"},"content":"    -fx-border-color: #E6E6FA;","lastModifiedDate":"2022-03-25"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":356,"author":{"gitId":"ongkimlai"},"content":"#educations {","lastModifiedDate":"2022-03-21"},{"lineNumber":357,"author":{"gitId":"ongkimlai"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-21"},{"lineNumber":358,"author":{"gitId":"ongkimlai"},"content":"    -fx-vgap: 7;","lastModifiedDate":"2022-03-21"},{"lineNumber":359,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":360,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":361,"author":{"gitId":"ongkimlai"},"content":"#internships {","lastModifiedDate":"2022-03-21"},{"lineNumber":362,"author":{"gitId":"ongkimlai"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-21"},{"lineNumber":363,"author":{"gitId":"ongkimlai"},"content":"    -fx-vgap: 7;","lastModifiedDate":"2022-03-21"},{"lineNumber":364,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":365,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":366,"author":{"gitId":"ongkimlai"},"content":"#modules {","lastModifiedDate":"2022-03-21"},{"lineNumber":367,"author":{"gitId":"ongkimlai"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-21"},{"lineNumber":368,"author":{"gitId":"ongkimlai"},"content":"    -fx-vgap: 7;","lastModifiedDate":"2022-03-21"},{"lineNumber":369,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":370,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":371,"author":{"gitId":"ongkimlai"},"content":"#ccas {","lastModifiedDate":"2022-03-21"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-21"},{"lineNumber":373,"author":{"gitId":"ongkimlai"},"content":"    -fx-vgap: 7;","lastModifiedDate":"2022-03-21"},{"lineNumber":374,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":376,"author":{"gitId":"ongkimlai"},"content":"#participants {","lastModifiedDate":"2022-03-24"},{"lineNumber":377,"author":{"gitId":"ongkimlai"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-24"},{"lineNumber":378,"author":{"gitId":"ongkimlai"},"content":"    -fx-vgap: 7;","lastModifiedDate":"2022-03-24"},{"lineNumber":379,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":380,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":381,"author":{"gitId":"ongkimlai"},"content":"#educations .label{","lastModifiedDate":"2022-03-21"},{"lineNumber":382,"author":{"gitId":"ongkimlai"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-21"},{"lineNumber":383,"author":{"gitId":"ongkimlai"},"content":"    -fx-background-color: #FFD700;","lastModifiedDate":"2022-03-22"},{"lineNumber":384,"author":{"gitId":"ongkimlai"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-21"},{"lineNumber":385,"author":{"gitId":"ongkimlai"},"content":"    -fx-background-radius: 6;","lastModifiedDate":"2022-03-22"},{"lineNumber":386,"author":{"gitId":"ongkimlai"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2022-03-21"},{"lineNumber":387,"author":{"gitId":"ongkimlai"},"content":"    -fx-line-spacing: 5;","lastModifiedDate":"2022-03-21"},{"lineNumber":388,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":389,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":390,"author":{"gitId":"ongkimlai"},"content":"#internships .label{","lastModifiedDate":"2022-03-21"},{"lineNumber":391,"author":{"gitId":"ongkimlai"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-21"},{"lineNumber":392,"author":{"gitId":"ongkimlai"},"content":"    -fx-background-color: #B22222;","lastModifiedDate":"2022-03-22"},{"lineNumber":393,"author":{"gitId":"ongkimlai"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-21"},{"lineNumber":394,"author":{"gitId":"ongkimlai"},"content":"    -fx-background-radius: 6;","lastModifiedDate":"2022-03-22"},{"lineNumber":395,"author":{"gitId":"ongkimlai"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2022-03-21"},{"lineNumber":396,"author":{"gitId":"ongkimlai"},"content":"    -fx-line-spacing: 5;","lastModifiedDate":"2022-03-21"},{"lineNumber":397,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":398,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":399,"author":{"gitId":"ongkimlai"},"content":"#modules .label{","lastModifiedDate":"2022-03-21"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-21"},{"lineNumber":401,"author":{"gitId":"ongkimlai"},"content":"    -fx-background-color: #008080;","lastModifiedDate":"2022-03-22"},{"lineNumber":402,"author":{"gitId":"ongkimlai"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-21"},{"lineNumber":403,"author":{"gitId":"ongkimlai"},"content":"    -fx-background-radius: 6;","lastModifiedDate":"2022-03-22"},{"lineNumber":404,"author":{"gitId":"ongkimlai"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2022-03-21"},{"lineNumber":405,"author":{"gitId":"ongkimlai"},"content":"    -fx-line-spacing: 5;","lastModifiedDate":"2022-03-21"},{"lineNumber":406,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":407,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":408,"author":{"gitId":"ongkimlai"},"content":"#ccas .label{","lastModifiedDate":"2022-03-21"},{"lineNumber":409,"author":{"gitId":"ongkimlai"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-21"},{"lineNumber":410,"author":{"gitId":"ongkimlai"},"content":"    -fx-background-color: #FF8C00;","lastModifiedDate":"2022-03-22"},{"lineNumber":411,"author":{"gitId":"ongkimlai"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-21"},{"lineNumber":412,"author":{"gitId":"ongkimlai"},"content":"    -fx-background-radius: 6;","lastModifiedDate":"2022-03-22"},{"lineNumber":413,"author":{"gitId":"ongkimlai"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2022-03-21"},{"lineNumber":414,"author":{"gitId":"ongkimlai"},"content":"    -fx-line-spacing: 5;","lastModifiedDate":"2022-03-21"},{"lineNumber":415,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":416,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":417,"author":{"gitId":"ongkimlai"},"content":"#participants .label{","lastModifiedDate":"2022-03-24"},{"lineNumber":418,"author":{"gitId":"ongkimlai"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-24"},{"lineNumber":419,"author":{"gitId":"ongkimlai"},"content":"    -fx-background-color: #90EE90;","lastModifiedDate":"2022-03-25"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-24"},{"lineNumber":421,"author":{"gitId":"ongkimlai"},"content":"    -fx-background-radius: 6;","lastModifiedDate":"2022-03-24"},{"lineNumber":422,"author":{"gitId":"ongkimlai"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2022-03-24"},{"lineNumber":423,"author":{"gitId":"ongkimlai"},"content":"    -fx-line-spacing: 5;","lastModifiedDate":"2022-03-24"},{"lineNumber":424,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"-":346,"ongkimlai":78}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"                \u003cLabel fx:id\u003d\"eventname\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"         \u003cLabel fx:id\u003d\"datetime\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$datetime\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"               \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"            \u003cLabel fx:id\u003d\"info\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$info\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"               \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"            \u003cFlowPane fx:id\u003d\"participants\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"                    \u003cInsets top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"         \u003c/FlowPane\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"ongkimlai":49}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"\u003cVBox alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"400.0\" prefWidth\u003d\"390.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"   \u003cLabel fx:id\u003d\"header\" styleClass\u003d\"cell_bigger_label\" text\u003d\"\\\\$header\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"         \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"      \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"    \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"        \u003c/VBox.margin\u003e\u003c/ListView\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"fredtwt":1,"ongkimlai":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"\u003cfx:root minHeight\u003d\"665.0\" minWidth\u003d\"840.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"NUSocials\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"            \u003cSplitPane dividerPositions\u003d\"0.01\" prefWidth\u003d\"840.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"              \u003citems\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"                \u003cAnchorPane focusTraversable\u003d\"true\" minWidth\u003d\"420.0\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"                        \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" focusTraversable\u003d\"true\" layoutX\u003d\"11.0\" layoutY\u003d\"11.0\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"                \u003cAnchorPane focusTraversable\u003d\"true\" minWidth\u003d\"420.0\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"                        \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" focusTraversable\u003d\"true\" layoutX\u003d\"11.0\" layoutY\u003d\"11.0\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"                        \u003cStackPane fx:id\u003d\"singlePersonPanelPlaceholder\" focusTraversable\u003d\"true\" layoutX\u003d\"21.0\" layoutY\u003d\"21.0\" visible\u003d\"false\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"                              \u003cLabel text\u003d\"testing\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"              \u003c/items\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"            \u003c/SplitPane\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":46,"ongkimlai":27}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"      \u003cFlowPane fx:id\u003d\"educations\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"               \u003cInsets top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"            \u003c/padding\u003e\u003c/FlowPane\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"      \u003cFlowPane fx:id\u003d\"modules\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"               \u003cInsets top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"            \u003c/padding\u003e\u003c/FlowPane\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"      \u003cFlowPane fx:id\u003d\"ccas\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"               \u003cInsets top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"            \u003c/padding\u003e\u003c/FlowPane\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"      \u003cFlowPane fx:id\u003d\"internships\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"               \u003cInsets top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"            \u003c/padding\u003e\u003c/FlowPane\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":31,"ongkimlai":24}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"\u003cVBox alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"400.0\" prefWidth\u003d\"390.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"         \u003cInsets /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"      \u003c/VBox.margin\u003e\u003c/ListView\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":6,"ongkimlai":6}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"ongkimlai"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"ongkimlai"},"content":"                + ADDRESS_DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"ongkimlai"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":154,"ongkimlai":8}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson.displayPersonForAdd()), expectedModel);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"fredtwt":1,"-":44}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson.displayPersonForAdd()),","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"fredtwt"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"fredtwt"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"fredtwt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"fredtwt"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"fredtwt"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2022-03-23"},{"lineNumber":150,"author":{"gitId":"fredtwt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":151,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"fredtwt"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"fredtwt"},"content":"        public void deleteEvent(Event event) {","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"fredtwt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"fredtwt"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"fredtwt"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"fredtwt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":161,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"fredtwt"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"fredtwt"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"fredtwt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":171,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"fredtwt"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"fredtwt"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"fredtwt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"fredtwt":33,"-":193}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicateOr;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"    public static final String VALID_EDUCATION_AMY \u003d \"Computer Science\";","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"    public static final String VALID_EDUCATION_BOB \u003d \"Computer Engineering\";","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"    public static final String VALID_CCA_AMY \u003d \"Netball\";","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"    public static final String VALID_CCA_BOB \u003d \"Basketball\";","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"    public static final String VALID_INTERNSHIP_AMY \u003d \"GIC\";","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"    public static final String VALID_INTERNSHIP_BOB \u003d \"Bosch\";","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"    public static final String VALID_MODULE_AMY \u003d \"CS2040S\";","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"    public static final String VALID_MODULE_BOB \u003d \"CS2100\";","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"    public static final String EDUCATION_DESC_AMY \u003d \" \" + PREFIX_EDUCATION + VALID_EDUCATION_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"    public static final String EDUCATION_DESC_BOB \u003d \" \" + PREFIX_EDUCATION + VALID_EDUCATION_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"    public static final String INTERNSHIP_DESC_AMY \u003d \" \" + PREFIX_INTERNSHIP + VALID_INTERNSHIP_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"    public static final String INTERNSHIP_DESC_BOB \u003d \" \" + PREFIX_INTERNSHIP + VALID_INTERNSHIP_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"    public static final String MODULE_DESC_AMY \u003d \" \" + PREFIX_MODULE + VALID_MODULE_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"    public static final String MODULE_DESC_BOB \u003d \" \" + PREFIX_MODULE + VALID_MODULE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"    public static final String CCA_DESC_AMY \u003d \" \" + PREFIX_CCA + VALID_CCA_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"    public static final String CCA_DESC_BOB \u003d \" \" + PREFIX_CCA + VALID_CCA_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"    public static final String INVALID_EDUCATION_DESC \u003d \" \" + PREFIX_EDUCATION + \"NUS\u0026\"; // \u0027\u0026\u0027 not allowed","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"    public static final String INVALID_INTERNSHIP_DESC \u003d \" \" + PREFIX_INTERNSHIP + \"A*\"; // \u0027*\u0027 not allowed","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"    public static final String INVALID_MODULE_DESC \u003d \" \" + PREFIX_MODULE + \"CS2!00\"; // \u0027!\u0027 not allowed","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"    public static final String INVALID_CCA_DESC \u003d \" \" + PREFIX_CCA + \"D@NCE\"; // \u0027@\u0027 not allowed for ccas","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"                .withEducation(VALID_EDUCATION_AMY).withInternship(VALID_INTERNSHIP_AMY)","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"ongkimlai"},"content":"                .withModule(VALID_MODULE_AMY).withCca(VALID_CCA_AMY)","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"fredtwt"},"content":"                .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"ongkimlai"},"content":"                .withEducation(VALID_EDUCATION_BOB).withInternship(VALID_INTERNSHIP_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"ongkimlai"},"content":"                .withModule(VALID_MODULE_BOB).withCca(VALID_CCA_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"fredtwt"},"content":"                .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"manu2002g"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicateOr(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"fredtwt":11,"manu2002g":2,"-":115,"ongkimlai":23}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"    private Model model;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    @AfterEach","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"    public void tearDown() {","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        model \u003d null;","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"                personToDelete.displayPersonForDelete());","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"fredtwt"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"fredtwt"},"content":"                personToDelete.displayPersonForDelete());","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON.getOriginalZeroBasedAsIndex();","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"ongkimlai"},"content":"    public void execute_validIndexUnfilteredListMultipleOutOfOrder_success() {","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete1 \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete2 \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete3 \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"ongkimlai"},"content":"        StringBuilder personsToDelete \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"        personsToDelete.append(personToDelete3.displayPersonForDelete())","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"                .append(System.lineSeparator()).append(personToDelete1.displayPersonForDelete())","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"                .append(System.lineSeparator()).append(personToDelete2.displayPersonForDelete());","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"ongkimlai"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"ongkimlai"},"content":"                new Index[]{INDEX_THIRD_PERSON, INDEX_FIRST_PERSON, INDEX_SECOND_PERSON});","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"ongkimlai"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_MULTIPLE_PERSON_SUCCESS, personsToDelete);","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"ongkimlai"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"ongkimlai"},"content":"        // Order below does not affect deletion, it is done by name of person.","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"ongkimlai"},"content":"        // Order of deletion decided by constructor of deleteCommand.","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete1);","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete2);","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete3);","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"ongkimlai"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"ongkimlai"},"content":"    public void execute_validIndexUnfilteredListMultipleInOrder_success() {","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete1 \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete2 \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete3 \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"ongkimlai"},"content":"        StringBuilder personsToDelete \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"fredtwt"},"content":"        personsToDelete.append(personToDelete1.displayPersonForDelete())","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"fredtwt"},"content":"                    .append(System.lineSeparator()).append(personToDelete2.displayPersonForDelete())","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"fredtwt"},"content":"                    .append(System.lineSeparator()).append(personToDelete3.displayPersonForDelete());","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"ongkimlai"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"ongkimlai"},"content":"                new Index[]{INDEX_FIRST_PERSON, INDEX_SECOND_PERSON, INDEX_THIRD_PERSON});","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"ongkimlai"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_MULTIPLE_PERSON_SUCCESS, personsToDelete);","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"ongkimlai"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"ongkimlai"},"content":"        // Order below does not affect deletion, it is done by name of person.","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"ongkimlai"},"content":"        // Order of deletion decided by constructor of deleteCommand.","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete1);","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete2);","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete3);","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"ongkimlai"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":143,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":144,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"ongkimlai"},"content":"    public void execute_validIndexUnfilteredListMultipleReverseOrder_success() {","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete1 \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete2 \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":148,"author":{"gitId":"ongkimlai"},"content":"        Person personToDelete3 \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"ongkimlai"},"content":"        StringBuilder personsToDelete \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":150,"author":{"gitId":"fredtwt"},"content":"        personsToDelete.append(personToDelete3.displayPersonForDelete())","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"fredtwt"},"content":"                .append(System.lineSeparator()).append(personToDelete2.displayPersonForDelete())","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"fredtwt"},"content":"                .append(System.lineSeparator()).append(personToDelete1.displayPersonForDelete());","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":154,"author":{"gitId":"ongkimlai"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(","lastModifiedDate":"2022-03-09"},{"lineNumber":155,"author":{"gitId":"ongkimlai"},"content":"                new Index[]{INDEX_THIRD_PERSON, INDEX_SECOND_PERSON, INDEX_FIRST_PERSON});","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":157,"author":{"gitId":"fredtwt"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_MULTIPLE_PERSON_SUCCESS,","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"fredtwt"},"content":"                personsToDelete);","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"ongkimlai"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-09"},{"lineNumber":161,"author":{"gitId":"ongkimlai"},"content":"        // Order below does not affect deletion, it is done by name of person.","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"ongkimlai"},"content":"        // Order of deletion decided by constructor of deleteCommand.","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete1);","lastModifiedDate":"2022-03-09"},{"lineNumber":164,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete2);","lastModifiedDate":"2022-03-09"},{"lineNumber":165,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.deletePerson(personToDelete3);","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"ongkimlai"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":169,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"fredtwt":15,"-":104,"ongkimlai":80}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"        //        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"        //        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"        //        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"        //","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"        //        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"        //                editedPerson.displayPersonForAdd());","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"        //","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"        //        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"        //        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"        //","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"        //        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"        //        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"        //        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"        //","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"        //        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"        //        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"        //","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"        //        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"        //                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"        //        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"        //","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"        //        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"        //                editedPerson.displayPersonForAdd());","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"fredtwt"},"content":"        //","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"        //        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"fredtwt"},"content":"        //        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"fredtwt"},"content":"        //","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"fredtwt"},"content":"        //        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"                new EditPersonDescriptorBuilder(personInFilteredList).withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"fredtwt"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"fredtwt"},"content":"                editedPerson.displayPersonForAdd());","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"fredtwt":31,"-":130,"ongkimlai":1}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicateOr;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"manu2002g"},"content":"        NameContainsKeywordsPredicateOr firstPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"manu2002g"},"content":"                new NameContainsKeywordsPredicateOr(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"manu2002g"},"content":"        NameContainsKeywordsPredicateOr secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"manu2002g"},"content":"                new NameContainsKeywordsPredicateOr(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"manu2002g"},"content":"        NameContainsKeywordsPredicateOr predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"manu2002g"},"content":"        NameContainsKeywordsPredicateOr predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"manu2002g"},"content":"    private NameContainsKeywordsPredicateOr preparePredicate(String userInput) {","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"manu2002g"},"content":"        return new NameContainsKeywordsPredicateOr(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"manu2002g":9,"-":74}},{"path":"src/test/java/seedu/address/logic/commands/RemoveTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Cca;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Internship;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"class RemoveTagCommandTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"    private static final String EDUCATION_STRING \u003d \"NUS\";","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"    private static final String EDUCATION_STRING_2 \u003d \"NTU\";","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    private static final String INTERNSHIP_STRING \u003d \"Twitter\";","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"    private static final String INTERNSHIP_STRING_2 \u003d \"Google\";","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"    private static final String MODULE_STRING \u003d \"CS2040S\";","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"    private static final String MODULE_STRING_2 \u003d \"CS3230\";","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"    private static final String CCA_STRING \u003d \"Greyhats\";","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"    private static final String CCA_STRING_2 \u003d \"NUSHackers\";","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e emptyList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e eduList \u003d Arrays.asList(new Education(EDUCATION_STRING));","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e eduList2 \u003d Arrays.asList(new Education(EDUCATION_STRING_2));","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e internshipList \u003d Arrays.asList(new Internship(INTERNSHIP_STRING));","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e internshipList2 \u003d Arrays.asList(new Internship(INTERNSHIP_STRING_2));","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e moduleList \u003d Arrays.asList(new Module(MODULE_STRING));","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e moduleList2 \u003d Arrays.asList(new Module(MODULE_STRING_2));","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e ccaList \u003d Arrays.asList(new Cca(CCA_STRING));","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e ccaList2 \u003d Arrays.asList(new Cca(CCA_STRING_2));","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"    void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"        RemoveTagCommand removeTagCommand \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"                new RemoveTagCommand(INDEX_FIRST_PERSON, eduList, emptyList, emptyList, emptyList);","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"        String expectedMessage \u003d String.format(RemoveTagCommand.MESSAGE_ARGUMENTS,","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"                personToEdit.getName(),","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"                \"[]\", personToEdit.getInternships(), personToEdit.getModules(), personToEdit.getCcas());","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"                personToEdit.getAddress(),","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"                emptyList, personToEdit.getInternships(), personToEdit.getModules(), personToEdit.getCcas());","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"        expectedModel.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"        assertCommandSuccess(removeTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"    public void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"        RemoveTagCommand firstCommand \u003d new RemoveTagCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"                eduList, internshipList, moduleList, ccaList);","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"        RemoveTagCommand secondCommand \u003d new RemoveTagCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"                eduList2, internshipList2, moduleList2, ccaList2);","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"        RemoveTagCommand thirdCommand \u003d new RemoveTagCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"                eduList, internshipList, moduleList, ccaList);","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"ongkimlai"},"content":"        RemoveTagCommand firstCommandCopy \u003d new RemoveTagCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"ongkimlai"},"content":"                eduList, internshipList, moduleList, ccaList);","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"ongkimlai"},"content":"        assertTrue(firstCommand.equals(firstCommandCopy));","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"ongkimlai"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"ongkimlai"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"ongkimlai"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"ongkimlai"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"ongkimlai"},"content":"        assertFalse(firstCommand.equals(thirdCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"ongkimlai"},"content":"        // same person, different tags -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"ongkimlai"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"ongkimlai":96}},{"path":"src/test/java/seedu/address/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Cca;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Internship;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"public class TagCommandTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"    private static final String EDUCATION_STRING \u003d \"NUS\";","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"    private static final String INTERNSHIP_STRING \u003d \"Facebook\";","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"    private static final String MODULE_STRING \u003d \"CS1101S\";","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"    private static final String CCA_STRING \u003d \"Basketball\";","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e emptyList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e eduList \u003d Arrays.asList(new Education(EDUCATION_STRING));","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e internshipList \u003d Arrays.asList(new Internship(INTERNSHIP_STRING));","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e moduleList \u003d Arrays.asList(new Module(MODULE_STRING));","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"    private final List\u003cTag\u003e ccaList \u003d Arrays.asList(new Cca(CCA_STRING));","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"        TagCommand tagCommand \u003d new TagCommand(outOfBoundIndex, emptyList, emptyList, emptyList, emptyList);","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"        assertCommandFailure(tagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"    public void execute_validIndexUnfilteredListAllMissing_failure() {","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"        TagCommand tagCommand \u003d new TagCommand(INDEX_FIRST_PERSON, emptyList, emptyList, emptyList, emptyList);","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"        assertCommandFailure(tagCommand, model, TagCommand.MESSAGE_NO_PARAMETERS);","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"    public void execute_validIndexUnfilteredListEduMissing_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"        Person personToTag \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"        TagCommand tagCommandEduEmpty \u003d new TagCommand(","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"                INDEX_THIRD_PERSON, emptyList, internshipList, moduleList, ccaList);","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"        String expectedMessageEdu \u003d String.format(TagCommand.MESSAGE_ARGUMENTS,","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"                personToTag.getName(),","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"                \"[]\", \"[\" + INTERNSHIP_STRING + \"]\", \"[\" + MODULE_STRING + \"]\", \"[\" + CCA_STRING + \"]\");","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"        Person editedPersonEdu \u003d new Person(","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"                personToTag.getName(), personToTag.getPhone(), personToTag.getEmail(), personToTag.getAddress(),","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"                emptyList, internshipList, moduleList, ccaList);","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"        ModelManager expectedModelEduEmpty \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"        expectedModelEduEmpty.setPerson(personToTag, editedPersonEdu);","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"        assertCommandSuccess(tagCommandEduEmpty, model, expectedMessageEdu, expectedModelEduEmpty);","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"    public void execute_validIndexUnfilteredListInternshipMissing_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"ongkimlai"},"content":"        Person personToTag \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"ongkimlai"},"content":"        TagCommand tagCommandInternshipEmpty \u003d new TagCommand(","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"ongkimlai"},"content":"                INDEX_THIRD_PERSON, eduList, emptyList, moduleList, ccaList);","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"        String expectedMessageInternship \u003d String.format(TagCommand.MESSAGE_ARGUMENTS,","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"ongkimlai"},"content":"                personToTag.getName(),","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"ongkimlai"},"content":"                \"[\" + EDUCATION_STRING + \"]\", \"[]\", \"[\" + MODULE_STRING + \"]\", \"[\" + CCA_STRING + \"]\");","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"ongkimlai"},"content":"        Person editedPersonInternship \u003d new Person(","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"ongkimlai"},"content":"                personToTag.getName(), personToTag.getPhone(), personToTag.getEmail(), personToTag.getAddress(),","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"ongkimlai"},"content":"                eduList, emptyList, moduleList, ccaList);","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"ongkimlai"},"content":"        ModelManager expectedModelInternshipEmpty \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"ongkimlai"},"content":"        expectedModelInternshipEmpty.setPerson(personToTag, editedPersonInternship);","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"ongkimlai"},"content":"        assertCommandSuccess(tagCommandInternshipEmpty, model, expectedMessageInternship, expectedModelInternshipEmpty);","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"ongkimlai"},"content":"    public void execute_validIndexUnfilteredListModuleMissing_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"ongkimlai"},"content":"        Person personToTag \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"ongkimlai"},"content":"        TagCommand tagCommandModuleEmpty \u003d new TagCommand(","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"ongkimlai"},"content":"                INDEX_THIRD_PERSON, eduList, internshipList, emptyList, ccaList);","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"ongkimlai"},"content":"        String expectedMessageModule \u003d String.format(TagCommand.MESSAGE_ARGUMENTS,","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"ongkimlai"},"content":"                personToTag.getName(),","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"ongkimlai"},"content":"                \"[\" + EDUCATION_STRING + \"]\", \"[\" + INTERNSHIP_STRING + \"]\", \"[]\", \"[\" + CCA_STRING + \"]\");","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"ongkimlai"},"content":"        Person editedPersonModule \u003d new Person(","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"ongkimlai"},"content":"                personToTag.getName(), personToTag.getPhone(), personToTag.getEmail(), personToTag.getAddress(),","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"ongkimlai"},"content":"                eduList, internshipList, emptyList, ccaList);","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"ongkimlai"},"content":"        ModelManager expectedModelModuleEmpty \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"ongkimlai"},"content":"        expectedModelModuleEmpty.setPerson(personToTag, editedPersonModule);","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"ongkimlai"},"content":"        assertCommandSuccess(tagCommandModuleEmpty, model, expectedMessageModule, expectedModelModuleEmpty);","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"ongkimlai"},"content":"    public void execute_validIndexUnfilteredListCcaMissing_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"ongkimlai"},"content":"        Person personToTag \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"ongkimlai"},"content":"        TagCommand tagCommandCcaEmpty \u003d new TagCommand(","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"ongkimlai"},"content":"                INDEX_THIRD_PERSON, eduList, internshipList, moduleList, emptyList);","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"ongkimlai"},"content":"        String expectedMessageCca \u003d String.format(TagCommand.MESSAGE_ARGUMENTS,","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"ongkimlai"},"content":"                personToTag.getName(),","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"ongkimlai"},"content":"                \"[\" + EDUCATION_STRING + \"]\", \"[\" + INTERNSHIP_STRING + \"]\", \"[\" + MODULE_STRING + \"]\", \"[]\");","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"ongkimlai"},"content":"        Person editedPersonCca \u003d new Person(","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"ongkimlai"},"content":"                personToTag.getName(), personToTag.getPhone(), personToTag.getEmail(), personToTag.getAddress(),","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"ongkimlai"},"content":"                eduList, internshipList, moduleList, emptyList);","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"ongkimlai"},"content":"        ModelManager expectedModelCcaEmpty \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"ongkimlai"},"content":"        expectedModelCcaEmpty.setPerson(personToTag, editedPersonCca);","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"ongkimlai"},"content":"        assertCommandSuccess(tagCommandCcaEmpty, model, expectedMessageCca, expectedModelCcaEmpty);","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"ongkimlai"},"content":"    public void equals() {","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"ongkimlai"},"content":"        Module moduleTag \u003d new Module(\"CS2103T\");","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"ongkimlai"},"content":"        Module moduleTag2 \u003d new Module(\"CS2101\");","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"ongkimlai"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"ongkimlai"},"content":"        assertTrue(moduleTag.equals(moduleTag));","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"ongkimlai"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"ongkimlai"},"content":"        Module moduleTagCopy \u003d new Module(\"CS2103T\");","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"ongkimlai"},"content":"        assertTrue(moduleTag.equals(moduleTagCopy));","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"ongkimlai"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"ongkimlai"},"content":"        assertFalse(moduleTag.equals(1));","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"ongkimlai"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"ongkimlai"},"content":"        assertFalse(moduleTag.equals(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"ongkimlai"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":160,"author":{"gitId":"ongkimlai"},"content":"        assertFalse(moduleTag.equals(moduleTag2));","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":5,"ongkimlai":157}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"fredtwt"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"fredtwt"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"fredtwt"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"fredtwt"},"content":"        // invalid address","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"fredtwt"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"fredtwt"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"fredtwt"},"content":"                + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"fredtwt":16,"-":107,"ongkimlai":2}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"manu2002g"},"content":"        String keyword \u003d \"Alex\";","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"manu2002g"},"content":"                FindCommand.COMMAND_WORD + \" n/\" + keyword);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"manu2002g"},"content":"        //assertEquals(new FindCommandParser().parse(\"n/\" + keyword), command);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"manu2002g":3,"-":93}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        assertParseSuccess(parser, \" 1 \", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"        assertParseSuccess(parser, \"  1 2 3   \", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"        // Contains non-zero integer -\u003e Fail","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"        // \"+1\" can be parsed into 1, should be detected and rejected -\u003e Fail","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"        assertParseFailure(parser, \"+1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        // Contains non-zero integer in the multiple case -\u003e Fail","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"        assertParseFailure(parser, \"1 a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        // Contains non-zero integer in the multiple case -\u003e Fail","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        assertParseFailure(parser, \"1 -1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"        // Contains than 1 white space between 2 integers -\u003e Fail","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        assertParseFailure(parser, \"1  2 3\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"                    DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"        // Contains zero -\u003e Fail","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"        assertParseFailure(parser, \"1 0 3\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"        // Contains duplicate integer -\u003e Fail","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"        assertParseFailure(parser, \"1 1 3\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":32,"ongkimlai":17}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"    private static final String TAG_EMPTY \u003d \" \";","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"manu2002g"},"content":"        assertParseFailure(parser, \"1 x/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":97,"author":{"gitId":"fredtwt"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"                + NAME_DESC_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"fredtwt"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-08"},{"lineNumber":152,"author":{"gitId":"fredtwt"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"fredtwt"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"fredtwt":7,"manu2002g":1,"-":171}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":5,"author":{"gitId":"manu2002g"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"manu2002g"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"manu2002g"},"content":"import seedu.address.logic.commands.FindCommand.FindPersonDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"manu2002g"},"content":"        assertParseFailure(parser, \"     \", FindCommand.MESSAGE_NO_PARAMETERS);","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"manu2002g"},"content":"        FindPersonDescriptor personDescriptor \u003d new FindPersonDescriptor();","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"manu2002g"},"content":"        List\u003cName\u003e names \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"manu2002g"},"content":"        names.add(new Name(\"Alice\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"manu2002g"},"content":"        personDescriptor.setNames(names);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"manu2002g"},"content":"        FindCommand expectedFindCommand \u003d new FindOrPredicateParser().parse(personDescriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"manu2002g"},"content":"        //assertParseSuccess(parser, \"n/Alice\", expectedFindCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"manu2002g"},"content":"        //Test cases will be added once implementation of find is complete","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"manu2002g"},"content":"        //assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"manu2002g":13,"-":25}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Cca;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Internship;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"    private static final String INVALID_TAG_CCA \u003d \"Tr@ck and F!eld\";","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"    private static final String INVALID_TAG_MODULE \u003d \"CS****S\";","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"    private static final String INVALID_TAG_INTERNSHIP \u003d \"#OCBC\";","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    private static final String INVALID_TAG_EDUCATION \u003d \"#NUS\";","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"    private static final String EMPTY_SPACE \u003d \" \";","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"viki0526"},"content":"    private static final String VALID_TAG_CCA_1 \u003d \"Track\";","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"viki0526"},"content":"    private static final String VALID_TAG_CCA_2 \u003d \"Tennis\";","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"    private static final String VALID_TAG_MODULE_1 \u003d \"CS1231S\";","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"    private static final String VALID_TAG_MODULE_2 \u003d \"CS2100\";","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"    private static final String VALID_TAG_INTERNSHIP_1 \u003d \"Google\";","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"    private static final String VALID_TAG_INTERNSHIP_2 \u003d \"Facebook\";","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"    private static final String VALID_TAG_EDUCATION_1 \u003d \"NUS\";","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"    private static final String VALID_TAG_EDUCATION_2 \u003d \"NTU\";","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"ongkimlai"},"content":"    // broken from below","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null, Tag.CCA));","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null, Tag.EDUCATION));","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null, Tag.INTERNSHIP));","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null, Tag.MODULE));","lastModifiedDate":"2022-03-11"},{"lineNumber":171,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":174,"author":{"gitId":"ongkimlai"},"content":"    public void parseTag_emptyString_throwsParseException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":175,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(EMPTY_SPACE, Tag.CCA));","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(EMPTY_SPACE, Tag.EDUCATION));","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(EMPTY_SPACE, Tag.INTERNSHIP));","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(EMPTY_SPACE, Tag.MODULE));","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG_CCA, Tag.CCA));","lastModifiedDate":"2022-03-11"},{"lineNumber":184,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG_EDUCATION, Tag.EDUCATION));","lastModifiedDate":"2022-03-11"},{"lineNumber":185,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG_INTERNSHIP, Tag.INTERNSHIP));","lastModifiedDate":"2022-03-11"},{"lineNumber":186,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG_MODULE, Tag.MODULE));","lastModifiedDate":"2022-03-11"},{"lineNumber":187,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"ongkimlai"},"content":"        Tag expectedTagCca \u003d new Cca(VALID_TAG_CCA_1);","lastModifiedDate":"2022-03-11"},{"lineNumber":193,"author":{"gitId":"ongkimlai"},"content":"        Tag expectedTagEducation \u003d new Education(VALID_TAG_EDUCATION_1);","lastModifiedDate":"2022-03-11"},{"lineNumber":194,"author":{"gitId":"ongkimlai"},"content":"        Tag expectedTagInternship \u003d new Internship(VALID_TAG_INTERNSHIP_1);","lastModifiedDate":"2022-03-11"},{"lineNumber":195,"author":{"gitId":"ongkimlai"},"content":"        Tag expectedTagModule \u003d new Module(VALID_TAG_MODULE_1);","lastModifiedDate":"2022-03-11"},{"lineNumber":196,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":197,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(expectedTagCca, ParserUtil.parseTag(VALID_TAG_CCA_1, Tag.CCA));","lastModifiedDate":"2022-03-11"},{"lineNumber":198,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(expectedTagEducation, ParserUtil.parseTag(VALID_TAG_EDUCATION_1, Tag.EDUCATION));","lastModifiedDate":"2022-03-11"},{"lineNumber":199,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(expectedTagInternship, ParserUtil.parseTag(VALID_TAG_INTERNSHIP_1, Tag.INTERNSHIP));","lastModifiedDate":"2022-03-11"},{"lineNumber":200,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(expectedTagModule, ParserUtil.parseTag(VALID_TAG_MODULE_1, Tag.MODULE));","lastModifiedDate":"2022-03-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"ongkimlai"},"content":"        String tagCcaWithWhitespace \u003d WHITESPACE + VALID_TAG_CCA_1 + WHITESPACE;","lastModifiedDate":"2022-03-11"},{"lineNumber":206,"author":{"gitId":"ongkimlai"},"content":"        String tagEducationWithWhitespace \u003d WHITESPACE + VALID_TAG_EDUCATION_1 + WHITESPACE;","lastModifiedDate":"2022-03-11"},{"lineNumber":207,"author":{"gitId":"ongkimlai"},"content":"        String tagInternshipWithWhitespace \u003d WHITESPACE + VALID_TAG_INTERNSHIP_1 + WHITESPACE;","lastModifiedDate":"2022-03-11"},{"lineNumber":208,"author":{"gitId":"ongkimlai"},"content":"        String tagModuleWithWhitespace \u003d WHITESPACE + VALID_TAG_MODULE_1 + WHITESPACE;","lastModifiedDate":"2022-03-11"},{"lineNumber":209,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":210,"author":{"gitId":"ongkimlai"},"content":"        Tag expectedTagCca \u003d new Cca(VALID_TAG_CCA_1);","lastModifiedDate":"2022-03-11"},{"lineNumber":211,"author":{"gitId":"ongkimlai"},"content":"        Tag expectedTagEducation \u003d new Education(VALID_TAG_EDUCATION_1);","lastModifiedDate":"2022-03-11"},{"lineNumber":212,"author":{"gitId":"ongkimlai"},"content":"        Tag expectedTagInternship \u003d new Internship(VALID_TAG_INTERNSHIP_1);","lastModifiedDate":"2022-03-11"},{"lineNumber":213,"author":{"gitId":"ongkimlai"},"content":"        Tag expectedTagModule \u003d new Module(VALID_TAG_MODULE_1);","lastModifiedDate":"2022-03-11"},{"lineNumber":214,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":215,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(expectedTagCca, ParserUtil.parseTag(tagCcaWithWhitespace, Tag.CCA));","lastModifiedDate":"2022-03-11"},{"lineNumber":216,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(expectedTagEducation, ParserUtil.parseTag(tagEducationWithWhitespace, Tag.EDUCATION));","lastModifiedDate":"2022-03-11"},{"lineNumber":217,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(expectedTagInternship, ParserUtil.parseTag(tagInternshipWithWhitespace, Tag.INTERNSHIP));","lastModifiedDate":"2022-03-11"},{"lineNumber":218,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(expectedTagModule, ParserUtil.parseTag(tagModuleWithWhitespace, Tag.MODULE));","lastModifiedDate":"2022-03-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":223,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null, Tag.CCA));","lastModifiedDate":"2022-03-11"},{"lineNumber":224,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null, Tag.EDUCATION));","lastModifiedDate":"2022-03-11"},{"lineNumber":225,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null, Tag.INTERNSHIP));","lastModifiedDate":"2022-03-11"},{"lineNumber":226,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null, Tag.MODULE));","lastModifiedDate":"2022-03-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":231,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(","lastModifiedDate":"2022-03-11"},{"lineNumber":232,"author":{"gitId":"ongkimlai"},"content":"                    Arrays.asList(VALID_TAG_CCA_1, INVALID_TAG_CCA), Tag.CCA));","lastModifiedDate":"2022-03-11"},{"lineNumber":233,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(","lastModifiedDate":"2022-03-11"},{"lineNumber":234,"author":{"gitId":"ongkimlai"},"content":"                    Arrays.asList(VALID_TAG_INTERNSHIP_1, INVALID_TAG_INTERNSHIP), Tag.INTERNSHIP));","lastModifiedDate":"2022-03-11"},{"lineNumber":235,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(","lastModifiedDate":"2022-03-11"},{"lineNumber":236,"author":{"gitId":"ongkimlai"},"content":"                    Arrays.asList(VALID_TAG_EDUCATION_1, INVALID_TAG_EDUCATION), Tag.EDUCATION));","lastModifiedDate":"2022-03-11"},{"lineNumber":237,"author":{"gitId":"ongkimlai"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(","lastModifiedDate":"2022-03-11"},{"lineNumber":238,"author":{"gitId":"ongkimlai"},"content":"                    Arrays.asList(VALID_TAG_MODULE_1, INVALID_TAG_MODULE), Tag.MODULE));","lastModifiedDate":"2022-03-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":243,"author":{"gitId":"ongkimlai"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList(), Tag.CCA).isEmpty());","lastModifiedDate":"2022-03-11"},{"lineNumber":244,"author":{"gitId":"ongkimlai"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList(), Tag.EDUCATION).isEmpty());","lastModifiedDate":"2022-03-11"},{"lineNumber":245,"author":{"gitId":"ongkimlai"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList(), Tag.INTERNSHIP).isEmpty());","lastModifiedDate":"2022-03-11"},{"lineNumber":246,"author":{"gitId":"ongkimlai"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList(), Tag.MODULE).isEmpty());","lastModifiedDate":"2022-03-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"ongkimlai"},"content":"        HashSet\u003cTag\u003e actualTagsCca \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2022-03-11"},{"lineNumber":252,"author":{"gitId":"ongkimlai"},"content":"                    ParserUtil.parseTags(Arrays.asList(VALID_TAG_CCA_1, VALID_TAG_CCA_2), Tag.CCA));","lastModifiedDate":"2022-03-11"},{"lineNumber":253,"author":{"gitId":"ongkimlai"},"content":"        HashSet\u003cTag\u003e actualTagsEducation \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2022-03-11"},{"lineNumber":254,"author":{"gitId":"ongkimlai"},"content":"                    ParserUtil.parseTags(Arrays.asList(VALID_TAG_EDUCATION_1, VALID_TAG_EDUCATION_2), Tag.EDUCATION));","lastModifiedDate":"2022-03-11"},{"lineNumber":255,"author":{"gitId":"ongkimlai"},"content":"        HashSet\u003cTag\u003e actualTagsInternship \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2022-03-11"},{"lineNumber":256,"author":{"gitId":"ongkimlai"},"content":"                ParserUtil.parseTags(Arrays.asList(VALID_TAG_INTERNSHIP_1, VALID_TAG_INTERNSHIP_2), Tag.INTERNSHIP));","lastModifiedDate":"2022-03-11"},{"lineNumber":257,"author":{"gitId":"ongkimlai"},"content":"        HashSet\u003cTag\u003e actualTagsModule \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2022-03-11"},{"lineNumber":258,"author":{"gitId":"ongkimlai"},"content":"                    ParserUtil.parseTags(Arrays.asList(VALID_TAG_MODULE_1, VALID_TAG_MODULE_2), Tag.MODULE));","lastModifiedDate":"2022-03-11"},{"lineNumber":259,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":260,"author":{"gitId":"ongkimlai"},"content":"        HashSet\u003cTag\u003e expectedTagsCca \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2022-03-11"},{"lineNumber":261,"author":{"gitId":"ongkimlai"},"content":"                    new Cca(VALID_TAG_CCA_1.toLowerCase()),","lastModifiedDate":"2022-03-11"},{"lineNumber":262,"author":{"gitId":"ongkimlai"},"content":"                    new Cca(VALID_TAG_CCA_2.toLowerCase())));","lastModifiedDate":"2022-03-11"},{"lineNumber":263,"author":{"gitId":"ongkimlai"},"content":"        HashSet\u003cTag\u003e expectedTagsEducation \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2022-03-11"},{"lineNumber":264,"author":{"gitId":"ongkimlai"},"content":"                    new Education(VALID_TAG_EDUCATION_1.toLowerCase()),","lastModifiedDate":"2022-03-11"},{"lineNumber":265,"author":{"gitId":"ongkimlai"},"content":"                    new Education(VALID_TAG_EDUCATION_2.toLowerCase())));","lastModifiedDate":"2022-03-11"},{"lineNumber":266,"author":{"gitId":"ongkimlai"},"content":"        HashSet\u003cTag\u003e expectedTagsInternship \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2022-03-11"},{"lineNumber":267,"author":{"gitId":"ongkimlai"},"content":"                    new Internship(VALID_TAG_INTERNSHIP_1.toLowerCase()),","lastModifiedDate":"2022-03-11"},{"lineNumber":268,"author":{"gitId":"ongkimlai"},"content":"                    new Internship(VALID_TAG_INTERNSHIP_2.toLowerCase())));","lastModifiedDate":"2022-03-11"},{"lineNumber":269,"author":{"gitId":"ongkimlai"},"content":"        HashSet\u003cTag\u003e expectedTagsModule \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2022-03-11"},{"lineNumber":270,"author":{"gitId":"ongkimlai"},"content":"                    new Module(VALID_TAG_MODULE_1.toLowerCase()),","lastModifiedDate":"2022-03-11"},{"lineNumber":271,"author":{"gitId":"ongkimlai"},"content":"                    new Module(VALID_TAG_MODULE_2.toLowerCase())));","lastModifiedDate":"2022-03-11"},{"lineNumber":272,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":273,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(expectedTagsCca, actualTagsCca);","lastModifiedDate":"2022-03-11"},{"lineNumber":274,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(expectedTagsEducation, actualTagsEducation);","lastModifiedDate":"2022-03-11"},{"lineNumber":275,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(expectedTagsInternship, actualTagsInternship);","lastModifiedDate":"2022-03-11"},{"lineNumber":276,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(expectedTagsModule, actualTagsModule);","lastModifiedDate":"2022-03-11"},{"lineNumber":277,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":279,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":280,"author":{"gitId":"ongkimlai"},"content":"    public void parseTags_collectionWithDuplicateTags_returnsTagSet() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":281,"author":{"gitId":"ongkimlai"},"content":"        List\u003cTag\u003e actualTagsCca \u003d ParserUtil.parseTags(","lastModifiedDate":"2022-03-11"},{"lineNumber":282,"author":{"gitId":"ongkimlai"},"content":"                Arrays.asList(VALID_TAG_CCA_1, VALID_TAG_CCA_1), Tag.CCA);","lastModifiedDate":"2022-03-11"},{"lineNumber":283,"author":{"gitId":"ongkimlai"},"content":"        List\u003cTag\u003e actualTagsEducation \u003d ParserUtil.parseTags(","lastModifiedDate":"2022-03-11"},{"lineNumber":284,"author":{"gitId":"ongkimlai"},"content":"                Arrays.asList(VALID_TAG_EDUCATION_1, VALID_TAG_EDUCATION_1), Tag.EDUCATION);","lastModifiedDate":"2022-03-11"},{"lineNumber":285,"author":{"gitId":"ongkimlai"},"content":"        List\u003cTag\u003e actualTagsInternship \u003d ParserUtil.parseTags(","lastModifiedDate":"2022-03-11"},{"lineNumber":286,"author":{"gitId":"ongkimlai"},"content":"                Arrays.asList(VALID_TAG_INTERNSHIP_1, VALID_TAG_INTERNSHIP_1), Tag.INTERNSHIP);","lastModifiedDate":"2022-03-11"},{"lineNumber":287,"author":{"gitId":"ongkimlai"},"content":"        List\u003cTag\u003e actualTagsModule \u003d ParserUtil.parseTags(","lastModifiedDate":"2022-03-11"},{"lineNumber":288,"author":{"gitId":"ongkimlai"},"content":"                Arrays.asList(VALID_TAG_MODULE_1, VALID_TAG_MODULE_1), Tag.MODULE);","lastModifiedDate":"2022-03-11"},{"lineNumber":289,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":290,"author":{"gitId":"ongkimlai"},"content":"        List\u003cTag\u003e expectedTagsCca \u003d Arrays.asList(new Cca(VALID_TAG_CCA_1));","lastModifiedDate":"2022-03-11"},{"lineNumber":291,"author":{"gitId":"ongkimlai"},"content":"        List\u003cTag\u003e expectedTagsEducation \u003d Arrays.asList(new Education(VALID_TAG_EDUCATION_1));","lastModifiedDate":"2022-03-11"},{"lineNumber":292,"author":{"gitId":"ongkimlai"},"content":"        List\u003cTag\u003e expectedTagsInternship \u003d Arrays.asList(new Internship(VALID_TAG_INTERNSHIP_1));","lastModifiedDate":"2022-03-11"},{"lineNumber":293,"author":{"gitId":"ongkimlai"},"content":"        List\u003cTag\u003e expectedTagsModule \u003d Arrays.asList(new Module(VALID_TAG_MODULE_1));","lastModifiedDate":"2022-03-11"},{"lineNumber":294,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":295,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(expectedTagsCca, actualTagsCca);","lastModifiedDate":"2022-03-11"},{"lineNumber":296,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(expectedTagsEducation, actualTagsEducation);","lastModifiedDate":"2022-03-11"},{"lineNumber":297,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(expectedTagsInternship, actualTagsInternship);","lastModifiedDate":"2022-03-11"},{"lineNumber":298,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(expectedTagsModule, actualTagsModule);","lastModifiedDate":"2022-03-11"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"viki0526":2,"-":178,"ongkimlai":120}},{"path":"src/test/java/seedu/address/logic/parser/TagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"public class TagCommandParserTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"    private TagCommandParser parser \u003d new TagCommandParser();","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"    private final String nonEmptyEducation \u003d \"Some education\";","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"    private final String nonEmptyModule \u003d \"Some module\";","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"    /*","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"        // have tags","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"                + PREFIX_EDUCATION + nonEmptyEducation + \" \"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"                + PREFIX_MODULE + nonEmptyModule;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"        TagCommand expectedCommand \u003d new TagCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"                TagCommandParser.convertToList(nonEmptyEducation, \"education\"), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"                TagCommandParser.convertToList(nonEmptyModule, \"module\"), new ArrayList\u003c\u003e());","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"        // no tags","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_EDUCATION + \" \" + PREFIX_MODULE;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        expectedCommand \u003d new TagCommand(INDEX_FIRST_PERSON, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"                new ArrayList\u003c\u003e());","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"        // no parameters","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"        assertParseFailure(parser, TagCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"        // no index","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"        assertParseFailure(parser, TagCommand.COMMAND_WORD + \" \" + nonEmptyEducation, expectedMessage);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"fredtwt":46}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"fredtwt"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"fredtwt"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"            return events;","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"fredtwt"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"fredtwt":9,"-":97}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"manu2002g"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicateOr;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"manu2002g"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicateOr(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"manu2002g":2,"-":130}},{"path":"src/test/java/seedu/address/model/person/CcaTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"public class CcaTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Cca(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"        String invalidCca \u003d \" \";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Cca(invalidCca));","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    public void isValidTagName() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        // null cca","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e Cca.isValidTagName(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"        // invalid cca","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Cca.isValidTagName(\"\")); // empty string","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Cca.isValidTagName(\" \")); // spaces only","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Cca.isValidTagName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Cca.isValidTagName(\"bouldering*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"        // valid cca","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Cca.isValidTagName(\"bouldering\")); // alphabets only","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Cca.isValidTagName(\"12345\")); // numbers only","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Cca.isValidTagName(\"bould3ring\")); // alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Cca.isValidTagName(\"Bouldering\")); // with capital letters","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Cca.isValidTagName(\"NUS Bouldering and Climbing Team\")); // long names","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"fredtwt":40}},{"path":"src/test/java/seedu/address/model/person/EducationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"public class EducationTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Education(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"        String invalidEducation \u003d \" \";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Education(invalidEducation));","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    public void isValidTagName() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        // null education","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e Education.isValidTagName(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"        // invalid education","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Education.isValidTagName(\"\")); // empty string","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Education.isValidTagName(\" \")); // spaces only","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Education.isValidTagName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Education.isValidTagName(\"Computer Science*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"        // valid education","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Education.isValidTagName(\"computer science\")); // alphabets only","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Education.isValidTagName(\"12345\")); // numbers only","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Education.isValidTagName(\"computer science 2nd year\")); // alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Education.isValidTagName(\"Computer Science\")); // with capital letters","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Education.isValidTagName(\"Computer Science specialising in software engineering\")); // long names","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"fredtwt":40}},{"path":"src/test/java/seedu/address/model/person/InternshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"public class InternshipTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Internship(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"        String invalidInternship \u003d \" \";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Internship(invalidInternship));","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    public void isValidTagName() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        // null internship","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e Internship.isValidTagName(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"        // invalid internship","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Internship.isValidTagName(\"\")); // empty string","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Internship.isValidTagName(\" \")); // spaces only","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Internship.isValidTagName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Internship.isValidTagName(\"bytedance*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"        // valid internship","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Internship.isValidTagName(\"bytedance\")); // alphabets only","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Internship.isValidTagName(\"12345\")); // numbers only","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Internship.isValidTagName(\"byt3danc3\")); // alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Internship.isValidTagName(\"ByteDance\")); // with capital letters","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Internship.isValidTagName(\"Oversea Chinese Banking Corporation\")); // long names","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"fredtwt":40}},{"path":"src/test/java/seedu/address/model/person/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"public class ModuleTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Module(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"        String invalidModule \u003d \" \";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Module(invalidModule));","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"    public void isValidTagName() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"        // null module","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e Module.isValidTagName(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"        // invalid module","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Module.isValidTagName(\"\")); // empty string","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Module.isValidTagName(\" \")); // spaces only","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Module.isValidTagName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"        assertFalse(Module.isValidTagName(\"cs2040s*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"        // valid module","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Module.isValidTagName(\"discrete math\")); // alphabets only","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Module.isValidTagName(\"12345\")); // numbers only","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Module.isValidTagName(\"cs2040s\")); // alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Module.isValidTagName(\"CS2040S\")); // with capital letters","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"        assertTrue(Module.isValidTagName(\"Effective Communication for Computing Professionals\")); // long names","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"fredtwt":40}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"manu2002g"},"content":"        NameContainsKeywordsPredicateOr firstPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"manu2002g"},"content":"                new NameContainsKeywordsPredicateOr(firstPredicateKeywordList);","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"manu2002g"},"content":"        NameContainsKeywordsPredicateOr secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"manu2002g"},"content":"                new NameContainsKeywordsPredicateOr(secondPredicateKeywordList);","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"manu2002g"},"content":"        NameContainsKeywordsPredicateOr firstPredicateCopy \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"manu2002g"},"content":"                new NameContainsKeywordsPredicateOr(firstPredicateKeywordList);","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"manu2002g"},"content":"        NameContainsKeywordsPredicateOr predicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"manu2002g"},"content":"                new NameContainsKeywordsPredicateOr(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"manu2002g"},"content":"        predicate \u003d new NameContainsKeywordsPredicateOr(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"manu2002g"},"content":"        predicate \u003d new NameContainsKeywordsPredicateOr(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"manu2002g"},"content":"        predicate \u003d new NameContainsKeywordsPredicateOr(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"manu2002g"},"content":"        NameContainsKeywordsPredicateOr predicate \u003d new NameContainsKeywordsPredicateOr(Collections.emptyList());","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"manu2002g"},"content":"        predicate \u003d new NameContainsKeywordsPredicateOr(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"manu2002g"},"content":"        predicate \u003d new NameContainsKeywordsPredicateOr(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"manu2002g":14,"-":65}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"fredtwt":1,"-":75,"ongkimlai":3}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"fredtwt"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"fredtwt":2,"-":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Cca;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Internship;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"    private static final List\u003cJsonAdaptedTag\u003e INVALID_CCAS \u003d Arrays.asList(new JsonAdaptedTag(\"track \u0026 field\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"    private static final List\u003cJsonAdaptedTag\u003e INVALID_EDUCATIONS \u003d Arrays.asList(new JsonAdaptedTag(\"computer \"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"            + \"science 2nd \" + \"year!\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"    private static final List\u003cJsonAdaptedTag\u003e INVALID_INTERNSHIPS \u003d Arrays.asList(new JsonAdaptedTag(\"bosch*\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"    private static final List\u003cJsonAdaptedTag\u003e INVALID_MODULES \u003d Arrays.asList(new JsonAdaptedTag(\"cs2040s~\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_EDUCATIONS \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"            AMY.getEducations().stream().map(JsonAdaptedTag::new).collect(Collectors.toList());","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_INTERNSHIPS \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"            AMY.getEducations().stream().map(JsonAdaptedTag::new).collect(Collectors.toList());","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_MODULES \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"            AMY.getEducations().stream().map(JsonAdaptedTag::new).collect(Collectors.toList());","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_CCAS \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"            AMY.getEducations().stream().map(JsonAdaptedTag::new).collect(Collectors.toList());","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(AMY);","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"        assertEquals(AMY, person.toModelType());","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"                        VALID_EDUCATIONS, VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"fredtwt"},"content":"                VALID_EDUCATIONS, VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"fredtwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_EDUCATIONS,","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"fredtwt"},"content":"                        VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"fredtwt"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"fredtwt"},"content":"                VALID_EDUCATIONS, VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"fredtwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_EDUCATIONS,","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"fredtwt"},"content":"                        VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"                VALID_EDUCATIONS, VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_EDUCATIONS,","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"                        VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_EDUCATIONS,","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"                VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"fredtwt"},"content":"    public void toModelType_invalidEducation_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"fredtwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_EDUCATIONS,","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"fredtwt"},"content":"                        VALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"fredtwt"},"content":"        String expectedMessage \u003d Education.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"fredtwt"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"fredtwt"},"content":"    public void toModelType_invalidInternship_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"fredtwt"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"fredtwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_EDUCATIONS,","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"fredtwt"},"content":"                        INVALID_INTERNSHIPS, VALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"fredtwt"},"content":"        String expectedMessage \u003d Internship.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"fredtwt"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"fredtwt"},"content":"    public void toModelType_invalidModule_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"fredtwt"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"fredtwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_EDUCATIONS,","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"fredtwt"},"content":"                        VALID_INTERNSHIPS, INVALID_MODULES, VALID_CCAS);","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"fredtwt"},"content":"        String expectedMessage \u003d Module.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"fredtwt"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"fredtwt"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"fredtwt"},"content":"    public void toModelType_invalidCca_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"fredtwt"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"fredtwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_EDUCATIONS,","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"fredtwt"},"content":"                        VALID_INTERNSHIPS, VALID_MODULES, INVALID_CCAS);","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"fredtwt"},"content":"        String expectedMessage \u003d Cca.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"fredtwt"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fredtwt":68,"-":90}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Cca;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        descriptor.setEducations(person.getEducations());","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"        descriptor.setInternships(person.getInternships());","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        descriptor.setModules(person.getModules());","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"        descriptor.setCcas(person.getCcas());","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"     * Sets the {@code Education} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"ongkimlai"},"content":"    public EditPersonDescriptorBuilder withEducation(String education) {","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"ongkimlai"},"content":"        descriptor.setEducations(Arrays.asList(new Education(education)));","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"ongkimlai"},"content":"     * Sets the {@code Internship} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"ongkimlai"},"content":"    public EditPersonDescriptorBuilder withInternship(String internship) {","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"ongkimlai"},"content":"        descriptor.setInternships(Arrays.asList(new Education(internship)));","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"ongkimlai"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"ongkimlai"},"content":"     * Sets the {@code Module} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"ongkimlai"},"content":"    public EditPersonDescriptorBuilder withModule(String module) {","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"ongkimlai"},"content":"        descriptor.setModules(Arrays.asList(new Module(module)));","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"ongkimlai"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"ongkimlai"},"content":"     * Sets the {@code Cca} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"ongkimlai"},"content":"    public EditPersonDescriptorBuilder withCca(String cca) {","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"ongkimlai"},"content":"        descriptor.setCcas(Arrays.asList(new Cca(cca)));","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"ongkimlai"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":77,"ongkimlai":37}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Cca;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Internship;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"    public static final List\u003cTag\u003e DEFAULT_EDUCATION \u003d Arrays.asList(new Education(\"Computer Science\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"    public static final List\u003cTag\u003e DEFAULT_INTERNSHIP \u003d Arrays.asList(new Internship(\"GIC\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    public static final List\u003cTag\u003e DEFAULT_MODULE \u003d Arrays.asList(new Module(\"CS2040S\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"    public static final List\u003cTag\u003e DEFAULT_CCA \u003d Arrays.asList(new Cca(\"Netball\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"    private List\u003cTag\u003e educations;","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"    private List\u003cTag\u003e internships;","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"    private List\u003cTag\u003e modules;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"    private List\u003cTag\u003e ccas;","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"        educations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"        internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"        modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"        ccas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"        educations \u003d personToCopy.getEducations();","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"fredtwt"},"content":"        internships \u003d personToCopy.getInternships();","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"        modules \u003d personToCopy.getModules();","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"fredtwt"},"content":"        ccas \u003d personToCopy.getCcas();","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"fredtwt"},"content":"     * Sets the {@code Education} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"fredtwt"},"content":"    public PersonBuilder withEducation(String education) {","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"        educations.add(new Education(education));","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"fredtwt"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"fredtwt"},"content":"     * Sets the {@code Internship} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"fredtwt"},"content":"    public PersonBuilder withInternship(String internship) {","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"fredtwt"},"content":"        internships.add(new Internship(internship));","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"fredtwt"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"fredtwt"},"content":"     * Sets the {@code Module} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"fredtwt"},"content":"    public PersonBuilder withModule(String module) {","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"fredtwt"},"content":"        modules.add(new Module(module));","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"fredtwt"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"fredtwt"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"fredtwt"},"content":"     * Sets the {@code Cca} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"fredtwt"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"fredtwt"},"content":"    public PersonBuilder withCca(String cca) {","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"fredtwt"},"content":"        ccas.add(new Cca(cca));","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"fredtwt"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"fredtwt"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"ongkimlai"},"content":"    private boolean isAllTagsEmpty() {","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"ongkimlai"},"content":"        return educations.isEmpty() \u0026\u0026 internships.isEmpty() \u0026\u0026 modules.isEmpty() \u0026\u0026 ccas.isEmpty();","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"ongkimlai"},"content":"     * Creates a Person with the appropriate fields.","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":142,"author":{"gitId":"ongkimlai"},"content":"        return isAllTagsEmpty()","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"ongkimlai"},"content":"                ? new Person(name, phone, email, address)","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"ongkimlai"},"content":"                : new Person(name, phone, email, address, educations, internships, modules, ccas);","lastModifiedDate":"2022-03-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"fredtwt":51,"-":81,"ongkimlai":15}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"        descriptor.getEducations().stream().map(education -\u003e sb.append(PREFIX_EDUCATION)","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"                .append(education.tagName)","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"                .append(\" \"));","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"        descriptor.getInternships().stream().map(internship -\u003e sb.append(PREFIX_INTERNSHIP)","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"                .append(internship.tagName)","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"                .append(\" \"));","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"        descriptor.getModules().stream().map(module -\u003e sb.append(PREFIX_MODULE)","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"                .append(module.tagName)","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"                .append(\" \"));","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"        descriptor.getCcas().stream().map(cca -\u003e sb.append(PREFIX_CCA)","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"                .append(cca.tagName)","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"                .append(\" \"));","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"    private static String tagsToString(List\u003cTag\u003e tagList, Prefix prefix) {","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"        for (Tag t : tagList) {","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"            sb.append(prefix).append(t.tagName).append(\" \");","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"fredtwt":12,"-":50,"ongkimlai":14}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EDUCATION_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERNSHIP_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"            .withPhone(\"94351253\").withEducation(\"NUS\").withCca(\"Basketball\")","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"            .withInternship(\"Facebook\").withModule(\"CS1101S\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"johnd@example.com\")","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"            .withPhone(\"98765432\").withEducation(\"SMU\").withCca(\"Football\")","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"            .withInternship(\"Amazon\").withModule(\"CS3243\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").build();","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withEducation(VALID_EDUCATION_AMY)","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"            .withCca(VALID_CCA_AMY).withInternship(VALID_INTERNSHIP_AMY).withModule(VALID_MODULE_AMY)","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"            .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"            //.withEducation(VALID_EDUCATION_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"            //.withCca(VALID_CCA_BOB).withInternship(VALID_INTERNSHIP_BOB).withModule(VALID_MODULE_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"fredtwt":8,"-":66,"ongkimlai":8}}]
