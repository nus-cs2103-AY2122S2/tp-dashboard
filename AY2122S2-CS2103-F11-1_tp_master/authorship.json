[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# ManageEZPZ","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103-F11-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103-F11-1/tp/actions)","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103-F11-1/tp/branch/master/graph/badge.svg?token\u003dILZDIFELY7)](https://codecov.io/gh/AY2122S2-CS2103-F11-1/tp)","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"ManageEZPZ is a desktop application that allows managers or supervisors to manage employees and assign tasks to them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java. \u003cbr/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"\u003cb\u003eExample usages:\u003c/b\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"* add tasks such as Todos, Deadlines and Events","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"* view all tasks to have a better picture of the current schedule","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"* edit tasks when details of the said task has been updated","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"* mark and unmark the tasks as done or not done yet","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"* assign a task to an employee","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"* assign a priority to a task","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"* add employees which can be assigned tasks to","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"* view all employees to get their personal details and number of assigned tasks","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"* edit employees when personal details of the said employee has been updated","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"\u003cb\u003eAcknowledgment:\u003c/b\u003e\u003c/br\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"The images used in ManageEZPZ are attributed as follows:","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"- Employee icon, Priority icons, Phone icon and Email icon created by Jun Yang (member of the team)","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"- Task icon created by \u003ca href\u003d\"https://www.flaticon.com/premium-icon/task_3774569\"\u003efeen (Flaticon)\u003c/a\u003e and edited by Jun Yang to fill up colours and change stroke colour","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"alfredkohhh":8,"dannytayjy":15,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"mainClassName \u003d \u0027manageezpz.Main\u0027","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"ChanWeiJie"},"content":"    archiveName \u003d \u0027ManageEZPZ.jar\u0027","lastModifiedDate":"2022-04-10"},{"lineNumber":70,"author":{"gitId":"ChanWeiJie"},"content":"    archiveVersion \u003d \"v1.4\"","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"ChanWeiJie"},"content":"run {","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"ChanWeiJie"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"dannytayjy":1,"ChanWeiJie":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"### Loke Jin Xue Aaron","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"aaron-ljx"},"content":"\u003cimg src\u003d\"images/aaron-ljx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"aaron-ljx"},"content":"[[github](http://github.com/aaron-ljx)]","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"aaron-ljx"},"content":"[[portfolio](team/aaron-ljx.md)]","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"aaron-ljx"},"content":"* Role: Developer","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"aaron-ljx"},"content":"* Responsibilities: Deliverables and Deadlines","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"aaron-ljx"},"content":"* In Charge of Component Logic","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"### Alfred Koh","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"\u003cimg src\u003d\"images/alfredkohhh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"[[github](http://github.com/alfredkohhh)]","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"[[portfolio](team/alfredkohhh.md)]","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"* Role: Developer","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"* Responsibilities: Integration, Documentation, Deliverables and Deadlines","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"* In Charge of: Storage","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"### Tay Jun Yang","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"\u003cimg src\u003d\"images/dannytayjy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"[[github](http://github.com/dannytayjy)]","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"[[portfolio](team/dannytayjy.md)]","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"* Responsibilities: Deliverables and Deadlines, Code Quality","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"* In Charge of Component UI","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"### Ng Wen Hao Dennis","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"\u003cimg src\u003d\"images/denniszedead.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"[[github](http://github.com/denniszedead)]","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"[[portfolio](team/denniszedead.md)]","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"* Responsibilities: Deliverables and Deadlines, Quality Assurance","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"* In Charge of Component Logic","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"### Chan Wei Jie","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"\u003cimg src\u003d\"images/chanweijie.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"[[github](http://github.com/chanweijie)]","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"[[portfolio](team/chanweijie.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"* Responsibilities: Integration, Documentation, Deliverables and Deadlines  ","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"* In Charge of Component Model","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"Denniszedead":6,"alfredkohhh":7,"dannytayjy":6,"ChanWeiJie":6,"aaron-ljx":7,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"* [Documentation idea of splitting the Model component into 2, to prevent cramping of images](https://ay2021s2-cs2103t-t12-4.github.io/tp/DeveloperGuide.html#endpoint-components)","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S2-CS2103-F11-1/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S2-CS2103-F11-1/tp/blob/master/src/main/java/manageezpz/Main.java) and [`MainApp`](https://github.com/AY2122S2-CS2103-F11-1/tp/blob/master/src/main/java/manageezpz/MainApp.java). It is responsible for,","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `deleteEmployee 1`.","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S2-CS2103-F11-1/tp/blob/master/src/main/java/manageezpz/ui/Ui.java))","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"dannytayjy"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `TaskListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S2-CS2103-F11-1/tp/blob/master/src/main/java/manageezpz/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S2-CS2103-F11-1/tp/blob/master/src/main/resources/view/MainWindow.fxml).","lastModifiedDate":"2022-04-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"* depends on some classes in the `Model` component, as it displays `Task` object residing in the `Model`.","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"ChanWeiJie"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"Denniszedead"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S2-CS2103-F11-1/tp/blob/master/src/main/java/manageezpz/logic/Logic.java)","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"ChanWeiJie"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddTodoTaskCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2022-04-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"ChanWeiJie"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"deleteTask 1\")` API call.","lastModifiedDate":"2022-04-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"ChanWeiJie"},"content":"![Interactions Inside the Logic Component for the `addTask` Command](images/AddSequenceDiagram.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"ChanWeiJie"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteTaskCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-04-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"ChanWeiJie"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":113,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"ChanWeiJie"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddTodoTaskCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddTodoTaskCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2022-04-10"},{"lineNumber":116,"author":{"gitId":"ChanWeiJie"},"content":"* All `XYZCommandParser` classes (e.g., `AddTodoTaskCommandParser`, `DeleteTaskCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-04-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":120,"author":{"gitId":"ChanWeiJie"},"content":"**API** : [`Model.java`](https://github.com/AY2122S2-CS2103-F11-1/tp/blob/master/src/main/java/manageezpz/model/Model.java)","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"ChanWeiJie"},"content":"\u003cimg src\u003d\"images/ModelClassDiagramUpdated.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"ChanWeiJie"},"content":"* stores the task list data i.e., all `Task` objects (which are contained in a `UniqueTaskList` object).","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"ChanWeiJie"},"content":"* stores the currently \u0027selected\u0027 `Task` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cTask\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"ChanWeiJie"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `TaskList`, which `Task` references. This allows `TaskList` to only require one `Tag` object per unique tag, instead of each `Task` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"ChanWeiJie"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagramUpdated.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"ChanWeiJie"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"alfredkohhh"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S2-CS2103-F11-1/tp/blob/master/src/main/java/manageezpz/storage/Storage.java)","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"alfredkohhh"},"content":"* `JsonAddressBookStorage` has a `JsonSerializableAddressBook`, which have `JsonAdaptedPerson` and `JsonAdaptedTask` to store and load both Persons and Tasks.","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"ChanWeiJie"},"content":"Classes used by multiple components are in the `manageezpz.commons` package.","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"ChanWeiJie"},"content":"### **Task Components**","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"ChanWeiJie"},"content":"- Added Classes into the model Component to encapsulate a Task.","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"ChanWeiJie"},"content":"#### **Implementation**","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"ChanWeiJie"},"content":"\u003cimg src\u003d\"images/ModelTaskClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"ChanWeiJie"},"content":"A `Task`,","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"ChanWeiJie"},"content":"- is stored in `uniqueTaskList` of the Model","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"ChanWeiJie"},"content":"- can be represented by a `Todo`, `Event`, or `Deadline`","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"ChanWeiJie"},"content":"A `Task` contains the following attributes,","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"ChanWeiJie"},"content":"1. a `Description`, which represent the details of the Task","lastModifiedDate":"2022-04-10"},{"lineNumber":174,"author":{"gitId":"ChanWeiJie"},"content":"2. a `Date`, which represent the day, month and year as specified by a number of the Task","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"ChanWeiJie"},"content":"3. a `Time`, which represent the period during the Task exists or happens","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"ChanWeiJie"},"content":"4. can be assigned/Tagged to multiple different `Person`","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"ChanWeiJie"},"content":"5. a type, to differentiate between the different types of task","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"ChanWeiJie"},"content":"6. can be marked/unmarked based on whether the task is done or not.","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"alfredkohhh"},"content":"7. can be assigned to a single `Priority` such as \"NONE\", \"LOW\", \"MEDIUM\" or \"HIGH\"","lastModifiedDate":"2022-04-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":181,"author":{"gitId":"ChanWeiJie"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":183,"author":{"gitId":"ChanWeiJie"},"content":"#### Aspect: How the components within Task are added or changed","lastModifiedDate":"2022-03-28"},{"lineNumber":184,"author":{"gitId":"ChanWeiJie"},"content":"- **Current Choice**: Attributes within `Task` are immutable, meaning that if there is an attribute that has to be edited, a new Task object has to be created.","lastModifiedDate":"2022-03-28"},{"lineNumber":185,"author":{"gitId":"ChanWeiJie"},"content":"    * Pros: Concept of Immutability is met, making the code less prone to bugs as all components of an Task object are fixed","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"ChanWeiJie"},"content":"    * Cons: Less flexible, more steps needed in editing Task objects","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"ChanWeiJie"},"content":"- Alternative 1: Allow certain components within Task, like Time and Date to be mutable","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"ChanWeiJie"},"content":"    * Pros: Less overhead as fewer objects are created","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"ChanWeiJie"},"content":"    * Cons: Prone to error as a Component might not be correctly changed","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"ChanWeiJie"},"content":"### Task Adding feature","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"ChanWeiJie"},"content":"#### What is Task Adding feature about?","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"ChanWeiJie"},"content":"The Add Task mechanism is facilitated by `AddressBook`. This feature enhances `AddressBook` by allowing to store not only `Person`, but also `Task`. This is stored internally as a `UniquePersonList` and `UniqueTaskList`. Additionally, the feature implements the following operations:","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"ChanWeiJie"},"content":"* `AddressBook#addTodo(Todo)` —  Adds the `Todo` Task to `UniqueTaskList`","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"ChanWeiJie"},"content":"* `AddressBook#addDeadline(Deadline)` — Adds the `Deadline` Task to `UniqueTaskList`","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"ChanWeiJie"},"content":"* `AddressBook#addEvent(Event)` — Adds the `Event` Task to `UniqueTaskList`","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"ChanWeiJie"},"content":"For the command, the feature extends `command`, and is implemented as such:","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"ChanWeiJie"},"content":"* `addTodo desc/TASK_DESCRIPTION`","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"ChanWeiJie"},"content":"* `addDeadline desc/TASK_DESCRIPTION by/DATE TIME`","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"ChanWeiJie"},"content":"* `addEvent desc/TASK_DESCRIPTION at/DATE START_TIME END_TIME`","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"ChanWeiJie"},"content":"#### Implementation Flow of Task Adding feature","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"ChanWeiJie"},"content":"Given below is an example usage scenario and how the Task Adding mechanism behaves at each step.","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"ChanWeiJie"},"content":"Note: ManageEZPZ comes with preloaded data, and can be started on a fresh state with the `clear` command.","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"ChanWeiJie"},"content":"Step 1. The user launches the application for the first time. ManageEZPZ will be initialized with the preloaded data.","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"ChanWeiJie"},"content":"Step 2. The user executes `addTodo desc/Watch Netflix with Mum` command to create a new `Todo` Task.","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"ChanWeiJie"},"content":"![AddTodo1](images/AddTodo.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"ChanWeiJie"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"ChanWeiJie"},"content":"- The Task adding commands are straight-to-the-point and efficient for users to add Tasks to ManageEZPZ.","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"ChanWeiJie"},"content":"- The prefixes allow users to understand what the different types of Task need in order to be created.","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":221,"author":{"gitId":"ChanWeiJie"},"content":"#### UML Diagram for Adding Todo Task","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"ChanWeiJie"},"content":"The following activity diagram summarizes what happens when a user executes a new `addTodo` command:","lastModifiedDate":"2022-03-28"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":225,"author":{"gitId":"ChanWeiJie"},"content":"\u003cimg src\u003d\"images/AddTaskActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":227,"author":{"gitId":"dannytayjy"},"content":"### Task Marking feature","lastModifiedDate":"2022-03-25"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":229,"author":{"gitId":"dannytayjy"},"content":"#### What is Task Marking feature about?","lastModifiedDate":"2022-03-25"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":231,"author":{"gitId":"dannytayjy"},"content":"The Mark Task mechanism is facilitated by `AddressBook`. This feature allows the user to mark a task as done.","lastModifiedDate":"2022-03-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":233,"author":{"gitId":"dannytayjy"},"content":"For the command, the feature extends `command`, and is implemented as such:","lastModifiedDate":"2022-03-25"},{"lineNumber":234,"author":{"gitId":"dannytayjy"},"content":"* `markTask INDEX`","lastModifiedDate":"2022-04-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":236,"author":{"gitId":"dannytayjy"},"content":"#### Implementation Flow of Task Marking feature","lastModifiedDate":"2022-03-25"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":238,"author":{"gitId":"dannytayjy"},"content":"Given below is an example usage scenario and how the Mark Task mechanism behaves at each step.","lastModifiedDate":"2022-03-25"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":240,"author":{"gitId":"dannytayjy"},"content":"Step 1. The user lists all the task by listing the task with the \u0027list\u0027 command.","lastModifiedDate":"2022-03-25"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":242,"author":{"gitId":"dannytayjy"},"content":"Step 2. The user executes `markTask 3` command to mark the task `Meeting with Client` as done.","lastModifiedDate":"2022-04-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":244,"author":{"gitId":"dannytayjy"},"content":"![](images/MarkTask.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":246,"author":{"gitId":"dannytayjy"},"content":"#### Design considerations","lastModifiedDate":"2022-03-25"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":248,"author":{"gitId":"dannytayjy"},"content":"- The user is able to mark a task as done through the index number specified in the list view.","lastModifiedDate":"2022-04-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":250,"author":{"gitId":"dannytayjy"},"content":"#### UML Diagram for Task Marking","lastModifiedDate":"2022-03-25"},{"lineNumber":251,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":252,"author":{"gitId":"dannytayjy"},"content":"![](images/MarkClassDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":253,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":254,"author":{"gitId":"dannytayjy"},"content":"### Task Unmarking feature","lastModifiedDate":"2022-03-25"},{"lineNumber":255,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":256,"author":{"gitId":"dannytayjy"},"content":"#### What is Task Unmarking feature about?","lastModifiedDate":"2022-03-25"},{"lineNumber":257,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":258,"author":{"gitId":"dannytayjy"},"content":"The Unmark Task mechanism is facilitated by `AddressBook`. This feature allows the user to unmark a task, which changes the status back to not done.","lastModifiedDate":"2022-04-09"},{"lineNumber":259,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":260,"author":{"gitId":"dannytayjy"},"content":"For the command, the feature extends `command`, and is implemented as such:","lastModifiedDate":"2022-03-25"},{"lineNumber":261,"author":{"gitId":"dannytayjy"},"content":"* `unmarkTask INDEX`","lastModifiedDate":"2022-04-09"},{"lineNumber":262,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":263,"author":{"gitId":"dannytayjy"},"content":"#### Implementation Flow of Task Unmarking feature","lastModifiedDate":"2022-03-25"},{"lineNumber":264,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":265,"author":{"gitId":"dannytayjy"},"content":"Given below is an example usage scenario and how the Unmark Task mechanism behaves at each step.","lastModifiedDate":"2022-03-25"},{"lineNumber":266,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":267,"author":{"gitId":"dannytayjy"},"content":"Step 1. The user lists all the task by listing the task with the \u0027list\u0027 command.","lastModifiedDate":"2022-03-25"},{"lineNumber":268,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":269,"author":{"gitId":"dannytayjy"},"content":"Step 2. The user executes `unmark 3` command to unmark the task `Meeting with Client`, which changes the status back to not done.","lastModifiedDate":"2022-04-09"},{"lineNumber":270,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":271,"author":{"gitId":"dannytayjy"},"content":"![](images/UnmarkTask.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":272,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":273,"author":{"gitId":"dannytayjy"},"content":"#### Design considerations","lastModifiedDate":"2022-03-25"},{"lineNumber":274,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":275,"author":{"gitId":"dannytayjy"},"content":"- The user is able to unmark a task, which changes the status back to not done through the index number specified in the list view.","lastModifiedDate":"2022-04-09"},{"lineNumber":276,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":277,"author":{"gitId":"dannytayjy"},"content":"#### UML Diagram for Task Unmarking","lastModifiedDate":"2022-03-25"},{"lineNumber":278,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":279,"author":{"gitId":"dannytayjy"},"content":"![](images/UnmarkClassDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":280,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":281,"author":{"gitId":"dannytayjy"},"content":"### Task Deleting feature","lastModifiedDate":"2022-03-25"},{"lineNumber":282,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":283,"author":{"gitId":"dannytayjy"},"content":"#### What is Task Deleting feature about?","lastModifiedDate":"2022-03-25"},{"lineNumber":284,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":285,"author":{"gitId":"dannytayjy"},"content":"The Delete Task mechanism is facilitated by `AddressBook`. This feature allows the user to delete a task.","lastModifiedDate":"2022-03-25"},{"lineNumber":286,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":287,"author":{"gitId":"dannytayjy"},"content":"For the command, the feature extends `command`, and is implemented as such:","lastModifiedDate":"2022-03-25"},{"lineNumber":288,"author":{"gitId":"dannytayjy"},"content":"* `deleteTask INDEX`","lastModifiedDate":"2022-04-09"},{"lineNumber":289,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":290,"author":{"gitId":"dannytayjy"},"content":"#### Implementation Flow of Task Deleting feature","lastModifiedDate":"2022-03-25"},{"lineNumber":291,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":292,"author":{"gitId":"dannytayjy"},"content":"Given below is an example usage scenario and how the Delete Task mechanism behaves at each step.","lastModifiedDate":"2022-03-25"},{"lineNumber":293,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":294,"author":{"gitId":"dannytayjy"},"content":"Step 1. The user lists all the task by listing the task with the \u0027list\u0027 command.","lastModifiedDate":"2022-03-25"},{"lineNumber":295,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":296,"author":{"gitId":"dannytayjy"},"content":"Step 2. The user executes `deleteTask 3` command to delete the task `Meeting with Client`.","lastModifiedDate":"2022-04-09"},{"lineNumber":297,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":298,"author":{"gitId":"dannytayjy"},"content":"![](images/DeleteTask.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":299,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":300,"author":{"gitId":"dannytayjy"},"content":"#### Design considerations","lastModifiedDate":"2022-03-25"},{"lineNumber":301,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":302,"author":{"gitId":"dannytayjy"},"content":"- The user is able to delete a task as through the index number specified in the list view.","lastModifiedDate":"2022-04-09"},{"lineNumber":303,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":304,"author":{"gitId":"dannytayjy"},"content":"#### UML Diagram for Task Deleting","lastModifiedDate":"2022-03-25"},{"lineNumber":305,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":306,"author":{"gitId":"dannytayjy"},"content":"![](images/DeleteClassDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":307,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":308,"author":{"gitId":"ChanWeiJie"},"content":"### Editing details of a task","lastModifiedDate":"2022-03-24"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"ChanWeiJie"},"content":"The edit mechanism is facilitated by `EditTaskCommandParser` and `EditTaskCommand`. \u003cbr/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":311,"author":{"gitId":"aaron-ljx"},"content":"`EditTaskCommandParser.parse()` - parses the input by the user and returns a `EditTaskCommand` object. \u003cbr/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":312,"author":{"gitId":"aaron-ljx"},"content":"`EditTaskCommand.execute()` - creates a new `Task` object based on the parsed user input and calls `Model.setTask()`","lastModifiedDate":"2022-03-24"},{"lineNumber":313,"author":{"gitId":"aaron-ljx"},"content":"to replace the old `Task` object with the new `Task` object.","lastModifiedDate":"2022-03-24"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"aaron-ljx"},"content":"The command is as follows: editTask [TASK_INDEX] desc/ [DESC] at/ [TIME] date/ [DATE]","lastModifiedDate":"2022-04-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"aaron-ljx"},"content":"- [TASK_INDEX] must not be empty.","lastModifiedDate":"2022-03-24"},{"lineNumber":318,"author":{"gitId":"aaron-ljx"},"content":"- At least one of [DESC], [TIME] and [DATE] should not be empty.","lastModifiedDate":"2022-03-24"},{"lineNumber":319,"author":{"gitId":"aaron-ljx"},"content":"- desc/ [DESC], at/ [TIME] or date/ [DATE] may be omitted but all of them cannot be omitted at the same time.","lastModifiedDate":"2022-03-24"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"aaron-ljx"},"content":"Below is a sequence diagram of the editing of a task.","lastModifiedDate":"2022-03-24"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"aaron-ljx"},"content":"![EditTaskSequenceDiagram](images/EditTaskSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"aaron-ljx"},"content":"Step 1. The user executes a `editTask 1 desc/ eat` to edit the 1st task in the address book. The `editTask` command","lastModifiedDate":"2022-03-24"},{"lineNumber":326,"author":{"gitId":"aaron-ljx"},"content":"in `AddressBookParser` calls `EditTaskCommandParser.parse()`","lastModifiedDate":"2022-03-24"},{"lineNumber":327,"author":{"gitId":"aaron-ljx"},"content":"and parses the task index which is given as 1 and the task description that the","lastModifiedDate":"2022-03-24"},{"lineNumber":328,"author":{"gitId":"aaron-ljx"},"content":"user wants to edit his task with is parsed as a String with value eat.","lastModifiedDate":"2022-03-24"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"aaron-ljx"},"content":"If either the description or the date or time was not provided by the user, then the default value","lastModifiedDate":"2022-03-24"},{"lineNumber":331,"author":{"gitId":"aaron-ljx"},"content":"would be an empty String. Otherwise, it would be parsed as a String with value provided by the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":332,"author":{"gitId":"aaron-ljx"},"content":"It is not the responsibility of `EditTaskCommandParser.parse()` to ensure that the input provided by the user is valid.","lastModifiedDate":"2022-03-24"},{"lineNumber":333,"author":{"gitId":"aaron-ljx"},"content":"It will however ensure that a `Task` index is provided and","lastModifiedDate":"2022-03-24"},{"lineNumber":334,"author":{"gitId":"aaron-ljx"},"content":"at least the description or date or time has a corresponding value.","lastModifiedDate":"2022-03-24"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"aaron-ljx"},"content":"Step 2.  ","lastModifiedDate":"2022-03-24"},{"lineNumber":337,"author":{"gitId":"aaron-ljx"},"content":"In `LogicManager`, `EditTaskCommand.execute()` is called. This `EditTaskCommand` object is the one that was returned","lastModifiedDate":"2022-03-24"},{"lineNumber":338,"author":{"gitId":"aaron-ljx"},"content":"by `EditTaskCommandParser.parse()`. Within the `execute()` method,  there are 3 cases to consider.","lastModifiedDate":"2022-03-24"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"aaron-ljx"},"content":"1. The task is of type Todo.","lastModifiedDate":"2022-03-24"},{"lineNumber":341,"author":{"gitId":"aaron-ljx"},"content":"2. The task is of type Deadline.","lastModifiedDate":"2022-03-24"},{"lineNumber":342,"author":{"gitId":"aaron-ljx"},"content":"3. The task is of type Event.","lastModifiedDate":"2022-03-24"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"aaron-ljx"},"content":"Each case is being handled separately by its corresponding handler method.","lastModifiedDate":"2022-03-24"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"aaron-ljx"},"content":"In general, what each handler method will do is to ensure that the input provided","lastModifiedDate":"2022-03-24"},{"lineNumber":347,"author":{"gitId":"aaron-ljx"},"content":"by the user is valid and if so, create a new `Task` object with the given input and","lastModifiedDate":"2022-03-24"},{"lineNumber":348,"author":{"gitId":"aaron-ljx"},"content":"call `model.setTask()` to replace the old `Task` object","lastModifiedDate":"2022-03-24"},{"lineNumber":349,"author":{"gitId":"aaron-ljx"},"content":"with the new `Task` object. If there are some input which is not provided, then the default value would be the","lastModifiedDate":"2022-03-24"},{"lineNumber":350,"author":{"gitId":"aaron-ljx"},"content":"same value as the old `Task` object. If any input is not valid, a `ParseException` is thrown.","lastModifiedDate":"2022-03-24"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"aaron-ljx"},"content":"For `editTask 1 desc/ eat`, in step 1, we have obtained the task index which is given as 1.","lastModifiedDate":"2022-03-24"},{"lineNumber":353,"author":{"gitId":"aaron-ljx"},"content":"Using `model.getFilteredTaskList().get(index)` we obtain a copy of the task that the user wants to edit.","lastModifiedDate":"2022-03-24"},{"lineNumber":354,"author":{"gitId":"aaron-ljx"},"content":"Next, depending on what type the obtained task is, the corresponding handler method is called.","lastModifiedDate":"2022-03-24"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"aaron-ljx"},"content":"If the task is of type Todo, then the handler method will create a new `Todo` object with the description value as","lastModifiedDate":"2022-03-24"},{"lineNumber":357,"author":{"gitId":"aaron-ljx"},"content":"\"eat\", call `model.setTask()` and return a CommandResult showing that the update has been successful.","lastModifiedDate":"2022-03-24"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"aaron-ljx"},"content":"If the task is of type Deadline, then the handler method will create a new `Deadline` object with the description","lastModifiedDate":"2022-03-24"},{"lineNumber":360,"author":{"gitId":"aaron-ljx"},"content":"value as \"eat\", and the date and time values set to be the same","lastModifiedDate":"2022-03-24"},{"lineNumber":361,"author":{"gitId":"aaron-ljx"},"content":"values from the copy obtained using `model.getFilteredTaskList().get(index)`. Then, `model.setTask()` is called and","lastModifiedDate":"2022-03-24"},{"lineNumber":362,"author":{"gitId":"aaron-ljx"},"content":"return a CommandResult showing that the update has been successful.","lastModifiedDate":"2022-03-24"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"aaron-ljx"},"content":"If the task is of type Event, then the handler method will create a new `Event` object with the description","lastModifiedDate":"2022-03-24"},{"lineNumber":365,"author":{"gitId":"aaron-ljx"},"content":"value as \"eat\", and the date and time values set to be the same","lastModifiedDate":"2022-03-24"},{"lineNumber":366,"author":{"gitId":"aaron-ljx"},"content":"value from the copy obtained using `model.getFilteredTaskList().get(index)`. Then, `model.setTask()` is called and","lastModifiedDate":"2022-03-24"},{"lineNumber":367,"author":{"gitId":"aaron-ljx"},"content":"return a CommandResult showing that the update has been successful.","lastModifiedDate":"2022-03-24"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"aaron-ljx"},"content":"![EditTaskDesc](images/EditTaskDesc.PNG)","lastModifiedDate":"2022-04-10"},{"lineNumber":370,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":371,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":372,"author":{"gitId":"aaron-ljx"},"content":"\u003cb\u003eNote:\u003c/b\u003e For the Event type, a String value with two time values corresponding to be the start and end time","lastModifiedDate":"2022-03-24"},{"lineNumber":373,"author":{"gitId":"aaron-ljx"},"content":"separated with an **empty space** must be provided. Other than the time values being valid,","lastModifiedDate":"2022-03-24"},{"lineNumber":374,"author":{"gitId":"aaron-ljx"},"content":"the range between the start and end time must be valid as well. For example, 1700 2000 is valid while 2000 1700 is not.","lastModifiedDate":"2022-03-24"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"Denniszedead"},"content":"### Finding tasks and employees features","lastModifiedDate":"2022-04-09"},{"lineNumber":377,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":378,"author":{"gitId":"Denniszedead"},"content":"#### All about this feature","lastModifiedDate":"2022-04-09"},{"lineNumber":379,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":380,"author":{"gitId":"Denniszedead"},"content":"The feature for finding task and employee uses the following two commands:","lastModifiedDate":"2022-04-09"},{"lineNumber":381,"author":{"gitId":"Denniszedead"},"content":"* `findTask`: Find tasks","lastModifiedDate":"2022-04-09"},{"lineNumber":382,"author":{"gitId":"Denniszedead"},"content":"* `findEmployee`: Finds employees","lastModifiedDate":"2022-04-09"},{"lineNumber":383,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":384,"author":{"gitId":"Denniszedead"},"content":"`findEmployee` improves on the `find` feature in AB3 where instead on finding persons (on in the case of our project","lastModifiedDate":"2022-04-09"},{"lineNumber":385,"author":{"gitId":"Denniszedead"},"content":"manageezpz, we now refer persons as employees) based only on their names, we can also find employees based their other","lastModifiedDate":"2022-04-09"},{"lineNumber":386,"author":{"gitId":"Denniszedead"},"content":"two properties, phone number and email.","lastModifiedDate":"2022-04-09"},{"lineNumber":387,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":388,"author":{"gitId":"Denniszedead"},"content":"`findTask` similarly searches tasks based on any of their attributes (as stated in the task implementation) ","lastModifiedDate":"2022-04-09"},{"lineNumber":389,"author":{"gitId":"Denniszedead"},"content":"stated by the user.","lastModifiedDate":"2022-04-09"},{"lineNumber":390,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":391,"author":{"gitId":"ChanWeiJie"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":392,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":393,"author":{"gitId":"Denniszedead"},"content":"#### Design of the find feature","lastModifiedDate":"2022-04-09"},{"lineNumber":394,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":395,"author":{"gitId":"Denniszedead"},"content":"The find feature utilizes mainly the following classes:","lastModifiedDate":"2022-04-09"},{"lineNumber":396,"author":{"gitId":"Denniszedead"},"content":"* Parser: ","lastModifiedDate":"2022-04-09"},{"lineNumber":397,"author":{"gitId":"Denniszedead"},"content":"  * Check whether the attributes for either task and employees as entered by the user are valid as stated in the `Task`","lastModifiedDate":"2022-04-09"},{"lineNumber":398,"author":{"gitId":"Denniszedead"},"content":"    and `Person` (class to represent employee) respectively.","lastModifiedDate":"2022-04-09"},{"lineNumber":399,"author":{"gitId":"Denniszedead"},"content":"  * The first class when user enters `findTask`/`findEmployee`.","lastModifiedDate":"2022-04-09"},{"lineNumber":400,"author":{"gitId":"Denniszedead"},"content":"  * Parser will first check if at least one attribute is entered.","lastModifiedDate":"2022-04-09"},{"lineNumber":401,"author":{"gitId":"Denniszedead"},"content":"  * After which, it will check whether the attributes entered are valid as implemented in the `Task` and `Person` method.","lastModifiedDate":"2022-04-09"},{"lineNumber":402,"author":{"gitId":"Denniszedead"},"content":"  * If the user fails to enter any of the attributes, or enters an invalid attribute, the Parser class will collate all","lastModifiedDate":"2022-04-09"},{"lineNumber":403,"author":{"gitId":"Denniszedead"},"content":"    the mistakes the user has made as error messages, and it will be shown to the user.","lastModifiedDate":"2022-04-09"},{"lineNumber":404,"author":{"gitId":"Denniszedead"},"content":"  * Otherwise, the parser will create a predicate by indicating all attributes entered by the user and setting ","lastModifiedDate":"2022-04-09"},{"lineNumber":405,"author":{"gitId":"Denniszedead"},"content":"    attributes not specified by the user as null (use optional parameter if the programming language used permits).","lastModifiedDate":"2022-04-09"},{"lineNumber":406,"author":{"gitId":"Denniszedead"},"content":"  * The parser class will then return a command class, using the predicate as the argument.","lastModifiedDate":"2022-04-09"},{"lineNumber":407,"author":{"gitId":"Denniszedead"},"content":"  * `FindTaskCommandParser` for findTask and `FindEmployeeCommandParser` for findEmployee","lastModifiedDate":"2022-04-09"},{"lineNumber":408,"author":{"gitId":"Denniszedead"},"content":"* Command:","lastModifiedDate":"2022-04-09"},{"lineNumber":409,"author":{"gitId":"Denniszedead"},"content":"  * Executes command by showing all tasks/employee based on the attributes specified by the user.","lastModifiedDate":"2022-04-09"},{"lineNumber":410,"author":{"gitId":"Denniszedead"},"content":"  * `FindTaskCommand` for findTask and `FindEmployeeCommand` for findEmployee","lastModifiedDate":"2022-04-09"},{"lineNumber":411,"author":{"gitId":"Denniszedead"},"content":"* Predicate:","lastModifiedDate":"2022-04-09"},{"lineNumber":412,"author":{"gitId":"Denniszedead"},"content":"  * The parser class creates this predicate which will be used to filter tasks/employees based on the attributes given.","lastModifiedDate":"2022-04-09"},{"lineNumber":413,"author":{"gitId":"Denniszedead"},"content":"  * If the attribute is set to null, it will default to true, otherwise, the predicate will check whether the ","lastModifiedDate":"2022-04-09"},{"lineNumber":414,"author":{"gitId":"Denniszedead"},"content":"    task/employee has these attributes.","lastModifiedDate":"2022-04-09"},{"lineNumber":415,"author":{"gitId":"Denniszedead"},"content":"  * The results from the attributes (or true if not specified) are and together to produce the result from the predicate.","lastModifiedDate":"2022-04-09"},{"lineNumber":416,"author":{"gitId":"Denniszedead"},"content":"  * `TaskMultiplePredicate` for filtering task and `PersonMultiplePredicate` for filtering employees.","lastModifiedDate":"2022-04-09"},{"lineNumber":417,"author":{"gitId":"Denniszedead"},"content":"  ","lastModifiedDate":"2022-03-25"},{"lineNumber":418,"author":{"gitId":"Denniszedead"},"content":"#### Implementation flow for the find task/employee feature","lastModifiedDate":"2022-04-09"},{"lineNumber":419,"author":{"gitId":"Denniszedead"},"content":"Given below is the implementation of the find task command when the user enters `findTask todo/`","lastModifiedDate":"2022-04-10"},{"lineNumber":420,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":421,"author":{"gitId":"Denniszedead"},"content":"1. The user input will be sent to `FindTaskCommandParser`","lastModifiedDate":"2022-04-09"},{"lineNumber":422,"author":{"gitId":"Denniszedead"},"content":"2. `FindTaskCommandParser` will note down that the task type to search.","lastModifiedDate":"2022-04-10"},{"lineNumber":423,"author":{"gitId":"Denniszedead"},"content":"3. Since the inputs that the user entered is valid, the parser will create a `TaskMultiplePredicate` task type `todo` ","lastModifiedDate":"2022-04-10"},{"lineNumber":424,"author":{"gitId":"Denniszedead"},"content":"   while setting the rest of the attributes to `null`.","lastModifiedDate":"2022-04-10"},{"lineNumber":425,"author":{"gitId":"Denniszedead"},"content":"4. The attribute will be used as the argument to create the `FindTaskCommand`","lastModifiedDate":"2022-04-09"},{"lineNumber":426,"author":{"gitId":"Denniszedead"},"content":"5. When the `FindTaskCommand` executes, the predicate will be sent to the `ModelManager` to filter out tasks that ","lastModifiedDate":"2022-04-09"},{"lineNumber":427,"author":{"gitId":"Denniszedead"},"content":"   satisfy the predicate.","lastModifiedDate":"2022-04-09"},{"lineNumber":428,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":429,"author":{"gitId":"Denniszedead"},"content":"![Expected find task command result](images/FindTaskCommand.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":430,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":431,"author":{"gitId":"Denniszedead"},"content":"*The expected result for `findTask todo/`*","lastModifiedDate":"2022-04-10"},{"lineNumber":432,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":433,"author":{"gitId":"Denniszedead"},"content":"\u003cimg src\u003d\"images/FindTaskCommandSequenceDiagram.png\"\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":434,"author":{"gitId":"Denniszedead"},"content":"*The UML Sequence diagram for `findTask todo/`*","lastModifiedDate":"2022-04-10"},{"lineNumber":435,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":436,"author":{"gitId":"Denniszedead"},"content":"#### Design Consideration","lastModifiedDate":"2022-04-09"},{"lineNumber":437,"author":{"gitId":"Denniszedead"},"content":"* Allow usage of multiple attributes as search term to filter out tasks/employee that has the specified attributes.","lastModifiedDate":"2022-04-09"},{"lineNumber":438,"author":{"gitId":"Denniszedead"},"content":"* Useful for finding tasks based on priority and whether it is marked or not.","lastModifiedDate":"2022-04-09"},{"lineNumber":439,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":440,"author":{"gitId":"Denniszedead"},"content":"#### UML Diagram for finding task/employee","lastModifiedDate":"2022-04-09"},{"lineNumber":441,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":442,"author":{"gitId":"Denniszedead"},"content":"![UML Diagram for finding task/employee](images/FindTaskClassDiagram.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":443,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":444,"author":{"gitId":"ChanWeiJie"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":446,"author":{"gitId":"alfredkohhh"},"content":"### Tagging Task to Employee feature","lastModifiedDate":"2022-03-24"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"alfredkohhh"},"content":"#### What is Tagging Task to Employee feature about?","lastModifiedDate":"2022-03-24"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"alfredkohhh"},"content":"The Tag Task mechanism is facilitated by `AddressBook`. ","lastModifiedDate":"2022-03-24"},{"lineNumber":451,"author":{"gitId":"alfredkohhh"},"content":"This feature enhances `AddressBook` by allowing users to assign multiple `Person` to a `Task`. Additionally, the feature implements the following operations:","lastModifiedDate":"2022-03-24"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"alfredkohhh"},"content":"* `AddressBook#tagTask(Task,Person)` —  Assign `Person` to `Task`","lastModifiedDate":"2022-03-24"},{"lineNumber":454,"author":{"gitId":"alfredkohhh"},"content":"* `AddressBook#untagTask(Task,Person)` —  Deallocate the `Person` from `Task`","lastModifiedDate":"2022-03-24"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"alfredkohhh"},"content":"For the command, the feature extends `command`, and is implemented as such:","lastModifiedDate":"2022-03-24"},{"lineNumber":457,"author":{"gitId":"alfredkohhh"},"content":"* `tagTask INDEX name/PERSON_NAME`","lastModifiedDate":"2022-03-24"},{"lineNumber":458,"author":{"gitId":"alfredkohhh"},"content":"* `untagTask INDEX name/PERSON_NAME`","lastModifiedDate":"2022-03-24"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"alfredkohhh"},"content":"#### Implementation Flow of Tagging Task to Employee feature","lastModifiedDate":"2022-03-24"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"alfredkohhh"},"content":"Given below is an example usage scenario and how the Tagging Task to Employee mechanism behaves at each step.","lastModifiedDate":"2022-03-24"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"alfredkohhh"},"content":"Note: ManageEZPZ comes with preloaded data, and can be started on a fresh state with the `clear` command.","lastModifiedDate":"2022-03-24"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"alfredkohhh"},"content":"Step 1. The user launches the application for the first time. ManageEZPZ will be initialized with the preloaded data.","lastModifiedDate":"2022-03-24"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"alfredkohhh"},"content":"Step 2. The user executes `tagTask 7 n/Alex Yeoh` command to assign `Alex Yeoh` to the 7th `Task`.","lastModifiedDate":"2022-04-09"},{"lineNumber":469,"author":{"gitId":"alfredkohhh"},"content":"![AddTodo1](images/TagTask.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":472,"author":{"gitId":"alfredkohhh"},"content":"- The Tagging commands are efficient for users to assign a `Person` to be in-charge of a `Task`.","lastModifiedDate":"2022-03-24"},{"lineNumber":473,"author":{"gitId":"alfredkohhh"},"content":"- The Prefix allow users to simply input the name of the `Person` from ManageEZPZ.","lastModifiedDate":"2022-03-24"},{"lineNumber":474,"author":{"gitId":"alfredkohhh"},"content":"- Users will be able to see the `Task` assigned to `Person` immediately after tagging.","lastModifiedDate":"2022-03-24"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"alfredkohhh"},"content":"#### UML Diagram for tagTask Command","lastModifiedDate":"2022-03-24"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"alfredkohhh"},"content":"The following activity diagram summarizes what happens when a user executes a new `tagTask` command:","lastModifiedDate":"2022-03-24"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"alfredkohhh"},"content":"\u003cimg src\u003d\"images/TagTaskActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":487,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":488,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":489,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":490,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"ChanWeiJie"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"Denniszedead"},"content":"* Company Managers/Supervisors wants to keep track of all the tasks given to their subordinates","lastModifiedDate":"2022-03-06"},{"lineNumber":502,"author":{"gitId":"Denniszedead"},"content":"* They need to assign tasks to their subordinates as well","lastModifiedDate":"2022-03-06"},{"lineNumber":503,"author":{"gitId":"Denniszedead"},"content":"* Prefers typing commands instead of clicking buttons","lastModifiedDate":"2022-03-06"},{"lineNumber":504,"author":{"gitId":"Denniszedead"},"content":"* Needs a local database to store all tasks","lastModifiedDate":"2022-03-06"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"Denniszedead"},"content":"**Value proposition**:","lastModifiedDate":"2022-03-04"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"Denniszedead"},"content":"* An application to show all the tasks assigned to the employees","lastModifiedDate":"2022-03-06"},{"lineNumber":509,"author":{"gitId":"Denniszedead"},"content":"* Tasks should be assigned to the employees as well","lastModifiedDate":"2022-03-06"},{"lineNumber":510,"author":{"gitId":"Denniszedead"},"content":"* Commands are typed using command lines","lastModifiedDate":"2022-03-06"},{"lineNumber":511,"author":{"gitId":"Denniszedead"},"content":"* All tasks created are stored in the local database","lastModifiedDate":"2022-03-06"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"| Priority | As a …​        | I want to …​                                                               | So that I can…​                                               |","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"Denniszedead"},"content":"|----------|----------------|----------------------------------------------------------------------------|---------------------------------------------------------------|","lastModifiedDate":"2022-04-09"},{"lineNumber":519,"author":{"gitId":"Denniszedead"},"content":"| `* * *`  | user           | add a task to the database                                                 | better organise my time                                       |","lastModifiedDate":"2022-03-04"},{"lineNumber":520,"author":{"gitId":"Denniszedead"},"content":"| `* * *`  | user           | delete a task from the database                                            | better organise my list                                       |","lastModifiedDate":"2022-03-04"},{"lineNumber":521,"author":{"gitId":"Denniszedead"},"content":"| `* * *`  | user           | view all my tasks                                                          | have a better picture of my schedule                          |","lastModifiedDate":"2022-03-04"},{"lineNumber":522,"author":{"gitId":"Denniszedead"},"content":"| `* * *`  | user           | able to edit a task                                                        | update any details                                            |","lastModifiedDate":"2022-03-04"},{"lineNumber":523,"author":{"gitId":"Denniszedead"},"content":"| `* * *`  | user           | able to view my tasks for the day (i.e. today)                             | better manage my time                                         |","lastModifiedDate":"2022-03-04"},{"lineNumber":524,"author":{"gitId":"Denniszedead"},"content":"| `* * *`  | user           | able to view the tasks for the week                                        | have a better picture of my schedule for the week             |","lastModifiedDate":"2022-03-04"},{"lineNumber":525,"author":{"gitId":"Denniszedead"},"content":"| `* * *`  | user           | view the tasks on a specific day                                           | plan for that day ahead                                       |","lastModifiedDate":"2022-03-04"},{"lineNumber":526,"author":{"gitId":"Denniszedead"},"content":"| `* *`    | CEO or manager | have the flexibility to reschedule tasks that are assigned to any employee | better manage the manpower and deadlines                      |","lastModifiedDate":"2022-03-04"},{"lineNumber":527,"author":{"gitId":"Denniszedead"},"content":"| `* *`    | manager        | retrieve the list of tasks allocated with an employee                      | allow myself to have an overview of the employee\u0027s workload.  |","lastModifiedDate":"2022-04-09"},{"lineNumber":528,"author":{"gitId":"Denniszedead"},"content":"| `* *`    | new user       | have a more beginner-friendly user guide                                   | learn more about the product                                  |","lastModifiedDate":"2022-04-09"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"alfredkohhh"},"content":"\u003e Definition:","lastModifiedDate":"2022-03-04"},{"lineNumber":534,"author":{"gitId":"alfredkohhh"},"content":"\u003e - For all use cases below, the **System** is `ManageEZPZ` and the **Actor** is the `User`, unless specified otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":535,"author":{"gitId":"alfredkohhh"},"content":"\u003e - More specifically, the `User` are **Supervisors and Managers**.","lastModifiedDate":"2022-04-09"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"alfredkohhh"},"content":"\u003e Guarantees:","lastModifiedDate":"2022-03-06"},{"lineNumber":538,"author":{"gitId":"alfredkohhh"},"content":"\u003e - For any use cases below that changes any data, ManageEZPZ will guarantee that the data is updated and saved.","lastModifiedDate":"2022-03-06"},{"lineNumber":539,"author":{"gitId":"alfredkohhh"},"content":"****","lastModifiedDate":"2022-03-04"},{"lineNumber":540,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":541,"author":{"gitId":"alfredkohhh"},"content":"**Use Case 1 - Add Task**","lastModifiedDate":"2022-03-04"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"alfredkohhh"},"content":"1. User starts up ManageEZPZ ","lastModifiedDate":"2022-03-04"},{"lineNumber":546,"author":{"gitId":"alfredkohhh"},"content":"2. User uses the appropriate command to add Task. ","lastModifiedDate":"2022-04-09"},{"lineNumber":547,"author":{"gitId":"alfredkohhh"},"content":"3. ManageEZPZ adds the task \u0026 confirms with a successful message that the task is added.","lastModifiedDate":"2022-04-09"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"alfredkohhh"},"content":"* 2a. User uses one of the three `add` commands: ","lastModifiedDate":"2022-04-09"},{"lineNumber":554,"author":{"gitId":"alfredkohhh"},"content":"    * 2a1. User uses `addTodo` command ","lastModifiedDate":"2022-04-09"},{"lineNumber":555,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":556,"author":{"gitId":"alfredkohhh"},"content":"      Use case resumes from step 3. ","lastModifiedDate":"2022-04-09"},{"lineNumber":557,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":558,"author":{"gitId":"alfredkohhh"},"content":"    * 2a2. User uses `addDeadline` command ","lastModifiedDate":"2022-04-09"},{"lineNumber":559,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":560,"author":{"gitId":"alfredkohhh"},"content":"      Use case resumes from step 3. ","lastModifiedDate":"2022-04-09"},{"lineNumber":561,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":562,"author":{"gitId":"alfredkohhh"},"content":"    * 2a3. User uses `addEvent` command ","lastModifiedDate":"2022-04-09"},{"lineNumber":563,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":564,"author":{"gitId":"alfredkohhh"},"content":"      Use case resumes from step 3. ","lastModifiedDate":"2022-04-09"},{"lineNumber":565,"author":{"gitId":"alfredkohhh"},"content":"    ","lastModifiedDate":"2022-03-04"},{"lineNumber":566,"author":{"gitId":"alfredkohhh"},"content":"* 2b. User uses Add Task Commands with the wrong syntax","lastModifiedDate":"2022-04-09"},{"lineNumber":567,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":568,"author":{"gitId":"alfredkohhh"},"content":"    * 2b1. ManageEZPZ sends an error message to User, indicating the","lastModifiedDate":"2022-04-09"},{"lineNumber":569,"author":{"gitId":"alfredkohhh"},"content":"      format for adding Task is incorrect, attached with the correct syntax format.","lastModifiedDate":"2022-03-04"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"alfredkohhh"},"content":"****","lastModifiedDate":"2022-03-04"},{"lineNumber":574,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":575,"author":{"gitId":"alfredkohhh"},"content":"**Use Case 2 - Delete Task**","lastModifiedDate":"2022-03-04"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"alfredkohhh"},"content":"Guarantees: Deletion of any Task will also result in the removal","lastModifiedDate":"2022-03-29"},{"lineNumber":578,"author":{"gitId":"alfredkohhh"},"content":"            of any Employee association that the Task has.","lastModifiedDate":"2022-03-29"},{"lineNumber":579,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":580,"author":{"gitId":"alfredkohhh"},"content":"**MSS**","lastModifiedDate":"2022-03-04"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"alfredkohhh"},"content":"1. User starts up ManageEZPZ ","lastModifiedDate":"2022-03-04"},{"lineNumber":583,"author":{"gitId":"alfredkohhh"},"content":"2. User uses the appropriate command to delete a Task ","lastModifiedDate":"2022-04-09"},{"lineNumber":584,"author":{"gitId":"alfredkohhh"},"content":"3. ManageEZPZ deletes the Task \u0026 confirms with a successful message that the Task is deleted.","lastModifiedDate":"2022-04-09"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"alfredkohhh"},"content":"   Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":587,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":588,"author":{"gitId":"alfredkohhh"},"content":"**Extensions**","lastModifiedDate":"2022-03-04"},{"lineNumber":589,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":590,"author":{"gitId":"alfredkohhh"},"content":"* 2a. ManageEZPZ detects an error in the entered data. (Invalid index)","lastModifiedDate":"2022-04-09"},{"lineNumber":591,"author":{"gitId":"alfredkohhh"},"content":"    * 2a1. ManageEZPZ sends an error message to User, indicating the Index used for the delete","lastModifiedDate":"2022-04-09"},{"lineNumber":592,"author":{"gitId":"alfredkohhh"},"content":"      command is incorrect, attached with the correct syntax format.","lastModifiedDate":"2022-03-04"},{"lineNumber":593,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":594,"author":{"gitId":"alfredkohhh"},"content":"      Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":595,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":596,"author":{"gitId":"alfredkohhh"},"content":"****","lastModifiedDate":"2022-03-04"},{"lineNumber":597,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":598,"author":{"gitId":"alfredkohhh"},"content":"**Use Case 3 - List Tasks**","lastModifiedDate":"2022-03-04"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":600,"author":{"gitId":"alfredkohhh"},"content":"**MSS**","lastModifiedDate":"2022-03-04"},{"lineNumber":601,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":602,"author":{"gitId":"alfredkohhh"},"content":"1. User starts up ManageEZPZ ","lastModifiedDate":"2022-03-04"},{"lineNumber":603,"author":{"gitId":"alfredkohhh"},"content":"2. User enters the command to list Tasks.","lastModifiedDate":"2022-04-09"},{"lineNumber":604,"author":{"gitId":"alfredkohhh"},"content":"3. ManageEZPZ displays the all Tasks.","lastModifiedDate":"2022-04-09"},{"lineNumber":605,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":606,"author":{"gitId":"alfredkohhh"},"content":"   Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":607,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":608,"author":{"gitId":"alfredkohhh"},"content":"**Extensions**","lastModifiedDate":"2022-03-04"},{"lineNumber":609,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":610,"author":{"gitId":"alfredkohhh"},"content":"* 2a. User uses list Task commands with the wrong syntax. ","lastModifiedDate":"2022-04-09"},{"lineNumber":611,"author":{"gitId":"alfredkohhh"},"content":"    * 2a1. ManageEZPZ sends an error message to User, that the list","lastModifiedDate":"2022-04-09"},{"lineNumber":612,"author":{"gitId":"alfredkohhh"},"content":"      command is incorrect, attached with the correct syntax format. ","lastModifiedDate":"2022-03-04"},{"lineNumber":613,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":614,"author":{"gitId":"alfredkohhh"},"content":"      Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":615,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":616,"author":{"gitId":"alfredkohhh"},"content":"****","lastModifiedDate":"2022-03-04"},{"lineNumber":617,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":618,"author":{"gitId":"alfredkohhh"},"content":"**Use Case 4 - Mark Tasks**","lastModifiedDate":"2022-03-04"},{"lineNumber":619,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":620,"author":{"gitId":"alfredkohhh"},"content":"Preconditions: User is currently using ManageEZPZ.","lastModifiedDate":"2022-03-06"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":622,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-03-04"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":624,"author":{"gitId":"alfredkohhh"},"content":"1. User enters the command to view Tasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":625,"author":{"gitId":"alfredkohhh"},"content":"2. ManageEZPZ displays the Tasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":626,"author":{"gitId":"alfredkohhh"},"content":"3. User wants to mark a Task as finished, enters command to mark Task.","lastModifiedDate":"2022-03-04"},{"lineNumber":627,"author":{"gitId":"alfredkohhh"},"content":"4. ManageEZPZ marks the Task \u0026 confirms with a successful message that the task is marked","lastModifiedDate":"2022-03-04"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":629,"author":{"gitId":"alfredkohhh"},"content":"   Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":631,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-03-04"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":633,"author":{"gitId":"alfredkohhh"},"content":"* 3a. ManageEZPZ detects an error in the entered data. (Invalid Index)","lastModifiedDate":"2022-03-04"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":635,"author":{"gitId":"alfredkohhh"},"content":"    * 3a1. ManageEZPZ sends an error message to User, indicating the Index used for","lastModifiedDate":"2022-03-04"},{"lineNumber":636,"author":{"gitId":"alfredkohhh"},"content":"      the Mark command is incorrect, attached with the correct syntax format.","lastModifiedDate":"2022-03-04"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":638,"author":{"gitId":"alfredkohhh"},"content":"      Use Case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":639,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":640,"author":{"gitId":"alfredkohhh"},"content":"****","lastModifiedDate":"2022-03-04"},{"lineNumber":641,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":642,"author":{"gitId":"alfredkohhh"},"content":"**Use Case 5 - Unmark Tasks**","lastModifiedDate":"2022-03-04"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"alfredkohhh"},"content":"Preconditions: User is currently using ManageEZPZ.","lastModifiedDate":"2022-03-06"},{"lineNumber":645,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":646,"author":{"gitId":"alfredkohhh"},"content":"**MSS**","lastModifiedDate":"2022-03-04"},{"lineNumber":647,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":648,"author":{"gitId":"alfredkohhh"},"content":"1. User enters the command to view Tasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":649,"author":{"gitId":"alfredkohhh"},"content":"2. ManageEZPZ displays the Tasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":650,"author":{"gitId":"alfredkohhh"},"content":"3. User realises that Task is marked as done, but is actually not done.","lastModifiedDate":"2022-03-04"},{"lineNumber":651,"author":{"gitId":"alfredkohhh"},"content":"4. User enters command to unmark Task for the specific Task Number.","lastModifiedDate":"2022-03-04"},{"lineNumber":652,"author":{"gitId":"alfredkohhh"},"content":"5. ManageEZPZ unmarks the Task \u0026 confirms with a successful message ","lastModifiedDate":"2022-03-29"},{"lineNumber":653,"author":{"gitId":"alfredkohhh"},"content":"   that the task is unmarked. ","lastModifiedDate":"2022-03-29"},{"lineNumber":654,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":655,"author":{"gitId":"alfredkohhh"},"content":"   Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":656,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":657,"author":{"gitId":"alfredkohhh"},"content":"**Extensions**","lastModifiedDate":"2022-03-04"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":659,"author":{"gitId":"alfredkohhh"},"content":"* 4a. ManageEZPZ detects an error in the entered data. (Invalid Index)","lastModifiedDate":"2022-03-04"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":661,"author":{"gitId":"alfredkohhh"},"content":"    * 4a1. ManageEZPZ sends an error message to User, indicating the Index used for","lastModifiedDate":"2022-03-04"},{"lineNumber":662,"author":{"gitId":"alfredkohhh"},"content":"      the unmark command is incorrect, attached with the correct syntax format.","lastModifiedDate":"2022-03-04"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":664,"author":{"gitId":"alfredkohhh"},"content":"      Use Case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":665,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":666,"author":{"gitId":"alfredkohhh"},"content":"****","lastModifiedDate":"2022-03-04"},{"lineNumber":667,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":668,"author":{"gitId":"alfredkohhh"},"content":"**Use Case 6 - Find Tasks**","lastModifiedDate":"2022-03-04"},{"lineNumber":669,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":670,"author":{"gitId":"alfredkohhh"},"content":"**MSS**","lastModifiedDate":"2022-03-04"},{"lineNumber":671,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":672,"author":{"gitId":"alfredkohhh"},"content":"1. User starts up ManageEZPZ","lastModifiedDate":"2022-03-04"},{"lineNumber":673,"author":{"gitId":"alfredkohhh"},"content":"2. User enters the command to find Tasks.","lastModifiedDate":"2022-04-09"},{"lineNumber":674,"author":{"gitId":"alfredkohhh"},"content":"3. ManageEZPZ displays the Task(s) which matches the search keyword.","lastModifiedDate":"2022-04-09"},{"lineNumber":675,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":676,"author":{"gitId":"alfredkohhh"},"content":"   Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":677,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":678,"author":{"gitId":"alfredkohhh"},"content":"**Extensions**","lastModifiedDate":"2022-03-04"},{"lineNumber":679,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":680,"author":{"gitId":"alfredkohhh"},"content":"* 2a. User uses one of the three Find Task commands: ","lastModifiedDate":"2022-04-09"},{"lineNumber":681,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":682,"author":{"gitId":"alfredkohhh"},"content":"    * 2a1. User uses any of the `findTask` command:","lastModifiedDate":"2022-04-09"},{"lineNumber":683,"author":{"gitId":"alfredkohhh"},"content":"        * `findTask todo/`","lastModifiedDate":"2022-03-29"},{"lineNumber":684,"author":{"gitId":"alfredkohhh"},"content":"        * `findTask deadline/`","lastModifiedDate":"2022-03-29"},{"lineNumber":685,"author":{"gitId":"alfredkohhh"},"content":"        * `findTask event/`","lastModifiedDate":"2022-03-29"},{"lineNumber":686,"author":{"gitId":"alfredkohhh"},"content":"        * With or without the Task type above, the User wants to also get a more ","lastModifiedDate":"2022-03-29"},{"lineNumber":687,"author":{"gitId":"alfredkohhh"},"content":"          filtered search result, User then adds these prefixes as additional","lastModifiedDate":"2022-03-29"},{"lineNumber":688,"author":{"gitId":"alfredkohhh"},"content":"          search terms:","lastModifiedDate":"2022-03-29"},{"lineNumber":689,"author":{"gitId":"alfredkohhh"},"content":"          * `desc/` for Description search.","lastModifiedDate":"2022-03-29"},{"lineNumber":690,"author":{"gitId":"alfredkohhh"},"content":"          * `date/` for Date search.","lastModifiedDate":"2022-03-29"},{"lineNumber":691,"author":{"gitId":"alfredkohhh"},"content":"          * `priority/` for Priority search.","lastModifiedDate":"2022-03-29"},{"lineNumber":692,"author":{"gitId":"alfredkohhh"},"content":"          * `assignees/` for Assignees search.","lastModifiedDate":"2022-03-29"},{"lineNumber":693,"author":{"gitId":"alfredkohhh"},"content":"          * `isMarked/` for finished Tasks Search.","lastModifiedDate":"2022-03-29"},{"lineNumber":694,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":695,"author":{"gitId":"alfredkohhh"},"content":"      Use case resumes from step 3. ","lastModifiedDate":"2022-04-09"},{"lineNumber":696,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":697,"author":{"gitId":"alfredkohhh"},"content":"* 2b. User uses find Task commands with the wrong syntax","lastModifiedDate":"2022-04-09"},{"lineNumber":698,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":699,"author":{"gitId":"alfredkohhh"},"content":"    * 2b1. ManageEZPZ sends an error message to User, indicating syntax used for","lastModifiedDate":"2022-04-09"},{"lineNumber":700,"author":{"gitId":"alfredkohhh"},"content":"      the find Task command is incorrect, attached with the correct syntax format.","lastModifiedDate":"2022-03-06"},{"lineNumber":701,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":702,"author":{"gitId":"alfredkohhh"},"content":"      Use Case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":703,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":704,"author":{"gitId":"alfredkohhh"},"content":"****","lastModifiedDate":"2022-03-04"},{"lineNumber":705,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":706,"author":{"gitId":"alfredkohhh"},"content":"**Use Case 7 - Edit Tasks**","lastModifiedDate":"2022-03-29"},{"lineNumber":707,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":708,"author":{"gitId":"alfredkohhh"},"content":"**MSS**","lastModifiedDate":"2022-03-04"},{"lineNumber":709,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":710,"author":{"gitId":"alfredkohhh"},"content":"1. User starts up ManageEZPZ ","lastModifiedDate":"2022-03-29"},{"lineNumber":711,"author":{"gitId":"alfredkohhh"},"content":"2. User enters the command to list Tasks.","lastModifiedDate":"2022-04-09"},{"lineNumber":712,"author":{"gitId":"alfredkohhh"},"content":"3. User realizes that some Tasks have the wrong information.","lastModifiedDate":"2022-04-09"},{"lineNumber":713,"author":{"gitId":"alfredkohhh"},"content":"4. User enters the command to edit the Task(s).","lastModifiedDate":"2022-04-09"},{"lineNumber":714,"author":{"gitId":"alfredkohhh"},"content":"5. ManageEZPZ sends a message to the User indicating that the edit has been successful.","lastModifiedDate":"2022-04-09"},{"lineNumber":715,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":716,"author":{"gitId":"alfredkohhh"},"content":"   Use case ends.","lastModifiedDate":"2022-03-29"},{"lineNumber":717,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":718,"author":{"gitId":"alfredkohhh"},"content":"**Extensions**","lastModifiedDate":"2022-03-29"},{"lineNumber":719,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":720,"author":{"gitId":"ChanWeiJie"},"content":"* 4a. User selects a combination of prefixes to edit:","lastModifiedDate":"2022-04-09"},{"lineNumber":721,"author":{"gitId":"alfredkohhh"},"content":"  * `desc/` to edit the Description.","lastModifiedDate":"2022-03-29"},{"lineNumber":722,"author":{"gitId":"alfredkohhh"},"content":"  * `at/` to edit the Time.","lastModifiedDate":"2022-03-29"},{"lineNumber":723,"author":{"gitId":"alfredkohhh"},"content":"  * `date/` to edit the Date.","lastModifiedDate":"2022-03-29"},{"lineNumber":724,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":725,"author":{"gitId":"alfredkohhh"},"content":"  Use case resumes from step 5.","lastModifiedDate":"2022-04-09"},{"lineNumber":726,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":727,"author":{"gitId":"alfredkohhh"},"content":"* 4b. User uses edit Task commands with the wrong syntax","lastModifiedDate":"2022-04-09"},{"lineNumber":728,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":729,"author":{"gitId":"alfredkohhh"},"content":"    * 4b1. ManageEZPZ sends an error message to User, indicating syntax used for","lastModifiedDate":"2022-04-09"},{"lineNumber":730,"author":{"gitId":"alfredkohhh"},"content":"      the edit Task command is incorrect, attached with the correct syntax format.","lastModifiedDate":"2022-03-29"},{"lineNumber":731,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":732,"author":{"gitId":"aaron-ljx"},"content":"      Use Case ends.","lastModifiedDate":"2022-04-09"},{"lineNumber":733,"author":{"gitId":"ChanWeiJie"},"content":"  ","lastModifiedDate":"2022-04-10"},{"lineNumber":734,"author":{"gitId":"ChanWeiJie"},"content":"* 4c. User uses edit Task commands with prefix declared but no input value afterwards","lastModifiedDate":"2022-04-09"},{"lineNumber":735,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":736,"author":{"gitId":"ChanWeiJie"},"content":"    * 4c1. ManageEZPZ sends an error message to User, indicating that User must input a value after a prefix.","lastModifiedDate":"2022-04-09"},{"lineNumber":737,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":738,"author":{"gitId":"alfredkohhh"},"content":"      Use Case ends.","lastModifiedDate":"2022-03-29"},{"lineNumber":739,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":740,"author":{"gitId":"alfredkohhh"},"content":"****","lastModifiedDate":"2022-03-29"},{"lineNumber":741,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":742,"author":{"gitId":"alfredkohhh"},"content":"**Use Case 8 - Add Employee**","lastModifiedDate":"2022-03-29"},{"lineNumber":743,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":744,"author":{"gitId":"alfredkohhh"},"content":"Preconditions: User is currently using ManageEZPZ.","lastModifiedDate":"2022-03-29"},{"lineNumber":745,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":746,"author":{"gitId":"alfredkohhh"},"content":"**MSS**","lastModifiedDate":"2022-03-29"},{"lineNumber":747,"author":{"gitId":"alfredkohhh"},"content":"1. User wants to add a new Employee, enters command to add Employee.","lastModifiedDate":"2022-03-29"},{"lineNumber":748,"author":{"gitId":"alfredkohhh"},"content":"2. ManageEZPZ adds the Employee \u0026 confirms with a successful message that the","lastModifiedDate":"2022-03-29"},{"lineNumber":749,"author":{"gitId":"alfredkohhh"},"content":"   Employee is added to ManageEZPZ.","lastModifiedDate":"2022-03-29"},{"lineNumber":750,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":751,"author":{"gitId":"alfredkohhh"},"content":"   Use case ends.","lastModifiedDate":"2022-03-29"},{"lineNumber":752,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":753,"author":{"gitId":"alfredkohhh"},"content":"**Extensions**","lastModifiedDate":"2022-03-29"},{"lineNumber":754,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":755,"author":{"gitId":"alfredkohhh"},"content":"* 1a. ManageEZPZ detects an error in the entered data. ","lastModifiedDate":"2022-03-29"},{"lineNumber":756,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":757,"author":{"gitId":"alfredkohhh"},"content":"    * 1a1. ManageEZPZ sends an error message to User, indicating the","lastModifiedDate":"2022-03-29"},{"lineNumber":758,"author":{"gitId":"alfredkohhh"},"content":"      format for the add Employee command is incorrect, attached with the","lastModifiedDate":"2022-03-29"},{"lineNumber":759,"author":{"gitId":"alfredkohhh"},"content":"      correct syntax format.","lastModifiedDate":"2022-03-29"},{"lineNumber":760,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":761,"author":{"gitId":"alfredkohhh"},"content":"      Use Case ends.","lastModifiedDate":"2022-03-29"},{"lineNumber":762,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":763,"author":{"gitId":"alfredkohhh"},"content":"****","lastModifiedDate":"2022-03-29"},{"lineNumber":764,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":765,"author":{"gitId":"alfredkohhh"},"content":"**Use Case 9 - Deleting Employee**","lastModifiedDate":"2022-03-29"},{"lineNumber":766,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":767,"author":{"gitId":"alfredkohhh"},"content":"Preconditions: User is currently using ManageEZPZ.","lastModifiedDate":"2022-03-29"},{"lineNumber":768,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":769,"author":{"gitId":"alfredkohhh"},"content":"Guarantees: Deletion of any Employee will also result in the removal ","lastModifiedDate":"2022-03-29"},{"lineNumber":770,"author":{"gitId":"alfredkohhh"},"content":"            of the Employee from the Task(s) that the Employee has been","lastModifiedDate":"2022-03-29"},{"lineNumber":771,"author":{"gitId":"alfredkohhh"},"content":"            assigned to.","lastModifiedDate":"2022-03-29"},{"lineNumber":772,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":773,"author":{"gitId":"alfredkohhh"},"content":"**MSS**","lastModifiedDate":"2022-03-29"},{"lineNumber":774,"author":{"gitId":"alfredkohhh"},"content":"1. User wants to delete an existing Employee, enters command to delete Employee.","lastModifiedDate":"2022-03-29"},{"lineNumber":775,"author":{"gitId":"alfredkohhh"},"content":"2. ManageEZPZ deletes the Employee and sends a confirmation message that the","lastModifiedDate":"2022-03-29"},{"lineNumber":776,"author":{"gitId":"alfredkohhh"},"content":"   deletion has been successful.","lastModifiedDate":"2022-03-29"},{"lineNumber":777,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":778,"author":{"gitId":"alfredkohhh"},"content":"   Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":779,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":780,"author":{"gitId":"alfredkohhh"},"content":"**Extensions**","lastModifiedDate":"2022-03-04"},{"lineNumber":781,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":782,"author":{"gitId":"alfredkohhh"},"content":"* 1a. ManageEZPZ detects an error in the entered data.","lastModifiedDate":"2022-03-29"},{"lineNumber":783,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":784,"author":{"gitId":"alfredkohhh"},"content":"    * 1a1. ManageEZPZ sends an error message to User, indicating the","lastModifiedDate":"2022-03-29"},{"lineNumber":785,"author":{"gitId":"alfredkohhh"},"content":"      format for delete Employee command is incorrect, attached with the","lastModifiedDate":"2022-03-29"},{"lineNumber":786,"author":{"gitId":"alfredkohhh"},"content":"      correct syntax format.","lastModifiedDate":"2022-03-29"},{"lineNumber":787,"author":{"gitId":"alfredkohhh"},"content":"      ","lastModifiedDate":"2022-03-29"},{"lineNumber":788,"author":{"gitId":"alfredkohhh"},"content":"  Use Case ends.","lastModifiedDate":"2022-03-29"},{"lineNumber":789,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":790,"author":{"gitId":"alfredkohhh"},"content":"****","lastModifiedDate":"2022-03-29"},{"lineNumber":791,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":792,"author":{"gitId":"alfredkohhh"},"content":"**Use Case 10 - Tagging Employee to Task**","lastModifiedDate":"2022-03-29"},{"lineNumber":793,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":794,"author":{"gitId":"alfredkohhh"},"content":"Preconditions: User is currently using ManageEZPZ.","lastModifiedDate":"2022-03-29"},{"lineNumber":795,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":796,"author":{"gitId":"alfredkohhh"},"content":"**MSS**","lastModifiedDate":"2022-03-29"},{"lineNumber":797,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":798,"author":{"gitId":"alfredkohhh"},"content":"1. User enters the command to tag an Employee to a Task.","lastModifiedDate":"2022-03-29"},{"lineNumber":799,"author":{"gitId":"alfredkohhh"},"content":"2. ManageEZPZ assigns the Employee to the Task, and sends a confirmation message ","lastModifiedDate":"2022-03-29"},{"lineNumber":800,"author":{"gitId":"alfredkohhh"},"content":"   to the User that the Employee has been assigned.","lastModifiedDate":"2022-03-29"},{"lineNumber":801,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":802,"author":{"gitId":"alfredkohhh"},"content":"   Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":803,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":804,"author":{"gitId":"alfredkohhh"},"content":"**Extensions**","lastModifiedDate":"2022-03-04"},{"lineNumber":805,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":806,"author":{"gitId":"alfredkohhh"},"content":"* 1a. ManageEZPZ detects an error in the entered data.","lastModifiedDate":"2022-03-29"},{"lineNumber":807,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":808,"author":{"gitId":"alfredkohhh"},"content":"    * 1a1. ManageEZPZ sends an error message to User, indicating the","lastModifiedDate":"2022-03-29"},{"lineNumber":809,"author":{"gitId":"alfredkohhh"},"content":"      format for the tag Employee to Task command is incorrect, attached with the","lastModifiedDate":"2022-03-29"},{"lineNumber":810,"author":{"gitId":"alfredkohhh"},"content":"      correct syntax format.","lastModifiedDate":"2022-03-29"},{"lineNumber":811,"author":{"gitId":"alfredkohhh"},"content":"    * 1a2. ManageEZPZ detects that supplied Task Index is not in the Task List, ","lastModifiedDate":"2022-03-29"},{"lineNumber":812,"author":{"gitId":"alfredkohhh"},"content":"      indicating to the User to enter a valid Task number.","lastModifiedDate":"2022-03-29"},{"lineNumber":813,"author":{"gitId":"alfredkohhh"},"content":"    * 1a3. ManageEZPZ detects that Name of Employee is not in the database, ","lastModifiedDate":"2022-03-29"},{"lineNumber":814,"author":{"gitId":"alfredkohhh"},"content":"      indicating to the User to enter a valid Employee Name.","lastModifiedDate":"2022-03-29"},{"lineNumber":815,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":816,"author":{"gitId":"alfredkohhh"},"content":"      Use Case ends.","lastModifiedDate":"2022-03-29"},{"lineNumber":817,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":818,"author":{"gitId":"alfredkohhh"},"content":"****","lastModifiedDate":"2022-03-29"},{"lineNumber":819,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":820,"author":{"gitId":"alfredkohhh"},"content":"**Use Case 11 - Tagging Priority to Tasks**","lastModifiedDate":"2022-03-29"},{"lineNumber":821,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":822,"author":{"gitId":"alfredkohhh"},"content":"Preconditions: User is currently using ManageEZPZ.","lastModifiedDate":"2022-03-29"},{"lineNumber":823,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":824,"author":{"gitId":"alfredkohhh"},"content":"**MSS**","lastModifiedDate":"2022-03-29"},{"lineNumber":825,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":826,"author":{"gitId":"alfredkohhh"},"content":"1. User enters the command to Tag a Priority to a Task.","lastModifiedDate":"2022-03-29"},{"lineNumber":827,"author":{"gitId":"alfredkohhh"},"content":"2. ManageEZPZ tags the appropriate Priority to the Task, and sends a ","lastModifiedDate":"2022-03-29"},{"lineNumber":828,"author":{"gitId":"alfredkohhh"},"content":"   confirmation message to the Priority has been assigned to the Task.","lastModifiedDate":"2022-03-29"},{"lineNumber":829,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":830,"author":{"gitId":"alfredkohhh"},"content":"   Use case ends.","lastModifiedDate":"2022-03-29"},{"lineNumber":831,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":832,"author":{"gitId":"alfredkohhh"},"content":"**Extensions**","lastModifiedDate":"2022-03-29"},{"lineNumber":833,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":834,"author":{"gitId":"alfredkohhh"},"content":"* 1a. ManageEZPZ detects an error in the entered data.","lastModifiedDate":"2022-03-29"},{"lineNumber":835,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":836,"author":{"gitId":"alfredkohhh"},"content":"    * 1a1. ManageEZPZ sends an error message to User, indicating the","lastModifiedDate":"2022-03-29"},{"lineNumber":837,"author":{"gitId":"alfredkohhh"},"content":"      format for the add Employee command is incorrect, attached with the","lastModifiedDate":"2022-03-04"},{"lineNumber":838,"author":{"gitId":"alfredkohhh"},"content":"      correct syntax format.","lastModifiedDate":"2022-03-04"},{"lineNumber":839,"author":{"gitId":"alfredkohhh"},"content":"    * 1a2. ManageEZPZ detects that supplied Task Index is not in the Task List,","lastModifiedDate":"2022-03-29"},{"lineNumber":840,"author":{"gitId":"alfredkohhh"},"content":"      indicating to the User to enter a valid Task number.","lastModifiedDate":"2022-03-29"},{"lineNumber":841,"author":{"gitId":"alfredkohhh"},"content":"    * 1a3. ManageEZPZ detects that an invalid Priority that is not one of the four:","lastModifiedDate":"2022-03-29"},{"lineNumber":842,"author":{"gitId":"alfredkohhh"},"content":"      None, Low, Medium, High. ManageEZPZ reminds the User to use a valid","lastModifiedDate":"2022-03-29"},{"lineNumber":843,"author":{"gitId":"alfredkohhh"},"content":"      Priority.","lastModifiedDate":"2022-03-29"},{"lineNumber":844,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":845,"author":{"gitId":"alfredkohhh"},"content":"      Use Case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":846,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":847,"author":{"gitId":"alfredkohhh"},"content":"****","lastModifiedDate":"2022-03-04"},{"lineNumber":848,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":849,"author":{"gitId":"alfredkohhh"},"content":"**Use Case 12 - Deleting all Entries in ManageEZPZ**","lastModifiedDate":"2022-03-29"},{"lineNumber":850,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":851,"author":{"gitId":"alfredkohhh"},"content":"Preconditions: User is currently using ManageEZPZ.","lastModifiedDate":"2022-03-29"},{"lineNumber":852,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":853,"author":{"gitId":"alfredkohhh"},"content":"**MSS**","lastModifiedDate":"2022-03-04"},{"lineNumber":854,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":855,"author":{"gitId":"alfredkohhh"},"content":"1. User enters the command to clear ManageEZPZ.","lastModifiedDate":"2022-03-16"},{"lineNumber":856,"author":{"gitId":"alfredkohhh"},"content":"2. ManageEZPZ clears all Employee and Task data, sending a confirmation","lastModifiedDate":"2022-03-29"},{"lineNumber":857,"author":{"gitId":"alfredkohhh"},"content":"   message that ManageEZPZ entries are cleared.","lastModifiedDate":"2022-03-16"},{"lineNumber":858,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":859,"author":{"gitId":"alfredkohhh"},"content":"   Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":860,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":861,"author":{"gitId":"alfredkohhh"},"content":"****","lastModifiedDate":"2022-03-04"},{"lineNumber":862,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":863,"author":{"gitId":"alfredkohhh"},"content":"**Use Case 13 - Exit ManageEZPZ**","lastModifiedDate":"2022-03-29"},{"lineNumber":864,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":865,"author":{"gitId":"alfredkohhh"},"content":"Preconditions: User is currently using ManageEZPZ.","lastModifiedDate":"2022-03-29"},{"lineNumber":866,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":867,"author":{"gitId":"alfredkohhh"},"content":"**MSS**","lastModifiedDate":"2022-03-04"},{"lineNumber":868,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":869,"author":{"gitId":"alfredkohhh"},"content":"1. User enters a command to exit ManageEZPZ. ","lastModifiedDate":"2022-03-04"},{"lineNumber":870,"author":{"gitId":"alfredkohhh"},"content":"2. ManageEZPZ saves all changes to disk and closes.","lastModifiedDate":"2022-04-09"},{"lineNumber":871,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":872,"author":{"gitId":"alfredkohhh"},"content":"   Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":873,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":874,"author":{"gitId":"alfredkohhh"},"content":"****","lastModifiedDate":"2022-03-04"},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":876,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"dannytayjy"},"content":"#### Technical Requirements","lastModifiedDate":"2022-03-03"},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"dannytayjy"},"content":"1. ManageEZPZ should be able to run on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2022-03-03"},{"lineNumber":881,"author":{"gitId":"dannytayjy"},"content":"2. ManageEZPZ should work on both 32-bit and 64-bit environments.","lastModifiedDate":"2022-03-03"},{"lineNumber":882,"author":{"gitId":"dannytayjy"},"content":"3. ManageEZPZ should be able to store and retrieve task data from File.","lastModifiedDate":"2022-03-03"},{"lineNumber":883,"author":{"gitId":"dannytayjy"},"content":"4. ManageEZPZ must occupy as little storage as possible.","lastModifiedDate":"2022-03-03"},{"lineNumber":884,"author":{"gitId":"dannytayjy"},"content":"5. ManageEZPZ should be backward compatible with data produced by earlier versions of itself.","lastModifiedDate":"2022-03-03"},{"lineNumber":885,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":886,"author":{"gitId":"dannytayjy"},"content":"#### Performance Requirements","lastModifiedDate":"2022-03-03"},{"lineNumber":887,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":888,"author":{"gitId":"dannytayjy"},"content":"1. ManageEZPZ should respond within two seconds for any queries.","lastModifiedDate":"2022-03-03"},{"lineNumber":889,"author":{"gitId":"dannytayjy"},"content":"    * ManageEZPZ should be closed/terminated within 2 seconds.","lastModifiedDate":"2022-03-03"},{"lineNumber":890,"author":{"gitId":"dannytayjy"},"content":"2. ManageEZPZ should work well under both normal and high workloads.","lastModifiedDate":"2022-03-03"},{"lineNumber":891,"author":{"gitId":"dannytayjy"},"content":"3. ManageEZPZ should be scalable.","lastModifiedDate":"2022-03-03"},{"lineNumber":892,"author":{"gitId":"dannytayjy"},"content":"4. ManageEZPZ should be able to load huge amounts of data in a short amount of time.","lastModifiedDate":"2022-03-03"},{"lineNumber":893,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":894,"author":{"gitId":"dannytayjy"},"content":"#### Quality Requirements","lastModifiedDate":"2022-03-03"},{"lineNumber":895,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":896,"author":{"gitId":"dannytayjy"},"content":"1. ManageEZPZ should be easy to use by a novice.","lastModifiedDate":"2022-03-03"},{"lineNumber":897,"author":{"gitId":"dannytayjy"},"content":"2. ManageEZPZ should be in English.","lastModifiedDate":"2022-03-03"},{"lineNumber":898,"author":{"gitId":"dannytayjy"},"content":"3. The UI and fonts used in ManageEZPZ should be big enough for senior managers/supervisors.","lastModifiedDate":"2022-03-03"},{"lineNumber":899,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":900,"author":{"gitId":"dannytayjy"},"content":"#### Process Requirements","lastModifiedDate":"2022-03-03"},{"lineNumber":901,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":902,"author":{"gitId":"dannytayjy"},"content":"1. ManageEZPZ is expected to adhere to a schedule that delivers a feature set every 2 weeks.","lastModifiedDate":"2022-03-03"},{"lineNumber":903,"author":{"gitId":"dannytayjy"},"content":"2. Updates to ManageEZPZ should be able to roll out to existing clients remotely.","lastModifiedDate":"2022-03-03"},{"lineNumber":904,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":905,"author":{"gitId":"dannytayjy"},"content":"#### Other Noteworthy Points","lastModifiedDate":"2022-03-03"},{"lineNumber":906,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":907,"author":{"gitId":"dannytayjy"},"content":"1. ManageEZPZ should not be used to support management of illegal activities.","lastModifiedDate":"2022-04-09"},{"lineNumber":908,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":909,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":910,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":911,"author":{"gitId":"dannytayjy"},"content":"| Terms             | Meaning                                                                    |","lastModifiedDate":"2022-03-03"},{"lineNumber":912,"author":{"gitId":"dannytayjy"},"content":"|:------------------|:---------------------------------------------------------------------------|","lastModifiedDate":"2022-04-09"},{"lineNumber":913,"author":{"gitId":"dannytayjy"},"content":"| **Mainstream OS** | Windows, Linux, Unix, OS-X                                                 |","lastModifiedDate":"2022-03-03"},{"lineNumber":914,"author":{"gitId":"dannytayjy"},"content":"| **Users**         | Applies to both managers or supervisors                                    |","lastModifiedDate":"2022-04-09"},{"lineNumber":915,"author":{"gitId":"dannytayjy"},"content":"| **command**       | A message sent as an input from User, that coincides with our Command List |","lastModifiedDate":"2022-03-03"},{"lineNumber":916,"author":{"gitId":"Denniszedead"},"content":"| **Person**        | An employee                                                                |","lastModifiedDate":"2022-04-10"},{"lineNumber":917,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":919,"author":{"gitId":"ChanWeiJie"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":920,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":921,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":929,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":930,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":931,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":932,"author":{"gitId":"ChanWeiJie"},"content":"1. Test case : Initial launch","lastModifiedDate":"2022-04-08"},{"lineNumber":933,"author":{"gitId":"ChanWeiJie"},"content":"   1. [Download](https://github.com/AY2122S2-CS2103-F11-1/tp/releases) the jar file and copy into an empty folder","lastModifiedDate":"2022-04-08"},{"lineNumber":934,"author":{"gitId":"ChanWeiJie"},"content":"   2. Double-click the jar file \u003cbr\u003e ","lastModifiedDate":"2022-04-08"},{"lineNumber":935,"author":{"gitId":"ChanWeiJie"},"content":"      Expected: Shows the GUI with a set of sample Employees and Tasks. The window size may not be optimum.","lastModifiedDate":"2022-04-08"},{"lineNumber":936,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":938,"author":{"gitId":"ChanWeiJie"},"content":"2. Test case : Saving window preferences","lastModifiedDate":"2022-04-08"},{"lineNumber":939,"author":{"gitId":"ChanWeiJie"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2022-04-08"},{"lineNumber":940,"author":{"gitId":"ChanWeiJie"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":941,"author":{"gitId":"ChanWeiJie"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2022-04-08"},{"lineNumber":942,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":943,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":944,"author":{"gitId":"ChanWeiJie"},"content":"3. Test case : Shutdown","lastModifiedDate":"2022-04-08"},{"lineNumber":945,"author":{"gitId":"ChanWeiJie"},"content":"    1. Click the cross button at top right side of window for WindowsOS, and top left side of window for MacOS.","lastModifiedDate":"2022-04-08"},{"lineNumber":946,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":947,"author":{"gitId":"ChanWeiJie"},"content":"    2. Type `exit` command in the command box in GUI.","lastModifiedDate":"2022-04-08"},{"lineNumber":948,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: The programs stops executing and closes.","lastModifiedDate":"2022-04-08"},{"lineNumber":949,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":950,"author":{"gitId":"ChanWeiJie"},"content":"### Adding an employee","lastModifiedDate":"2022-04-08"},{"lineNumber":951,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":952,"author":{"gitId":"ChanWeiJie"},"content":"1. Adding an employee while all employees are being shown","lastModifiedDate":"2022-04-08"},{"lineNumber":953,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":954,"author":{"gitId":"ChanWeiJie"},"content":"    1. Prerequisites: List all employee using the `listEmployee` command. Multiple employees in the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":955,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":956,"author":{"gitId":"ChanWeiJie"},"content":"    2. Test case: `addEmployee n/Peter Tan p/97852145 e/PeterTan@gmail.com`\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":957,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: A new `Employee` is added to the end of the list. Details of the newly added `Deadline` shown in the status message. GUI immediately updates to show the newly added `Employee`.","lastModifiedDate":"2022-04-08"},{"lineNumber":958,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":959,"author":{"gitId":"ChanWeiJie"},"content":"    3. Test case: `addEmployee n/Peter Tan`\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":960,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: No employee is added. Error details shown in the status message. GUI remains the same.","lastModifiedDate":"2022-04-08"},{"lineNumber":961,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":962,"author":{"gitId":"ChanWeiJie"},"content":"    4. Other incorrect delete commands to try: `addEmployee p/98451254`, `addEmployee e/PeterTan@gmail.com`, `addEmployee n/Peter p/85245127`\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":963,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-04-08"},{"lineNumber":964,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":965,"author":{"gitId":"Denniszedead"},"content":"### Listing all employees","lastModifiedDate":"2022-04-09"},{"lineNumber":966,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":967,"author":{"gitId":"Denniszedead"},"content":"1. List down all employees","lastModifiedDate":"2022-04-09"},{"lineNumber":968,"author":{"gitId":"Denniszedead"},"content":"    1. Prerequisites: Filter employees using `findEmployee` command.","lastModifiedDate":"2022-04-09"},{"lineNumber":969,"author":{"gitId":"Denniszedead"},"content":"    2. Test Case: `listEmployee`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":970,"author":{"gitId":"Denniszedead"},"content":"       Expected: Shows all the employees in ManageEZPZ","lastModifiedDate":"2022-04-09"},{"lineNumber":971,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":972,"author":{"gitId":"Denniszedead"},"content":"### Finding employees","lastModifiedDate":"2022-04-09"},{"lineNumber":973,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":974,"author":{"gitId":"Denniszedead"},"content":"1. Find employees with the given predicate","lastModifiedDate":"2022-04-09"},{"lineNumber":975,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":976,"author":{"gitId":"Denniszedead"},"content":"    1. Prerequisites: List all employees using the `listEmployee` command.","lastModifiedDate":"2022-04-09"},{"lineNumber":977,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":978,"author":{"gitId":"Denniszedead"},"content":"    2. Test case: `findEmployee`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":979,"author":{"gitId":"Denniszedead"},"content":"       Expected: Error showing that at least an option is needed.","lastModifiedDate":"2022-04-09"},{"lineNumber":980,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":981,"author":{"gitId":"Denniszedead"},"content":"    3. Valid test cases to try: `findEmployee n/Alice`, `findEmployee p/999`, `...` (So long as the task attribute are","lastModifiedDate":"2022-04-09"},{"lineNumber":982,"author":{"gitId":"Denniszedead"},"content":"       valid)\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":983,"author":{"gitId":"Denniszedead"},"content":"       Expected: All employees with the specified attributes will be listed.","lastModifiedDate":"2022-04-09"},{"lineNumber":984,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":985,"author":{"gitId":"Denniszedead"},"content":"    4. Other invalid test cases to try: `findEmployee someOtherPrefix/`, `findEmployee n/Jame$`, `...` (So long as the","lastModifiedDate":"2022-04-09"},{"lineNumber":986,"author":{"gitId":"Denniszedead"},"content":"       attribute are invalid)\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":987,"author":{"gitId":"Denniszedead"},"content":"       Expected: Error showing which attributes are entered wrongly.","lastModifiedDate":"2022-04-09"},{"lineNumber":988,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":989,"author":{"gitId":"ChanWeiJie"},"content":"### Deleting an employee","lastModifiedDate":"2022-03-28"},{"lineNumber":990,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":991,"author":{"gitId":"ChanWeiJie"},"content":"1. Deleting an employee while all employee are being shown","lastModifiedDate":"2022-04-08"},{"lineNumber":992,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":993,"author":{"gitId":"ChanWeiJie"},"content":"    1. Prerequisites: List all employee using the `listEmployee` command. Multiple employees in the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":994,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":995,"author":{"gitId":"ChanWeiJie"},"content":"    1. Test case: `deleteEmployee 1`\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":996,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: First employee is deleted from the list. Details of the deleted employee shown in the status message. GUI immediately updates to show the employee is deleted.","lastModifiedDate":"2022-04-08"},{"lineNumber":997,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":998,"author":{"gitId":"ChanWeiJie"},"content":"    1. Test case: `deleteEmployee 0`\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":999,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: No employee is deleted. Error details shown in the status message. GUI remains the same.","lastModifiedDate":"2022-04-08"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1001,"author":{"gitId":"ChanWeiJie"},"content":"    1. Other incorrect delete commands to try: `deleteEmployee`, `deleteEmployee x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1004,"author":{"gitId":"ChanWeiJie"},"content":"### Adding a Task (Deadline)","lastModifiedDate":"2022-04-08"},{"lineNumber":1005,"author":{"gitId":"ChanWeiJie"},"content":"1. Adding a `Deadline`","lastModifiedDate":"2022-04-08"},{"lineNumber":1006,"author":{"gitId":"ChanWeiJie"},"content":"2. Prerequisites: None.","lastModifiedDate":"2022-04-08"},{"lineNumber":1007,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1008,"author":{"gitId":"ChanWeiJie"},"content":"3. Test case : Adding a valid deadline","lastModifiedDate":"2022-04-08"},{"lineNumber":1009,"author":{"gitId":"ChanWeiJie"},"content":"    1. Command: `addDeadline desc/Testing by/2020-08-08 1800` \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1010,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: A new `Deadline` is added to the end of the list. Details of the newly added `Deadline` shown in the status message. GUI immediately updates to show the newly added `Deadline`.","lastModifiedDate":"2022-04-08"},{"lineNumber":1011,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1012,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1013,"author":{"gitId":"ChanWeiJie"},"content":"4. Test case : invalid date","lastModifiedDate":"2022-04-08"},{"lineNumber":1014,"author":{"gitId":"ChanWeiJie"},"content":"    1. Command: `addDeadline desc/Testing by/0000-14-08 1800`\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1015,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: No `deadline` is added. Error details shown in the status message. GUI stays the same.","lastModifiedDate":"2022-04-08"},{"lineNumber":1016,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1017,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1018,"author":{"gitId":"ChanWeiJie"},"content":"5. Test case : invalid time","lastModifiedDate":"2022-04-08"},{"lineNumber":1019,"author":{"gitId":"ChanWeiJie"},"content":"    1. Command: `addDeadline desc/Testing by/2020-12-08 6000`\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1020,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: No `deadline` is added. Error details shown in the status message. GUI stays the same.","lastModifiedDate":"2022-04-08"},{"lineNumber":1021,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1022,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1023,"author":{"gitId":"ChanWeiJie"},"content":"6. Other incorrect addDeadline commands to try: `addDeadline desc/`, `addDeadline desc/Testing by/`\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1024,"author":{"gitId":"ChanWeiJie"},"content":"   Expected: Similar to previous.","lastModifiedDate":"2022-04-08"},{"lineNumber":1025,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1026,"author":{"gitId":"Denniszedead"},"content":"### Listing all tasks","lastModifiedDate":"2022-04-09"},{"lineNumber":1027,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1028,"author":{"gitId":"Denniszedead"},"content":"1. List down all tasks","lastModifiedDate":"2022-04-09"},{"lineNumber":1029,"author":{"gitId":"Denniszedead"},"content":"    1. Prerequisites: Filter tasks using `findTask` command.","lastModifiedDate":"2022-04-09"},{"lineNumber":1030,"author":{"gitId":"Denniszedead"},"content":"    2. Test Case: `listTask`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1031,"author":{"gitId":"Denniszedead"},"content":"       Expected: Shows all the tasks in ManageEZPZ","lastModifiedDate":"2022-04-09"},{"lineNumber":1032,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1033,"author":{"gitId":"Denniszedead"},"content":"### Finding tasks","lastModifiedDate":"2022-04-09"},{"lineNumber":1034,"author":{"gitId":"Denniszedead"},"content":"1. Prerequisites: None, but if the task list is empty, all searches will lead to no results.","lastModifiedDate":"2022-04-09"},{"lineNumber":1035,"author":{"gitId":"Denniszedead"},"content":"2. List all task using the `listTask` command.","lastModifiedDate":"2022-04-09"},{"lineNumber":1036,"author":{"gitId":"Denniszedead"},"content":"3. Test case : Find by a single keyword.","lastModifiedDate":"2022-04-09"},{"lineNumber":1037,"author":{"gitId":"Denniszedead"},"content":"    1. Command `findTask todo/` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1038,"author":{"gitId":"Denniszedead"},"content":"       Expected: Task list will show all tasks that are of type `todo`. Find task details shown in status message. GUI immediately updates to show only `todo` type tasks.","lastModifiedDate":"2022-04-09"},{"lineNumber":1039,"author":{"gitId":"Denniszedead"},"content":"    2. Command `findTask desc/report` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1040,"author":{"gitId":"Denniszedead"},"content":"       Expected: Task list will show all tasks that have the description of `report`. Find task details shown in status message. GUI immediately updates to show all task with description `report`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1043,"author":{"gitId":"Denniszedead"},"content":"4. Test case : Find by multiple keywords.","lastModifiedDate":"2022-04-09"},{"lineNumber":1044,"author":{"gitId":"Denniszedead"},"content":"    1. Command: `findTask deadline/ desc/report` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1045,"author":{"gitId":"Denniszedead"},"content":"       Expected: Task list will show all task with type `deadline` \u0026 description of `report`. Find task details shown in status message. GUI immediately updates to show all task of type `deadline` with description `report`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1046,"author":{"gitId":"Denniszedead"},"content":"    2. Command : `findTask deadline/ date/2022-05-05` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1047,"author":{"gitId":"Denniszedead"},"content":"       Expected: Task list will show all task with type `deadline` \u0026 date of `2022-05-05`. Find task details shown in status message. GUI immediately updates to show all task of type `deadline` with date `2020-05-05`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1050,"author":{"gitId":"Denniszedead"},"content":"5. test case : Invalid command formats.","lastModifiedDate":"2022-04-09"},{"lineNumber":1051,"author":{"gitId":"Denniszedead"},"content":"    1. Command: `findTask` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1052,"author":{"gitId":"Denniszedead"},"content":"       Expected: No task would be found. Error details shown in status message. GUI stays the same.","lastModifiedDate":"2022-04-09"},{"lineNumber":1053,"author":{"gitId":"Denniszedead"},"content":"    2. Other incorrect findTask commands to try: `findTask todo/ deadline/`, `findTask isMarked/maybe` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1054,"author":{"gitId":"Denniszedead"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-04-09"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1056,"author":{"gitId":"ChanWeiJie"},"content":"### Editing a task","lastModifiedDate":"2022-04-08"},{"lineNumber":1057,"author":{"gitId":"ChanWeiJie"},"content":"1. Prerequisites: None.","lastModifiedDate":"2022-04-08"},{"lineNumber":1058,"author":{"gitId":"ChanWeiJie"},"content":"2. List all task using the `listTask` command.","lastModifiedDate":"2022-04-08"},{"lineNumber":1059,"author":{"gitId":"ChanWeiJie"},"content":"3. Test case : Edit task description","lastModifiedDate":"2022-04-08"},{"lineNumber":1060,"author":{"gitId":"ChanWeiJie"},"content":"    1. Condition: the edited task description must not already exist in the task list.","lastModifiedDate":"2022-04-08"},{"lineNumber":1061,"author":{"gitId":"ChanWeiJie"},"content":"    2. Command: `editTask 1 desc/Complete Sales Report`\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1062,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: Description of Task at index 1 is changed to `Complete Sales Report`. Edited task details shown in status message. GUI immediately updates to show newly edited Task.","lastModifiedDate":"2022-04-08"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1065,"author":{"gitId":"ChanWeiJie"},"content":"4. Test case : Edit task time","lastModifiedDate":"2022-04-08"},{"lineNumber":1066,"author":{"gitId":"ChanWeiJie"},"content":"    1. Condition : The task to be edited must be of either `Deadline` or `Event` type.","lastModifiedDate":"2022-04-08"},{"lineNumber":1067,"author":{"gitId":"ChanWeiJie"},"content":"    2. Command: `editTask 1 at/1700`\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1068,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: Time of Task at index 1 is changed to `1700`. Edited task details shown in status message. GUI immediately updates to show newly edited Task.","lastModifiedDate":"2022-04-08"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1071,"author":{"gitId":"ChanWeiJie"},"content":"5. Test case : Edit task date","lastModifiedDate":"2022-04-08"},{"lineNumber":1072,"author":{"gitId":"ChanWeiJie"},"content":"    1. Condition : The task to be edited must be of either `Deadline` or `Event` type.","lastModifiedDate":"2022-04-08"},{"lineNumber":1073,"author":{"gitId":"ChanWeiJie"},"content":"    2. Command: `editTask 1 date/2022-02-05`\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1074,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: Date of Task at index 1 is changed to `2022-02-05`. Edited task details shown in status message. GUI immediately updates to show newly edited Task.","lastModifiedDate":"2022-04-08"},{"lineNumber":1075,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1076,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1077,"author":{"gitId":"ChanWeiJie"},"content":"6. Test case : Invalid edit index","lastModifiedDate":"2022-04-08"},{"lineNumber":1078,"author":{"gitId":"ChanWeiJie"},"content":"    1. Condition : index provided exceeds the task list size or index are not positive.","lastModifiedDate":"2022-04-08"},{"lineNumber":1079,"author":{"gitId":"ChanWeiJie"},"content":"    2. Command: `editTask 0 at/1700`, `editTask -4 date/2022-02-05`, `editTask \u003cint_greater_than_size_of_list\u003e desc/Complete Sales Report` \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1080,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: No task is edited. Error details shown in the status message. GUI stays the same.","lastModifiedDate":"2022-04-08"},{"lineNumber":1081,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1082,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1083,"author":{"gitId":"ChanWeiJie"},"content":"7. Other incorrect editTask commands to try: `editTask 1 desc/`, `editTask 1 date/0000-01-01`, `editTask 1 time/2549` \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1084,"author":{"gitId":"ChanWeiJie"},"content":"   Expected: Similar to previous.","lastModifiedDate":"2022-04-08"},{"lineNumber":1085,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1086,"author":{"gitId":"ChanWeiJie"},"content":"### Marking a Task","lastModifiedDate":"2022-04-08"},{"lineNumber":1087,"author":{"gitId":"ChanWeiJie"},"content":"1. Prerequisites: None.","lastModifiedDate":"2022-04-08"},{"lineNumber":1088,"author":{"gitId":"ChanWeiJie"},"content":"2. List all task using the `listTask` command.","lastModifiedDate":"2022-04-08"},{"lineNumber":1089,"author":{"gitId":"ChanWeiJie"},"content":"3. Test case : Marking a valid task.","lastModifiedDate":"2022-04-08"},{"lineNumber":1090,"author":{"gitId":"ChanWeiJie"},"content":"   1. Condition : None.","lastModifiedDate":"2022-04-08"},{"lineNumber":1091,"author":{"gitId":"ChanWeiJie"},"content":"   2. Command: `markTask 1` \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1092,"author":{"gitId":"ChanWeiJie"},"content":"      Expected: Task at index 1 is marked as done. Edited task details shown in status message. GUI immediately updates status from not done to done.","lastModifiedDate":"2022-04-08"},{"lineNumber":1093,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1094,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1095,"author":{"gitId":"ChanWeiJie"},"content":"4. Test case : Invalid mark index","lastModifiedDate":"2022-04-08"},{"lineNumber":1096,"author":{"gitId":"ChanWeiJie"},"content":"   1. Condition : index provided exceeds the task list size or index are not positive.","lastModifiedDate":"2022-04-08"},{"lineNumber":1097,"author":{"gitId":"ChanWeiJie"},"content":"   2. Command: `markTask 0`, `markTask -4`, `markTask \u003cint_greater_than_size_of_list\u003e` \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1098,"author":{"gitId":"ChanWeiJie"},"content":"      Expected: No task marked. Error details shown in the status message. GUI stays the same.","lastModifiedDate":"2022-04-08"},{"lineNumber":1099,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1100,"author":{"gitId":"Denniszedead"},"content":"### Deleting a Task","lastModifiedDate":"2022-04-09"},{"lineNumber":1101,"author":{"gitId":"Denniszedead"},"content":"1. Prerequisites: List all tasks using the `listTask` command. Multiple tasks in the list.","lastModifiedDate":"2022-04-09"},{"lineNumber":1102,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1103,"author":{"gitId":"Denniszedead"},"content":"2. Test case: `deleteTask 1`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1104,"author":{"gitId":"Denniszedead"},"content":"   Expected: First task is deleted from the list. Details of the deleted task shown in the status message. GUI immediately updates to show that the task is deleted.","lastModifiedDate":"2022-04-09"},{"lineNumber":1105,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1106,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1107,"author":{"gitId":"Denniszedead"},"content":"3. Test case: `deleteTask 0`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1108,"author":{"gitId":"Denniszedead"},"content":"   Expected: No task is deleted. Error details shown in the status message. GUI remains the same.","lastModifiedDate":"2022-04-09"},{"lineNumber":1109,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1110,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1111,"author":{"gitId":"Denniszedead"},"content":"4. Other incorrect delete commands to try: `deleteTask `, `deleteTask x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1112,"author":{"gitId":"ChanWeiJie"},"content":"   Expected: Similar to previous.","lastModifiedDate":"2022-04-08"},{"lineNumber":1113,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1114,"author":{"gitId":"ChanWeiJie"},"content":"### Tagging a task to an Employee","lastModifiedDate":"2022-04-08"},{"lineNumber":1115,"author":{"gitId":"ChanWeiJie"},"content":"1. Prerequisites: None, but if the task list or employee list is empty, all tagging will lead to an error.","lastModifiedDate":"2022-04-08"},{"lineNumber":1116,"author":{"gitId":"ChanWeiJie"},"content":"2. List all task using the `listTask` command.","lastModifiedDate":"2022-04-08"},{"lineNumber":1117,"author":{"gitId":"ChanWeiJie"},"content":"3. List all employee using the `listEmployee` command.","lastModifiedDate":"2022-04-08"},{"lineNumber":1118,"author":{"gitId":"ChanWeiJie"},"content":"4. Test case : valid Task \u0026 valid Employee","lastModifiedDate":"2022-04-08"},{"lineNumber":1119,"author":{"gitId":"ChanWeiJie"},"content":"   1. Command: `tagTask 1 n/ Alex Yeoh` \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1120,"author":{"gitId":"ChanWeiJie"},"content":"      Expected: Tags the Task at index 1 to Alex Yeoh. Tagged task details shown in status message. GUI immediately updates assignees field of the task at index 1.","lastModifiedDate":"2022-04-08"},{"lineNumber":1121,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1122,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1123,"author":{"gitId":"ChanWeiJie"},"content":"5. Test case : invalid tag index","lastModifiedDate":"2022-04-08"},{"lineNumber":1124,"author":{"gitId":"ChanWeiJie"},"content":"   1. Condition : index provided exceeds the task list size or index are not positive. ","lastModifiedDate":"2022-04-08"},{"lineNumber":1125,"author":{"gitId":"ChanWeiJie"},"content":"   2. Command: `tagTask 0 n/ Alex Yeoh`, `tagTask -4 n/ Alex Yeoh`, `tagTask \u003cint_greater_than_size_of_list\u003e n/ Alex Yeoh` \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1126,"author":{"gitId":"ChanWeiJie"},"content":"   Expected: No task tagged. Error details shown in the status message. GUI stays the same.","lastModifiedDate":"2022-04-08"},{"lineNumber":1127,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1128,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1129,"author":{"gitId":"ChanWeiJie"},"content":"6. Test case : valid Task \u0026 invalid Employee","lastModifiedDate":"2022-04-08"},{"lineNumber":1130,"author":{"gitId":"ChanWeiJie"},"content":"    1. Condition : employee provided not in the employee list.","lastModifiedDate":"2022-04-08"},{"lineNumber":1131,"author":{"gitId":"ChanWeiJie"},"content":"    2. Command: `tagTask 1 n/Alex Yeog` \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1132,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-04-08"},{"lineNumber":1133,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1134,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1135,"author":{"gitId":"ChanWeiJie"},"content":"7. Other incorrect tagTask commands to try: `tagTask 1 n/`, `tagTask 1 n/ Alex`(Full name not used) \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1136,"author":{"gitId":"ChanWeiJie"},"content":"   Expected: Similar to previous.","lastModifiedDate":"2022-04-08"},{"lineNumber":1137,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1138,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1139,"author":{"gitId":"ChanWeiJie"},"content":"### Tagging a priority to a Task.","lastModifiedDate":"2022-04-08"},{"lineNumber":1140,"author":{"gitId":"ChanWeiJie"},"content":"1. Prerequisites: None, but if the task list is empty, all tagging will lead to an error.","lastModifiedDate":"2022-04-08"},{"lineNumber":1141,"author":{"gitId":"ChanWeiJie"},"content":"2. List all task using the `listTask` command.","lastModifiedDate":"2022-04-08"},{"lineNumber":1142,"author":{"gitId":"ChanWeiJie"},"content":"3. Test case : Valid Priority","lastModifiedDate":"2022-04-08"},{"lineNumber":1143,"author":{"gitId":"ChanWeiJie"},"content":"   1. Command: `tagPriority 1 priority/HIGH` \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1144,"author":{"gitId":"ChanWeiJie"},"content":"      Expected: Tags the Task at index 1 to priority of HIGH. Tagged task details shown in status message. GUI immediately updates priority fields of the task at index 1.","lastModifiedDate":"2022-04-08"},{"lineNumber":1145,"author":{"gitId":"ChanWeiJie"},"content":"   ","lastModifiedDate":"2022-04-08"},{"lineNumber":1146,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1147,"author":{"gitId":"ChanWeiJie"},"content":"4. Test case : Invalid tag index","lastModifiedDate":"2022-04-08"},{"lineNumber":1148,"author":{"gitId":"ChanWeiJie"},"content":"   1. Condition : index provided exceeds the task list size or index are not positive.","lastModifiedDate":"2022-04-08"},{"lineNumber":1149,"author":{"gitId":"ChanWeiJie"},"content":"   2. Command: `tagPriority 1 priority/HIGH`, `tagPriority -4 priority/HIGH`, `tagTask \u003cint_greater_than_size_of_list\u003e priority/HIGH` \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1150,"author":{"gitId":"ChanWeiJie"},"content":"      Expected: No task tagged. Error details shown in the status message. GUI stays the same.","lastModifiedDate":"2022-04-08"},{"lineNumber":1151,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1152,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1153,"author":{"gitId":"ChanWeiJie"},"content":"5. Test case : Invalid Priority","lastModifiedDate":"2022-04-08"},{"lineNumber":1154,"author":{"gitId":"ChanWeiJie"},"content":"    2. Command: `tagPriority 1 priority/Important` \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1155,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-04-08"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1159,"author":{"gitId":"ChanWeiJie"},"content":"1. Dealing with corrupted data files","lastModifiedDate":"2022-04-08"},{"lineNumber":1160,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1161,"author":{"gitId":"ChanWeiJie"},"content":"    1. Test case : `ManageEZPZ.json` is edited incorrectly while the program is running. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1162,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: No issues caused. Upon closing and re-launching the program, `ManageEZPZ.json` will be updated to an empty json file.","lastModifiedDate":"2022-04-08"},{"lineNumber":1163,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1164,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1165,"author":{"gitId":"ChanWeiJie"},"content":"2. Dealing with missing data files","lastModifiedDate":"2022-04-08"},{"lineNumber":1166,"author":{"gitId":"ChanWeiJie"},"content":"   1. Prerequisites : JSON file is missing.","lastModifiedDate":"2022-04-08"},{"lineNumber":1167,"author":{"gitId":"ChanWeiJie"},"content":"       1. Delete the `data/ManageEZPZ.json` to simulate the missing json file.","lastModifiedDate":"2022-04-08"},{"lineNumber":1168,"author":{"gitId":"ChanWeiJie"},"content":"       2. Relaunch the program. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1169,"author":{"gitId":"ChanWeiJie"},"content":"       Expected: ManageEZPZ starts with a default json list containing default Employees and Tasks.","lastModifiedDate":"2022-04-08"},{"lineNumber":1170,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1172,"author":{"gitId":"ChanWeiJie"},"content":"3. Saving data between sessions","lastModifiedDate":"2022-04-08"},{"lineNumber":1173,"author":{"gitId":"ChanWeiJie"},"content":"   1. Launch the program.","lastModifiedDate":"2022-04-08"},{"lineNumber":1174,"author":{"gitId":"ChanWeiJie"},"content":"   2. Modify the Employee list or Task list by using any commands that will affect the out come of both lists.","lastModifiedDate":"2022-04-08"},{"lineNumber":1175,"author":{"gitId":"ChanWeiJie"},"content":"   3. Relaunch the app. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1176,"author":{"gitId":"ChanWeiJie"},"content":"      Expected: ManageEZPZ would retain the recent changes.","lastModifiedDate":"2022-04-08"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1178,"author":{"gitId":"ChanWeiJie"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1179,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1180,"author":{"gitId":"ChanWeiJie"},"content":"## **Appendix: Effort**","lastModifiedDate":"2022-04-09"},{"lineNumber":1181,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1182,"author":{"gitId":"ChanWeiJie"},"content":"**Difficulty Level** :","lastModifiedDate":"2022-04-09"},{"lineNumber":1183,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1184,"author":{"gitId":"ChanWeiJie"},"content":"While AB3 deals with only one entity type, `Persons`, ManageEZPZ deals with multiple entity types, including `Todos`, `Deadlines`, `Events` and `Tasks`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1185,"author":{"gitId":"ChanWeiJie"},"content":"The inclusion of the Task model has definitely increased the functionality but at the same time the difficulty of the project when compared to AB3 which ","lastModifiedDate":"2022-04-09"},{"lineNumber":1186,"author":{"gitId":"ChanWeiJie"},"content":"only had the `Persons` model.","lastModifiedDate":"2022-04-09"},{"lineNumber":1187,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1188,"author":{"gitId":"ChanWeiJie"},"content":"**Challenges faced** :","lastModifiedDate":"2022-04-09"},{"lineNumber":1189,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1190,"author":{"gitId":"ChanWeiJie"},"content":"As more features were implemented, we faced challenges that arose from the dependencies between the `Person` and `Tasks` classes in order to make ManageEZPZ\u0027s functionalities more user-centric and convenient for users (e.g. Deleting an Employee also results in deletion of an assignee from the task that was assigned to the employee and vice versa where Deleting a Task results in the decrement of the total number of task assigned to an Employee.)","lastModifiedDate":"2022-04-09"},{"lineNumber":1191,"author":{"gitId":"ChanWeiJie"},"content":"Many of the bugs we encountered at the beginning of the project were also due to unfamiliarity with the code base and having to unearth the many layers of AB3, but as time went by, identified bugs have been resolved to result in the ManageEZPZ application today.","lastModifiedDate":"2022-04-09"},{"lineNumber":1192,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1194,"author":{"gitId":"ChanWeiJie"},"content":"**Effort Required** :","lastModifiedDate":"2022-04-09"},{"lineNumber":1195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1196,"author":{"gitId":"ChanWeiJie"},"content":"Our MangeEZPZ Team has also spent a considerable amount of effort on the UI aspect, from choosing the position of the additional Task list (ultimately settling on a split UI), to the different pictures and colour scheme that was used to represent the different fields such as done/not done, priority, etc. So that it is the most appropriate to our users. ","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"Denniszedead":143,"alfredkohhh":330,"dannytayjy":109,"ChanWeiJie":254,"aaron-ljx":52,"-":308}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"   1. Run the `manageezpz.Main` and try a few commands.","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"dannytayjy":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"   e.g. `manageezpz.commons.StringUtilTest`","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"   e.g. `manageezpz.storage.StorageManagerTest`","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"   e.g. `manageezpz.logic.LogicManagerTest`","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"dannytayjy":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"ManageEZPZ is a **desktop app for that allows managers or supervisors to manage employees and assign tasks to them.  Optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"2. Download the latest `ManageEZPZ.jar` from [here](https://github.com/AY2122S2-CS2103-F11-1/tp/releases).","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your ManageEZPZ.","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"4. Double-click the file to start the app.","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"5. Start communicating with ManageEZPZ using the command box.","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"   * **`listTask`** : Lists all Tasks.","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"   * **`addEmployee`**`n/John Doe p/98765432 e/johnd@example.com` : Adds a contact named `John Doe` to ManageEZPZ.","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"   * **`deleteTask`**`3` : Deletes the 3rd Task shown in the Task list.","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"   * **`clear`** : Deletes **ALL** data from ManageEZPZ.","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"   * **`addTodo desc/read book`** : Adds a todo task with a description of `read book` to the Task list.","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"   * **`tagTask 1 n/John Doe`** : Assigns the first task on the task list to an employee named John Doe.","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"  e.g. in `addEmployee n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"* Parameters for adding employees can be in any order.\u003cbr\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"* Task related commands must be strictly lower case.","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"* Task related parameters must be in sequence as shown in the instruction.","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"* Parsing parameters of a task is done using the keywords such as `desc/`, `by/` \u0026 `at/`, as such, the parsing mechanism would take everything inserted after the keywords.","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"* All indexes are int based, as such the maximum value is 2147483647 (2\u003csup\u003e31\u003c/sup\u003e - 1).","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"* Employee `Names` and Task `Description` are case-sensitive. ","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"Shows a message explaining how to access the user guide and copying employee details to Computer Clipboard.","lastModifiedDate":"2022-04-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"ChanWeiJie"},"content":"![help message](images/helpMessage_new.png)","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"### Adding an Employee : `addEmployee`","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"ChanWeiJie"},"content":"Adds an employee to ManageEZPZ.","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"Note:","lastModifiedDate":"2022-04-05"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"- Adding a duplicated Employee will result in an error.","lastModifiedDate":"2022-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":90,"author":{"gitId":"ChanWeiJie"},"content":"Format: `addEmployee n/NAME p/PHONE_NUMBER e/EMAIL`","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"ChanWeiJie"},"content":"* `addEmployee n/John Doe p/98765432 e/johnd@example.com`","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"ChanWeiJie"},"content":"* `addEmployee p/98754123 n/Betsy Crowe e/betsycrowe@example.com`","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"dannytayjy"},"content":"### Listing all Employees : `listEmployee`","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"dannytayjy"},"content":"Shows a list of all employees in ManageEZPZ.","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"dannytayjy"},"content":"Format: `listEmployee`","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"Denniszedead"},"content":"### Finding Employees by multiple options : `findEmployee`","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"Denniszedead"},"content":"Finds employee(s) based on multiple conditions provided.","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"Denniszedead"},"content":"Note:","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"Denniszedead"},"content":"* Parameters for finding employees can be entered together in any order.","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"Denniszedead"},"content":"* You must enter at least one parameter.","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"alfredkohhh"},"content":"* Names are case-insensitive ","lastModifiedDate":"2022-04-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"ChanWeiJie"},"content":"Format: `findEmployee n/NAMES p/PHONE_NUMBER e/EMAIL`","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"Denniszedead"},"content":"* `findEmployee n/[LIST OF NAMES]` finds employees whose names contain any of the words in [LIST OF NAMES].","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"Denniszedead"},"content":"* `findEmployee p/PHONE_NUMBER` finds employees with the exact phone number.","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"Denniszedead"},"content":"* `findEmployee e/EMAIL` finds employees with the exact email.","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"Denniszedead"},"content":"* `findEmployee n/Alex`","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"Denniszedead"},"content":"* `findEmployee p/87438807`","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"Denniszedead"},"content":"* `findEmployee e/alexyeoh@example.com`","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"Denniszedead"},"content":"* `findEmployee n/Bernice Yu p/99272758 e/berniceyu@example.com`","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"dannytayjy"},"content":"### Editing an Employee : `editEmployee`","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"dannytayjy"},"content":"Edits an existing employee in ManageEZPZ.","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"ChanWeiJie"},"content":"Format: `editEmployee INDEX n/NAME p/PHONE_NUMBER e/EMAIL`","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"dannytayjy"},"content":"* Edits the employee at the specified INDEX.","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"dannytayjy"},"content":"* The index refers to the index number shown in the displayed employee list.","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"dannytayjy"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"dannytayjy"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"dannytayjy"},"content":"* All tasks that are assigned to the edited employee will be updated to reflect the new changes of the employee.","lastModifiedDate":"2022-04-07"},{"lineNumber":133,"author":{"gitId":"alfredkohhh"},"content":"* No 2 Employees should have the same name, phone number or email.","lastModifiedDate":"2022-04-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"dannytayjy"},"content":"* `editEmployee 1 p/91234567 e/johndoe@example.com` edits the phone number and email address of the 1st employee to be 91234567 and johndoe@example.com respectively. All tasks that are assigned to the 1st employee will be updated to reflect the new changes of the employee.","lastModifiedDate":"2022-04-07"},{"lineNumber":137,"author":{"gitId":"dannytayjy"},"content":"* `editEmployee 2 n/Betsy Crower` edits the name of the 2nd employee to be Betsy Crower. All tasks that are assigned to the 2nd employee will be updated to reflect the new changes of the employee.","lastModifiedDate":"2022-04-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"dannytayjy"},"content":"### Deleting an Employee : `deleteEmployee`","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"dannytayjy"},"content":"Deletes the specified employee from ManageEZPZ.","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"ChanWeiJie"},"content":"Format: `deleteEmployee INDEX`","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"ChanWeiJie"},"content":"* Deletes the employee at the specified INDEX.","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"dannytayjy"},"content":"* All tasks that are assigned to the deleted employee will be updated to remove the employee from the respective tasks.","lastModifiedDate":"2022-04-07"},{"lineNumber":149,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"ChanWeiJie"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"dannytayjy"},"content":"* `deleteEmployee 2` deletes the 2nd employee in the displayed employee list. All tasks that are assigned to the 2nd employee will be updated to remove the employee from the respective tasks.","lastModifiedDate":"2022-04-07"},{"lineNumber":152,"author":{"gitId":"dannytayjy"},"content":"* `listEmployee` followed by `deleteEmployee 2` sets the displayed employee list to show all employees in ManageEZPZ and deletes the 2nd employee in ManageEZPZ. All tasks that are assigned to the 2nd employee will be updated to remove the employee from the respective tasks.","lastModifiedDate":"2022-04-07"},{"lineNumber":153,"author":{"gitId":"dannytayjy"},"content":"* `findEmployee n/Betsy` followed by `deleteEmployee 1` sets the displayed employee list with the results from the findEmployee command and deletes the 1st employee in the displayed employee list. All tasks that are assigned to the 1st employee will be updated to remove the employee from the respective tasks.","lastModifiedDate":"2022-04-07"},{"lineNumber":154,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"alfredkohhh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":156,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":157,"author":{"gitId":"ChanWeiJie"},"content":"### Adding a Task : `addTodo`, `addEvent`, `addDeadline`","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"dannytayjy"},"content":"Adds a task to ManageEZPZ.","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"ChanWeiJie"},"content":"Format:","lastModifiedDate":"2022-03-03"},{"lineNumber":162,"author":{"gitId":"ChanWeiJie"},"content":"* `addTodo desc/TASK_DESCRIPTION`","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"ChanWeiJie"},"content":"* `addDeadline desc/TASK_DESCRIPTION by/DATE TIME`","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"alfredkohhh"},"content":"* `addEvent desc/TASK_DESCRIPTION at/DATE START_TIME END_TIME`","lastModifiedDate":"2022-04-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"ChanWeiJie"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"dannytayjy"},"content":"* `addTodo desc/Powerpoint Slides for Company XYZ`","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"ChanWeiJie"},"content":"* `addDeadline desc/Client Proposal Slides by/2022-03-20 1800`","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"dannytayjy"},"content":"* `addEvent desc/Business Meeting at/2022-02-18 1900 2000`","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"dannytayjy"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"alfredkohhh"},"content":"**:bulb: Take Note:** \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":174,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":175,"author":{"gitId":"alfredkohhh"},"content":"For creation of Tasks, ManageEZPZ will allow past deadlines and events to be added for the Managers to track. \u003cbr\u003e  ","lastModifiedDate":"2022-04-09"},{"lineNumber":176,"author":{"gitId":"alfredkohhh"},"content":" ","lastModifiedDate":"2022-04-09"},{"lineNumber":177,"author":{"gitId":"alfredkohhh"},"content":"For Deadline and Event, the DATE must be in this format: YYYY-MM-DD \u003cbr\u003e  ","lastModifiedDate":"2022-04-09"},{"lineNumber":178,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":179,"author":{"gitId":"alfredkohhh"},"content":"For Deadline and Event, any TIME related fields must be in the format HHmm, where HH should only be between 00 and 23 and mm should only be between 00 and 59. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":180,"author":{"gitId":"alfredkohhh"},"content":" ","lastModifiedDate":"2022-04-09"},{"lineNumber":181,"author":{"gitId":"alfredkohhh"},"content":"For event, the START_TIME must be earlier than the END_TIME. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":182,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":183,"author":{"gitId":"alfredkohhh"},"content":"Adding a duplicate Task will result in an error.","lastModifiedDate":"2022-04-09"},{"lineNumber":184,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":185,"author":{"gitId":"dannytayjy"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"dannytayjy"},"content":"### Listing all Tasks : `listTask`","lastModifiedDate":"2022-03-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"dannytayjy"},"content":"Shows a list of all tasks in ManageEZPZ.","lastModifiedDate":"2022-03-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"dannytayjy"},"content":"Format: `listTask`","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"alfredkohhh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":194,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":195,"author":{"gitId":"dannytayjy"},"content":"### Finding Tasks by multiple options : `findTask`","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"Denniszedead"},"content":"Finds task(s) based on multiple conditions provided.","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"dannytayjy"},"content":"Note:","lastModifiedDate":"2022-03-30"},{"lineNumber":200,"author":{"gitId":"dannytayjy"},"content":"* Parameters for finding tasks can be entered together in any order.","lastModifiedDate":"2022-03-30"},{"lineNumber":201,"author":{"gitId":"dannytayjy"},"content":"* You must enter at least one parameter from either Task Type or the valid options.","lastModifiedDate":"2022-03-30"},{"lineNumber":202,"author":{"gitId":"dannytayjy"},"content":"* Task Type is optional, however, when entered, only one task type is allowed.","lastModifiedDate":"2022-03-30"},{"lineNumber":203,"author":{"gitId":"alfredkohhh"},"content":"* The first option must be valid.","lastModifiedDate":"2022-04-05"},{"lineNumber":204,"author":{"gitId":"alfredkohhh"},"content":"* After the first valid option, any other invalid options that is not stated below will be ignored.","lastModifiedDate":"2022-04-05"},{"lineNumber":205,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"dannytayjy"},"content":"Task Type Available:","lastModifiedDate":"2022-03-30"},{"lineNumber":207,"author":{"gitId":"Denniszedead"},"content":"* `todo/`: Todos","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"Denniszedead"},"content":"* `deadline/`: Deadlines","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"Denniszedead"},"content":"* `event/`: Events","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"dannytayjy"},"content":"Options:","lastModifiedDate":"2022-03-30"},{"lineNumber":212,"author":{"gitId":"Denniszedead"},"content":"* `desc/`: Description of the tasks","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"dannytayjy"},"content":"* `date/`: Date of the task in YYYY-MM-DD (only for deadline and event)","lastModifiedDate":"2022-03-30"},{"lineNumber":214,"author":{"gitId":"dannytayjy"},"content":"* `priority/`: Priority of task, only `HIGH`, `MEDIUM`, `LOW` and `NONE`","lastModifiedDate":"2022-03-30"},{"lineNumber":215,"author":{"gitId":"dannytayjy"},"content":"* `assignees/`: The assignees that was assigned to the task (only one full name of assignee allowed)","lastModifiedDate":"2022-03-30"},{"lineNumber":216,"author":{"gitId":"dannytayjy"},"content":"* `isMarked/`: Whether the task is marked, only `true` or `false`","lastModifiedDate":"2022-03-30"},{"lineNumber":217,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":218,"author":{"gitId":"dannytayjy"},"content":"Format:","lastModifiedDate":"2022-03-30"},{"lineNumber":219,"author":{"gitId":"dannytayjy"},"content":"* `findTask todo/` finds all todos","lastModifiedDate":"2022-03-30"},{"lineNumber":220,"author":{"gitId":"dannytayjy"},"content":"* `findTask deadline/` finds all deadlines","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"dannytayjy"},"content":"* `findTask event/` find all events","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"dannytayjy"},"content":"* `findTask desc/[LIST OF WORDS]` finds all tasks which contain any of the words in [LIST OF WORDS].","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"dannytayjy"},"content":"* `findTask date/YYYY-MM-DD` finds all deadlines and events with the date","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"dannytayjy"},"content":"* `findTask priority/PRIORITY` find all tasks with the given PRIORITY [HIGH, MEDIUM, LOW, NONE]","lastModifiedDate":"2022-03-30"},{"lineNumber":225,"author":{"gitId":"dannytayjy"},"content":"* `findTask assignees/ASSIGNEE FULL NAME` finds all tasks assigned to the stated assignee (in full name)","lastModifiedDate":"2022-03-30"},{"lineNumber":226,"author":{"gitId":"alfredkohhh"},"content":"* `findTask isMarked/true` finds all tasks that is already marked as done.","lastModifiedDate":"2022-04-05"},{"lineNumber":227,"author":{"gitId":"alfredkohhh"},"content":"* `findTask isMarked/false` finds all tasks that is already marked as not done.","lastModifiedDate":"2022-04-05"},{"lineNumber":228,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":229,"author":{"gitId":"alfredkohhh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":230,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":231,"author":{"gitId":"dannytayjy"},"content":"Example:","lastModifiedDate":"2022-03-30"},{"lineNumber":232,"author":{"gitId":"Denniszedead"},"content":"* `findTask desc/homework`","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"Denniszedead"},"content":"* `findTask date/2022-04-16`","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"Denniszedead"},"content":"* `findTask desc/work priority/HIGH`","lastModifiedDate":"2022-03-28"},{"lineNumber":235,"author":{"gitId":"dannytayjy"},"content":"* `findTask deadline/ desc/school date/2022-04-16 priority/HIGH assignees/Alex Yeo isMarked/true`","lastModifiedDate":"2022-03-30"},{"lineNumber":236,"author":{"gitId":"dannytayjy"},"content":"    * Finds the task with a description that contains all the following options:","lastModifiedDate":"2022-03-30"},{"lineNumber":237,"author":{"gitId":"dannytayjy"},"content":"        * Task type of deadline,","lastModifiedDate":"2022-03-30"},{"lineNumber":238,"author":{"gitId":"dannytayjy"},"content":"        * description which contains the word “school”,","lastModifiedDate":"2022-03-30"},{"lineNumber":239,"author":{"gitId":"dannytayjy"},"content":"        * date 2022-04-16,","lastModifiedDate":"2022-03-30"},{"lineNumber":240,"author":{"gitId":"dannytayjy"},"content":"        * priority high,","lastModifiedDate":"2022-03-30"},{"lineNumber":241,"author":{"gitId":"dannytayjy"},"content":"        * assigned to Alex Yeoh,","lastModifiedDate":"2022-03-30"},{"lineNumber":242,"author":{"gitId":"dannytayjy"},"content":"        * and is marked as done.","lastModifiedDate":"2022-03-30"},{"lineNumber":243,"author":{"gitId":"Denniszedead"},"content":"        ","lastModifiedDate":"2022-03-29"},{"lineNumber":244,"author":{"gitId":"dannytayjy"},"content":"### Editing a Task : `editTask`","lastModifiedDate":"2022-03-30"},{"lineNumber":245,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":246,"author":{"gitId":"dannytayjy"},"content":"Edits an existing task in ManageEZPZ.","lastModifiedDate":"2022-03-30"},{"lineNumber":247,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":248,"author":{"gitId":"ChanWeiJie"},"content":"Formats:","lastModifiedDate":"2022-03-30"},{"lineNumber":249,"author":{"gitId":"ChanWeiJie"},"content":"* `editTask INDEX desc/NAME`","lastModifiedDate":"2022-03-30"},{"lineNumber":250,"author":{"gitId":"ChanWeiJie"},"content":"* `editTask INDEX desc/NAME date/DATE`","lastModifiedDate":"2022-03-30"},{"lineNumber":251,"author":{"gitId":"ChanWeiJie"},"content":"* `editTask INDEX desc/NAME date/DATE at/TIME`","lastModifiedDate":"2022-03-30"},{"lineNumber":252,"author":{"gitId":"ChanWeiJie"},"content":"* `editTask INDEX date/DATE`","lastModifiedDate":"2022-03-30"},{"lineNumber":253,"author":{"gitId":"ChanWeiJie"},"content":"* `editTask INDEX date/DATE at/TIME`","lastModifiedDate":"2022-03-30"},{"lineNumber":254,"author":{"gitId":"ChanWeiJie"},"content":"* `editTask INDEX at/TIME`","lastModifiedDate":"2022-03-30"},{"lineNumber":255,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":256,"author":{"gitId":"aaron-ljx"},"content":"Editing tasks is flexible in ManageEZPZ.","lastModifiedDate":"2022-03-30"},{"lineNumber":257,"author":{"gitId":"aaron-ljx"},"content":"For example, you can update just the task description or perhaps","lastModifiedDate":"2022-03-30"},{"lineNumber":258,"author":{"gitId":"aaron-ljx"},"content":"just the date and time of the task only. \u003cbr/\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":259,"author":{"gitId":"aaron-ljx"},"content":"However, you are not allowed to edit a task with no prefix supplied or if you have supplied a prefix, ","lastModifiedDate":"2022-04-06"},{"lineNumber":260,"author":{"gitId":"aaron-ljx"},"content":"a corresponding input after the prefix must exist. \u003cbr/\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":261,"author":{"gitId":"aaron-ljx"},"content":"Either one of `desc/NAME`, `date/DATE` or `at/TIME` must exist.","lastModifiedDate":"2022-04-06"},{"lineNumber":262,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":263,"author":{"gitId":"alfredkohhh"},"content":"\u003cb\u003eNote:\u003c/b\u003e ","lastModifiedDate":"2022-04-06"},{"lineNumber":264,"author":{"gitId":"aaron-ljx"},"content":"* For Deadline and Event, any TIME related fields must be in the format HHmm, where HH should only be between 00 and 23","lastModifiedDate":"2022-04-08"},{"lineNumber":265,"author":{"gitId":"alfredkohhh"},"content":"  and mm should only be between 00 and 59.","lastModifiedDate":"2022-04-06"},{"lineNumber":266,"author":{"gitId":"aaron-ljx"},"content":"* For Todo, you are not allowed to use `date/DATE` and/or `at/TIME` as it does not have a date ","lastModifiedDate":"2022-04-08"},{"lineNumber":267,"author":{"gitId":"aaron-ljx"},"content":"and time field to be edited. ","lastModifiedDate":"2022-04-06"},{"lineNumber":268,"author":{"gitId":"alfredkohhh"},"content":"* You can update a task to the same description, date and/or time.  ","lastModifiedDate":"2022-04-11"},{"lineNumber":269,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":270,"author":{"gitId":"alfredkohhh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":271,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":272,"author":{"gitId":"aaron-ljx"},"content":"Examples: \u003cbr/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":273,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":274,"author":{"gitId":"aaron-ljx"},"content":"Given a task list as follows... \u003cbr/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":275,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":276,"author":{"gitId":"aaron-ljx"},"content":"1. Type: `Todo`, Description: `Eat Bread`","lastModifiedDate":"2022-03-30"},{"lineNumber":277,"author":{"gitId":"aaron-ljx"},"content":"2. Type: `Deadline`, Description: `Chemistry Homework`, Date: `2022-05-03`, Time: `1700`","lastModifiedDate":"2022-03-30"},{"lineNumber":278,"author":{"gitId":"aaron-ljx"},"content":"3. Type: `Event`, Description: `Final Exam`, Date: `2022-06-04`, Time: `1700 2000`","lastModifiedDate":"2022-03-30"},{"lineNumber":279,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":280,"author":{"gitId":"aaron-ljx"},"content":"* `editTask 1 desc/Drink Water` edits the task description of a `Todo` task.","lastModifiedDate":"2022-03-30"},{"lineNumber":281,"author":{"gitId":"aaron-ljx"},"content":"* `editTask 2 date/2022-05-10 at/2000` edits the date and the time of a `Deadline` task.","lastModifiedDate":"2022-03-30"},{"lineNumber":282,"author":{"gitId":"aaron-ljx"},"content":"* `editTask 3 at/1800 2100` edits the time of an `Event` task.","lastModifiedDate":"2022-03-30"},{"lineNumber":283,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":284,"author":{"gitId":"alfredkohhh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":285,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":286,"author":{"gitId":"alfredkohhh"},"content":"**:bulb: Take Note:** \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":287,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":288,"author":{"gitId":"alfredkohhh"},"content":"For Deadline and Event, the DATE must be in this format: YYYY-MM-DD \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":289,"author":{"gitId":"alfredkohhh"},"content":" ","lastModifiedDate":"2022-04-09"},{"lineNumber":290,"author":{"gitId":"alfredkohhh"},"content":"For Deadline and Event, any TIME related fields must be in the format HHmm, where HH should only be between 00 and 23 and mm should only be between 00 and 59. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":291,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":292,"author":{"gitId":"alfredkohhh"},"content":"For Event, the START_TIME must be earlier than the END_TIME. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":293,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":294,"author":{"gitId":"alfredkohhh"},"content":"Editing a Task to another already existing task will result in an error.","lastModifiedDate":"2022-04-11"},{"lineNumber":295,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":296,"author":{"gitId":"alfredkohhh"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":297,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":298,"author":{"gitId":"dannytayjy"},"content":"### Marking a Task : `markTask`","lastModifiedDate":"2022-03-30"},{"lineNumber":299,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":300,"author":{"gitId":"dannytayjy"},"content":"Marks the specified task in ManageEZPZ as done.","lastModifiedDate":"2022-03-30"},{"lineNumber":301,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":302,"author":{"gitId":"dannytayjy"},"content":"Format: `markTask INDEX`","lastModifiedDate":"2022-03-30"},{"lineNumber":303,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":304,"author":{"gitId":"dannytayjy"},"content":"* Marks the task at the specified `INDEX` as done.","lastModifiedDate":"2022-03-30"},{"lineNumber":305,"author":{"gitId":"dannytayjy"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-03-30"},{"lineNumber":306,"author":{"gitId":"dannytayjy"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-30"},{"lineNumber":307,"author":{"gitId":"alfredkohhh"},"content":"* Marking a marked task (i.e., that is already set as done) will not change its physical state.","lastModifiedDate":"2022-04-06"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-30"},{"lineNumber":310,"author":{"gitId":"dannytayjy"},"content":"* `markTask 2` marks the 2nd task in the displayed task list as done.","lastModifiedDate":"2022-03-30"},{"lineNumber":311,"author":{"gitId":"dannytayjy"},"content":"* `listTask` followed by `markTask 2` sets the displayed task list to show all tasks in ManageEZPZ and marks the 2nd task in ManageEZPZ as done.","lastModifiedDate":"2022-03-30"},{"lineNumber":312,"author":{"gitId":"dannytayjy"},"content":"* `findTask desc/slides` followed by `markTask 1` sets the displayed task list with the results from the findTask command and marks the 1st task in the displayed task list as done.","lastModifiedDate":"2022-03-30"},{"lineNumber":313,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":314,"author":{"gitId":"alfredkohhh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":315,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":316,"author":{"gitId":"dannytayjy"},"content":"### Unmarking a Task : `unmarkTask`","lastModifiedDate":"2022-03-30"},{"lineNumber":317,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":318,"author":{"gitId":"dannytayjy"},"content":"Unmarks the specified task in ManageEZPZ, i.e., changes the status back to not done.","lastModifiedDate":"2022-03-30"},{"lineNumber":319,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":320,"author":{"gitId":"dannytayjy"},"content":"Format: `unmarkTask INDEX`","lastModifiedDate":"2022-03-30"},{"lineNumber":321,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":322,"author":{"gitId":"dannytayjy"},"content":"* Unmarks the task at the specified `INDEX` to change the status back to not done.","lastModifiedDate":"2022-03-30"},{"lineNumber":323,"author":{"gitId":"dannytayjy"},"content":"* The index refers to the index number shown in the displayed Task list.","lastModifiedDate":"2022-03-30"},{"lineNumber":324,"author":{"gitId":"dannytayjy"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-30"},{"lineNumber":325,"author":{"gitId":"alfredkohhh"},"content":"* Unmarking an unmarked task (i.e., that is already set as not done) will not change its physical state.","lastModifiedDate":"2022-04-06"},{"lineNumber":326,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":327,"author":{"gitId":"dannytayjy"},"content":"Examples:","lastModifiedDate":"2022-03-30"},{"lineNumber":328,"author":{"gitId":"dannytayjy"},"content":"* `unmarkTask 2` changes the 2nd task in the displayed task list back to not done.","lastModifiedDate":"2022-03-30"},{"lineNumber":329,"author":{"gitId":"dannytayjy"},"content":"* `listTask` followed by `unmarkTask 2` sets the displayed task list to show all tasks in ManageEZPZ and changes the 2nd task in ManageEZPZ back to not done.","lastModifiedDate":"2022-03-30"},{"lineNumber":330,"author":{"gitId":"dannytayjy"},"content":"* `findTask desc/slides` followed by `unmarkTask 1` sets the displayed task list with the results from the findTask command and changes the 1st task in the displayed task list back to not done.","lastModifiedDate":"2022-03-30"},{"lineNumber":331,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":332,"author":{"gitId":"alfredkohhh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":333,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":334,"author":{"gitId":"dannytayjy"},"content":"### Deleting a Task : `deleteTask`","lastModifiedDate":"2022-03-30"},{"lineNumber":335,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":336,"author":{"gitId":"dannytayjy"},"content":"Deletes the specified task from ManageEZPZ.","lastModifiedDate":"2022-03-30"},{"lineNumber":337,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":338,"author":{"gitId":"dannytayjy"},"content":"Format: `deleteTask INDEX`","lastModifiedDate":"2022-03-30"},{"lineNumber":339,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":340,"author":{"gitId":"dannytayjy"},"content":"* Deletes the task at the specified `INDEX`.","lastModifiedDate":"2022-03-30"},{"lineNumber":341,"author":{"gitId":"dannytayjy"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-03-30"},{"lineNumber":342,"author":{"gitId":"dannytayjy"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-30"},{"lineNumber":343,"author":{"gitId":"dannytayjy"},"content":"* The number of assigned tasks of the employees who were assigned to the deleted task will be decreased by 1.","lastModifiedDate":"2022-04-07"},{"lineNumber":344,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":345,"author":{"gitId":"dannytayjy"},"content":"Examples:","lastModifiedDate":"2022-03-30"},{"lineNumber":346,"author":{"gitId":"dannytayjy"},"content":"* `deleteTask 2` deletes the 2nd task in the displayed task list. The number of assigned tasks of the employees who were assigned to the deleted task will be decreased by 1.","lastModifiedDate":"2022-04-07"},{"lineNumber":347,"author":{"gitId":"dannytayjy"},"content":"* `listTask` followed by `deleteTask 2` sets the displayed task list to show all tasks in ManageEZPZ and deletes the 2nd task in ManageEZPZ. The number of assigned tasks of the employees who were assigned to the deleted task will be decreased by 1.","lastModifiedDate":"2022-04-07"},{"lineNumber":348,"author":{"gitId":"dannytayjy"},"content":"* `findTask desc/slides` followed by `deleteTask 1` sets the displayed task list with the results from the findTask command and deletes the 1st task in the displayed task list. The number of assigned tasks of the employees who were assigned to the deleted task will be decreased by 1.","lastModifiedDate":"2022-04-07"},{"lineNumber":349,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":350,"author":{"gitId":"dannytayjy"},"content":"### Tagging a Task to an Employee : `tagTask`","lastModifiedDate":"2022-03-30"},{"lineNumber":351,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":352,"author":{"gitId":"dannytayjy"},"content":"Assigns the specified task to an employee.","lastModifiedDate":"2022-03-30"},{"lineNumber":353,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":354,"author":{"gitId":"alfredkohhh"},"content":"Format: `tagTask INDEX n/NAME`","lastModifiedDate":"2022-03-29"},{"lineNumber":355,"author":{"gitId":"dannytayjy"},"content":"* Assigns the task at the specified `INDEX` to the employee with the specified `NAME`.","lastModifiedDate":"2022-03-30"},{"lineNumber":356,"author":{"gitId":"alfredkohhh"},"content":"* The index refers to the index number shown in the current displayed task list.","lastModifiedDate":"2022-04-05"},{"lineNumber":357,"author":{"gitId":"dannytayjy"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-30"},{"lineNumber":358,"author":{"gitId":"alfredkohhh"},"content":"* The employee you are tagging **must** be in the current displayed employees list.","lastModifiedDate":"2022-04-05"},{"lineNumber":359,"author":{"gitId":"alfredkohhh"},"content":"* The name must be a valid employee **full name** in ManageEZPZ.","lastModifiedDate":"2022-04-05"},{"lineNumber":360,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":361,"author":{"gitId":"alfredkohhh"},"content":"Example: `tagTask 1 n/Alex Yeoh`","lastModifiedDate":"2022-03-29"},{"lineNumber":362,"author":{"gitId":"dannytayjy"},"content":"* `tagTask 1 n/Alex Yeoh` assigns the 1st task in the displayed task list to the employee with the name Alex Yeoh.","lastModifiedDate":"2022-03-30"},{"lineNumber":363,"author":{"gitId":"dannytayjy"},"content":"* `listTask` followed by `tagTask 1 n/Alex Yeoh` sets the displayed task list to show all tasks in ManageEZPZ and assigns the 1st task in ManageEZPZ to the employee with the name Alex Yeoh.","lastModifiedDate":"2022-03-30"},{"lineNumber":364,"author":{"gitId":"dannytayjy"},"content":"* `findTask desc/slides` followed by `tagTask 1 n/Alex Yeoh` sets the displayed task list with the results from the findTask command and assigns the 1st task in the displayed task list to the employee with the name Alex Yeoh.","lastModifiedDate":"2022-03-30"},{"lineNumber":365,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":366,"author":{"gitId":"dannytayjy"},"content":"### Untagging a Task from an Employee : `untagTask`","lastModifiedDate":"2022-03-30"},{"lineNumber":367,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":368,"author":{"gitId":"dannytayjy"},"content":"Deallocates the specified task from an employee.","lastModifiedDate":"2022-03-30"},{"lineNumber":369,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":370,"author":{"gitId":"alfredkohhh"},"content":"Format: `untagTask INDEX n/NAME`","lastModifiedDate":"2022-03-29"},{"lineNumber":371,"author":{"gitId":"dannytayjy"},"content":"* Deallocates the task at the specified `INDEX` from the employee with the specified `NAME`.","lastModifiedDate":"2022-03-30"},{"lineNumber":372,"author":{"gitId":"alfredkohhh"},"content":"* The index refers to the index number shown in the current displayed task list.","lastModifiedDate":"2022-04-05"},{"lineNumber":373,"author":{"gitId":"dannytayjy"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-30"},{"lineNumber":374,"author":{"gitId":"alfredkohhh"},"content":"* The employee you are tagging **must** be in the current displayed employees list.","lastModifiedDate":"2022-04-05"},{"lineNumber":375,"author":{"gitId":"alfredkohhh"},"content":"* The name must be a valid employee **full name** in ManageEZPZ.","lastModifiedDate":"2022-04-05"},{"lineNumber":376,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":377,"author":{"gitId":"dannytayjy"},"content":"Example:","lastModifiedDate":"2022-03-30"},{"lineNumber":378,"author":{"gitId":"dannytayjy"},"content":"* `untagTask 1 n/Alex Yeoh` deallocates the 1st task in the displayed task list from the employee with the name Alex Yeoh.","lastModifiedDate":"2022-03-30"},{"lineNumber":379,"author":{"gitId":"dannytayjy"},"content":"* `listTask` followed by `untagTask 1 n/Alex Yeoh` sets the displayed task list to show all tasks in ManageEZPZ and deallocates the 1st task in ManageEZPZ from the employee with the name Alex Yeoh.","lastModifiedDate":"2022-03-30"},{"lineNumber":380,"author":{"gitId":"dannytayjy"},"content":"* `findTask desc/slides` followed by `untagTask 1 n/Alex Yeoh` sets the displayed task list with the results from the findTask command and deallocates the 1st task in the displayed task list from the employee with the name Alex Yeoh.","lastModifiedDate":"2022-03-30"},{"lineNumber":381,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":382,"author":{"gitId":"dannytayjy"},"content":"### Tagging a Priority to a Task : `tagPriority`","lastModifiedDate":"2022-03-30"},{"lineNumber":383,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":384,"author":{"gitId":"dannytayjy"},"content":"Assigns the specified task with a priority of either HIGH, MEDIUM, LOW or NONE.","lastModifiedDate":"2022-03-30"},{"lineNumber":385,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":386,"author":{"gitId":"dannytayjy"},"content":"Format: `tagPriority INDEX priority/PRIORITY`","lastModifiedDate":"2022-03-30"},{"lineNumber":387,"author":{"gitId":"dannytayjy"},"content":"* Assigns the task at the specified `INDEX` with the specified priority `PRIORITY`.","lastModifiedDate":"2022-03-30"},{"lineNumber":388,"author":{"gitId":"dannytayjy"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-03-30"},{"lineNumber":389,"author":{"gitId":"dannytayjy"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-30"},{"lineNumber":390,"author":{"gitId":"dannytayjy"},"content":"* The priority must be either `HIGH`, `MEDIUM`, `LOW`, or `NONE`.","lastModifiedDate":"2022-03-30"},{"lineNumber":391,"author":{"gitId":"dannytayjy"},"content":"* The priority is case-insensitive, e.g., `high`, `HIGH`, `HiGh` or `hIgH` will match as `HIGH`.","lastModifiedDate":"2022-03-30"},{"lineNumber":392,"author":{"gitId":"dannytayjy"},"content":"* A task with the priority of `NONE` will not have the priority reflected in the displayed task list.","lastModifiedDate":"2022-03-30"},{"lineNumber":393,"author":{"gitId":"alfredkohhh"},"content":"* Tagging the same priority to the Task, will not change its physical state.","lastModifiedDate":"2022-04-06"},{"lineNumber":394,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":395,"author":{"gitId":"alfredkohhh"},"content":"Example: ","lastModifiedDate":"2022-03-29"},{"lineNumber":396,"author":{"gitId":"alfredkohhh"},"content":"* `tagPriority 1 priority/HIGH`","lastModifiedDate":"2022-03-29"},{"lineNumber":397,"author":{"gitId":"dannytayjy"},"content":"* `tagPriority 1 priority/HIGH` assigns the 1st task in the displayed task list with the priority of `HIGH`.","lastModifiedDate":"2022-03-30"},{"lineNumber":398,"author":{"gitId":"dannytayjy"},"content":"* `listTask` followed by `tagPriority 1 priority/HIGH` sets the displayed task list to show all tasks in ManageEZPZ and assigns the 1st task in ManageEZPZ with the priority of `HIGH`.","lastModifiedDate":"2022-03-30"},{"lineNumber":399,"author":{"gitId":"dannytayjy"},"content":"* `findTask desc/slides` followed by `tagPriority 1 priority/HIGH` sets the displayed task list with the results from the findTask command and assigns the 1st task in the displayed task list with the priority of `HIGH`.","lastModifiedDate":"2022-03-30"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"alfredkohhh"},"content":"Deletes all entries from the employee list and task list.","lastModifiedDate":"2022-04-06"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"ChanWeiJie"},"content":"ManageEZPZ data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-03"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":419,"author":{"gitId":"ChanWeiJie"},"content":"ManageEZPZ data are saved as a JSON file `[JAR file location]/data/ManageEZPZ.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-03-03"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":421,"author":{"gitId":"dannytayjy"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":423,"author":{"gitId":"dannytayjy"},"content":":exclamation: **Caution:**","lastModifiedDate":"2022-03-30"},{"lineNumber":424,"author":{"gitId":"ChanWeiJie"},"content":"If your changes to the data file makes its format invalid, ManageEZPZ will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-03-03"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":426,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":428,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"alfredkohhh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"ChanWeiJie"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ManageEZPZ home folder.","lastModifiedDate":"2022-03-03"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"ChanWeiJie"},"content":"### Employee Related Commands","lastModifiedDate":"2022-03-29"},{"lineNumber":441,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":442,"author":{"gitId":"dannytayjy"},"content":"| Action              | Format, Examples                                                                                                 |","lastModifiedDate":"2022-03-30"},{"lineNumber":443,"author":{"gitId":"dannytayjy"},"content":"|---------------------|------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-30"},{"lineNumber":444,"author":{"gitId":"dannytayjy"},"content":"| **Add Employee**    | `addEmployee n/NAME p/PHONE_NUMBER e/EMAIL` \u003cbr\u003e e.g., `addEmployee n/James Ho p/22224444 e/jamesho@example.com` |","lastModifiedDate":"2022-03-30"},{"lineNumber":445,"author":{"gitId":"dannytayjy"},"content":"| **List Employees**  | `listEmployee`                                                                                                   |","lastModifiedDate":"2022-03-30"},{"lineNumber":446,"author":{"gitId":"alfredkohhh"},"content":"| **Find Employee**   | `findEmployee OPTIONS` \u003cbr\u003e e.g. `findEmployee n/Alex Yeoh`                                                      |","lastModifiedDate":"2022-04-05"},{"lineNumber":447,"author":{"gitId":"dannytayjy"},"content":"| **Edit Employee**   | `editEmployee INDEX n/NAME p/PHONE_NUMBER e/EMAIL` \u003cbr\u003e e.g., `edit 2 n/James Lee e/jameslee@example.com`        |","lastModifiedDate":"2022-03-30"},{"lineNumber":448,"author":{"gitId":"dannytayjy"},"content":"| **Delete Employee** | `deleteEmployee INDEX` \u003cbr\u003e e.g., `deleteEmployee 3`                                                             |","lastModifiedDate":"2022-03-30"},{"lineNumber":449,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":450,"author":{"gitId":"alfredkohhh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":451,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":452,"author":{"gitId":"ChanWeiJie"},"content":"### Task Related Commands","lastModifiedDate":"2022-03-29"},{"lineNumber":453,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":454,"author":{"gitId":"dannytayjy"},"content":"| Action                | Format, Examples                                                                                                                |","lastModifiedDate":"2022-03-30"},{"lineNumber":455,"author":{"gitId":"dannytayjy"},"content":"|-----------------------|---------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-30"},{"lineNumber":456,"author":{"gitId":"dannytayjy"},"content":"| **Add Todo Task**     | `addTodo desc/TASK_DESCRIPTION` \u003cbr\u003e e.g., `addTodo desc/read book`                                                             |","lastModifiedDate":"2022-03-30"},{"lineNumber":457,"author":{"gitId":"dannytayjy"},"content":"| **Add Deadline Task** | `addDeadline desc/TASK_DESCRIPTION by/DATETIME` \u003cbr\u003e e.g., `addDeadline desc/return book by/2022-02-16 1800`                    |","lastModifiedDate":"2022-03-31"},{"lineNumber":458,"author":{"gitId":"aaron-ljx"},"content":"| **Add Event Task**    | `addEvent desc/TASK_DESCRIPTION at/DATE START_TIME END_TIME` \u003cbr\u003e e.g., `addEvent desc/project meeting at/2022-02-17 1900 2000` ","lastModifiedDate":"2022-04-09"},{"lineNumber":459,"author":{"gitId":"ChanWeiJie"},"content":"  **Edit Task**         | `editTask INDEX desc/TASK_DESCRIPTION date/DATE at/TIME` \u003cbr\u003e e.g., `editTask 3 desc/homework deadline date/2022-03-15 at/1700`","lastModifiedDate":"2022-04-10"},{"lineNumber":460,"author":{"gitId":"dannytayjy"},"content":"| **List Tasks**        | `listTasks`                                                                                                                     |","lastModifiedDate":"2022-03-30"},{"lineNumber":461,"author":{"gitId":"dannytayjy"},"content":"| **Find Task**         | `findTask OPTIONS` \u003cbr\u003e e.g.,`findTask todo/`                                                                                   |","lastModifiedDate":"2022-03-30"},{"lineNumber":462,"author":{"gitId":"dannytayjy"},"content":"| **Mark Task**         | `markTask INDEX` \u003cbr\u003e e.g., `markTask 2`                                                                                        |","lastModifiedDate":"2022-03-30"},{"lineNumber":463,"author":{"gitId":"dannytayjy"},"content":"| **Unmark Task**       | `unmarkTask INDEX` \u003cbr\u003e e.g., `unmarkTask 2`                                                                                    |","lastModifiedDate":"2022-03-30"},{"lineNumber":464,"author":{"gitId":"dannytayjy"},"content":"| **Delete Task**       | `deleteTask INDEX` \u003cbr\u003e e.g., `deleteTask 2`                                                                                    |","lastModifiedDate":"2022-03-30"},{"lineNumber":465,"author":{"gitId":"dannytayjy"},"content":"| **Tag Task**          | `tagTask INDEX n/NAME` \u003cbr\u003e e.g.,`tagTask 1 n/Alex Yeoh`                                                                        |","lastModifiedDate":"2022-03-30"},{"lineNumber":466,"author":{"gitId":"dannytayjy"},"content":"| **Untag Task**        | `untagTask INDEX n/NAME` \u003cbr\u003e e.g.,`untagTask 1 n/Alex Yeoh`                                                                    |","lastModifiedDate":"2022-03-30"},{"lineNumber":467,"author":{"gitId":"dannytayjy"},"content":"| **Tag Priority**      | `tagPriority INDEX priority/PRIORITY` \u003cbr\u003e e.g.,`tagPriority 1 priority/HIGH`                                                   |","lastModifiedDate":"2022-03-30"},{"lineNumber":468,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":469,"author":{"gitId":"alfredkohhh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":470,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":471,"author":{"gitId":"ChanWeiJie"},"content":"### Others","lastModifiedDate":"2022-03-29"},{"lineNumber":472,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":473,"author":{"gitId":"dannytayjy"},"content":"| Action    | Format  |","lastModifiedDate":"2022-03-30"},{"lineNumber":474,"author":{"gitId":"dannytayjy"},"content":"|-----------|---------|","lastModifiedDate":"2022-03-30"},{"lineNumber":475,"author":{"gitId":"dannytayjy"},"content":"| **Clear** | `clear` |","lastModifiedDate":"2022-03-30"},{"lineNumber":476,"author":{"gitId":"dannytayjy"},"content":"| **Help**  | `help`  |","lastModifiedDate":"2022-03-30"},{"lineNumber":477,"author":{"gitId":"dannytayjy"},"content":"| **Exit**  | `exit`  |","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Denniszedead":31,"alfredkohhh":91,"dannytayjy":160,"ChanWeiJie":54,"aaron-ljx":22,"-":119}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"ChanWeiJie"},"content":"    content: \"ManageEZPZ\";","lastModifiedDate":"2022-04-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"ChanWeiJie":1,"-":294}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aaron-ljx"},"content":"@startuml","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"aaron-ljx"},"content":"!include style.puml","lastModifiedDate":"2022-04-08"},{"lineNumber":3,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"aaron-ljx"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"aaron-ljx"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"aaron-ljx"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"participant \":DeleteTaskCommandParser\" as DeleteTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"participant \"d:DeleteTaskCommand\" as DeleteTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"aaron-ljx"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"aaron-ljx"},"content":"end box","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"aaron-ljx"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"aaron-ljx"},"content":"end box","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"[-\u003e LogicManager : execute(\"deleteTask 1\")","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"aaron-ljx"},"content":"activate LogicManager","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"deleteTask 1\")","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"aaron-ljx"},"content":"activate AddressBookParser","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"create DeleteTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"AddressBookParser -\u003e DeleteTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"activate DeleteTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"DeleteTaskCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"deactivate DeleteTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"AddressBookParser -\u003e DeleteTaskCommandParser : parse(\"deleteTask 1\")","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"activate DeleteTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"create DeleteTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"DeleteTaskCommandParser -\u003e DeleteTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"activate DeleteTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"DeleteTaskCommand --\u003e DeleteTaskCommandParser : d","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"deactivate DeleteTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"DeleteTaskCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"deactivate DeleteTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"aaron-ljx"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"DeleteTaskCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"destroy DeleteTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"aaron-ljx"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"aaron-ljx"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"LogicManager -\u003e DeleteTaskCommand : execute()","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"activate DeleteTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"DeleteTaskCommand -\u003e Model : deleteTask(1)","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"aaron-ljx"},"content":"activate Model","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"Model --\u003e DeleteTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"aaron-ljx"},"content":"deactivate Model","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"aaron-ljx"},"content":"create CommandResult","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"DeleteTaskCommand -\u003e CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"aaron-ljx"},"content":"activate CommandResult","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"CommandResult --\u003e DeleteTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"aaron-ljx"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"DeleteTaskCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"deactivate DeleteTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"aaron-ljx"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"aaron-ljx"},"content":"deactivate LogicManager","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"aaron-ljx"},"content":"@enduml","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"ChanWeiJie":28,"aaron-ljx":41}},{"path":"docs/diagrams/AddTaskActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"start","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":":User executes addTodo command;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"if (Command is Valid)","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"    :ManageEZPZ saves the [Task];","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"else ([else])","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"endif","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"stop","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"alfredkohhh":12}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"user -[USER_COLOR]\u003e ui : \"deleteEmployee 1\"","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"deleteEmployee 1\")","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dannytayjy":2,"-":36}},{"path":"docs/diagrams/BetterModelClassDiagramUpdated.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"AddressBook *-right-\u003e \"1\" UniqueTaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"UniqueTagList -[hidden]down- UniqueTaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"UniqueTagList -[hidden]down- UniqueTaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"UniqueTaskList -right-\u003e Person","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"Task -up-\u003e \"* Assigned\" Person","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"Task -up-\u003e Description","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"Todo .up.|\u003e Task","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"Event .up.|\u003e Task","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"Deadline .up.|\u003e Task","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"ChanWeiJie":21}},{"path":"docs/diagrams/DeleteClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"start","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":":User executes Delete command;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"if (Command is Valid)","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"    :ManageEZPZ deletes the [Task];","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"else ([else])","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"endif","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"stop","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"dannytayjy":13}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"participant \":DeleteEmployeeCommandParser\" as DeleteEmployeeCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"participant \"d:DeleteEmployeeCommand\" as DeleteEmployeeCommand LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"[-\u003e LogicManager : execute(\"deleteEmployee 1\")","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"deleteEmployee 1\")","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"create DeleteEmployeeCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"AddressBookParser -\u003e DeleteEmployeeCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"activate DeleteEmployeeCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"DeleteEmployeeCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"deactivate DeleteEmployeeCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"AddressBookParser -\u003e DeleteEmployeeCommandParser : parse(\"1\")","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"activate DeleteEmployeeCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"create DeleteEmployeeCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"DeleteEmployeeCommandParser -\u003e DeleteEmployeeCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"activate DeleteEmployeeCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"DeleteEmployeeCommand --\u003e DeleteEmployeeCommandParser : d","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"deactivate DeleteEmployeeCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"DeleteEmployeeCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"deactivate DeleteEmployeeCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"DeleteEmployeeCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"destroy DeleteEmployeeCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"LogicManager -\u003e DeleteEmployeeCommand : execute()","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"activate DeleteEmployeeCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"DeleteEmployeeCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"Model --\u003e DeleteEmployeeCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"DeleteEmployeeCommand -\u003e CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"CommandResult --\u003e DeleteEmployeeCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"DeleteEmployeeCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"deactivate DeleteEmployeeCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dannytayjy":28,"-":41}},{"path":"docs/diagrams/FindTaskClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"@startuml","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"start","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":":User executes findTask/findEmployee command;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"if (Attributes entered are Valid)","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"    :ManageEZPZ finds [Tasks/Employees] that contains the stated attributes;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"else ([else])","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"endif","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"stop","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"@enduml","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"Denniszedead":13}},{"path":"docs/diagrams/FindTaskCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"@startuml","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"!include style.puml","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"participant \":FindTaskCommandParser\" as FindTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"participant \":FindTaskCommand\" as FindTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"end box","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"end box","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"[-\u003e LogicManager : execute(\"findTask todo/\")","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"activate LogicManager","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"findTask todo/\")","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"activate AddressBookParser","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"create FindTaskCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"AddressBookParser -\u003e FindTaskCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"activate FindTaskCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"FindTaskCommandParser --\u003e AddressBookParser : :FindTaskCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"deactivate FindTaskCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"AddressBookParser -\u003e FindTaskCommandParser : parse(\" todo/\")","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"activate FindTaskCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"create FindTaskCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"FindTaskCommandParser -\u003e FindTaskCommand : FindTaskCommand()","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"activate FindTaskCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"FindTaskCommand -\u003e FindTaskCommandParser : :FindTaskCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"deactivate FindTaskCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"FindTaskCommandParser --\u003e AddressBookParser : :FindTaskCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"deactivate FindTaskCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"AddressBookParser --\u003e LogicManager : :FindTaskCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"LogicManager -\u003e FindTaskCommand : execute()","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"activate FindTaskCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"FindTaskCommand -\u003e Model : updateFilteredTaskList()","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"activate Model","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"Model --\u003e FindTaskCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"deactivate Model","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"create CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"FindTaskCommand -\u003e CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"activate CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"CommandResult --\u003e FindTaskCommand : :CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"FindTaskCommand --\u003e LogicManager : :CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"@enduml","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"Denniszedead":60}},{"path":"docs/diagrams/MarkClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"start","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":":User executes Mark command;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"if (Command is Valid)","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"    :ManageEZPZ marks the [Task] as done;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"else ([else])","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"endif","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"stop","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"dannytayjy":13}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"Package TaskModel {","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"ModelManager --\u003e TaskModel","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ChanWeiJie":4,"-":40}},{"path":"docs/diagrams/ModelTaskClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"Package TaskModel \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"Class Task","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"Class Todo","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"Class Event","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"Class Deadline","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"Class Date","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"Class Time","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"Class Description","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"Class UniqueTaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"Class \"\u003c\u003cenumeration\u003e\u003e\\nPriority\\n----\\nHigh\\nMedium\\nLow\\nNone\" as Priority","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"UniqueTaskList --\u003e \"~* all\" Task","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"AddressBook *--\u003e \"1\" UniqueTaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"Task *-\u003e Priority","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"Task *-\u003e Description","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"Todo .up.|\u003e Task","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"Event .up.|\u003e Task","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"Deadline .up.|\u003e Task","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"Event *--\u003e  \"2\" Time","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"Event *--\u003e  Date","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"Deadline *--\u003e  Date","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"Deadline *--\u003e  Time","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"Todo *--\u003e Description","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"Event *--\u003e Description","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"Deadline *--\u003e Description","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"ModelManager --\u003e\"~* filtered\" Task","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"Task --\u003e\"~* assigned\" Person","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"ChanWeiJie":37}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"Class JsonAdaptedTask","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedTask","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"alfredkohhh":2,"-":41}},{"path":"docs/diagrams/TagTaskActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"start","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":":User executes tagTask command;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"if (Command is Valid)","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"    :ManageEZPZ assigns [Person] to [Task];","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"else ([else])","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"endif","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"stop","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"alfredkohhh":12}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"Class TaskListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"Class TaskCard","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"MainWindow *-down-\u003e \"1\" TaskListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"TaskListPanel -down-\u003e \"*\" TaskCard","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"TaskListPanel --|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"TaskCard --|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"TaskCard ..\u003e Model","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dannytayjy":7,"-":60}},{"path":"docs/diagrams/UnmarkClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"start","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":":User executes Unmark command;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"if (Command is Valid)","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"    :ManageEZPZ unmarks the [Task], which changes the status back to not done;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"else ([else])","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"endif","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"stop","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"dannytayjy":13}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"title: ManageEZPZ","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103-F11-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103-F11-1/tp/actions)","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103-F11-1/tp/branch/master/graph/badge.svg?token\u003dILZDIFELY7)](https://codecov.io/gh/AY2122S2-CS2103-F11-1/tp)","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"**ManageEZPZ is a desktop application that allows managers or supervisors to manage employees and assign tasks to them** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"* If you are interested in using ManageEZPZ, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"* If you are interested about developing ManageEZPZ, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ChanWeiJie":5,"-":14}},{"path":"docs/team/aaron-ljx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aaron-ljx"},"content":"Loke Jin Xue Aaron\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"aaron-ljx"},"content":"---","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"aaron-ljx"},"content":"### Project: ManageEZPZ","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"aaron-ljx"},"content":"ManageEZPZ is a desktop application that allows managers or supervisors to manage employees and assign tasks to them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"aaron-ljx"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"aaron-ljx"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"aaron-ljx"},"content":"  * **Edit Task** ([#122](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/122))","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"    * User is able to freely edit different kind of tasks (Todo, Deadline, Event)","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"aaron-ljx"},"content":"    * For example, a user can just edit the description of a Deadline task ","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"aaron-ljx"},"content":"      or update both description and date at the same time.","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"aaron-ljx"},"content":"  * **Add Task (Deadline, Event)** ([#73](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/73))","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"aaron-ljx"},"content":"    * User is able to add Deadline and Event task to their list.","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"aaron-ljx"},"content":"    ","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"aaron-ljx"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003daaron-ljx\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"aaron-ljx"},"content":"* **Project management**:","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"aaron-ljx"},"content":"  * To be updated soon","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"aaron-ljx"},"content":"* **Enhancements**:","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"aaron-ljx"},"content":"  * Extended Task base class to implement Event and Deadline classes ([#73](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/73))","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"aaron-ljx"},"content":"  ","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"aaron-ljx"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"aaron-ljx"},"content":"  * User Guide:","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"aaron-ljx"},"content":"    * Wrote the Edit Task portion ([#171](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/171)) ","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"aaron-ljx"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"aaron-ljx"},"content":"    * Elaborated on how the Edit Task function worked with accompanying image ([#128](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/128))","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"aaron-ljx"},"content":"* **Community**:","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"aaron-ljx"},"content":"  * Reported bugs and suggestions for other team in the same CS2103/T class : [PE Dry Run](https://github.com/aaron-ljx/ped/issues)","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"aaron-ljx"},"content":"* **Tools**:","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"aaron-ljx"},"content":"  * IntelliJ IDEA","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"aaron-ljx":42}},{"path":"docs/team/alfredkohhh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"---","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"layout: page","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"title: Alfred\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"---","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"### Project: ManageEZPZ","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"ManageEZPZ is a desktop application that allows managers or supervisors to manage employees and assign tasks to them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"  * Implemented JsonAdaptedTask. In which, handled, maintained and enhanced all Storage related matters for ManageEZPZ.","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"    * What it does: The creation of `JsonAdaptedTask` allows ManageEZPZ to have a centralised area to handle all Task-Storage matters.","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"  * Completed full implementation of add Todo Task, Command, Logic, Storage as a full template for team to follow. [#72](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/72) ","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"  * Implemented Storage functionality for Mark and Unmark Tasks. [#83](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/83)","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"  * Completed full implementation of Tag Task Command, Logic, Storage. [#108](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/108)","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"  * Completed full implementation of Untag Task Command, Logic, Storage. [#111](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/111)","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"  * Completed full implementation of Tag Priority Command, Logic, Storage. [#131](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/131)","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"  * Implemented tracking number of Tasks assigned to Employee [#146](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/146)","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"  ","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dalfredkohhh\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"* **Project management**:","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"  * Ensured the team\u0027s completion of weekly deliverables (Handled with Wei Jie)","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"  ","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"  * Refactored existing add command to addEmployee command. [#67](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/67)","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"  * Fix and standardise all AddTask commands, added \u0027type\u0027 field for Task model. [#75](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/75)","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"    * Justification: By having a \u0027type\u0027 field, it allows for better identification and loading of Tasks.","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"  * Enhanced storage to handle different fields for the different types of Tasks. [#77](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/77)","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"    * Justification: With the different types of Task having different fields, it is important for the JsonAdaptedTask to handle and load the different fields of each Task.","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"  * Added error-prevention for AddDeadlineTaskParser, AddEventTaskCommandParser for the length of arguments. [#94](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/94)","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"  * Enhanced Logic for DeleteEmployee, deleting an Employee will untag all tasks that employee is assigned to, then proceeds to delete. [#141](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/141)","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"    * Justification: Deleting an employee should also update all associations related to that employee.","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"  * Supported Storage by adding Defensive Programming logic to counter Json being modified. [#249](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/249)","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"    * Justification: In cases where the Number of Tasks / other fields are being edited, we should check if the loaded details matches with our current state.","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"    * Added Use-Cases. [#22](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/22), ","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"                       [#97](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/97)","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"    * Polished Storage description, added Storage Class-Diagram. [#113](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/113)","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"    * Update AddTask and TagTask descriptions. [#130](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/130)","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"    ","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"  * User Guide:","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"    * Rectify and polished UG based on v1.3 PE-D Issues. [#248](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/248)","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"    * Added tagTask, untagTask, tagPriority. [#162](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/162)","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"    ","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"* **Community**:","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"  * PR Reviewed \u0026 Merged: [#64](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/64), ","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"                 [#73](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/73), ","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"                 [#87](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/87), ","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"                 [#89](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/89),","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"                 [#96](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/96),","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"                 [#107](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/107),","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"                 [#123](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/123),","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"                 [#145](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/145)","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"alfredkohhh":62}},{"path":"docs/team/chanweijie.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"title: Chan Wei Jie\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"### Project: ManageEZPZ","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"ManageEZPZ is a desktop application that allows managers or supervisors to manage employees and assign tasks to them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"* **Enhancement**: Creation of the model component for `Task` as a baseline for the use by other teammates. [#64](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/64), [#81](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/81)","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"  * What it does : The creation of the `Task` component allows for smoother creation of the different types of Task related commands.","lastModifiedDate":"2022-04-03"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"  * Justification : This enhancement is important as the different type of Task related command such as adding, deleting, editing and even finding. All relies on the methods created in the `Task` model.  ","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"  * Highlights : This enhancement required me to constantly update the methods that are required by my teammates as the methods in the `Task` Model changes as more commands are being added. As well as the importance of abstraction principles in the implementation of the `Task` class.","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"* **Enhancement**: Creation of Enum class `Priority`.","lastModifiedDate":"2022-04-03"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"  * What it does : The Enum class `Priority` allows the different types of Task to be assigned with a Priority. [#145](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/145)","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"  * Justification : This enhancement is important as the tagPriority command relies on Tasks having priorities.","lastModifiedDate":"2022-04-03"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"  * Highlights : Creating a separate enum class for `Priority` makes the `Task` class more readable as opposed to clustering them together.","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dchanweijie\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"* **Project management**:","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"  * Managed milestones `v1.1` - `v1.4` on GitHub. ","lastModifiedDate":"2022-04-03"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"  * Ensured the team\u0027s completion of weekly deliverables and its deadlines.","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"  * Managed releases `v1.2` - `v1.4` on GitHub.","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"  * Delegated team members what functionalities each of us had to implement to prevent any conflict and provide a better workflow.","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"  * Changed the Employee class to not have `address` \u0026 `tag` fields. [#62](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/62)","lastModifiedDate":"2022-04-03"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"  * Removed the `address` and `tagged` fields in the affected json storage files. [#70](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/70) ","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"  * Updating `Description` to only validate empty descriptions. [#104](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/104)","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"  * Updating `Task` class to be abstract so that it can be inherited by its sub-classes like `todo`/`event`/`deadline`. [#156](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/156)","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"  * Refactored the `editcommand` to `editEmployeeCommand`. [#167](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/167)","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"  ","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"* **Documentation**:","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"  * User Guide:","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"      * Added Commands to be implemented in v1.2. [#21](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/21)","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"      * Added back the `delete` command for Person but renamed it as `deleteEmployee`. [#103](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/103)","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"  * Developer Guide :","lastModifiedDate":"2022-04-03"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"      * Added implementation details of the `Task` Model, including two class diagrams. [#120](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/120), [#127](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/127)","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"      * Added appendix instructions for manual testing \u0026 appendix for Effort. [#286](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/286)","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"* **Community**:","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"  * Setting up the GitHub team org \u0026 repo.","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"  * Necessary general code enhancements such as renaming the product: [#175](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/175), [#176](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/176)","lastModifiedDate":"2022-04-03"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"  * PRs reviewed (with non-trivial review comments): [#73](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/73), [#30](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/30)","lastModifiedDate":"2022-04-03"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"  * Reported bugs and suggestions for other teams: [Dry run PE](https://github.com/ChanWeiJie/ped/issues)","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"  ","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"ChanWeiJie":57}},{"path":"docs/team/dannytayjy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"---","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"layout: page","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"title: Tay Jun Yang\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"---","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"## Project: ManageEZPZ","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"ManageEZPZ is a desktop application that allows managers or supervisors to manage employees and assign tasks to them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"* **New Features:**","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"  * Implemented `markTask` feature, which marks the task identified by the index number used in the displayed task list as done. ([#87](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/87), [#170](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/170))","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"  * Implemented `unmarkTask` feature, which unmarks the task identified by the index number used in the displayed task list, which changes the status back to not done. ([#87](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/87), [#170](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/170))","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"  * Implemented `deleteTask` feature, which deletes the task identified by the index number used in the displayed task list. The number of assigned tasks of the employees who were assigned to the deleted task will then be decreased by 1. ([#89](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/89), [#170](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/170), [#259](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/259))","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"  * Implemented Copying Employee Details to Computer Clipboard feature, which enables the user to right-click on an employee to copy the full name, phone number and email to Computer Clipboard. ([#181](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/181))","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"    * Justification: This feature allows the user to tag a task to an employee or untag a task from an employee easily by pasting the copied full name of the employee into the command text box.","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"* **Enhancements to Graphical User Interface (GUI) of Main Window:** ([#123](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/123), [#142](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/142), [#170](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/170), [#181](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/181), [#247](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/247), [#326](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/326))","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"  * Tweaked the GUI to display the employee list and task list.","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"    * In employee list, details of each employee (`name`, `phone`, `email`, `numOfTasks`) are listed.","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"    * In task list, details of each task (`description`, `type`, `assignees`, `priority`, `isDone`) are listed.","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"  * Justification:","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"    * This enhancement is important as all other features implemented by my teammates must be reflected correctly in the employee list and task list.","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"  * Highlights:","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    * This enhancement requires me to research on JavaFX extensively as I need to understand JavaFx properties and build layouts in fxml code with the help of the Scene Builder software. I will also need to have knowledge on CSS as CSS is used to set the style and alignment of JavaFx containers and controls.","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"    * This enhancement ensures that the employee list and task list displayed in the GUI are updated synchronously whenever any changes are made to the data.","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"    * This enhancement ensures that all features implemented by my teammates are working as expected.","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"* **Enhancements to Existing Features:**","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"  * Enhanced the `editEmployee` feature, which is refactored from the `edit` feature of AddressBook-Level3.","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"    * Justification: The `editEmployee` feature edits the details of the employee identified by the index number used in the displayed employee list. All tasks that are assigned to the edited employee is then updated to reflect the new changes of the employee. ([#170](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/170), [#179](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/179))","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"  * Enhanced the `deleteEmployee` feature, which is refactored from the `delete` feature of AddressBook-Level3.","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"    * Justification: The `deleteEmployee` feature deletes the employee identified by the index number used in the displayed employee list. All tasks that are assigned to the deleted employee is then updated to remove the employee from the respective tasks. ([#170](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/170), [#182](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/182))","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"  * Updated the GUI of the Help Window to replace the user guide URL and showcase the feature of copying employee details to Computer Clipboard. ([#247](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/247))","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"* **Enhancements to New Features:**","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"  * Tweaked the `tagTask` feature implemented by team member [Alfred Koh](https://ay2122s2-cs2103-f11-1.github.io/tp/team/alfredkohhh.html). ([#170](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/170))","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"    * Ensured that the GUI is updated synchronously to show that","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"      * the task is assigned to the employee in the displayed employee list and the number of assigned tasks of the employee is increased by 1.","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"      * the employee\u0027s full name is added to the assignees of the task in the displayed task list.","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"  * Tweaked the `untagTask` feature implemented by team member [Alfred Koh](https://ay2122s2-cs2103-f11-1.github.io/tp/team/alfredkohhh.html). ([#170](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/170))","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"    * Ensured that the GUI is updated synchronously to show that","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"      * the task is deallocated from the employee in the displayed employee list and the number of assigned tasks of the employee is decreased by 1.","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"      * the employee\u0027s full name is removed from the assignees of the task in the displayed task list.","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"  * Tweaked the `tagPriority` feature implemented by team member [Alfred Koh](https://ay2122s2-cs2103-f11-1.github.io/tp/team/alfredkohhh.html). ([#170](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/170))","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"    * Ensured that the GUI is updated synchronously to show that the task is assigned with the specified `priority`.","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"  * Tweaked the `editTask` feature implemented by team member [Aaron Loke](https://ay2122s2-cs2103-f11-1.github.io/tp/team/aaron-ljx.html). ([#179](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/179), [#182](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/182), [#185](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/185))","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"    * Handled bugs such as IndexOutOfBounds for invalid task index of the displayed task list.","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"    * Ensured that `type`, `assignees`, `priority` and `isDone` remain unchanged and the original values are not discarded after editing the task.","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"    * Ensured that exception messages are thrown correctly and appropriately.","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"    * Ensured that the GUI is updated synchronously to show that the task details are updated.","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"    * Guided team member Aaron on the approach of resolving the bugs so that the advertised behaviour in the UG will be consistent with the actual behaviour ([#256](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/256)).","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"    ","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"* **Enhancements to Validation Checks and Error Messages:** ([#179](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/179), [#185](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/185), [#247](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/247), [#259](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/259))","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"  * Ensured that all validation checks are handled properly.","lastModifiedDate":"2022-04-08"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"  * Ensured that all error messages shown to the user upon executing the wrong commands are correct and understandable, so that the user can recover from any errors and continue using the application.","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"* **Icons for GUI:**","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"  * Created icons. ([#142](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/142), [#181](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/181))","lastModifiedDate":"2022-04-08"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"  \u003cbr\u003e \u003cimg height\u003d\"30\" src\u003d\"../images/employee_icon.png\" width\u003d\"30\"/\u003e \u003cimg height\u003d\"30\" src\u003d\"../images/phone_icon.png\" width\u003d\"30\"/\u003e \u003cimg height\u003d\"30\" src\u003d\"../images/email_icon.png\" width\u003d\"30\"/\u003e \u003cimg height\u003d\"30\" src\u003d\"../images/priorities_low.png\" width\u003d\"23\"/\u003e \u003cimg height\u003d\"30\" src\u003d\"../images/priorities_medium.png\" width\u003d\"23\"/\u003e \u003cimg height\u003d\"30\" src\u003d\"../images/priorities_high.png\" width\u003d\"23\"/\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"  * Modified Task icon created by \u003ca href\u003d\"https://www.flaticon.com/premium-icon/task_3774569\"\u003efeen (Flaticon)\u003c/a\u003e to fill up colours and change stroke colour. ([#142](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/142))","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"  \u003cbr\u003e \u003cimg height\u003d\"30\" src\u003d\"../images/task_icon.png\" width\u003d\"30\"/\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"* **Code Contributed:** [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003ddannytayjy\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-04-08"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"dannytayjy"},"content":"* **Project Management:**","lastModifiedDate":"2022-04-08"},{"lineNumber":75,"author":{"gitId":"dannytayjy"},"content":"  * Released v1.3.3 and v1.3.4 on GitHub after bug fixes.","lastModifiedDate":"2022-04-08"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"  * Assisted in merging PRs of implementations done by other teammates.","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"* **Documentation:**","lastModifiedDate":"2022-04-08"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"  * User Guide:","lastModifiedDate":"2022-04-08"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"    * Added full details for the features `editEmployee`, `deleteEmployee`, `markTask`, `unmarkTask` and `deleteTask`. ([#169](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/169), [#259](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/259))","lastModifiedDate":"2022-04-08"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"    * Polished the details and examples for the features `tagTask`, `untagTask` and `tagPriority`. ([#169](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/169))","lastModifiedDate":"2022-04-08"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"    * Standardized the formatting of all commands and update some missing details in other commands. ([#169](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/169))","lastModifiedDate":"2022-04-08"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"    * Updated the table formatting for Command Summary. ([#169](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/169))","lastModifiedDate":"2022-04-08"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"  * Developer Guide:","lastModifiedDate":"2022-04-08"},{"lineNumber":86,"author":{"gitId":"dannytayjy"},"content":"    * Added Non-Functional Requirements and Glossary details. ([#20](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/20))","lastModifiedDate":"2022-04-08"},{"lineNumber":87,"author":{"gitId":"dannytayjy"},"content":"    * Added implementation details of the `UI` component for `TaskListPanel` and `TaskListCard`. ([#129](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/129))","lastModifiedDate":"2022-04-08"},{"lineNumber":88,"author":{"gitId":"dannytayjy"},"content":"    * Added implementation details of the `Logic` component for `deleteTask`, `markTask` and `unmarkTask` features, including the class diagrams and screenshots of the application executing the feature. ([#129](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/129), [#292](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/292))","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":91,"author":{"gitId":"dannytayjy"},"content":"* **Community:**","lastModifiedDate":"2022-04-08"},{"lineNumber":92,"author":{"gitId":"dannytayjy"},"content":"  * Refactored project\u0027s Java package to manageezpz : [#60](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/60)","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"dannytayjy"},"content":"  * Updated the user guide URL in the Help Window : [#247](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/247)","lastModifiedDate":"2022-04-07"},{"lineNumber":94,"author":{"gitId":"dannytayjy"},"content":"  * Reviewed PRs with non-trivial review comments : [#108](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/108), [#145](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/145), [#156](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/156), [#161](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/161), [#257](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/257)","lastModifiedDate":"2022-04-08"},{"lineNumber":95,"author":{"gitId":"dannytayjy"},"content":"  * Reported bugs and suggestions for other team in the same CS2103/T class : [PE Dry Run](https://github.com/dannytayjy/ped/issues)","lastModifiedDate":"2022-04-06"},{"lineNumber":96,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":97,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"dannytayjy"},"content":"* **Tools:**","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"dannytayjy"},"content":"  * IntelliJ IDEA","lastModifiedDate":"2022-04-06"},{"lineNumber":100,"author":{"gitId":"dannytayjy"},"content":"  * JavaFX Scene Builder","lastModifiedDate":"2022-04-06"},{"lineNumber":101,"author":{"gitId":"dannytayjy"},"content":"  * Adobe Photoshop","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"dannytayjy":101}},{"path":"docs/team/denniszedead.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"---","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"layout: page","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"title: Ng Wen Hao Dennis\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"---","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"### Project: ManageEZPZ","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"ManageEZPZ is a desktop application that allows managers or supervisors to manage employees and assign tasks to them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"#### Enhancement implemented","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"`findEmployee` command:","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"* Change  from `find` command to `findEmployee` command to reflect and differentiate this find command to find all employees.","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"* Create a new predicate `PersonMultiplePredicate` to filter out employees based on multiple properties entered by user.","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"* Unit test for the new `findEmployee` command include:","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"  * `findEmployeeCommandParser` to check on different user inputs.","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"  * `findEmployeeCommand` to show different outcome on the `finteredPersonList` for different user inputs.","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"  * `PersonMultiplePredicate` to ensure that only employees that satisfy the options given to the users return true.","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"`listEmployee` command:","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"* Only change the command from `list` to `listEmployees` to reflect on listing down all the employees.","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"* Functionalities remain the same from AB3.","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"`findTask` command:","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"* To allow users to find tasks which was a new model added into our project.","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"* Allowed users to search tasks using multiple properties of a task.","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"* Created a new predicate `TaskMultiplePredicate` to filter out tasks based on multiple properties entered by users","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"* Added unit testing for:","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"  * `findTaskCommandParser` to check on different user inputs.","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"  * `findTaskCommand` to show different outcome on the `finteredTaskList` for different user inputs.","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"  * `TaskMultiplePredicate` to ensure that only tasks that satisfy the options given to the users return true.","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"`listTask` command:","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"* List down all the tasks in the filteredList.","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"* Unit test for `listTask` to use the following test cases:","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"  * When the current task list is already filtered.","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"  * When the user task list already shows all task in the task list.","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"#### Code contributed","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"[Repo sense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003ddenniszedead\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"#### PR Reviewed","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"* [#72](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/72), ","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"[#141](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/141), ","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"[#142](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/142), ","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"[#146](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/146), ","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"[#170](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/170), ","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"[#241](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/241), ","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"[#242](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/242), ","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"[#246](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/246), ","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"[#247](https://github.com/AY2122S2-CS2103-F11-1/tp/pull/247)","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"#### Forum contribution","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"* [Asked on whether ternary operators improves code quality](https://github.com/nus-cs2103-AY2122S2/forum/issues/131)","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"#### Contributions to team based task","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"* Created a team shared document","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"* [Create our team PR into the module repo](https://github.com/nus-cs2103-AY2122S2/tp/pull/62)","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"* Submitted tp UG draft into LumiNUS.","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"Denniszedead":62}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"dannytayjy"},"content":"Simply add the following to [`manageezpz.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-03-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"dannytayjy":3,"-":398}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"The `address` field in `Person` is actually an instance of the `manageezpz.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"dannytayjy":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `manageezpz.logic.Logic`.","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"A quick look at the `manageezpz.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"dannytayjy"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editEmployeeDescriptor);","lastModifiedDate":"2022-04-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"dannytayjy":3,"-":298}},{"path":"src/main/java/manageezpz/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.LogsCenter;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.util.FileUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"dannytayjy":3,"-":61}},{"path":"src/main/java/manageezpz/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"dannytayjy":1,"-":24}},{"path":"src/main/java/manageezpz/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.Config;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.LogsCenter;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.Version;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.util.ConfigUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.util.StringUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.Logic;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.LogicManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.AddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.storage.AddressBookStorage;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.storage.Storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.storage.StorageManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.storage.UserPrefsStorage;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.ui.Ui;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.ui.UiManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, false);","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-04-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"ChanWeiJie"},"content":"                logger.info(\"Data file not found. Will be starting with sample data in ManageEZPZ\");","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"            storage.saveAddressBook(initialData);","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"ChanWeiJie"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty ManageEZPZ\");","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"            storage.saveAddressBook(initialData);","lastModifiedDate":"2022-04-05"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"        } catch (IOException | IllegalArgumentException e) {","lastModifiedDate":"2022-04-05"},{"lineNumber":91,"author":{"gitId":"ChanWeiJie"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ManageEZPZ\");","lastModifiedDate":"2022-04-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"            storage.saveAddressBook(initialData);","lastModifiedDate":"2022-04-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"ChanWeiJie"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ManageEZPZ\");","lastModifiedDate":"2022-04-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"ChanWeiJie"},"content":"        logger.info(\"Starting ManageEZPZ \" + MainApp.VERSION);","lastModifiedDate":"2022-04-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alfredkohhh":5,"dannytayjy":24,"ChanWeiJie":6,"-":150}},{"path":"src/main/java/manageezpz/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.core;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":1,"-":62}},{"path":"src/main/java/manageezpz/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.core;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"    private static final double DEFAULT_WIDTH \u003d 850;","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"        if (!(other instanceof GuiSettings)) { // this handles null as well","lastModifiedDate":"2022-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":3,"-":76}},{"path":"src/main/java/manageezpz/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.core;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"    private static final String LOG_FILE \u003d \"ManageEZPZ.log\";","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":1,"ChanWeiJie":1,"-":110}},{"path":"src/main/java/manageezpz/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.core;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command!\";","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format!\";","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT_BIND \u003d \"Invalid command format! \\n\\n%1$s\";","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_EMPTY_NAME \u003d \"Name field cannot be empty! \\n\\n%1$s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"            \"The person index provided is invalid as it exceeds the amount of persons in the displayed list! \\n\\n%1$s\";","lastModifiedDate":"2022-04-04"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"            \"The task index provided is invalid as it exceeds the amount of tasks in the displayed list! \\n\\n%1$s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_INVALID_TASK_TYPE \u003d \"Task is an invalid Task Type!\";","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_INVALID_TIME_RANGE \u003d","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"            \"The time range you provided is invalid as end time should be after start time!\";","lastModifiedDate":"2022-04-04"},{"lineNumber":25,"author":{"gitId":"aaron-ljx"},"content":"    public static final String MESSAGE_INVALID_TIME_FORMAT \u003d \"Invalid time format!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Employee, phone number or email \"","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"            + \"already exists in manageEZPZ! Please check again! \\n\\n%1$s\";","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task with the same description \u0027%1$s\u0027 already exists! \\n\\n\";","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_FIELD_NOT_EDITED \u003d \"At least one of the fields to edit must be provided. \\n\\n\";","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Denniszedead":1,"dannytayjy":23,"aaron-ljx":1,"-":8}},{"path":"src/main/java/manageezpz/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.core;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":1,"-":115}},{"path":"src/main/java/manageezpz/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.core.index;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"dannytayjy":1,"-":53}},{"path":"src/main/java/manageezpz/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.exceptions;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":1,"-":10}},{"path":"src/main/java/manageezpz/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.exceptions;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dannytayjy":1,"-":20}},{"path":"src/main/java/manageezpz/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.util;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.MainApp;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"dannytayjy":2,"-":40}},{"path":"src/main/java/manageezpz/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.util;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dannytayjy":1,"-":34}},{"path":"src/main/java/manageezpz/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.util;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.Config;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"dannytayjy":3,"-":20}},{"path":"src/main/java/manageezpz/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.util;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String, String...)},","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":1,"ChanWeiJie":1,"-":81}},{"path":"src/main/java/manageezpz/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.util;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.LogsCenter;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":3,"-":140}},{"path":"src/main/java/manageezpz/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.util;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":2,"-":66}},{"path":"src/main/java/manageezpz/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.GuiSettings;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.CommandResult;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"     * @see manageezpz.model.Model#getAddressBook()","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"dannytayjy":12,"-":42}},{"path":"src/main/java/manageezpz/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-04-03"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-04-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.GuiSettings;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.LogsCenter;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.Command;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.CommandResult;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.AddressBookParser;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.storage.Storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"    public static final String INPUT_CONTAINS_SPECIAL_CHARACTERS \u003d \"Please do not use invisible characters!\";","lastModifiedDate":"2022-04-03"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        //@@author ChanWeiJie-reused","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        //Reused from https://stackoverflow.com/a/1795436","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        //with minor modifications","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Pattern pattern \u003d Pattern.compile(\"[\\\\p{C}]\");","lastModifiedDate":"2022-04-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d pattern.matcher(commandText);","lastModifiedDate":"2022-04-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        boolean isInvalid \u003d matcher.find();","lastModifiedDate":"2022-04-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"        if (isInvalid) {","lastModifiedDate":"2022-04-03"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"            throw new ParseException(INPUT_CONTAINS_SPECIAL_CHARACTERS);","lastModifiedDate":"2022-04-03"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"dannytayjy"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"dannytayjy"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"dannytayjy":18,"ChanWeiJie":10,"-":76}},{"path":"src/main/java/manageezpz/logic/commands/AddDeadlineTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aaron-ljx"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"aaron-ljx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_DUPLICATE_TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_BY_DATETIME;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Deadline;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"public class AddDeadlineTaskCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"aaron-ljx"},"content":"    public static final String COMMAND_WORD \u003d \"addDeadline\";","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"            + \": Adds a Deadline Task to ManageEZPZ.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_BY_DATETIME + \"DATE TIME\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"            + PREFIX_DESCRIPTION + \"Do Daily Commissions \"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_BY_DATETIME + \"2022-03-15 0400\";","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Deadline Task added: %1$s\";","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    private final Deadline toAdd;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"aaron-ljx"},"content":"    public AddDeadlineTaskCommand(Deadline deadline) {","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"aaron-ljx"},"content":"        toAdd \u003d deadline;","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"aaron-ljx"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"aaron-ljx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"aaron-ljx"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"aaron-ljx"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"                    toAdd.getDescription()) + MESSAGE_USAGE);","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"aaron-ljx"},"content":"        model.addDeadline(toAdd);","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"aaron-ljx"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"aaron-ljx"},"content":"    @Override","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"aaron-ljx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"aaron-ljx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"aaron-ljx"},"content":"                || (other instanceof AddDeadlineTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"aaron-ljx"},"content":"                \u0026\u0026 toAdd.equals(((AddDeadlineTaskCommand) other).toAdd));","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"aaron-ljx"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"alfredkohhh":5,"dannytayjy":13,"aaron-ljx":34}},{"path":"src/main/java/manageezpz/logic/commands/AddEmployeeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"public class AddEmployeeCommand extends Command {","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"    public static final String COMMAND_WORD \u003d \"addEmployee\";","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"            + \": Adds an Employee to ManageEZPZ.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_EMAIL + \"EMAIL\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"            + PREFIX_EMAIL + \"johnd@example.com\";","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Employee added: %1$s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Employee, phone number or \"","lastModifiedDate":"2022-04-02"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"            + \"email already exists in manageEZPZ! \"","lastModifiedDate":"2022-04-03"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"            + \"Please check again!\\n\";","lastModifiedDate":"2022-04-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"     * Creates an AddEmployeeCommand to add the specified {@code Person}","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"    public AddEmployeeCommand(Person person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON + \"\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-04-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"                || (other instanceof AddEmployeeCommand // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"                \u0026\u0026 toAdd.equals(((AddEmployeeCommand) other).toAdd));","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alfredkohhh":7,"dannytayjy":12,"ChanWeiJie":4,"-":41}},{"path":"src/main/java/manageezpz/logic/commands/AddEventTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aaron-ljx"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"aaron-ljx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_DUPLICATE_TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_AT_DATETIME;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Event;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"public class AddEventTaskCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"aaron-ljx"},"content":"    public static final String COMMAND_WORD \u003d \"addEvent\";","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"            + \": Adds an Event Task to ManageEZPZ.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_AT_DATETIME + \"DATE START_TIME END_TIME\\n\"","lastModifiedDate":"2022-04-04"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"            + PREFIX_DESCRIPTION + \"Finish 160 Resins \"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_AT_DATETIME + \"2022-03-15 1800 2000\";","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Event Task added: %1$s\";","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    private final Event toAdd;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"aaron-ljx"},"content":"    public AddEventTaskCommand(Event event) {","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"aaron-ljx"},"content":"        toAdd \u003d event;","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"aaron-ljx"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"aaron-ljx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"aaron-ljx"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"aaron-ljx"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"                    toAdd.getDescription()) + MESSAGE_USAGE);","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"aaron-ljx"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"aaron-ljx"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"aaron-ljx"},"content":"    @Override","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"aaron-ljx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"aaron-ljx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"aaron-ljx"},"content":"                || (other instanceof AddEventTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"aaron-ljx"},"content":"                \u0026\u0026 toAdd.equals(((AddEventTaskCommand) other).toAdd));","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"aaron-ljx"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"alfredkohhh":5,"dannytayjy":13,"aaron-ljx":34}},{"path":"src/main/java/manageezpz/logic/commands/AddTodoTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_DUPLICATE_TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"public class AddTodoTaskCommand extends Command {","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"    public static final String COMMAND_WORD \u003d \"addTodo\";","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"            + \": Adds a Todo Task to ManageEZPZ.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"            + PREFIX_DESCRIPTION + \"Play Genshin Impact\";","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Todo Task added: %1$s\";","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"    private final Todo toAdd;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"     * Creates an AddTodoTaskCommand to add the specified {@code Task}","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"    public AddTodoTaskCommand(Todo task) {","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"        toAdd \u003d task;","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"                    toAdd.getDescription()) + MESSAGE_USAGE);","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"        model.addTodo(toAdd);","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"                || (other instanceof AddTodoTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"                \u0026\u0026 toAdd.equals(((AddTodoTaskCommand) other).toAdd));","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"alfredkohhh":41,"dannytayjy":8,"ChanWeiJie":5}},{"path":"src/main/java/manageezpz/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.AddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"ManageEZPZ has been cleared!\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dannytayjy":3,"ChanWeiJie":1,"-":19}},{"path":"src/main/java/manageezpz/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dannytayjy":3,"-":17}},{"path":"src/main/java/manageezpz/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dannytayjy":1,"-":70}},{"path":"src/main/java/manageezpz/logic/commands/DeleteEmployeeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":" * Deletes an employee identified using its displayed index from the address book.","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"public class DeleteEmployeeCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"    public static final String COMMAND_WORD \u003d \"deleteEmployee\";","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"            + \": Deletes the employee identified by the index number used in the displayed employee list.\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Employee: %1$s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"     * Constructor to initialize an instance of DeleteEmployeeCommand class","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"     * with the given targetIndex.","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"     * @param targetIndex Index of the Employee to be deleted","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"    public DeleteEmployeeCommand(Index targetIndex) {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e fullTaskList \u003d model.getAddressBook().getTaskList();","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"        Person personToDelete \u003d lastShownPersonList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e affectedTaskList \u003d fullTaskList.stream()","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"                .filter(task -\u003e task.getAssignees().contains(personToDelete))","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"        for (Task task : affectedTaskList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"            model.untagEmployeeFromTask(task, personToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"                || (other instanceof DeleteEmployeeCommand // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteEmployeeCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alfredkohhh":7,"dannytayjy":33,"-":35}},{"path":"src/main/java/manageezpz/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":" * Deletes a task identified using its displayed index from the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"    public static final String COMMAND_WORD \u003d \"deleteTask\";","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"     * Constructor to initialize an instance of DeleteTaskCommand class","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"     * with the given targetIndex.","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"     * @param targetIndex Index of the Task to be deleted","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e lastShownTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"        List\u003cPerson\u003e fullPersonList \u003d model.getAddressBook().getPersonList();","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownTaskList.size()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_TASK_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"        Task taskToDelete \u003d lastShownTaskList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"        List\u003cPerson\u003e affectedPersonList \u003d taskToDelete.getAssignees();","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"        for (Person person : affectedPersonList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"            Person personToUpdate \u003d fullPersonList.get(fullPersonList.indexOf(person));","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"            model.decreaseNumOfTasks(personToUpdate);","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alfredkohhh":3,"dannytayjy":37,"-":33}},{"path":"src/main/java/manageezpz/logic/commands/EditEmployeeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_DUPLICATE_PERSON;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":" * Edits the details of an existing employee in the address book.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"public class EditEmployeeCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"    public static final String COMMAND_WORD \u003d \"editEmployee\";","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"            + \": Edits the details of the employee identified by the \"","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"            + \"index number used in the displayed employee list.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_EMAIL + \"EMAIL\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Update Employee success: %1$s\";","lastModifiedDate":"2022-04-04"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"    private final EditEmployeeDescriptor editEmployeeDescriptor;","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"     * Constructor to initialize a EditEmployeeCommand class with the given","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"     * index and editEmployeeDescriptor.","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"     * @param index Index of the Employee to edit","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"     * @param editEmployeeDescriptor Details of the Employee to edit","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"    public EditEmployeeCommand(Index index, EditEmployeeDescriptor editEmployeeDescriptor) {","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(editEmployeeDescriptor);","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"        this.editEmployeeDescriptor \u003d new EditEmployeeDescriptor(editEmployeeDescriptor);","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"ChanWeiJie"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"        List\u003cPerson\u003e fullPersonList \u003d model.getAddressBook().getPersonList();","lastModifiedDate":"2022-04-09"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e fullTaskList \u003d model.getAddressBook().getTaskList();","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"ChanWeiJie"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"ChanWeiJie"},"content":"        Person personToEdit \u003d lastShownPersonList.get(index.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"        Person editedPerson \u003d createEditedEmployee(personToEdit, editEmployeeDescriptor);","lastModifiedDate":"2022-04-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"        // Check for same person (i.e., name, phone or email already exists)","lastModifiedDate":"2022-04-09"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"        for (Person person : fullPersonList) {","lastModifiedDate":"2022-04-09"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"            if (!person.equals(personToEdit) \u0026\u0026 person.isSamePerson(editedPerson)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"                throw new CommandException(String.format(MESSAGE_DUPLICATE_PERSON, MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"            }","lastModifiedDate":"2022-04-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e affectedTaskList \u003d fullTaskList.stream()","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"dannytayjy"},"content":"                .filter(task -\u003e task.getAssignees().contains(personToEdit))","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"dannytayjy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"dannytayjy"},"content":"        for (Task task : affectedTaskList) {","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"dannytayjy"},"content":"            List\u003cPerson\u003e assignees \u003d task.getAssignees();","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"dannytayjy"},"content":"            for (Person assignee : assignees) {","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"dannytayjy"},"content":"                if (assignee.equals(personToEdit)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"dannytayjy"},"content":"                    Task taskToUpdate \u003d fullTaskList.get(fullTaskList.indexOf(task));","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"dannytayjy"},"content":"                    model.updateTaskWithEditedPerson(taskToUpdate, assignees.indexOf(assignee), editedPerson);","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"dannytayjy"},"content":"                }","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"ChanWeiJie"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"dannytayjy"},"content":"     * edited with {@code editEmployeeDescriptor}.","lastModifiedDate":"2022-04-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"dannytayjy"},"content":"    public static Person createEditedEmployee(Person personToEdit, EditEmployeeDescriptor editEmployeeDescriptor) {","lastModifiedDate":"2022-04-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"dannytayjy"},"content":"        Name updatedName \u003d editEmployeeDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2022-04-09"},{"lineNumber":116,"author":{"gitId":"dannytayjy"},"content":"        Phone updatedPhone \u003d editEmployeeDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2022-04-09"},{"lineNumber":117,"author":{"gitId":"dannytayjy"},"content":"        Email updatedEmail \u003d editEmployeeDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2022-04-09"},{"lineNumber":118,"author":{"gitId":"dannytayjy"},"content":"        int personToEditNumOfTask \u003d personToEdit.getNumOfTasks();","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"alfredkohhh"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, personToEditNumOfTask);","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"ChanWeiJie"},"content":"        if (!(other instanceof EditEmployeeCommand)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"ChanWeiJie"},"content":"        EditEmployeeCommand e \u003d (EditEmployeeCommand) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"dannytayjy"},"content":"                \u0026\u0026 editEmployeeDescriptor.equals(e.editEmployeeDescriptor);","lastModifiedDate":"2022-04-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"dannytayjy"},"content":"    public static class EditEmployeeDescriptor {","lastModifiedDate":"2022-04-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"dannytayjy"},"content":"        public EditEmployeeDescriptor() {}","lastModifiedDate":"2022-04-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"dannytayjy"},"content":"        public EditEmployeeDescriptor(EditEmployeeDescriptor toCopy) {","lastModifiedDate":"2022-04-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"alfredkohhh"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email);","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":201,"author":{"gitId":"dannytayjy"},"content":"            if (!(other instanceof EditEmployeeDescriptor)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"dannytayjy"},"content":"            EditEmployeeDescriptor e \u003d (EditEmployeeDescriptor) other;","lastModifiedDate":"2022-04-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"alfredkohhh"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail());","lastModifiedDate":"2022-03-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"alfredkohhh":3,"dannytayjy":70,"ChanWeiJie":13,"-":127}},{"path":"src/main/java/manageezpz/logic/commands/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aaron-ljx"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-04-04"},{"lineNumber":4,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_DUPLICATE_TASK;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TASK_TYPE;","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TIME_RANGE;","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_AT_DATETIME;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Date;","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Deadline;","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Event;","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Time;","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"aaron-ljx"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"aaron-ljx"},"content":" * Edits the details of an existing task in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"aaron-ljx"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"aaron-ljx"},"content":"public class EditTaskCommand extends Command {","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"aaron-ljx"},"content":"    public static final String COMMAND_WORD \u003d \"editTask\";","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"    public static final String EXAMPLE_ONE \u003d COMMAND_WORD + \" 1 \" + PREFIX_DESCRIPTION + \"Eat bananas\";","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"    public static final String EXAMPLE_TWO \u003d COMMAND_WORD + \" 2 \" + PREFIX_DESCRIPTION + \"Eat Apple \"","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_DATE + \"2022-09-05 \" + PREFIX_AT_DATETIME + \"1800\";","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"    public static final String EXAMPLE_THREE \u003d COMMAND_WORD + \" 3 \" + PREFIX_DESCRIPTION + \"Midterm Exam \"","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_DATE + \"2022-04-06 \" + PREFIX_AT_DATETIME + \"1800 2000\";","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"            + \": Edits the details of the Task identified \"","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"aaron-ljx"},"content":"            + \"by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"aaron-ljx"},"content":"            + \"Parameters: INDEX (must exist in the Address Book) \"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2022-04-04"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_AT_DATETIME + \"TIME\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"            + \"At least one of \" + PREFIX_DESCRIPTION + \" \" + PREFIX_DATE","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"            + \" \" + PREFIX_AT_DATETIME + \" must have a value.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"            + \"For an Event Task, a start time and an end time \"","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"            + \"separated with an empty space must be provided \"","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"aaron-ljx"},"content":"            + \"instead of a single time value.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"            + \"Example 1: \" + EXAMPLE_ONE + \"\\n\"","lastModifiedDate":"2022-04-04"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"            + \"Example 2: \" + EXAMPLE_TWO + \"\\n\"","lastModifiedDate":"2022-04-04"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"            + \"Example 3: \" + EXAMPLE_THREE;","lastModifiedDate":"2022-04-04"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Update Task success: %1$s\";","lastModifiedDate":"2022-04-04"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_EDIT_TASK_NO_EMPTY_VALUES \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"            \"For Deadline Task or Event Task, either desc/ date/ or at/ must have a value after it!\";","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_EDIT_TODO_TASK_NO_DATE_AND_TIME_VALUES \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"            \"A Todo Task does not have a date or time to be edited!\";","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_INVALID_TIME_DETAILS_EVENT_TASK \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"            \"Invalid time details for Event Task! Event Task should have start time and end time!\";","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"aaron-ljx"},"content":"    private final Index index;","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"aaron-ljx"},"content":"    private final String desc;","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"aaron-ljx"},"content":"    private final String date;","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"dannytayjy"},"content":"    private final String time;","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"aaron-ljx"},"content":"    private final HashMap\u003cString, Boolean\u003e prefixStatusHash;","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"aaron-ljx"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"     * Constructor to initialize an instance of EditTaskCommand class","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"     * with the given index and updated description, date and time","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"     * information.","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"     * @param index Index of the Task to edit information","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"     * @param desc New description of the Task","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"     * @param date New date of the Task","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"dannytayjy"},"content":"     * @param time New time of the Task","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"aaron-ljx"},"content":"     * @param prefixStatusHash Indicate whether user had declared a prefix","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"aaron-ljx"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"aaron-ljx"},"content":"    public EditTaskCommand(Index index, String desc, String date, String time,","lastModifiedDate":"2022-04-06"},{"lineNumber":90,"author":{"gitId":"aaron-ljx"},"content":"                           HashMap\u003cString, Boolean\u003e prefixStatusHash) {","lastModifiedDate":"2022-04-06"},{"lineNumber":91,"author":{"gitId":"aaron-ljx"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"aaron-ljx"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"aaron-ljx"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"dannytayjy"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"aaron-ljx"},"content":"        this.prefixStatusHash \u003d prefixStatusHash;","lastModifiedDate":"2022-04-06"},{"lineNumber":96,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"aaron-ljx"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"aaron-ljx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-04-04"},{"lineNumber":101,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":102,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"dannytayjy"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_TASK_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":106,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"dannytayjy"},"content":"        Task currentTask \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-04-01"},{"lineNumber":109,"author":{"gitId":"dannytayjy"},"content":"        Task updatedTask;","lastModifiedDate":"2022-04-04"},{"lineNumber":110,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"dannytayjy"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"aaron-ljx"},"content":"            if (currentTask.getType().equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"dannytayjy"},"content":"                updatedTask \u003d updateTodo((Todo) currentTask, this.desc);","lastModifiedDate":"2022-04-01"},{"lineNumber":114,"author":{"gitId":"aaron-ljx"},"content":"            } else if (currentTask.getType().equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"dannytayjy"},"content":"                updatedTask \u003d updateDeadline((Deadline) currentTask, this.desc, this.date, this.time);","lastModifiedDate":"2022-04-01"},{"lineNumber":116,"author":{"gitId":"aaron-ljx"},"content":"            } else if (currentTask.getType().equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"dannytayjy"},"content":"                updatedTask \u003d updateEvent((Event) currentTask, this.desc, this.date, this.time);","lastModifiedDate":"2022-04-01"},{"lineNumber":118,"author":{"gitId":"aaron-ljx"},"content":"            } else {","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"dannytayjy"},"content":"                // Should not reach this as there are only three types of tasks","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"dannytayjy"},"content":"                throw new CommandException(MESSAGE_INVALID_TASK_TYPE);","lastModifiedDate":"2022-04-04"},{"lineNumber":121,"author":{"gitId":"aaron-ljx"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":123,"author":{"gitId":"dannytayjy"},"content":"            model.setTask(currentTask, updatedTask);","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"dannytayjy"},"content":"            return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, updatedTask));","lastModifiedDate":"2022-04-04"},{"lineNumber":125,"author":{"gitId":"dannytayjy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-04-01"},{"lineNumber":126,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(pe.getMessage() + \"\\n\\n\" + EditTaskCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2022-04-01"},{"lineNumber":127,"author":{"gitId":"dannytayjy"},"content":"        } catch (DuplicateTaskException de) {","lastModifiedDate":"2022-04-01"},{"lineNumber":128,"author":{"gitId":"aaron-ljx"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_TASK, this.desc) + MESSAGE_USAGE, de);","lastModifiedDate":"2022-04-06"},{"lineNumber":129,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"aaron-ljx"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":133,"author":{"gitId":"aaron-ljx"},"content":"     * If the value after a prefix is empty, return false.","lastModifiedDate":"2022-04-06"},{"lineNumber":134,"author":{"gitId":"aaron-ljx"},"content":"     * Else, return true.","lastModifiedDate":"2022-04-06"},{"lineNumber":135,"author":{"gitId":"aaron-ljx"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":136,"author":{"gitId":"aaron-ljx"},"content":"    private boolean ensureFormatCompliance(HashMap\u003cString, Boolean\u003e prefixStatusHash,","lastModifiedDate":"2022-04-06"},{"lineNumber":137,"author":{"gitId":"aaron-ljx"},"content":"                                   String desc, String date, String time) {","lastModifiedDate":"2022-04-06"},{"lineNumber":138,"author":{"gitId":"aaron-ljx"},"content":"        boolean isFormatOkay \u003d true;","lastModifiedDate":"2022-04-06"},{"lineNumber":139,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"aaron-ljx"},"content":"        HashMap\u003cString, String\u003e inputStatusHash \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-04-06"},{"lineNumber":141,"author":{"gitId":"aaron-ljx"},"content":"        inputStatusHash.put(\"description\", desc);","lastModifiedDate":"2022-04-06"},{"lineNumber":142,"author":{"gitId":"aaron-ljx"},"content":"        inputStatusHash.put(\"date\", date);","lastModifiedDate":"2022-04-06"},{"lineNumber":143,"author":{"gitId":"aaron-ljx"},"content":"        inputStatusHash.put(\"datetime\", time);","lastModifiedDate":"2022-04-06"},{"lineNumber":144,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":145,"author":{"gitId":"aaron-ljx"},"content":"        String[] statusArr \u003d {\"description\", \"date\", \"datetime\"};","lastModifiedDate":"2022-04-06"},{"lineNumber":146,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":147,"author":{"gitId":"aaron-ljx"},"content":"        for (String s : statusArr) {","lastModifiedDate":"2022-04-06"},{"lineNumber":148,"author":{"gitId":"aaron-ljx"},"content":"            boolean status \u003d prefixStatusHash.get(s);","lastModifiedDate":"2022-04-06"},{"lineNumber":149,"author":{"gitId":"aaron-ljx"},"content":"            String input \u003d inputStatusHash.get(s).trim();","lastModifiedDate":"2022-04-06"},{"lineNumber":150,"author":{"gitId":"aaron-ljx"},"content":"            if (status \u0026\u0026 input.isEmpty()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":151,"author":{"gitId":"aaron-ljx"},"content":"                isFormatOkay \u003d false;","lastModifiedDate":"2022-04-06"},{"lineNumber":152,"author":{"gitId":"aaron-ljx"},"content":"                break;","lastModifiedDate":"2022-04-06"},{"lineNumber":153,"author":{"gitId":"aaron-ljx"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":154,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":155,"author":{"gitId":"aaron-ljx"},"content":"        return isFormatOkay;","lastModifiedDate":"2022-04-06"},{"lineNumber":156,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":157,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":158,"author":{"gitId":"aaron-ljx"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":159,"author":{"gitId":"aaron-ljx"},"content":"     * Updates a Todo task.","lastModifiedDate":"2022-04-06"},{"lineNumber":160,"author":{"gitId":"aaron-ljx"},"content":"     *","lastModifiedDate":"2022-04-06"},{"lineNumber":161,"author":{"gitId":"aaron-ljx"},"content":"     * @param currentTask Current Todo task that is to be updated","lastModifiedDate":"2022-04-06"},{"lineNumber":162,"author":{"gitId":"aaron-ljx"},"content":"     * @param desc New description of the Todo Task","lastModifiedDate":"2022-04-06"},{"lineNumber":163,"author":{"gitId":"aaron-ljx"},"content":"     * @return Updated Todo task","lastModifiedDate":"2022-04-06"},{"lineNumber":164,"author":{"gitId":"aaron-ljx"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":165,"author":{"gitId":"aaron-ljx"},"content":"    public Task updateTodo(Todo currentTask, String desc) throws ParseException {","lastModifiedDate":"2022-04-08"},{"lineNumber":166,"author":{"gitId":"dannytayjy"},"content":"        Todo updatedToDoTask \u003d new Todo(currentTask);","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":168,"author":{"gitId":"aaron-ljx"},"content":"        if (prefixStatusHash.get(\"date\") || prefixStatusHash.get(\"datetime\")) {","lastModifiedDate":"2022-04-06"},{"lineNumber":169,"author":{"gitId":"aaron-ljx"},"content":"            throw new ParseException(MESSAGE_EDIT_TODO_TASK_NO_DATE_AND_TIME_VALUES);","lastModifiedDate":"2022-04-06"},{"lineNumber":170,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":171,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"dannytayjy"},"content":"        Description newDesc \u003d ParserUtil.parseDescription(desc);","lastModifiedDate":"2022-04-01"},{"lineNumber":173,"author":{"gitId":"dannytayjy"},"content":"        updatedToDoTask.setDescription(newDesc);","lastModifiedDate":"2022-03-31"},{"lineNumber":174,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"dannytayjy"},"content":"        return updatedToDoTask;","lastModifiedDate":"2022-03-31"},{"lineNumber":176,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":178,"author":{"gitId":"aaron-ljx"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":179,"author":{"gitId":"aaron-ljx"},"content":"     * Updates a Deadline task.","lastModifiedDate":"2022-04-06"},{"lineNumber":180,"author":{"gitId":"aaron-ljx"},"content":"     *","lastModifiedDate":"2022-04-06"},{"lineNumber":181,"author":{"gitId":"aaron-ljx"},"content":"     * @param currentTask Current Deadline task that is to be updated","lastModifiedDate":"2022-04-06"},{"lineNumber":182,"author":{"gitId":"aaron-ljx"},"content":"     * @param desc New description of the Deadline Task","lastModifiedDate":"2022-04-06"},{"lineNumber":183,"author":{"gitId":"aaron-ljx"},"content":"     * @param date New date of the Deadline Task","lastModifiedDate":"2022-04-06"},{"lineNumber":184,"author":{"gitId":"aaron-ljx"},"content":"     * @param time New time of the Deadline Task","lastModifiedDate":"2022-04-06"},{"lineNumber":185,"author":{"gitId":"aaron-ljx"},"content":"     * @return Updated Deadline task","lastModifiedDate":"2022-04-06"},{"lineNumber":186,"author":{"gitId":"aaron-ljx"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":187,"author":{"gitId":"aaron-ljx"},"content":"    public Task updateDeadline(Deadline currentTask, String desc, String date, String time) throws ParseException {","lastModifiedDate":"2022-04-08"},{"lineNumber":188,"author":{"gitId":"dannytayjy"},"content":"        Deadline updatedDeadlineTask \u003d new Deadline(currentTask);","lastModifiedDate":"2022-03-31"},{"lineNumber":189,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":190,"author":{"gitId":"aaron-ljx"},"content":"        if (!ensureFormatCompliance(prefixStatusHash, desc, date, time)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":191,"author":{"gitId":"aaron-ljx"},"content":"            throw new ParseException(MESSAGE_EDIT_TASK_NO_EMPTY_VALUES);","lastModifiedDate":"2022-04-06"},{"lineNumber":192,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":193,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":194,"author":{"gitId":"dannytayjy"},"content":"        if (!desc.isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":195,"author":{"gitId":"dannytayjy"},"content":"            Description newDesc \u003d ParserUtil.parseDescription(desc);","lastModifiedDate":"2022-04-01"},{"lineNumber":196,"author":{"gitId":"dannytayjy"},"content":"            updatedDeadlineTask.setDescription(newDesc);","lastModifiedDate":"2022-03-31"},{"lineNumber":197,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"dannytayjy"},"content":"        if (!date.isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":200,"author":{"gitId":"dannytayjy"},"content":"            Date newDate \u003d ParserUtil.parseDate(date);","lastModifiedDate":"2022-03-31"},{"lineNumber":201,"author":{"gitId":"dannytayjy"},"content":"            updatedDeadlineTask.setDate(newDate);","lastModifiedDate":"2022-03-31"},{"lineNumber":202,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":203,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"dannytayjy"},"content":"        if (!time.isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":205,"author":{"gitId":"dannytayjy"},"content":"            Time newTime \u003d ParserUtil.parseTime(time);","lastModifiedDate":"2022-03-31"},{"lineNumber":206,"author":{"gitId":"dannytayjy"},"content":"            updatedDeadlineTask.setTime(newTime);","lastModifiedDate":"2022-03-31"},{"lineNumber":207,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":208,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"dannytayjy"},"content":"        return updatedDeadlineTask;","lastModifiedDate":"2022-03-31"},{"lineNumber":210,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":211,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"aaron-ljx"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":213,"author":{"gitId":"aaron-ljx"},"content":"     * Updates an Event task.","lastModifiedDate":"2022-04-06"},{"lineNumber":214,"author":{"gitId":"aaron-ljx"},"content":"     *","lastModifiedDate":"2022-04-06"},{"lineNumber":215,"author":{"gitId":"aaron-ljx"},"content":"     * @param currentTask Current Event task that is to be updated","lastModifiedDate":"2022-04-06"},{"lineNumber":216,"author":{"gitId":"aaron-ljx"},"content":"     * @param desc New description of the Event Task","lastModifiedDate":"2022-04-06"},{"lineNumber":217,"author":{"gitId":"aaron-ljx"},"content":"     * @param date New date of the Event Task","lastModifiedDate":"2022-04-06"},{"lineNumber":218,"author":{"gitId":"dannytayjy"},"content":"     * @param time New time of the Event Task","lastModifiedDate":"2022-04-07"},{"lineNumber":219,"author":{"gitId":"aaron-ljx"},"content":"     * @return Updated Event task","lastModifiedDate":"2022-04-06"},{"lineNumber":220,"author":{"gitId":"aaron-ljx"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":221,"author":{"gitId":"aaron-ljx"},"content":"    public Task updateEvent(Event currentTask, String desc, String date, String time) throws ParseException {","lastModifiedDate":"2022-04-08"},{"lineNumber":222,"author":{"gitId":"dannytayjy"},"content":"        Event updatedEventTask \u003d new Event(currentTask);","lastModifiedDate":"2022-03-31"},{"lineNumber":223,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":224,"author":{"gitId":"aaron-ljx"},"content":"        if (!ensureFormatCompliance(prefixStatusHash, desc, date, time)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":225,"author":{"gitId":"aaron-ljx"},"content":"            throw new ParseException(MESSAGE_EDIT_TASK_NO_EMPTY_VALUES);","lastModifiedDate":"2022-04-06"},{"lineNumber":226,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":227,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":228,"author":{"gitId":"dannytayjy"},"content":"        if (!desc.isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":229,"author":{"gitId":"dannytayjy"},"content":"            Description newDesc \u003d ParserUtil.parseDescription(desc);","lastModifiedDate":"2022-04-01"},{"lineNumber":230,"author":{"gitId":"dannytayjy"},"content":"            updatedEventTask.setDescription(newDesc);","lastModifiedDate":"2022-03-31"},{"lineNumber":231,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":232,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"dannytayjy"},"content":"        if (!date.isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":234,"author":{"gitId":"dannytayjy"},"content":"            Date newDate \u003d ParserUtil.parseDate(date);","lastModifiedDate":"2022-03-31"},{"lineNumber":235,"author":{"gitId":"dannytayjy"},"content":"            updatedEventTask.setDate(newDate);","lastModifiedDate":"2022-03-31"},{"lineNumber":236,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":237,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"dannytayjy"},"content":"        if (!time.isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":239,"author":{"gitId":"dannytayjy"},"content":"            String[] newStartEndTimeStrParts \u003d time.split(\" \");","lastModifiedDate":"2022-03-31"},{"lineNumber":240,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":241,"author":{"gitId":"dannytayjy"},"content":"            if (newStartEndTimeStrParts.length !\u003d 2) {","lastModifiedDate":"2022-03-31"},{"lineNumber":242,"author":{"gitId":"dannytayjy"},"content":"                throw new ParseException(MESSAGE_INVALID_TIME_DETAILS_EVENT_TASK);","lastModifiedDate":"2022-04-07"},{"lineNumber":243,"author":{"gitId":"aaron-ljx"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":244,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":245,"author":{"gitId":"dannytayjy"},"content":"            Time newStartTime \u003d ParserUtil.parseTime(newStartEndTimeStrParts[0]);","lastModifiedDate":"2022-03-31"},{"lineNumber":246,"author":{"gitId":"dannytayjy"},"content":"            Time newEndTime \u003d ParserUtil.parseTime(newStartEndTimeStrParts[1]);","lastModifiedDate":"2022-03-31"},{"lineNumber":247,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":248,"author":{"gitId":"dannytayjy"},"content":"            if (newEndTime.getParsedTime().compareTo(newStartTime.getParsedTime()) \u003c 1) {","lastModifiedDate":"2022-04-04"},{"lineNumber":249,"author":{"gitId":"dannytayjy"},"content":"                throw new ParseException(MESSAGE_INVALID_TIME_RANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":250,"author":{"gitId":"dannytayjy"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":251,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":252,"author":{"gitId":"dannytayjy"},"content":"            updatedEventTask.setStartTime(newStartTime);","lastModifiedDate":"2022-03-31"},{"lineNumber":253,"author":{"gitId":"dannytayjy"},"content":"            updatedEventTask.setEndTime(newEndTime);","lastModifiedDate":"2022-03-31"},{"lineNumber":254,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":255,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":256,"author":{"gitId":"dannytayjy"},"content":"        return updatedEventTask;","lastModifiedDate":"2022-03-31"},{"lineNumber":257,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":258,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":259,"author":{"gitId":"aaron-ljx"},"content":"    private boolean arePrefixStatusHashesEqual(HashMap\u003cString, Boolean\u003e other) {","lastModifiedDate":"2022-04-09"},{"lineNumber":260,"author":{"gitId":"aaron-ljx"},"content":"        return prefixStatusHash.get(\"description\").equals(other.get(\"description\"))","lastModifiedDate":"2022-04-09"},{"lineNumber":261,"author":{"gitId":"aaron-ljx"},"content":"                \u0026\u0026 prefixStatusHash.get(\"date\").equals(other.get(\"date\"))","lastModifiedDate":"2022-04-09"},{"lineNumber":262,"author":{"gitId":"aaron-ljx"},"content":"                \u0026\u0026 prefixStatusHash.get(\"datetime\").equals(other.get(\"datetime\"));","lastModifiedDate":"2022-04-09"},{"lineNumber":263,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":264,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":265,"author":{"gitId":"aaron-ljx"},"content":"    @Override","lastModifiedDate":"2022-04-09"},{"lineNumber":266,"author":{"gitId":"aaron-ljx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-04-09"},{"lineNumber":267,"author":{"gitId":"aaron-ljx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-04-09"},{"lineNumber":268,"author":{"gitId":"aaron-ljx"},"content":"                || (other instanceof EditTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-04-09"},{"lineNumber":269,"author":{"gitId":"aaron-ljx"},"content":"                \u0026\u0026 index.equals(((EditTaskCommand) other).index)","lastModifiedDate":"2022-04-09"},{"lineNumber":270,"author":{"gitId":"aaron-ljx"},"content":"                \u0026\u0026 desc.equals(((EditTaskCommand) other).desc)","lastModifiedDate":"2022-04-09"},{"lineNumber":271,"author":{"gitId":"aaron-ljx"},"content":"                \u0026\u0026 date.equals(((EditTaskCommand) other).date)","lastModifiedDate":"2022-04-09"},{"lineNumber":272,"author":{"gitId":"aaron-ljx"},"content":"                \u0026\u0026 time.equals(((EditTaskCommand) other).time))","lastModifiedDate":"2022-04-09"},{"lineNumber":273,"author":{"gitId":"aaron-ljx"},"content":"                \u0026\u0026 arePrefixStatusHashesEqual(((EditTaskCommand) other).prefixStatusHash);","lastModifiedDate":"2022-04-09"},{"lineNumber":274,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":275,"author":{"gitId":"aaron-ljx"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"dannytayjy":116,"ChanWeiJie":1,"aaron-ljx":158}},{"path":"src/main/java/manageezpz/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"dannytayjy":2,"-":17}},{"path":"src/main/java/manageezpz/logic/commands/FindEmployeeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.person.Email;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.person.Name;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.person.PersonMultiplePredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.person.Phone;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":" * The command to find employees based on the multiple properties given.","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"public class FindEmployeeCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"    public static final String COMMAND_WORD \u003d \"findEmployee\";","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"            + \": Finds all employees that contains the properties specified.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"            + \"Employee\u0027s properties:\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"            + PREFIX_NAME.getPrefix()","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"            + \"NAMES: Finds all employees which has their name contain any of the words in NAMES\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"            + PREFIX_PHONE.getPrefix()","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"            + \"PHONE NUMBER: Find employees with the exact phone number\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"            + PREFIX_EMAIL.getPrefix()","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"            + \"EMAIL: Finds employees with the exact email\"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_NAME.getPrefix() + \"Alex Yeoh\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_PHONE.getPrefix() + \"62226222\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_EMAIL.getPrefix() + \"alexyeo@google.com\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_NAME.getPrefix() + \"Benson Chua \" + PREFIX_PHONE.getPrefix() + \"6123456 \"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"            + PREFIX_EMAIL.getPrefix() + \"bensonc@gmail.com\";","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"    public static final String NO_OPTIONS \u003d COMMAND_WORD + \" needs at least 1 valid options\\n\";","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"    public static final String INVALID_NAME \u003d Name.MESSAGE_CONSTRAINTS + \"\\n\";","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"    public static final String INVALID_PHONE \u003d Phone.MESSAGE_CONSTRAINTS + \"\\n\";","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"    public static final String INVALID_EMAIL \u003d Email.MESSAGE_CONSTRAINTS + \"\\n\";","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"    private final PersonMultiplePredicate predicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"     * Constructor for the find employee command.","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"     * @param predicate The predicate with multiple search terms to search for employees","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"    public FindEmployeeCommand(PersonMultiplePredicate predicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"        int latestNumberOfEmployees \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"        String commandMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, latestNumberOfEmployees);","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"Denniszedead"},"content":"        return new CommandResult(commandMessage);","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"            return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"        } else if (obj instanceof FindEmployeeCommand) {","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"            Predicate otherPredicate \u003d ((FindEmployeeCommand) obj).predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"            boolean isOtherPredicateEqual \u003d predicate.equals(otherPredicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"            return isOtherPredicateEqual;","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"        return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Denniszedead":75,"dannytayjy":10}},{"path":"src/main/java/manageezpz/logic/commands/FindTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_ASSIGNEES;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_IS_MARKED;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_TODO;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.commons.core.Messages;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.person.Name;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.task.Date;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.task.TaskMultiplePredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":" * A subclass for find command to find all the tasks.","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"    public static final String COMMAND_WORD \u003d \"findTask\";","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"            + \": Finds all tasks that contains the properties specified.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"            + \"Task Types:\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"            + PREFIX_TODO.getPrefix() + \": Todos\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"            + PREFIX_DEADLINE.getPrefix() + \": Deadlines\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"            + PREFIX_EVENT.getPrefix() + \": Events\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"            + \"Options:\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"            + PREFIX_DESCRIPTION.getPrefix() + \": Description of the tasks\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"            + PREFIX_DATE.getPrefix() + \": Date of the task in YYYY-MM-DD (Only for deadline and event)\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"            + PREFIX_PRIORITY.getPrefix() + \": Priority of task. Only HIGH, MEDIUM, LOW and NONE\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"            + PREFIX_ASSIGNEES.getPrefix()","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"            + \": The assignees that was assigned to the task (Only one full name of assignee allowed)\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"            + PREFIX_IS_MARKED.getPrefix() + \": Whether the task is marked. Only true or false.\"","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"            + \"Format:\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_TODO.getPrefix() + \"\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_DEADLINE.getPrefix() + \"\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_EVENT.getPrefix() + \"\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_DESCRIPTION.getPrefix() + \"[LIST OF WORDS]\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_DATE.getPrefix() + \"YYYY-MM-DD\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_PRIORITY.getPrefix() + \"PRIORITY\"","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_ASSIGNEES.getPrefix() + \"Assignee\u0027s full name\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_IS_MARKED.getPrefix() + \"BOOLEAN\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_DESCRIPTION.getPrefix() + \"homework\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_DATE.getPrefix() + \"2022-01-01\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_PRIORITY.getPrefix() + \"HIGH\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_ASSIGNEES.getPrefix() + \"Sam Leong\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_IS_MARKED.getPrefix() + \"true\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"            + COMMAND_WORD + \" \" + PREFIX_DESCRIPTION.getPrefix() + \"Capstone project \" + PREFIX_DATE.getPrefix()","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"            + \"2022-05-01 \" + PREFIX_PRIORITY.getPrefix() + \"HIGH \" + PREFIX_ASSIGNEES.getPrefix() + \"Max Leong\"","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"            + PREFIX_IS_MARKED.getPrefix() + \"true\";","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"    public static final String NO_OPTIONS \u003d COMMAND_WORD + \" needs at least 1 valid option\\n\";","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"    public static final String INVALID_DESCRIPTION \u003d Description.MESSAGE_CONSTRAINTS + \"\\n\";","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"    public static final String INVALID_DATE \u003d Date.MESSAGE_CONSTRAINTS + \"\\n\";","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"    public static final String INVALID_PRIORITY \u003d \"Property should be NONE, LOW, MEDIUM, HIGH\\n\";","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"    public static final String TODO_AND_DATE_OPTION_TOGETHER \u003d \"Todo and Date option are together\\n\";","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"    public static final String INVALID_BOOLEAN \u003d \"Boolean should be true or false\\n\";","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"    public static final String INVALID_ASSIGNEE \u003d Name.MESSAGE_CONSTRAINTS + \"\\n\";","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"    public static final String MORE_THAN_ONE_TASK_TYPE \u003d \"Only one task type is allowed\\n\";","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"    private final TaskMultiplePredicate predicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"     * The constructor for find task command.","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"     * @param predicate The predicate as search terms to find task","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"    public FindTaskCommand(TaskMultiplePredicate predicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"Denniszedead"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"Denniszedead"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"Denniszedead"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"Denniszedead"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"Denniszedead"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"Denniszedead"},"content":"        int latestNumberOfTasks \u003d model.getFilteredTaskList().size();","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"Denniszedead"},"content":"        String commandResultMessage \u003d String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, latestNumberOfTasks);","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"Denniszedead"},"content":"        return new CommandResult(commandResultMessage);","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"Denniszedead"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"Denniszedead"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"Denniszedead"},"content":"            return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"Denniszedead"},"content":"        } else if (obj instanceof FindTaskCommand) {","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"Denniszedead"},"content":"            Predicate otherPredicate \u003d ((FindTaskCommand) obj).predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"Denniszedead"},"content":"            boolean isOtherPredicateEqual \u003d predicate.equals(otherPredicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"Denniszedead"},"content":"            return isOtherPredicateEqual;","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"Denniszedead"},"content":"        return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"Denniszedead":104,"dannytayjy":12}},{"path":"src/main/java/manageezpz/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"            + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_SHOWING_HELP \u003d \"Opened help window.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"        return new CommandResult(MESSAGE_SHOWING_HELP, true, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dannytayjy":6,"-":16}},{"path":"src/main/java/manageezpz/logic/commands/ListEmployeeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"public class ListEmployeeCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"    public static final String COMMAND_WORD \u003d \"listEmployee\";","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"    public static final String MESSAGE_ALL_SUCCESS \u003d \"Listed all Employees\";","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"        model.updateFilteredPersonList(model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"        return new CommandResult(MESSAGE_ALL_SUCCESS);","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Denniszedead":23}},{"path":"src/main/java/manageezpz/logic/commands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"    public static final String COMMAND_WORD \u003d \"listTask\";","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"    public static final String MESSAGE_ALL_SUCCESS \u003d \"Listed all Tasks\";","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"        model.updateFilteredTaskList(model.PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"        return new CommandResult(MESSAGE_ALL_SUCCESS);","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Denniszedead":8,"dannytayjy":3,"-":12}},{"path":"src/main/java/manageezpz/logic/commands/MarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":" * Marks a task identified using its displayed index from the address book as done.","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"    public static final String COMMAND_WORD \u003d \"markTask\";","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"            + \": Marks the task identified by the index number used in the displayed task list as done.\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Task set as done: %1$s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"     * Constructor to initialize an instance of MarkTaskCommand class","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"     * with the given targetIndex.","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"     * @param targetIndex Index of the Task to be marked as done","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"    public MarkTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_TASK_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"        Task taskToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"        Task markedTask \u003d model.markTask(taskToMark);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS, markedTask));","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"                || (other instanceof MarkTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"                \u0026\u0026 targetIndex.equals(((MarkTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"dannytayjy":65}},{"path":"src/main/java/manageezpz/logic/commands/TagTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"public class TagTaskCommand extends Command {","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    public static final String COMMAND_WORD \u003d \"tagTask\";","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"            + \": Tags the specified employee to the task identified by the \"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"            + \"index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_NAME + \"EMPLOYEE_FULL_NAME\\n\"","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_NAME + \"Alex Yeoh\";","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_TAG_TASK_SUCCESS \u003d \"Employee %1$s is tagged to the task: \";","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_NO_SUCH_PERSON \u003d \"There is no employee with the full name %1$s \"","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"            + \"in the current displayed task list!\";","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_PERSON_TAGGED_TO_TASK \u003d \"Employee %1$s is already tagged to the task: \";","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"    private final String name;","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"     * Constructor to initialize a TagTaskCommand class with the given","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"     * targetIndex and name.","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"     * @param targetIndex Index of the Task to tag the employee","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"     * @param name Name of the Employee to tag the Task to","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"    public TagTaskCommand(Index targetIndex, String name) {","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"        requireAllNonNull(targetIndex, name);","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e lastShownTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownTaskList.size()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_TASK_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"        Task taskToTagEmployee \u003d lastShownTaskList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"        Person person \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"        for (Person p : lastShownPersonList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"            if (p.getName().toString().equals(name)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"                person \u003d p;","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"                break;","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(String.format(MESSAGE_NO_SUCH_PERSON, name) + \"\\n\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"        if (model.isEmployeeTaggedToTask(taskToTagEmployee, person)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_TAGGED_TO_TASK,","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"                    person.getName().toString()) + taskToTagEmployee + \"\\n\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"        Task taggedEmployeeTask \u003d model.tagEmployeeToTask(taskToTagEmployee, person);","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"        model.increaseNumOfTasks(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"        return new CommandResult(String.format(MESSAGE_TAG_TASK_SUCCESS,","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"                person.getName().toString()) + taggedEmployeeTask);","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-04-09"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-04-09"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-04-09"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"                || (other instanceof TagTaskCommand// instanceof handles nulls","lastModifiedDate":"2022-04-09"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"                \u0026\u0026 targetIndex.equals(((TagTaskCommand) other).targetIndex)","lastModifiedDate":"2022-04-09"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"                \u0026\u0026 name.equals(((TagTaskCommand) other).name));","lastModifiedDate":"2022-04-09"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"alfredkohhh":44,"dannytayjy":51}},{"path":"src/main/java/manageezpz/logic/commands/TagTaskPriorityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Priority;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"public class TagTaskPriorityCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    public static final String COMMAND_WORD \u003d \"tagPriority\";","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"            + \": Tags the specified priority to the task identified by the \"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"            + \"index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_PRIORITY + \"PRIORITY_VALUE \" + \"(must be either NONE/LOW/MEDIUM/HIGH)\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_PRIORITY + \"HIGH\";","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_TAG_PRIORITY_SUCCESS \u003d \"Task tagged with %1$s priority: \";","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"    private final Priority priority;","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"     * Constructor to initialize a TagTaskPriorityCommand class with the given","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"     * targetIndex and priority.","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"     * @param targetIndex Index of the Task to tag the priority level","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"     * @param priority Priority level of the Task","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"    public TagTaskPriorityCommand(Index targetIndex, Priority priority) {","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"        requireAllNonNull(targetIndex, priority);","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_TASK_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"        Task taskToTagPriority \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"        Task taggedPriorityTask \u003d model.tagPriorityToTask(taskToTagPriority, priority);","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"        return new CommandResult(String.format(MESSAGE_TAG_PRIORITY_SUCCESS, priority.name())","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"                + taggedPriorityTask);","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"                || (other instanceof TagTaskPriorityCommand// instanceof handles nulls","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"                \u0026\u0026 targetIndex.equals(((TagTaskPriorityCommand) other).targetIndex)","lastModifiedDate":"2022-04-09"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"                \u0026\u0026 priority.equals(((TagTaskPriorityCommand) other).priority));","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"alfredkohhh":33,"dannytayjy":36}},{"path":"src/main/java/manageezpz/logic/commands/UnmarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":" * Unmarks a task identified using its displayed index from the address book,","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":" * i.e., changes the status back to not done.","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"    public static final String COMMAND_WORD \u003d \"unmarkTask\";","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"            + \": Unmarks the task identified by the index number used in the displayed task list, \"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"            + \"which changes the status back to not done.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_UNMARK_TASK_SUCCESS \u003d \"Task set as not done yet: %1$s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"     * Constructor to initialize an instance of UnmarkTaskCommand class","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"     * with the given targetIndex.","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"     * @param targetIndex Index of the Task to be unmarked, i.e., changes the","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"     *                    status back to not done","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"    public UnmarkTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_TASK_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"        Task taskToUnmark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"        Task unmarkedTask \u003d model.unmarkTask(taskToUnmark);","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_TASK_SUCCESS, unmarkedTask));","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"                || (other instanceof UnmarkTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"                \u0026\u0026 targetIndex.equals(((UnmarkTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"dannytayjy":68}},{"path":"src/main/java/manageezpz/logic/commands/UntagTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"public class UntagTaskCommand extends Command {","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    public static final String COMMAND_WORD \u003d \"untagTask\";","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"            + \": Untags the specified employee from the task identified by the \"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"            + \"index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"            + PREFIX_NAME + \"EMPLOYEE_FULL_NAME\\n\"","lastModifiedDate":"2022-04-04"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_NAME + \"Alex Yeoh\";","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_UNTAG_TASK_SUCCESS \u003d \"Employee %1$s is untagged from the task: \";","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_NO_SUCH_PERSON \u003d \"There is no employee with the full name %1$s \"","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"            + \"in the current displayed task list!\";","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_PERSON_NOT_TAGGED_TO_TASK \u003d \"Employee %1$s is not tagged to the task: \";","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"    private final String name;","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"     * Constructor to initialize an UntagTaskCommand class with the given","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"     * targetIndex and name.","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"     * @param targetIndex Index of the Task to untag the employee","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"     * @param name Name of the Employee to untag the Task from","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"    public UntagTaskCommand(Index targetIndex, String name) {","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"        requireAllNonNull(targetIndex, name);","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e lastShownTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownTaskList.size()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_TASK_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"        Task taskToUntagEmployee \u003d lastShownTaskList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"        Person person \u003d null;","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"        for (Person p : lastShownPersonList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"            if (p.getName().toString().equals(name)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"                person \u003d p;","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"                break;","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(String.format(MESSAGE_NO_SUCH_PERSON, name) + \"\\n\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"        if (!model.isEmployeeTaggedToTask(taskToUntagEmployee, person)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_NOT_TAGGED_TO_TASK,","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"                    person.getName().toString()) + taskToUntagEmployee + \"\\n\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"        Task untaggedEmployeeTask \u003d model.untagEmployeeFromTask(taskToUntagEmployee, person);","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"        model.decreaseNumOfTasks(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"        return new CommandResult(String.format(MESSAGE_UNTAG_TASK_SUCCESS,","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"                person.getName().toString()) + untaggedEmployeeTask);","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-04-09"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-04-09"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-04-09"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"                || (other instanceof UntagTaskCommand// instanceof handles nulls","lastModifiedDate":"2022-04-09"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"                \u0026\u0026 targetIndex.equals(((UntagTaskCommand) other).targetIndex)","lastModifiedDate":"2022-04-09"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"                \u0026\u0026 name.equals(((UntagTaskCommand) other).name));","lastModifiedDate":"2022-04-09"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"alfredkohhh":44,"dannytayjy":51}},{"path":"src/main/java/manageezpz/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands.exceptions;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.logic.commands.Command;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"dannytayjy":1,"ChanWeiJie":1,"-":17}},{"path":"src/main/java/manageezpz/logic/parser/AddDeadlineTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aaron-ljx"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.AddDeadlineTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_BY_DATETIME;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"aaron-ljx"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.commands.AddDeadlineTaskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Date;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Deadline;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Time;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"public class AddDeadlineTaskCommandParser implements Parser\u003cAddDeadlineTaskCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"aaron-ljx"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"aaron-ljx"},"content":"     * Parses the given {@code String} of arguments in the context of the AddDeadlineTaskCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"aaron-ljx"},"content":"     * and returns an AddDeadlineTaskCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"aaron-ljx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"aaron-ljx"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"aaron-ljx"},"content":"    public AddDeadlineTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"aaron-ljx"},"content":"        ArgumentMultimap argMultimapDeadline \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_BY_DATETIME);","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"        if (!arePrefixesPresent(argMultimapDeadline, PREFIX_DESCRIPTION, PREFIX_BY_DATETIME)","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"aaron-ljx"},"content":"                || !argMultimapDeadline.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"                    AddDeadlineTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"        try {","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"            Description desc \u003d ParserUtil.parseDescription(argMultimapDeadline.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"            String byDateTime \u003d argMultimapDeadline.getValue(PREFIX_BY_DATETIME).get();","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"aaron-ljx"},"content":"            String[] parseByDateTime \u003d byDateTime.split(\" \");","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"            if (parseByDateTime.length !\u003d 2) {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"                throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"aaron-ljx"},"content":"            Date date \u003d ParserUtil.parseDate(parseByDateTime[0]);","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"            Time time \u003d ParserUtil.parseTime(parseByDateTime[1]);","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"            Deadline deadline \u003d new Deadline(desc, date, time);","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"aaron-ljx"},"content":"            return new AddDeadlineTaskCommand(deadline);","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-04-01"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(pe.getMessage() + \"\\n\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":53,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"aaron-ljx"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"aaron-ljx"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"aaron-ljx"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"aaron-ljx"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"aaron-ljx"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"aaron-ljx"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"aaron-ljx"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"alfredkohhh":6,"dannytayjy":15,"ChanWeiJie":2,"aaron-ljx":39}},{"path":"src/main/java/manageezpz/logic/parser/AddEmployeeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.AddEmployeeCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":" * Parses input arguments and creates a new AddEmployeeCommand object","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"public class AddEmployeeCommandParser implements Parser\u003cAddEmployeeCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"     * Parses the given {@code String} of arguments in the context of the AddEmployeeCommand","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"     * and returns an AddEmployeeCommand object for execution.","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"    public AddEmployeeCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"                    AddEmployeeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"        Person person \u003d new Person(name, phone, email, 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"        return new AddEmployeeCommand(person);","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"alfredkohhh":10,"dannytayjy":12,"-":32}},{"path":"src/main/java/manageezpz/logic/parser/AddEventTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aaron-ljx"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TIME_RANGE;","lastModifiedDate":"2022-04-04"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.AddEventTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_AT_DATETIME;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"aaron-ljx"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.commands.AddEventTaskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Date;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Event;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Time;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"public class AddEventTaskCommandParser implements Parser\u003cAddEventTaskCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"aaron-ljx"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"aaron-ljx"},"content":"     * Parses the given {@code String} of arguments in the context of the AddEventTaskCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"aaron-ljx"},"content":"     * and returns an AddEventTaskCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"aaron-ljx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"aaron-ljx"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"aaron-ljx"},"content":"    public AddEventTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"aaron-ljx"},"content":"        ArgumentMultimap argMultimapEvent \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_AT_DATETIME);","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"        if (!arePrefixesPresent(argMultimapEvent, PREFIX_DESCRIPTION, PREFIX_AT_DATETIME)","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"aaron-ljx"},"content":"                || !argMultimapEvent.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, MESSAGE_USAGE));","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"        try {","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"            Description desc \u003d ParserUtil.parseDescription(argMultimapEvent.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"            String atDateTime \u003d argMultimapEvent.getValue(PREFIX_AT_DATETIME).get();","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"aaron-ljx"},"content":"            String[] parseAtDateTime \u003d atDateTime.split(\" \");","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"            if (parseAtDateTime.length !\u003d 3) {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"                throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"aaron-ljx"},"content":"            Date date \u003d ParserUtil.parseDate(parseAtDateTime[0]);","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"            Time startTime \u003d ParserUtil.parseTime(parseAtDateTime[1]);","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"            Time endTime \u003d ParserUtil.parseTime(parseAtDateTime[2]);","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"            if (endTime.getParsedTime().compareTo(startTime.getParsedTime()) \u003c 1) {","lastModifiedDate":"2022-04-04"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"                throw new ParseException(MESSAGE_INVALID_TIME_RANGE);","lastModifiedDate":"2022-04-04"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"aaron-ljx"},"content":"            Event event \u003d new Event(desc, date, startTime, endTime);","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"aaron-ljx"},"content":"            return new AddEventTaskCommand(event);","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-04-01"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(pe.getMessage() + \"\\n\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-04-01"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"aaron-ljx"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"aaron-ljx"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"aaron-ljx"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"aaron-ljx"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"aaron-ljx"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"aaron-ljx"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"aaron-ljx"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"alfredkohhh":5,"dannytayjy":20,"ChanWeiJie":3,"aaron-ljx":39}},{"path":"src/main/java/manageezpz/logic/parser/AddTodoTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.AddTodoTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.AddTodoTaskCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"public class AddTodoTaskCommandParser implements Parser\u003cAddTodoTaskCommand\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"     * Parses the given {@code String} of arguments in the context of the AddEmployeeCommand","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"     * and returns an AddEmployeeCommand object for execution.","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"    public AddTodoTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"        ArgumentMultimap argMultimapTodo \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION);","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"        if (!arePrefixesPresent(argMultimapTodo, PREFIX_DESCRIPTION)","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"                || !argMultimapTodo.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"                    AddTodoTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"        try {","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"            Description desc \u003d ParserUtil.parseDescription(argMultimapTodo.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"            Todo todoTask \u003d new Todo(desc);","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"            return new AddTodoTaskCommand(todoTask);","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(pe.getMessage() + \"\\n\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"alfredkohhh":37,"dannytayjy":10}},{"path":"src/main/java/manageezpz/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.AddDeadlineTaskCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.AddEmployeeCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.AddEventTaskCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.AddTodoTaskCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.Command;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.DeleteEmployeeCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.logic.commands.EditEmployeeCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.logic.commands.FindEmployeeCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.logic.commands.ListEmployeeCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.logic.commands.ListTaskCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.MarkTaskCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.TagTaskCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.TagTaskPriorityCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.UntagTaskCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"        case AddEmployeeCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"            return new AddEmployeeCommandParser().parse(arguments);","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"        case EditEmployeeCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"            return new EditEmployeeCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"        case DeleteEmployeeCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"            return new DeleteEmployeeCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"            return new FindTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"        case FindEmployeeCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"            return new FindEmployeeCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"        case ListEmployeeCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"Denniszedead"},"content":"            return new ListEmployeeCommand();","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"        case AddTodoTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"            return new AddTodoTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"aaron-ljx"},"content":"        case AddEventTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"aaron-ljx"},"content":"            return new AddEventTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"aaron-ljx"},"content":"        case AddDeadlineTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"aaron-ljx"},"content":"            return new AddDeadlineTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"dannytayjy"},"content":"        case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"dannytayjy"},"content":"            return new MarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"dannytayjy"},"content":"        case UnmarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"dannytayjy"},"content":"            return new UnmarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"alfredkohhh"},"content":"        case TagTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"alfredkohhh"},"content":"            return new TagTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"alfredkohhh"},"content":"        case UntagTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"alfredkohhh"},"content":"            return new UntagTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"alfredkohhh"},"content":"        case TagTaskPriorityCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"alfredkohhh"},"content":"            return new TagTaskPriorityCommandParser().parse(arguments);","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"alfredkohhh"},"content":"        case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"alfredkohhh"},"content":"            return new EditTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Denniszedead":13,"alfredkohhh":32,"dannytayjy":19,"ChanWeiJie":2,"aaron-ljx":7,"-":53}},{"path":"src/main/java/manageezpz/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"    public boolean isPrefixExist(Prefix prefix) {","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"        return argMultimap.containsKey(prefix);","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Denniszedead":5,"dannytayjy":1,"-":59}},{"path":"src/main/java/manageezpz/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"dannytayjy":1,"-":147}},{"path":"src/main/java/manageezpz/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"desc/\");","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"    public static final Prefix PREFIX_TODO \u003d new Prefix(\"todo/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"deadline/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"    public static final Prefix PREFIX_EVENT \u003d new Prefix(\"event/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"    public static final Prefix PREFIX_TODAY \u003d new Prefix(\"today/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"    public static final Prefix PREFIX_BY_DATETIME \u003d new Prefix(\"by/\");","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"    public static final Prefix PREFIX_AT_DATETIME \u003d new Prefix(\"at/\");","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"date/\");","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"    public static final Prefix PREFIX_PRIORITY \u003d new Prefix(\"priority/\");","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"    public static final Prefix PREFIX_ASSIGNEES \u003d new Prefix(\"assignees/\");","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"    public static final Prefix PREFIX_IS_MARKED \u003d new Prefix(\"isMarked/\");","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Denniszedead":7,"alfredkohhh":1,"dannytayjy":3,"aaron-ljx":1,"-":11}},{"path":"src/main/java/manageezpz/logic/parser/DeleteEmployeeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.DeleteEmployeeCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":" * Parses input arguments and creates a new DeleteEmployeeCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"public class DeleteEmployeeCommandParser implements Parser\u003cDeleteEmployeeCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteEmployeeCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"     * and returns a DeleteEmployeeCommand object for execution.","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"    public DeleteEmployeeCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"        // Invalid command if args after trimming is empty or contains whitespaces","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"        if (args.trim().isEmpty() || args.trim().contains(\" \")) {","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"                    DeleteEmployeeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"            return new DeleteEmployeeCommand(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(pe.getMessage() + \"\\n\\n\" + DeleteEmployeeCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"dannytayjy":20,"-":14}},{"path":"src/main/java/manageezpz/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"        // Invalid command if args after trimming is empty or contains whitespaces","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"        if (args.trim().isEmpty() || args.trim().contains(\" \")) {","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"                    DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(pe.getMessage() + \"\\n\\n\" + DeleteTaskCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"dannytayjy":20,"-":14}},{"path":"src/main/java/manageezpz/logic/parser/EditEmployeeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_FIELD_NOT_EDITED;","lastModifiedDate":"2022-04-04"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.logic.commands.EditEmployeeCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.EditEmployeeCommand.EditEmployeeDescriptor;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":" * Parses input arguments and creates a new EditEmployeeCommand object","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"public class EditEmployeeCommandParser implements Parser\u003cEditEmployeeCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"     * Parses the given {@code String} of arguments in the context of the EditEmployeeCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"     * and returns an EditEmployeeCommand object for execution.","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"    public EditEmployeeCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"        // Invalid command if getPreamble() is empty or contains other whitespaces","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"        if (argMultimap.getPreamble().isEmpty() || argMultimap.getPreamble().contains(\" \")) {","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"                    EditEmployeeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"        Index index;","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeDescriptor editEmployeeDescriptor \u003d new EditEmployeeCommand.EditEmployeeDescriptor();","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-04-05"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"                editEmployeeDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"                editEmployeeDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"                editEmployeeDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(pe.getMessage() + \"\\n\\n\" + EditEmployeeCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2022-04-04"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"        if (!editEmployeeDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(MESSAGE_FIELD_NOT_EDITED + EditEmployeeCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"        return new EditEmployeeCommand(index, editEmployeeDescriptor);","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"dannytayjy":36,"ChanWeiJie":3,"-":24}},{"path":"src/main/java/manageezpz/logic/parser/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aaron-ljx"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_FIELD_NOT_EDITED;","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_AT_DATETIME;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"aaron-ljx"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"aaron-ljx"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"aaron-ljx"},"content":" * Parses input arguments and creates a new EditTaskCommand object.","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"aaron-ljx"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"aaron-ljx"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"aaron-ljx"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTaskCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"     * and returns a EditTaskCommand object for execution.","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"aaron-ljx"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"aaron-ljx"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"aaron-ljx"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"aaron-ljx"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"aaron-ljx"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_AT_DATETIME, PREFIX_DATE);","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"        // Invalid command if getPreamble() is empty or contains whitespaces","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"        if (argMultimap.getPreamble().isEmpty() || argMultimap.getPreamble().contains(\" \")) {","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-05"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"                    EditTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"aaron-ljx"},"content":"        Index index;","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"aaron-ljx"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"aaron-ljx"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"aaron-ljx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(pe.getMessage() + \"\\n\\n\" + EditTaskCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2022-04-04"},{"lineNumber":43,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isEmpty()","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_DATE).isEmpty()","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_AT_DATETIME).isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(MESSAGE_FIELD_NOT_EDITED + EditTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-05"},{"lineNumber":49,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"        String desc \u003d argMultimap.getValue(PREFIX_DESCRIPTION).orElse(\"\");","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"        String date \u003d argMultimap.getValue(PREFIX_DATE).orElse(\"\");","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"        String time \u003d argMultimap.getValue(PREFIX_AT_DATETIME).orElse(\"\");","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"aaron-ljx"},"content":"        HashMap\u003cString, Boolean\u003e prefixStatusHash \u003d prefixStatusCheck(argMultimap);","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"aaron-ljx"},"content":"        return new EditTaskCommand(index, desc, date, time, prefixStatusHash);","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"aaron-ljx"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"aaron-ljx"},"content":"     * Initialize a hashmap that contains the status of a prefix.","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"aaron-ljx"},"content":"     * By status, it means whether a prefix has been inputted by a user or not.","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"aaron-ljx"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"aaron-ljx"},"content":"    private HashMap\u003cString, Boolean\u003e initPrefixStatusHash() {","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"aaron-ljx"},"content":"        HashMap\u003cString, Boolean\u003e prefixStatusHash \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"aaron-ljx"},"content":"        prefixStatusHash.put(\"description\", true);","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"aaron-ljx"},"content":"        prefixStatusHash.put(\"date\", true);","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"aaron-ljx"},"content":"        prefixStatusHash.put(\"datetime\", true);","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"aaron-ljx"},"content":"        return prefixStatusHash;","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"aaron-ljx"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"aaron-ljx"},"content":"     * Check if a prefix has been inputted by a user or not.","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"aaron-ljx"},"content":"     * If yes, the boolean value of the corresponding prefix is true.","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"aaron-ljx"},"content":"     * Else, it is false.","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"aaron-ljx"},"content":"     * Note that it only checks if the prefix has been inputted.","lastModifiedDate":"2022-04-06"},{"lineNumber":76,"author":{"gitId":"aaron-ljx"},"content":"     * It does not check if there\u0027s a value attached to the prefix.","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"aaron-ljx"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":78,"author":{"gitId":"aaron-ljx"},"content":"    private HashMap\u003cString, Boolean\u003e prefixStatusCheck (ArgumentMultimap argMultimap) {","lastModifiedDate":"2022-04-06"},{"lineNumber":79,"author":{"gitId":"aaron-ljx"},"content":"        HashMap\u003cString, Boolean\u003e prefixStatusHash \u003d initPrefixStatusHash();","lastModifiedDate":"2022-04-06"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"aaron-ljx"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isEmpty()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":82,"author":{"gitId":"aaron-ljx"},"content":"            prefixStatusHash.replace(\"description\", false);","lastModifiedDate":"2022-04-06"},{"lineNumber":83,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":84,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":85,"author":{"gitId":"aaron-ljx"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isEmpty()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":86,"author":{"gitId":"aaron-ljx"},"content":"            prefixStatusHash.replace(\"date\", false);","lastModifiedDate":"2022-04-06"},{"lineNumber":87,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":88,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":89,"author":{"gitId":"aaron-ljx"},"content":"        if (argMultimap.getValue(PREFIX_AT_DATETIME).isEmpty()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":90,"author":{"gitId":"aaron-ljx"},"content":"            prefixStatusHash.replace(\"datetime\", false);","lastModifiedDate":"2022-04-06"},{"lineNumber":91,"author":{"gitId":"aaron-ljx"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":92,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"aaron-ljx"},"content":"        return prefixStatusHash;","lastModifiedDate":"2022-04-06"},{"lineNumber":94,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"dannytayjy":26,"aaron-ljx":69}},{"path":"src/main/java/manageezpz/logic/parser/FindEmployeeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.commons.core.LogsCenter;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.logic.commands.FindEmployeeCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.person.Email;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.person.Name;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.person.PersonMultiplePredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.person.Phone;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":" * Checks if the options are valid for finding employees.","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"public class FindEmployeeCommandParser implements Parser\u003cFindEmployeeCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"    private static final Prefix[] PERSON_PROPERTIES \u003d {PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL};","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(FindEmployeeCommandParser.class);","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"    private String errorMessage \u003d \"\";","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"    private boolean hasError \u003d false;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"    public FindEmployeeCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PERSON_PROPERTIES);","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"        checkIfHaveAtLeastOneOption(argMultimap);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"        List\u003cString\u003e names \u003d getPersonName(argMultimap);","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"        String phone \u003d getPersonPhone(argMultimap);","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"        String email \u003d getPersonEmail(argMultimap);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"        if (hasError) {","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"            String finalMessage \u003d errorMessage + FindEmployeeCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"            String displayedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND, finalMessage);","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"            throw new ParseException(displayedMessage);","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"            PersonMultiplePredicate predicate \u003d new PersonMultiplePredicate(names, phone, email);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"            return new FindEmployeeCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"    private void checkIfHaveAtLeastOneOption(ArgumentMultimap argMultiMap) {","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"        String noOptionsMessage \u003d \"No option found\";","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"        if (!isAtLeastOnePrefixPresent(argMultiMap, PERSON_PROPERTIES) || !argMultiMap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"            logger.warning(noOptionsMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"            addErrorMessage(FindEmployeeCommand.NO_OPTIONS);","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"    private List\u003cString\u003e getPersonName(ArgumentMultimap argMultimap) {","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"        String nameMessage \u003d \"Names:\";","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"        List\u003cString\u003e names \u003d null;","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"        if (argMultimap.isPrefixExist(PREFIX_NAME)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"            String nameArgumentString \u003d argMultimap.getValue(PREFIX_NAME).get().trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"            String[] nameArguments \u003d nameArgumentString.split(\"\\\\s+\");","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"            logger.info(String.join(\" \", nameMessage, nameArguments.toString()));","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"Denniszedead"},"content":"            names \u003d checkIfAllNamesValid(nameArguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"        return names;","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"    private List\u003cString\u003e checkIfAllNamesValid(String[] nameArguments) {","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"        String invalidNameMessage \u003d \"Invalid name.\";","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"        List\u003cString\u003e names \u003d null;","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"        boolean isValid \u003d Arrays.stream(nameArguments).allMatch(name -\u003e Name.isValidName(name));","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"        if (!isValid) {","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"            logger.warning(invalidNameMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"            addErrorMessage(FindEmployeeCommand.INVALID_NAME);","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"            names \u003d Arrays.asList(nameArguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"        return names;","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"Denniszedead"},"content":"    private String getPersonPhone(ArgumentMultimap argMultimap) {","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"Denniszedead"},"content":"        String phoneMessage \u003d \"Phone:\";","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"Denniszedead"},"content":"        String phone \u003d null;","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"Denniszedead"},"content":"        if (argMultimap.isPrefixExist(PREFIX_PHONE)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"Denniszedead"},"content":"            phone \u003d argMultimap.getValue(PREFIX_PHONE).get();","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"Denniszedead"},"content":"            logger.info(String.join(\" \", phoneMessage, phone));","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"Denniszedead"},"content":"            checkIfPhoneValid(phone);","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"Denniszedead"},"content":"        return phone;","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"Denniszedead"},"content":"    private void checkIfPhoneValid(String phone) {","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"Denniszedead"},"content":"        String invalidPhoneMessage \u003d \"Invalid phone detected\";","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"Denniszedead"},"content":"        boolean isValidPhone \u003d Phone.isValidPhone(phone);","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"Denniszedead"},"content":"        if (!isValidPhone) {","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"Denniszedead"},"content":"            logger.warning(invalidPhoneMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":102,"author":{"gitId":"dannytayjy"},"content":"            addErrorMessage(FindEmployeeCommand.INVALID_PHONE);","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"Denniszedead"},"content":"    private String getPersonEmail(ArgumentMultimap argMultimap) {","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"Denniszedead"},"content":"        String emailMessage \u003d \"Email:\";","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"Denniszedead"},"content":"        String email \u003d null;","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"Denniszedead"},"content":"        if (argMultimap.isPrefixExist(PREFIX_EMAIL)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"Denniszedead"},"content":"            email \u003d argMultimap.getValue(PREFIX_EMAIL).get();","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"Denniszedead"},"content":"            logger.info(String.join(\" \", emailMessage, email));","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"Denniszedead"},"content":"            checkIfEmailIsValid(email);","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"Denniszedead"},"content":"        return email;","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"Denniszedead"},"content":"    private void checkIfEmailIsValid(String email) {","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"Denniszedead"},"content":"        String invalidEmailMessage \u003d \"Invalid email\";","lastModifiedDate":"2022-04-07"},{"lineNumber":119,"author":{"gitId":"Denniszedead"},"content":"        boolean isValidEmail \u003d Email.isValidEmail(email);","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"Denniszedead"},"content":"        if (!isValidEmail) {","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"Denniszedead"},"content":"            logger.warning(invalidEmailMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":122,"author":{"gitId":"Denniszedead"},"content":"            addErrorMessage(FindEmployeeCommand.INVALID_EMAIL);","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"Denniszedead"},"content":"     * Collates all the errors and shows the UI after processing all properties.","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"Denniszedead"},"content":"     * @param errorMessage Error message from each checking to be added to the overall error message.","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"Denniszedead"},"content":"    private void addErrorMessage(String errorMessage) {","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"Denniszedead"},"content":"        hasError \u003d true;","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"Denniszedead"},"content":"        this.errorMessage \u003d this.errorMessage + errorMessage;","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"Denniszedead"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"Denniszedead"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"Denniszedead"},"content":"    private static boolean isAtLeastOnePrefixPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"Denniszedead"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Denniszedead":140,"dannytayjy":2}},{"path":"src/main/java/manageezpz/logic/parser/FindTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_ASSIGNEES;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_IS_MARKED;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_TODO;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.commons.core.LogsCenter;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.person.Name;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.task.Date;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Priority;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.task.TaskMultiplePredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":" * Subclass of FindCommandParser which check if the options are valid for finding tasks.","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"public class FindTaskCommandParser implements Parser\u003cFindTaskCommand\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"    private static final Prefix[] TASK_TYPES \u003d {PREFIX_TODO, PREFIX_DEADLINE, PREFIX_EVENT};","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"    private static final Prefix[] VALID_OPTIONS \u003d {PREFIX_TODO, PREFIX_DEADLINE, PREFIX_EVENT, PREFIX_DATE,","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"        PREFIX_DESCRIPTION, PREFIX_PRIORITY, PREFIX_ASSIGNEES, PREFIX_IS_MARKED};","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(FindTaskCommandParser.class);","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"    private String errorMessage \u003d \"\";","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"    private boolean hasError \u003d false;","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"    public FindTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"        ArgumentMultimap argMultiMap \u003d ArgumentTokenizer.tokenize(args, VALID_OPTIONS);","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"        checkIfHaveAtLeastOneOption(argMultiMap);","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"        Prefix taskType \u003d getPrefix(argMultiMap);","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"        List\u003cString\u003e descriptions \u003d getDescriptions(argMultiMap);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"        Date date \u003d getTaskDate(argMultiMap);","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"        Priority priority \u003d getTaskPriority(argMultiMap);","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"        String assignee \u003d getAssignee(argMultiMap);","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"        Boolean isMarked \u003d getIsMarked(argMultiMap);","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"        checkIfTodoAndDateTogether(argMultiMap, taskType);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"        if (hasError) {","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"            String finalMessage \u003d errorMessage + FindTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"            String displayedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, finalMessage);","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"            throw new ParseException(displayedMessage);","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"            return new FindTaskCommand(new TaskMultiplePredicate(","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"                    taskType, descriptions, date, priority, assignee, isMarked));","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"    private void checkIfHaveAtLeastOneOption(ArgumentMultimap argMultiMap) {","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"        String noOptionEnteredMessage \u003d \"No option entered for find task command.\";","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"        if (!isAtLeastOnePrefixPresent(argMultiMap, VALID_OPTIONS) || !argMultiMap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"            logger.warning(noOptionEnteredMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"            addErrorMessage(FindTaskCommand.NO_OPTIONS);","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"    private void checkIfTodoAndDateTogether(ArgumentMultimap argMultiMapProperties, Prefix taskTypes) {","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"        boolean isContainsTodo \u003d taskTypes instanceof Prefix \u0026\u0026 taskTypes.equals(PREFIX_TODO);","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"        String todoAndDateOptionTogetherMessage \u003d \"todo/ and date/ are together\";","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"        if (isContainsTodo \u0026\u0026 argMultiMapProperties.isPrefixExist(PREFIX_DATE)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"            logger.warning(todoAndDateOptionTogetherMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"            addErrorMessage(FindTaskCommand.TODO_AND_DATE_OPTION_TOGETHER);","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"    private Prefix getPrefix(ArgumentMultimap argMultiMap) {","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"Denniszedead"},"content":"        List\u003cPrefix\u003e currentPrefixes \u003d Arrays.stream(TASK_TYPES)","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"Denniszedead"},"content":"                .filter(prefix -\u003e argMultiMap.isPrefixExist(prefix)).collect(Collectors.toList());","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"Denniszedead"},"content":"        String prefixEnteredMessage \u003d \"Prefix entered:\";","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"Denniszedead"},"content":"        if (!currentPrefixes.isEmpty()) {","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"Denniszedead"},"content":"            logger.info(String.join(\" \", prefixEnteredMessage, currentPrefixes.toString()));","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":94,"author":{"gitId":"Denniszedead"},"content":"        if (currentPrefixes.size() \u003e 1) {","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"Denniszedead"},"content":"            // If the user enters more than 1 task type","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"Denniszedead"},"content":"            String moreThanOneTaskTypeMessage \u003d \"More than one task type entered as options\";","lastModifiedDate":"2022-04-07"},{"lineNumber":97,"author":{"gitId":"Denniszedead"},"content":"            logger.warning(moreThanOneTaskTypeMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"Denniszedead"},"content":"            addErrorMessage(FindTaskCommand.MORE_THAN_ONE_TASK_TYPE);","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"Denniszedead"},"content":"            return null;","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"Denniszedead"},"content":"        } else if (currentPrefixes.isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"Denniszedead"},"content":"            return null;","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"Denniszedead"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"Denniszedead"},"content":"            Prefix currentPrefix \u003d currentPrefixes.get(0);","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"Denniszedead"},"content":"            return currentPrefix;","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"Denniszedead"},"content":"    private List\u003cString\u003e getDescriptions(ArgumentMultimap argMultiMap) {","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"Denniszedead"},"content":"        String namesMessage \u003d \"Description:\";","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"Denniszedead"},"content":"        List\u003cString\u003e descriptions \u003d null;","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"Denniszedead"},"content":"        if (argMultiMap.isPrefixExist(PREFIX_DESCRIPTION)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"Denniszedead"},"content":"            String descriptionString \u003d argMultiMap.getValue(PREFIX_DESCRIPTION).get();","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"Denniszedead"},"content":"            descriptions \u003d List.of(descriptionString.split(\"\\\\s+\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"Denniszedead"},"content":"            logger.info(String.join(\" \", namesMessage, descriptions.toString()));","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"Denniszedead"},"content":"            checkIfValidDescription(descriptions);","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"Denniszedead"},"content":"        return descriptions;","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"Denniszedead"},"content":"    private void checkIfValidDescription(List\u003cString\u003e description) {","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"Denniszedead"},"content":"        String invalidDescriptionFoundMessage \u003d \"Invalid Description found.\";","lastModifiedDate":"2022-04-07"},{"lineNumber":122,"author":{"gitId":"Denniszedead"},"content":"        boolean isValid \u003d description.stream().allMatch(name -\u003e Description.isValidDescription(name));","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"Denniszedead"},"content":"        if (!isValid) {","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"Denniszedead"},"content":"            logger.warning(invalidDescriptionFoundMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":125,"author":{"gitId":"Denniszedead"},"content":"            addErrorMessage(FindTaskCommand.INVALID_DESCRIPTION);","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"Denniszedead"},"content":"    private Date getTaskDate(ArgumentMultimap argMultiMap) {","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"Denniszedead"},"content":"        String dateMessage \u003d \"Date:\";","lastModifiedDate":"2022-04-07"},{"lineNumber":131,"author":{"gitId":"Denniszedead"},"content":"        Date date \u003d null;","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"Denniszedead"},"content":"        if (argMultiMap.isPrefixExist(PREFIX_DATE)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"Denniszedead"},"content":"            String dateString \u003d argMultiMap.getValue(PREFIX_DATE).get().trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"Denniszedead"},"content":"            logger.info(String.join(\" \", dateMessage, dateString));","lastModifiedDate":"2022-04-07"},{"lineNumber":135,"author":{"gitId":"Denniszedead"},"content":"            boolean isDateValid \u003d checkIfDateIsValid(dateString);","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"Denniszedead"},"content":"            if (isDateValid) {","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"Denniszedead"},"content":"                date \u003d new Date(dateString);","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"Denniszedead"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"Denniszedead"},"content":"        return date;","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"Denniszedead"},"content":"    private boolean checkIfDateIsValid(String dateString) {","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"Denniszedead"},"content":"        String invalidDateMessage \u003d \"Invalid date entered\";","lastModifiedDate":"2022-04-07"},{"lineNumber":145,"author":{"gitId":"Denniszedead"},"content":"        boolean isValidDate \u003d Date.isValidDate(dateString);","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"Denniszedead"},"content":"        if (!isValidDate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"Denniszedead"},"content":"            logger.warning(invalidDateMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":148,"author":{"gitId":"Denniszedead"},"content":"            addErrorMessage(FindTaskCommand.INVALID_DATE);","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"Denniszedead"},"content":"            return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"Denniszedead"},"content":"        return true;","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"ChanWeiJie"},"content":"    private Priority getTaskPriority(ArgumentMultimap argMultiMap) {","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"Denniszedead"},"content":"        String prioritySelectedMessage \u003d \"Priority selected:\";","lastModifiedDate":"2022-04-07"},{"lineNumber":156,"author":{"gitId":"ChanWeiJie"},"content":"        Priority priority \u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"Denniszedead"},"content":"        if (argMultiMap.isPrefixExist(PREFIX_PRIORITY)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"Denniszedead"},"content":"            String priorityString \u003d argMultiMap.getValue(PREFIX_PRIORITY).get().trim().toUpperCase();","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"Denniszedead"},"content":"            logger.info(String.join(\" \", prioritySelectedMessage, priorityString));","lastModifiedDate":"2022-04-07"},{"lineNumber":160,"author":{"gitId":"Denniszedead"},"content":"            priority \u003d checkPriority(priorityString);","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"Denniszedead"},"content":"        return priority;","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"Denniszedead"},"content":"    private Priority checkPriority(String priorityString) {","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"Denniszedead"},"content":"        String invalidPriorityStringMessage \u003d \"Invalid Priority String\";","lastModifiedDate":"2022-04-07"},{"lineNumber":167,"author":{"gitId":"Denniszedead"},"content":"        switch (priorityString) {","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"Denniszedead"},"content":"        case \"HIGH\":","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"Denniszedead"},"content":"            return Priority.HIGH;","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"Denniszedead"},"content":"        case \"MEDIUM\":","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"Denniszedead"},"content":"            return Priority.MEDIUM;","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"Denniszedead"},"content":"        case \"LOW\":","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"Denniszedead"},"content":"            return Priority.LOW;","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"Denniszedead"},"content":"        case \"NONE\":","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"Denniszedead"},"content":"            return Priority.NONE;","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"Denniszedead"},"content":"        default:","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"Denniszedead"},"content":"            logger.warning(invalidPriorityStringMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":178,"author":{"gitId":"Denniszedead"},"content":"            addErrorMessage(FindTaskCommand.INVALID_PRIORITY);","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"Denniszedead"},"content":"            return null;","lastModifiedDate":"2022-03-29"},{"lineNumber":180,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"Denniszedead"},"content":"    private String getAssignee(ArgumentMultimap argMultiMap) {","lastModifiedDate":"2022-03-29"},{"lineNumber":184,"author":{"gitId":"Denniszedead"},"content":"        String assigneeMessage \u003d \"Assignee:\";","lastModifiedDate":"2022-04-07"},{"lineNumber":185,"author":{"gitId":"Denniszedead"},"content":"        String assignee \u003d null;","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"Denniszedead"},"content":"        if (argMultiMap.isPrefixExist(PREFIX_ASSIGNEES)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"Denniszedead"},"content":"            assignee \u003d argMultiMap.getValue(PREFIX_ASSIGNEES).get().trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":188,"author":{"gitId":"Denniszedead"},"content":"            logger.info(String.join(\" \", assigneeMessage, assignee));","lastModifiedDate":"2022-04-07"},{"lineNumber":189,"author":{"gitId":"Denniszedead"},"content":"            checkedIfNameValid(assignee);","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":191,"author":{"gitId":"Denniszedead"},"content":"        return assignee;","lastModifiedDate":"2022-03-29"},{"lineNumber":192,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"Denniszedead"},"content":"    private void checkedIfNameValid(String assignee) {","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"Denniszedead"},"content":"        String invalidNameMessage \u003d \"Invalid name\";","lastModifiedDate":"2022-04-07"},{"lineNumber":196,"author":{"gitId":"Denniszedead"},"content":"        boolean isNameValid \u003d Name.isValidName(assignee);","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"Denniszedead"},"content":"        if (!isNameValid) {","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"Denniszedead"},"content":"            logger.warning(invalidNameMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":199,"author":{"gitId":"Denniszedead"},"content":"            addErrorMessage(FindTaskCommand.INVALID_ASSIGNEE);","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":201,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":202,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"Denniszedead"},"content":"    private Boolean getIsMarked(ArgumentMultimap argMultiMap) {","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"Denniszedead"},"content":"        String booleanMessage \u003d \"Boolean entered:\";","lastModifiedDate":"2022-04-07"},{"lineNumber":205,"author":{"gitId":"Denniszedead"},"content":"        Boolean isMarked \u003d null;","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"Denniszedead"},"content":"        if (argMultiMap.isPrefixExist(PREFIX_IS_MARKED)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"Denniszedead"},"content":"            String booleanString \u003d argMultiMap.getValue(PREFIX_IS_MARKED).get().trim().toLowerCase();","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"Denniszedead"},"content":"            logger.info(String.join(\" \", booleanMessage, booleanString));","lastModifiedDate":"2022-04-07"},{"lineNumber":209,"author":{"gitId":"Denniszedead"},"content":"            boolean isEitherTrueOrFalse \u003d checkIfEitherTrueOrFalse(booleanString);","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"Denniszedead"},"content":"            if (isEitherTrueOrFalse) {","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"Denniszedead"},"content":"                isMarked \u003d Boolean.valueOf(booleanString);","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"Denniszedead"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":214,"author":{"gitId":"Denniszedead"},"content":"        return isMarked;","lastModifiedDate":"2022-03-29"},{"lineNumber":215,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":216,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":217,"author":{"gitId":"Denniszedead"},"content":"    private boolean checkIfEitherTrueOrFalse(String booleanString) {","lastModifiedDate":"2022-03-26"},{"lineNumber":218,"author":{"gitId":"Denniszedead"},"content":"        String invalidBooleanMessage \u003d \"Invalid boolean\";","lastModifiedDate":"2022-04-07"},{"lineNumber":219,"author":{"gitId":"Denniszedead"},"content":"        if (booleanString.equals(\"true\") || booleanString.equals(\"false\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":220,"author":{"gitId":"Denniszedead"},"content":"            return true;","lastModifiedDate":"2022-03-26"},{"lineNumber":221,"author":{"gitId":"Denniszedead"},"content":"        } else if (!booleanString.equals(\"true\") \u0026\u0026 !booleanString.equals(\"false\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":222,"author":{"gitId":"Denniszedead"},"content":"            logger.warning(invalidBooleanMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":223,"author":{"gitId":"Denniszedead"},"content":"            addErrorMessage(FindTaskCommand.INVALID_BOOLEAN);","lastModifiedDate":"2022-03-26"},{"lineNumber":224,"author":{"gitId":"Denniszedead"},"content":"            return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":225,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":226,"author":{"gitId":"Denniszedead"},"content":"        assert false : \"Error in checkIfEitherTrueOrFalse\";","lastModifiedDate":"2022-03-26"},{"lineNumber":227,"author":{"gitId":"Denniszedead"},"content":"        return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":228,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":229,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":230,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":231,"author":{"gitId":"Denniszedead"},"content":"     * Collates all the errors and shows the UI after processing all properties.","lastModifiedDate":"2022-03-26"},{"lineNumber":232,"author":{"gitId":"Denniszedead"},"content":"     * @param errorMessage Error message from each checking to be added to the overall error message.","lastModifiedDate":"2022-03-26"},{"lineNumber":233,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":234,"author":{"gitId":"Denniszedead"},"content":"    private void addErrorMessage(String errorMessage) {","lastModifiedDate":"2022-03-26"},{"lineNumber":235,"author":{"gitId":"Denniszedead"},"content":"        hasError \u003d true;","lastModifiedDate":"2022-03-26"},{"lineNumber":236,"author":{"gitId":"Denniszedead"},"content":"        this.errorMessage \u003d this.errorMessage + errorMessage;","lastModifiedDate":"2022-03-26"},{"lineNumber":237,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":238,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":239,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":240,"author":{"gitId":"Denniszedead"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-30"},{"lineNumber":241,"author":{"gitId":"Denniszedead"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-30"},{"lineNumber":242,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":243,"author":{"gitId":"Denniszedead"},"content":"    private static boolean isAtLeastOnePrefixPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-30"},{"lineNumber":244,"author":{"gitId":"Denniszedead"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-30"},{"lineNumber":245,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":246,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"Denniszedead":241,"dannytayjy":2,"ChanWeiJie":3}},{"path":"src/main/java/manageezpz/logic/parser/MarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.MarkTaskCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":" * Parses input arguments and creates a new MarkTaskCommand object","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"public class MarkTaskCommandParser implements Parser\u003cMarkTaskCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkTaskCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"     * and returns a MarkTaskCommand object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"    public MarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"        // Invalid command if args after trimming is empty or contains whitespaces","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"        if (args.trim().isEmpty() || args.trim().contains(\" \")) {","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"                    MarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"            return new MarkTaskCommand(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(pe.getMessage() + \"\\n\\n\" + MarkTaskCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"dannytayjy":34}},{"path":"src/main/java/manageezpz/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.Command;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"dannytayjy":3,"-":13}},{"path":"src/main/java/manageezpz/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.util.StringUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Date;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Time;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index specified is not a non-zero unsigned integer.\";","lastModifiedDate":"2022-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"aaron-ljx"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"aaron-ljx"},"content":"     * Supports multiple formatted patterns.","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"aaron-ljx"},"content":"     * @param date","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"aaron-ljx"},"content":"     * @return a {@code Date} object.","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"aaron-ljx"},"content":"     * @throws ParseException","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"aaron-ljx"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"aaron-ljx"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"aaron-ljx"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"ChanWeiJie"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"aaron-ljx"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"ChanWeiJie"},"content":"        return new Date(date);","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"ChanWeiJie"},"content":"     * Parses a {@code String time} into a {@code Time}.","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"ChanWeiJie"},"content":"     * @param time","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"ChanWeiJie"},"content":"     * @return a {@code Time} object.","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"ChanWeiJie"},"content":"     * @throws ParseException","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"ChanWeiJie"},"content":"    public static Time parseTime(String time) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(time);","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"ChanWeiJie"},"content":"        if (!Time.isValidTime(time)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"ChanWeiJie"},"content":"            throw new ParseException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"ChanWeiJie"},"content":"        return new Time(time);","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"ChanWeiJie"},"content":"     * Parses a {@code String description} into an {@code Description}.","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"alfredkohhh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"ChanWeiJie"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"alfredkohhh"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"alfredkohhh"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"alfredkohhh"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"alfredkohhh"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"alfredkohhh"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"alfredkohhh"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"alfredkohhh":12,"dannytayjy":8,"ChanWeiJie":16,"aaron-ljx":9,"-":78}},{"path":"src/main/java/manageezpz/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"dannytayjy":1,"-":38}},{"path":"src/main/java/manageezpz/logic/parser/TagTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_EMPTY_NAME;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.TagTaskCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"public class TagTaskCommandParser implements Parser\u003cTagTaskCommand\u003e {","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_TAG_EMPLOYEE_TO_TASK_INSTRUCTIONS \u003d","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"            \"Tag an employee to a task by specifying prefix n/ followed by the employee\u0027s full name!\\n\\n%1$s\";","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"     * Parses the given {@code String} of arguments in the context of the TagTaskCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"     * and returns an TagTaskCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"    public TagTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"        ArgumentMultimap argMultimapTagTask \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"        // Invalid command if getPreamble() is empty","lastModifiedDate":"2022-04-05"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"        if (argMultimapTagTask.getPreamble().isEmpty()) {","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"                    TagTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"        // Invalid command if getPreamble() contains whitespaces","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"        if (argMultimapTagTask.getPreamble().contains(\" \")) {","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT + \" \"","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"                    + MESSAGE_TAG_EMPLOYEE_TO_TASK_INSTRUCTIONS, TagTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"        Index index;","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"            index \u003d ParserUtil.parseIndex(argMultimapTagTask.getPreamble());","lastModifiedDate":"2022-04-05"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(pe.getMessage() + \"\\n\\n\" + TagTaskCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2022-04-04"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"        if (!arePrefixesPresent(argMultimapTagTask, PREFIX_NAME)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_TAG_EMPLOYEE_TO_TASK_INSTRUCTIONS,","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"                    TagTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"        String name \u003d argMultimapTagTask.getValue(PREFIX_NAME).get();","lastModifiedDate":"2022-04-05"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_EMPTY_NAME, TagTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-04"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"        return new TagTaskCommand(index, name);","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"alfredkohhh":31,"dannytayjy":38}},{"path":"src/main/java/manageezpz/logic/parser/TagTaskPriorityCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.TagTaskPriorityCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Priority;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"public class TagTaskPriorityCommandParser implements Parser\u003cTagTaskPriorityCommand\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_TAG_PRIORITY_TO_TASK_INSTRUCTIONS \u003d","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"            \"Tag a priority to a task by specifying prefix priority/ \"","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"                    + \"followed by the priority values (NONE/LOW/MEDIUM/HIGH)!\\n\\n%1$s\";","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_EMPTY_PRIORITY \u003d \"Priority field cannot be empty! \"","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"            + \"Valid priority values are NONE/LOW/MEDIUM/HIGH.\\n\\n%1$s\";","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_INVALID_PRIORITY \u003d","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"            \"Invalid priority! \" + \"Valid priority values are NONE/LOW/MEDIUM/HIGH. \\n\\n%1$s\";","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"     * Parses the given {@code String} of arguments in the context of the TagTaskPriorityCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"     * and returns a TagTaskPriorityCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"    public TagTaskPriorityCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"        ArgumentMultimap argMultimapTagPriority \u003d ArgumentTokenizer.tokenize(args, PREFIX_PRIORITY);","lastModifiedDate":"2022-04-05"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"        // Invalid command if getPreamble() is empty","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"        if (argMultimapTagPriority.getPreamble().isEmpty()) {","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"                    TagTaskPriorityCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"        // Invalid command if getPreamble() contains whitespaces","lastModifiedDate":"2022-04-05"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"        if (argMultimapTagPriority.getPreamble().contains(\" \")) {","lastModifiedDate":"2022-04-05"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT + \" \"","lastModifiedDate":"2022-04-05"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"                    + MESSAGE_TAG_PRIORITY_TO_TASK_INSTRUCTIONS, TagTaskPriorityCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"        Index index;","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"        Priority priority;","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"            index \u003d ParserUtil.parseIndex(argMultimapTagPriority.getPreamble());","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(pe.getMessage() + \"\\n\\n\" + TagTaskPriorityCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2022-04-04"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"        if (!arePrefixesPresent(argMultimapTagPriority, PREFIX_PRIORITY)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_TAG_PRIORITY_TO_TASK_INSTRUCTIONS,","lastModifiedDate":"2022-04-05"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"                    TagTaskPriorityCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"        String priorityString \u003d argMultimapTagPriority.getValue(PREFIX_PRIORITY).get();","lastModifiedDate":"2022-04-05"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"        if (priorityString.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"            throw new ParseException(String.format(MESSAGE_EMPTY_PRIORITY,","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"                    TagTaskPriorityCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"            priority \u003d Priority.valueOf(priorityString.toUpperCase());","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"        } catch (IllegalArgumentException ie) {","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_PRIORITY,","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"                    TagTaskPriorityCommand.MESSAGE_USAGE), ie);","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"dannytayjy"},"content":"        return new TagTaskPriorityCommand(index, priority);","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"alfredkohhh":30,"dannytayjy":55}},{"path":"src/main/java/manageezpz/logic/parser/UnmarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":" * Parses input arguments and creates a new UnmarkTaskCommand object","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"public class UnmarkTaskCommandParser implements Parser\u003cUnmarkTaskCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkTaskCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"     * and returns a UnmarkTaskCommand object for execution.","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"    public UnmarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"        // Invalid command if args after trimming is empty or contains whitespaces","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"        if (args.trim().isEmpty() || args.trim().contains(\" \")) {","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"                    UnmarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"            return new UnmarkTaskCommand(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(pe.getMessage() + \"\\n\\n\" + UnmarkTaskCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"dannytayjy":34}},{"path":"src/main/java/manageezpz/logic/parser/UntagTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_EMPTY_NAME;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.UntagTaskCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"public class UntagTaskCommandParser implements Parser\u003cUntagTaskCommand\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_UNTAG_EMPLOYEE_TO_TASK_INSTRUCTIONS \u003d","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"            \"Untag an employee from a task by specifying prefix n/ followed by the employee\u0027s full name!\\n\\n%1$s\";","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"     * Parses the given {@code String} of arguments in the context of the UntagTaskCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"     * and returns an UntagTaskCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"    public UntagTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"        ArgumentMultimap argMultimapUntag \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"        // Invalid command if getPreamble() is empty","lastModifiedDate":"2022-04-05"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"        if (argMultimapUntag.getPreamble().isEmpty()) {","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"                    UntagTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"        // Invalid command if getPreamble() contains whitespaces","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"        if (argMultimapUntag.getPreamble().contains(\" \")) {","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT + \" \"","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"                    + MESSAGE_UNTAG_EMPLOYEE_TO_TASK_INSTRUCTIONS, UntagTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"        Index index;","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"            index \u003d ParserUtil.parseIndex(argMultimapUntag.getPreamble());","lastModifiedDate":"2022-04-05"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(pe.getMessage() + \"\\n\\n\" + UntagTaskCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2022-04-04"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"        if (!arePrefixesPresent(argMultimapUntag, PREFIX_NAME)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_UNTAG_EMPLOYEE_TO_TASK_INSTRUCTIONS,","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"                    UntagTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"        String name \u003d argMultimapUntag.getValue(PREFIX_NAME).get();","lastModifiedDate":"2022-04-05"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"            throw new ParseException(String.format(MESSAGE_EMPTY_NAME, UntagTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-04"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"        return new UntagTaskCommand(index, name);","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"alfredkohhh":31,"dannytayjy":38}},{"path":"src/main/java/manageezpz/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser.exceptions;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"dannytayjy":2,"-":15}},{"path":"src/main/java/manageezpz/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.UniquePersonList;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Deadline;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Event;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Priority;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.UniqueTaskList;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"     * @param toBeCopied the provided addressBook.","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"     * @param persons the list of persons to replace the old list.","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"     * @param newData the new addressBook to replace the old one.","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":68,"author":{"gitId":"ChanWeiJie"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"ChanWeiJie"},"content":"    /// task-level operations","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task list.","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be checked.","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if same identity otherwise false.","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"ChanWeiJie"},"content":"        return tasks.contains(task);","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"ChanWeiJie"},"content":"     * Adds a Task to the task list.","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"ChanWeiJie"},"content":"     * The task must not already exist in the task list.","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be added.","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"ChanWeiJie"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"ChanWeiJie"},"content":"        tasks.add(task);","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"ChanWeiJie"},"content":"     * Replaces the contents of the task list with {@code task}.","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"ChanWeiJie"},"content":"     * {@code task} must not contain duplicate tasks.","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the list of tasks to replace the old one.","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTasks(List\u003cTask\u003e task) {","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"ChanWeiJie"},"content":"        this.tasks.setTasks(task);","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"ChanWeiJie"},"content":"     * Removes {@code task} from this {@code AddressBook}.","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"ChanWeiJie"},"content":"     * {@code task} must exist in the address book.","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be removed.","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"ChanWeiJie"},"content":"    public void removeTask(Task task) {","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"ChanWeiJie"},"content":"        tasks.remove(task);","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if a todo with the same identity as {@code todo} exists in the task list.","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"ChanWeiJie"},"content":"     * @param todo a valid Todo task.","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if a todo with the same identity as {@code todo} exists in the task list, false otherwise.","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean hasTodo(Todo todo) {","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(todo);","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"ChanWeiJie"},"content":"        return tasks.contains(todo);","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"ChanWeiJie"},"content":"     * Adds a Todo to the task list.","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"ChanWeiJie"},"content":"     * @param todo a valid Todo task.","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"ChanWeiJie"},"content":"    public void addTodo(Todo todo) {","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"ChanWeiJie"},"content":"        this.tasks.add(todo);","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"ChanWeiJie"},"content":"     * Check if an event with the same identity as {@code event} exists in the task list.","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"ChanWeiJie"},"content":"     * @param event an event in the task list.","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if event has same identity as {@code event} exists in the task list, false otherwise.","lastModifiedDate":"2022-03-21"},{"lineNumber":132,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(event);","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"ChanWeiJie"},"content":"        return tasks.contains(event);","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"ChanWeiJie"},"content":"     * Adds an Event to the task list.","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"ChanWeiJie"},"content":"     * @param event a valid Event task.","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"ChanWeiJie"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"ChanWeiJie"},"content":"        this.tasks.add(event);","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if a deadline with the same identity as {@code deadline} exists in the task list.","lastModifiedDate":"2022-03-21"},{"lineNumber":148,"author":{"gitId":"ChanWeiJie"},"content":"     * @param deadline a valid deadline in the task list.","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if deadline has same identity as {@code deadline} exists in the task list, false otherwise.","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean hasDeadline(Deadline deadline) {","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"ChanWeiJie"},"content":"        return tasks.contains(deadline);","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"ChanWeiJie"},"content":"     * Adds a Deadline to the task list.","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"ChanWeiJie"},"content":"     * @param deadline a valid deadline task.","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"ChanWeiJie"},"content":"    public void addDeadline(Deadline deadline) {","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"ChanWeiJie"},"content":"        this.tasks.add(deadline);","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":165,"author":{"gitId":"dannytayjy"},"content":"     * Updates the task with the edited person.","lastModifiedDate":"2022-03-31"},{"lineNumber":166,"author":{"gitId":"dannytayjy"},"content":"     * @param task the task to be updated.","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"dannytayjy"},"content":"     * @param assigneesIndex the index of the person in List of assignees.","lastModifiedDate":"2022-03-31"},{"lineNumber":168,"author":{"gitId":"dannytayjy"},"content":"     * @param editedPerson the edited person.","lastModifiedDate":"2022-03-31"},{"lineNumber":169,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":170,"author":{"gitId":"dannytayjy"},"content":"    public void updateTaskWithEditedPerson(Task task, int assigneesIndex, Person editedPerson) {","lastModifiedDate":"2022-03-31"},{"lineNumber":171,"author":{"gitId":"dannytayjy"},"content":"        requireAllNonNull(task, assigneesIndex, editedPerson);","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"dannytayjy"},"content":"        this.tasks.updateTaskWithEditedPerson(task, assigneesIndex, editedPerson);","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":174,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":175,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":176,"author":{"gitId":"ChanWeiJie"},"content":"     * Marks the task in the task list.","lastModifiedDate":"2022-03-21"},{"lineNumber":177,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be marked.","lastModifiedDate":"2022-03-21"},{"lineNumber":178,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the marked task.","lastModifiedDate":"2022-04-07"},{"lineNumber":179,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":180,"author":{"gitId":"dannytayjy"},"content":"    public Task markTask(Task task) {","lastModifiedDate":"2022-03-30"},{"lineNumber":181,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-30"},{"lineNumber":182,"author":{"gitId":"dannytayjy"},"content":"        return this.tasks.markTask(task);","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":184,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":185,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":186,"author":{"gitId":"ChanWeiJie"},"content":"     * unMarks the task in the task list.","lastModifiedDate":"2022-04-07"},{"lineNumber":187,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be unmarked.","lastModifiedDate":"2022-03-21"},{"lineNumber":188,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the unmarked task.","lastModifiedDate":"2022-04-07"},{"lineNumber":189,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":190,"author":{"gitId":"dannytayjy"},"content":"    public Task unmarkTask(Task task) {","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"dannytayjy"},"content":"        return this.tasks.unmarkTask(task);","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":194,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":195,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"dannytayjy"},"content":"     * Tags a priority to the task.","lastModifiedDate":"2022-03-30"},{"lineNumber":197,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be tagged.","lastModifiedDate":"2022-04-07"},{"lineNumber":198,"author":{"gitId":"ChanWeiJie"},"content":"     * @param priority the priority to be tagged to the task.","lastModifiedDate":"2022-04-07"},{"lineNumber":199,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the tagged task.","lastModifiedDate":"2022-04-07"},{"lineNumber":200,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":201,"author":{"gitId":"dannytayjy"},"content":"    public Task tagPriorityToTask(Task task, Priority priority) {","lastModifiedDate":"2022-03-30"},{"lineNumber":202,"author":{"gitId":"dannytayjy"},"content":"        requireAllNonNull(task, priority);","lastModifiedDate":"2022-03-30"},{"lineNumber":203,"author":{"gitId":"dannytayjy"},"content":"        return this.tasks.tagPriorityToTask(task, priority);","lastModifiedDate":"2022-03-30"},{"lineNumber":204,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":205,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":207,"author":{"gitId":"ChanWeiJie"},"content":"     * Tags the task in the task list to a person in the address book.","lastModifiedDate":"2022-03-21"},{"lineNumber":208,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be tagged.","lastModifiedDate":"2022-03-21"},{"lineNumber":209,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person to be tagged to the task.","lastModifiedDate":"2022-03-21"},{"lineNumber":210,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the tagged task.","lastModifiedDate":"2022-04-07"},{"lineNumber":211,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":212,"author":{"gitId":"dannytayjy"},"content":"    public Task tagEmployeeToTask(Task task, Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":213,"author":{"gitId":"dannytayjy"},"content":"        requireAllNonNull(task, person);","lastModifiedDate":"2022-03-30"},{"lineNumber":214,"author":{"gitId":"dannytayjy"},"content":"        return this.tasks.tagEmployeeToTask(task, person);","lastModifiedDate":"2022-03-30"},{"lineNumber":215,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":216,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":217,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":218,"author":{"gitId":"dannytayjy"},"content":"     * Remove the Person from the Task, also decreasing the person\u0027s task count.","lastModifiedDate":"2022-03-30"},{"lineNumber":219,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task affected.","lastModifiedDate":"2022-04-07"},{"lineNumber":220,"author":{"gitId":"dannytayjy"},"content":"     * @param person the person to be untagged from task","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the untagged task.","lastModifiedDate":"2022-04-07"},{"lineNumber":222,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"dannytayjy"},"content":"    public Task untagEmployeeFromTask(Task task, Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"dannytayjy"},"content":"        requireAllNonNull(task, person);","lastModifiedDate":"2022-03-30"},{"lineNumber":225,"author":{"gitId":"dannytayjy"},"content":"        return this.tasks.untagEmployeeFromTask(task, person);","lastModifiedDate":"2022-03-30"},{"lineNumber":226,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":227,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":228,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":229,"author":{"gitId":"dannytayjy"},"content":"     * Checks if a given Person is tagged to the task.","lastModifiedDate":"2022-03-31"},{"lineNumber":230,"author":{"gitId":"dannytayjy"},"content":"     * @param task the task to be checked.","lastModifiedDate":"2022-03-31"},{"lineNumber":231,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person to be checked against.","lastModifiedDate":"2022-04-07"},{"lineNumber":232,"author":{"gitId":"dannytayjy"},"content":"     * @return true if the person is tagged to the task, false otherwise.","lastModifiedDate":"2022-03-31"},{"lineNumber":233,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":234,"author":{"gitId":"dannytayjy"},"content":"    public boolean isEmployeeTaggedToTask(Task task, Person person) {","lastModifiedDate":"2022-03-31"},{"lineNumber":235,"author":{"gitId":"dannytayjy"},"content":"        requireAllNonNull(task, person);","lastModifiedDate":"2022-03-31"},{"lineNumber":236,"author":{"gitId":"dannytayjy"},"content":"        return task.getAssignees().contains(person);","lastModifiedDate":"2022-03-31"},{"lineNumber":237,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":238,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":239,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":240,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if a given task has a priority tagged to it.","lastModifiedDate":"2022-03-23"},{"lineNumber":241,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be checked.","lastModifiedDate":"2022-03-23"},{"lineNumber":242,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if the task is tagged with a priority, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":243,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":244,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean hasPriority(Task task) {","lastModifiedDate":"2022-03-23"},{"lineNumber":245,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-23"},{"lineNumber":246,"author":{"gitId":"ChanWeiJie"},"content":"        boolean returnValue;","lastModifiedDate":"2022-03-23"},{"lineNumber":247,"author":{"gitId":"ChanWeiJie"},"content":"        if (task.getPriority() !\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":248,"author":{"gitId":"ChanWeiJie"},"content":"            returnValue \u003d true;","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"ChanWeiJie"},"content":"        } else {","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"ChanWeiJie"},"content":"            returnValue \u003d false;","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"ChanWeiJie"},"content":"        return returnValue;","lastModifiedDate":"2022-03-23"},{"lineNumber":253,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":254,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":255,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":256,"author":{"gitId":"ChanWeiJie"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-04-07"},{"lineNumber":257,"author":{"gitId":"ChanWeiJie"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2022-04-07"},{"lineNumber":258,"author":{"gitId":"ChanWeiJie"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task list.","lastModifiedDate":"2022-04-07"},{"lineNumber":259,"author":{"gitId":"ChanWeiJie"},"content":"     * @param target the task to be replaced.","lastModifiedDate":"2022-04-07"},{"lineNumber":260,"author":{"gitId":"ChanWeiJie"},"content":"     * @param editedTask the new task to replace the target.","lastModifiedDate":"2022-04-07"},{"lineNumber":261,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":262,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2022-03-23"},{"lineNumber":264,"author":{"gitId":"ChanWeiJie"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":266,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":270,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-04-07"},{"lineNumber":271,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person to be checked.","lastModifiedDate":"2022-04-07"},{"lineNumber":272,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if a person has the same identity as the person specified, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":282,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person to be added.","lastModifiedDate":"2022-04-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":284,"author":{"gitId":"ChanWeiJie"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2022-04-07"},{"lineNumber":285,"author":{"gitId":"ChanWeiJie"},"content":"        persons.add(person);","lastModifiedDate":"2022-04-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":289,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":290,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":292,"author":{"gitId":"ChanWeiJie"},"content":"     * @param target the person to be replaced.","lastModifiedDate":"2022-04-07"},{"lineNumber":293,"author":{"gitId":"ChanWeiJie"},"content":"     * @param editedPerson the new person to replace the target.","lastModifiedDate":"2022-04-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":300,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":301,"author":{"gitId":"ChanWeiJie"},"content":"     * Increments the number of task associated with the person.","lastModifiedDate":"2022-04-07"},{"lineNumber":302,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person whose number of task is to be incremented.","lastModifiedDate":"2022-04-07"},{"lineNumber":303,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":304,"author":{"gitId":"dannytayjy"},"content":"    public void increaseNumOfTasks(Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":305,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":306,"author":{"gitId":"dannytayjy"},"content":"        this.persons.increaseNumOfTasks(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":307,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":308,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":309,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":310,"author":{"gitId":"ChanWeiJie"},"content":"     * Decrements the number of task associated with the person.","lastModifiedDate":"2022-04-07"},{"lineNumber":311,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person whose number of task is to be decremented.","lastModifiedDate":"2022-04-07"},{"lineNumber":312,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":313,"author":{"gitId":"dannytayjy"},"content":"    public void decreaseNumOfTasks(Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":314,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":315,"author":{"gitId":"dannytayjy"},"content":"        this.persons.decreaseNumOfTasks(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":316,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":317,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":319,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":320,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":321,"author":{"gitId":"ChanWeiJie"},"content":"     * @param key the person to be removed.","lastModifiedDate":"2022-04-07"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":330,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":331,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":343,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":344,"author":{"gitId":"ChanWeiJie"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":345,"author":{"gitId":"ChanWeiJie"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-10"},{"lineNumber":346,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":347,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":348,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":349,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":350,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":354,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":355,"author":{"gitId":"dannytayjy"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2022-03-24"},{"lineNumber":356,"author":{"gitId":"dannytayjy"},"content":"                \u0026\u0026 tasks.equals(((AddressBook) other).tasks));","lastModifiedDate":"2022-03-24"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":359,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":360,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":361,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":74,"ChanWeiJie":181,"-":111}},{"path":"src/main/java/manageezpz/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.GuiSettings;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Deadline;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Event;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Priority;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"    /** {@code Predicate} that always evaluate to true to show all tasks */","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"     * @param userPrefs the userPrefs to be replaced with.","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"     * Gets the user preference.","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the user preference.","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"     * Gets the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"     * @param guiSettings the guiSettings to be set.","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"     * Gets the user prefs\u0027 address book file path.","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the user prefs\u0027 address book file path.","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"     * @param addressBookFilePath the provided file path.","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"     * @param addressBook the addressBook to be replaced with.","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"ChanWeiJie"},"content":"     * Gets the AddressBook","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the AddressBook.","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person to be checked against.","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if a person has the same identity, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"ChanWeiJie"},"content":"     * @param target the person to be deleted.","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person to be added.","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"ChanWeiJie"},"content":"     * @param target the person to be replaced.","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"ChanWeiJie"},"content":"     * @param editedPerson the new person to replace the target.","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"ChanWeiJie"},"content":"     * Increments the number of task associated with the person.","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person whose number of task is to be incremented.","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":106,"author":{"gitId":"dannytayjy"},"content":"    void increaseNumOfTasks(Person person);","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"ChanWeiJie"},"content":"     * Decrements the number of task associated with the person.","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person whose number of task is to be decremented.","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"dannytayjy"},"content":"    void decreaseNumOfTasks(Person person);","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"ChanWeiJie"},"content":"     * Gets an unmodifiable view of the filtered person list","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"ChanWeiJie"},"content":"     * @return an unmodifiable view of the filtered person list","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"ChanWeiJie"},"content":"     * @param predicate the provided condition.","lastModifiedDate":"2022-04-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"ChanWeiJie"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ManageEZPZ (Tasks) \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"ChanWeiJie"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"ChanWeiJie"},"content":"     * The task must exist in the task list.","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be deleted.","lastModifiedDate":"2022-04-07"},{"lineNumber":134,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"ChanWeiJie"},"content":"    void deleteTask(Task task);","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":138,"author":{"gitId":"dannytayjy"},"content":"     * Updates the task with the edited person.","lastModifiedDate":"2022-03-31"},{"lineNumber":139,"author":{"gitId":"dannytayjy"},"content":"     * The task must exist in the task list.","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be updated.","lastModifiedDate":"2022-04-07"},{"lineNumber":141,"author":{"gitId":"ChanWeiJie"},"content":"     * @param assigneesIndex the index to the Persons List.","lastModifiedDate":"2022-04-07"},{"lineNumber":142,"author":{"gitId":"ChanWeiJie"},"content":"     * @param editedPerson the person to update with.","lastModifiedDate":"2022-04-07"},{"lineNumber":143,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"dannytayjy"},"content":"    void updateTaskWithEditedPerson(Task task, int assigneesIndex, Person editedPerson);","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"ChanWeiJie"},"content":"     * Marks the given task.","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"ChanWeiJie"},"content":"     * The task must exist in the task list.","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be marked.","lastModifiedDate":"2022-04-07"},{"lineNumber":150,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the marked task.","lastModifiedDate":"2022-04-07"},{"lineNumber":151,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"dannytayjy"},"content":"    Task markTask(Task task);","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"ChanWeiJie"},"content":"     * unMarks the given task.","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"ChanWeiJie"},"content":"     * The task must exist in the task list.","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be unmarked.","lastModifiedDate":"2022-04-07"},{"lineNumber":158,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the unmarked task.","lastModifiedDate":"2022-04-07"},{"lineNumber":159,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"dannytayjy"},"content":"    Task unmarkTask(Task task);","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":163,"author":{"gitId":"ChanWeiJie"},"content":"     * Assigns a task to a priority.","lastModifiedDate":"2022-04-07"},{"lineNumber":164,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be assigned.","lastModifiedDate":"2022-04-07"},{"lineNumber":165,"author":{"gitId":"ChanWeiJie"},"content":"     * @param priority the priority to be assigned to the task.","lastModifiedDate":"2022-04-07"},{"lineNumber":166,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the assigned task with the provided priority.","lastModifiedDate":"2022-04-07"},{"lineNumber":167,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":168,"author":{"gitId":"dannytayjy"},"content":"    Task tagPriorityToTask(Task task, Priority priority);","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"ChanWeiJie"},"content":"     * Tags the given task to the specified person.","lastModifiedDate":"2022-04-07"},{"lineNumber":173,"author":{"gitId":"ChanWeiJie"},"content":"     * The task must exist in the task list.","lastModifiedDate":"2022-03-20"},{"lineNumber":174,"author":{"gitId":"ChanWeiJie"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2022-04-07"},{"lineNumber":175,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be tagged.","lastModifiedDate":"2022-04-07"},{"lineNumber":176,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person to be tagged to by the task.","lastModifiedDate":"2022-04-07"},{"lineNumber":177,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the tagged task.","lastModifiedDate":"2022-04-07"},{"lineNumber":178,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":179,"author":{"gitId":"dannytayjy"},"content":"    Task tagEmployeeToTask(Task task, Person person);","lastModifiedDate":"2022-03-30"},{"lineNumber":180,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":181,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":182,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"ChanWeiJie"},"content":"     * Untags the given task from the specified person.","lastModifiedDate":"2022-04-07"},{"lineNumber":184,"author":{"gitId":"alfredkohhh"},"content":"     * The task must exist in the task list.","lastModifiedDate":"2022-03-23"},{"lineNumber":185,"author":{"gitId":"ChanWeiJie"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2022-04-07"},{"lineNumber":186,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be untagged.","lastModifiedDate":"2022-04-07"},{"lineNumber":187,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person to be untagged from by the task.","lastModifiedDate":"2022-04-07"},{"lineNumber":188,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the untagged task.","lastModifiedDate":"2022-04-07"},{"lineNumber":189,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":190,"author":{"gitId":"dannytayjy"},"content":"    Task untagEmployeeFromTask(Task task, Person person);","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":192,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":193,"author":{"gitId":"ChanWeiJie"},"content":"     * Adds the given task.","lastModifiedDate":"2022-03-10"},{"lineNumber":194,"author":{"gitId":"ChanWeiJie"},"content":"     * {@code task} must not already exist in the task list","lastModifiedDate":"2022-03-10"},{"lineNumber":195,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be added.","lastModifiedDate":"2022-04-07"},{"lineNumber":196,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":197,"author":{"gitId":"ChanWeiJie"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":199,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":200,"author":{"gitId":"ChanWeiJie"},"content":"     * Adds the given todo Task.","lastModifiedDate":"2022-04-07"},{"lineNumber":201,"author":{"gitId":"ChanWeiJie"},"content":"     * {@code Todo} must not already exist in the task list","lastModifiedDate":"2022-04-07"},{"lineNumber":202,"author":{"gitId":"ChanWeiJie"},"content":"     * @param todo the todo Task to be added.","lastModifiedDate":"2022-04-07"},{"lineNumber":203,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":204,"author":{"gitId":"ChanWeiJie"},"content":"    void addTodo(Todo todo);","lastModifiedDate":"2022-03-10"},{"lineNumber":205,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"ChanWeiJie"},"content":"     * Adds the given event.","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"ChanWeiJie"},"content":"     * {@code event} must not already exist in the task list","lastModifiedDate":"2022-03-10"},{"lineNumber":209,"author":{"gitId":"ChanWeiJie"},"content":"     * @param event the event Task to be added.","lastModifiedDate":"2022-04-07"},{"lineNumber":210,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"ChanWeiJie"},"content":"    void addEvent(Event event);","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"ChanWeiJie"},"content":"     * Adds the given deadline.","lastModifiedDate":"2022-03-10"},{"lineNumber":215,"author":{"gitId":"ChanWeiJie"},"content":"     * {@code deadline} must not already exist in the task list","lastModifiedDate":"2022-03-10"},{"lineNumber":216,"author":{"gitId":"ChanWeiJie"},"content":"     * @param deadline the deadline Task to be added.","lastModifiedDate":"2022-04-07"},{"lineNumber":217,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":218,"author":{"gitId":"ChanWeiJie"},"content":"    void addDeadline(Deadline deadline);","lastModifiedDate":"2022-03-10"},{"lineNumber":219,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":220,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":221,"author":{"gitId":"ChanWeiJie"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-10"},{"lineNumber":222,"author":{"gitId":"ChanWeiJie"},"content":"     * @param predicate the given condition.","lastModifiedDate":"2022-04-07"},{"lineNumber":223,"author":{"gitId":"ChanWeiJie"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-10"},{"lineNumber":224,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":225,"author":{"gitId":"ChanWeiJie"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":226,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":227,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":228,"author":{"gitId":"ChanWeiJie"},"content":"     * Gets an unmodifiable view of the filtered task list.","lastModifiedDate":"2022-04-07"},{"lineNumber":229,"author":{"gitId":"ChanWeiJie"},"content":"     * @return an unmodifiable view of the filtered task list.","lastModifiedDate":"2022-04-07"},{"lineNumber":230,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":231,"author":{"gitId":"ChanWeiJie"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-03-10"},{"lineNumber":232,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":233,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":234,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if the Task list has the specified task.","lastModifiedDate":"2022-04-07"},{"lineNumber":235,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be checked.","lastModifiedDate":"2022-04-07"},{"lineNumber":236,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if a task with the same identity as {@code Task} exists in the task list, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":237,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":238,"author":{"gitId":"alfredkohhh"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2022-03-20"},{"lineNumber":239,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":240,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":241,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if the Task list has the specified todo task.","lastModifiedDate":"2022-04-07"},{"lineNumber":242,"author":{"gitId":"ChanWeiJie"},"content":"     * @param todo the task to be checked.","lastModifiedDate":"2022-04-07"},{"lineNumber":243,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if a task with the same identity as {@code Todo} exists in the task list, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":244,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":245,"author":{"gitId":"ChanWeiJie"},"content":"    boolean hasTodo(Todo todo);","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":247,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":248,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if the Task list has the specified deadline task.","lastModifiedDate":"2022-04-07"},{"lineNumber":249,"author":{"gitId":"ChanWeiJie"},"content":"     * @param deadline the task to be checked.","lastModifiedDate":"2022-04-07"},{"lineNumber":250,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if a task with the same identity as {@code Deadline} exists in the task list, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":251,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":252,"author":{"gitId":"ChanWeiJie"},"content":"    boolean hasDeadline(Deadline deadline);","lastModifiedDate":"2022-03-10"},{"lineNumber":253,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":254,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":255,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if the Task list has the specified event task.","lastModifiedDate":"2022-04-07"},{"lineNumber":256,"author":{"gitId":"ChanWeiJie"},"content":"     * @param event the task to be checked.","lastModifiedDate":"2022-04-07"},{"lineNumber":257,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if a task with the same identity as {@code Event} exists in the task list, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":258,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":259,"author":{"gitId":"ChanWeiJie"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2022-03-28"},{"lineNumber":260,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":261,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":262,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if a Person is tagged to the specified task.","lastModifiedDate":"2022-04-07"},{"lineNumber":263,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task to be checked.","lastModifiedDate":"2022-04-07"},{"lineNumber":264,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person to be checked.","lastModifiedDate":"2022-04-07"},{"lineNumber":265,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if a {@code Task} is tagged to the person {@code Person}, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":266,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":267,"author":{"gitId":"ChanWeiJie"},"content":"    boolean isEmployeeTaggedToTask(Task task, Person person);","lastModifiedDate":"2022-04-07"},{"lineNumber":268,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":269,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":270,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":271,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns true if a {@code Task} is allocated with a priority.","lastModifiedDate":"2022-03-23"},{"lineNumber":272,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":273,"author":{"gitId":"ChanWeiJie"},"content":"    boolean hasPriority(Task task);","lastModifiedDate":"2022-03-23"},{"lineNumber":274,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":275,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":276,"author":{"gitId":"ChanWeiJie"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2022-03-23"},{"lineNumber":277,"author":{"gitId":"ChanWeiJie"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2022-03-23"},{"lineNumber":278,"author":{"gitId":"ChanWeiJie"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task list.","lastModifiedDate":"2022-03-23"},{"lineNumber":279,"author":{"gitId":"ChanWeiJie"},"content":"     * @param target the task to be replaced.","lastModifiedDate":"2022-04-07"},{"lineNumber":280,"author":{"gitId":"ChanWeiJie"},"content":"     * @param editedTask the new task to replace the target.","lastModifiedDate":"2022-04-07"},{"lineNumber":281,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":282,"author":{"gitId":"ChanWeiJie"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2022-03-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Denniszedead":1,"alfredkohhh":5,"dannytayjy":24,"ChanWeiJie":175,"-":78}},{"path":"src/main/java/manageezpz/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.GuiSettings;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.LogsCenter;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Deadline;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Event;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Priority;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"     * @param addressBook the provided addressBook.","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"     * @param userPrefs the specified user preferences.","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.addressBook.getTaskList());","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"     * Initializes a ModelManager with an empty addressBook and default user preferences.","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":115,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"dannytayjy"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"dannytayjy"},"content":"    public void increaseNumOfTasks(Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"dannytayjy"},"content":"        addressBook.increaseNumOfTasks(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"dannytayjy"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"dannytayjy"},"content":"    public void decreaseNumOfTasks(Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"dannytayjy"},"content":"        addressBook.decreaseNumOfTasks(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"dannytayjy"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ManageEZPZ \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"dannytayjy"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"dannytayjy"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"dannytayjy"},"content":"        return addressBook.hasTask(task);","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"ChanWeiJie"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"ChanWeiJie"},"content":"        addressBook.addTask(task);","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"ChanWeiJie"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"ChanWeiJie"},"content":"    public void addTodo(Todo todo) {","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"ChanWeiJie"},"content":"        addressBook.addTodo(todo);","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"dannytayjy"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"ChanWeiJie"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"ChanWeiJie"},"content":"        addressBook.addEvent(event);","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"dannytayjy"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":182,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":183,"author":{"gitId":"ChanWeiJie"},"content":"    public void addDeadline(Deadline deadline) {","lastModifiedDate":"2022-03-10"},{"lineNumber":184,"author":{"gitId":"ChanWeiJie"},"content":"        addressBook.addDeadline(deadline);","lastModifiedDate":"2022-03-10"},{"lineNumber":185,"author":{"gitId":"dannytayjy"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-24"},{"lineNumber":186,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":187,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":188,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean hasDeadline(Deadline deadline) {","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"ChanWeiJie"},"content":"        return addressBook.hasDeadline(deadline);","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(event);","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"ChanWeiJie"},"content":"        return addressBook.hasEvent(event);","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean hasTodo(Todo todo) {","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(todo);","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"ChanWeiJie"},"content":"        return addressBook.hasTodo(todo);","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":205,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"ChanWeiJie"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-31"},{"lineNumber":209,"author":{"gitId":"ChanWeiJie"},"content":"        addressBook.removeTask(task);","lastModifiedDate":"2022-03-10"},{"lineNumber":210,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"dannytayjy"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":213,"author":{"gitId":"dannytayjy"},"content":"    public void updateTaskWithEditedPerson(Task task, int assigneesIndex, Person editedPerson) {","lastModifiedDate":"2022-03-31"},{"lineNumber":214,"author":{"gitId":"dannytayjy"},"content":"        requireAllNonNull(task, assigneesIndex, editedPerson);","lastModifiedDate":"2022-03-31"},{"lineNumber":215,"author":{"gitId":"dannytayjy"},"content":"        addressBook.updateTaskWithEditedPerson(task, assigneesIndex, editedPerson);","lastModifiedDate":"2022-03-31"},{"lineNumber":216,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":217,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":218,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":219,"author":{"gitId":"dannytayjy"},"content":"    public Task markTask(Task task) {","lastModifiedDate":"2022-03-30"},{"lineNumber":220,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-31"},{"lineNumber":221,"author":{"gitId":"dannytayjy"},"content":"        return addressBook.markTask(task);","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"dannytayjy"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":225,"author":{"gitId":"dannytayjy"},"content":"    public Task unmarkTask(Task task) {","lastModifiedDate":"2022-03-30"},{"lineNumber":226,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-31"},{"lineNumber":227,"author":{"gitId":"dannytayjy"},"content":"        return addressBook.unmarkTask(task);","lastModifiedDate":"2022-03-30"},{"lineNumber":228,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":229,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":230,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":231,"author":{"gitId":"dannytayjy"},"content":"    public Task tagPriorityToTask(Task task, Priority priority) {","lastModifiedDate":"2022-03-30"},{"lineNumber":232,"author":{"gitId":"dannytayjy"},"content":"        requireAllNonNull(task, priority);","lastModifiedDate":"2022-03-31"},{"lineNumber":233,"author":{"gitId":"dannytayjy"},"content":"        return addressBook.tagPriorityToTask(task, priority);","lastModifiedDate":"2022-03-30"},{"lineNumber":234,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":235,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":236,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":237,"author":{"gitId":"dannytayjy"},"content":"    public Task tagEmployeeToTask(Task task, Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":238,"author":{"gitId":"dannytayjy"},"content":"        requireAllNonNull(task, person);","lastModifiedDate":"2022-03-31"},{"lineNumber":239,"author":{"gitId":"dannytayjy"},"content":"        return addressBook.tagEmployeeToTask(task, person);","lastModifiedDate":"2022-03-30"},{"lineNumber":240,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":241,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":242,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":243,"author":{"gitId":"dannytayjy"},"content":"    public Task untagEmployeeFromTask(Task task, Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":244,"author":{"gitId":"dannytayjy"},"content":"        requireAllNonNull(task, person);","lastModifiedDate":"2022-03-31"},{"lineNumber":245,"author":{"gitId":"dannytayjy"},"content":"        return addressBook.untagEmployeeFromTask(task, person);","lastModifiedDate":"2022-03-30"},{"lineNumber":246,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":247,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":248,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":249,"author":{"gitId":"dannytayjy"},"content":"    public boolean isEmployeeTaggedToTask(Task task, Person person) {","lastModifiedDate":"2022-03-31"},{"lineNumber":250,"author":{"gitId":"dannytayjy"},"content":"        requireAllNonNull(task, person);","lastModifiedDate":"2022-03-31"},{"lineNumber":251,"author":{"gitId":"dannytayjy"},"content":"        return addressBook.isEmployeeTaggedToTask(task, person);","lastModifiedDate":"2022-03-31"},{"lineNumber":252,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":253,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":254,"author":{"gitId":"dannytayjy"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":255,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":256,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":257,"author":{"gitId":"dannytayjy"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2022-03-24"},{"lineNumber":258,"author":{"gitId":"dannytayjy"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-24"},{"lineNumber":259,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":260,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":261,"author":{"gitId":"dannytayjy"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-24"},{"lineNumber":262,"author":{"gitId":"dannytayjy"},"content":"        return filteredTasks;","lastModifiedDate":"2022-03-24"},{"lineNumber":263,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":264,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":265,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":266,"author":{"gitId":"dannytayjy"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-03-24"},{"lineNumber":267,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":268,"author":{"gitId":"dannytayjy"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":269,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":270,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":271,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":272,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":273,"author":{"gitId":"dannytayjy"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-03-24"},{"lineNumber":274,"author":{"gitId":"dannytayjy"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":275,"author":{"gitId":"dannytayjy"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-03-24"},{"lineNumber":276,"author":{"gitId":"dannytayjy"},"content":"            return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":277,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":278,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":279,"author":{"gitId":"dannytayjy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":280,"author":{"gitId":"dannytayjy"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":281,"author":{"gitId":"dannytayjy"},"content":"            return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":282,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":283,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":284,"author":{"gitId":"dannytayjy"},"content":"        // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":285,"author":{"gitId":"dannytayjy"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2022-03-24"},{"lineNumber":286,"author":{"gitId":"dannytayjy"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2022-03-24"},{"lineNumber":287,"author":{"gitId":"dannytayjy"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2022-03-24"},{"lineNumber":288,"author":{"gitId":"dannytayjy"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-03-24"},{"lineNumber":289,"author":{"gitId":"dannytayjy"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks);","lastModifiedDate":"2022-03-24"},{"lineNumber":290,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":291,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":292,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":293,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean hasPriority(Task task) {","lastModifiedDate":"2022-03-23"},{"lineNumber":294,"author":{"gitId":"ChanWeiJie"},"content":"        return addressBook.hasPriority(task);","lastModifiedDate":"2022-03-23"},{"lineNumber":295,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":296,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":297,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":298,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-23"},{"lineNumber":299,"author":{"gitId":"ChanWeiJie"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-03-23"},{"lineNumber":300,"author":{"gitId":"ChanWeiJie"},"content":"        addressBook.setTask(target, editedTask);","lastModifiedDate":"2022-03-23"},{"lineNumber":301,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":302,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Denniszedead":6,"dannytayjy":88,"ChanWeiJie":83,"-":126}},{"path":"src/main/java/manageezpz/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the persons list.","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"     * This list will not contain any duplicate task.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the task list.","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":2,"ChanWeiJie":9,"-":15}},{"path":"src/main/java/manageezpz/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.GuiSettings;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"dannytayjy":2,"-":14}},{"path":"src/main/java/manageezpz/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.GuiSettings;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"ManageEZPZ.json\");","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"     * @param userPrefs the provided user preferences.","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"     * @param newUserPrefs the new user preferences.","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":80,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":81,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":88,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":89,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":2,"ChanWeiJie":12,"-":84}},{"path":"src/main/java/manageezpz/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model.person;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if a given string is a valid email.","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"     * @param test the email to be checked.","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if the given email is valid, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":75,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":76,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dannytayjy":2,"ChanWeiJie":12,"-":68}},{"path":"src/main/java/manageezpz/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model.person;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank.\";","lastModifiedDate":"2022-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if a given string is a valid name.","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"     * @param test the name to be checked.","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if the name is valid, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"        return !test.trim().isEmpty();","lastModifiedDate":"2022-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dannytayjy":3,"ChanWeiJie":13,"-":48}},{"path":"src/main/java/manageezpz/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model.person;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"    private int numOfTasks;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructs an {@code Person}.","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"     * @param email A valid Email.","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"     * @param numOfTasks the number of task assigned to the person.","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    public Person(Name name, Phone phone, Email email, int numOfTasks) {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"        requireAllNonNull(name, phone, email);","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"        this.numOfTasks \u003d numOfTasks;","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"    public int getNumOfTasks() {","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"        return numOfTasks;","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns true if both persons have the same name or email or phone number.","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"     * @param otherPerson the person to check against.","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if both persons are the same, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"                \u0026\u0026 (otherPerson.getName().equals(getName())","lastModifiedDate":"2022-04-02"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"                || otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2022-04-02"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"                || otherPerson.getPhone().equals(getPhone()));","lastModifiedDate":"2022-04-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"     * Increases the number of tasks by one.","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"    public void increaseTaskCount() {","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"        this.numOfTasks \u003d numOfTasks + 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"     * Decreases the number of tasks by one.","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"     * At any time, the number of tasks should not be lesser than zero.","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"    public void decreaseTaskCount() {","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"        assert numOfTasks \u003e\u003d 0 : \"numOfTasks should not be lesser than 0\";","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"        this.numOfTasks \u003d numOfTasks - 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"ChanWeiJie"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":105,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":106,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"ChanWeiJie"},"content":"        return Objects.hash(name, phone, email);","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":114,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":115,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"ChanWeiJie"},"content":"                .append(getEmail());","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alfredkohhh":4,"dannytayjy":15,"ChanWeiJie":23,"-":85}},{"path":"src/main/java/manageezpz/model/person/PersonMultiplePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package manageezpz.model.person;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.commons.util.StringUtil;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":" * Checks if the options are valid for finding tasks.","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"public class PersonMultiplePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"    private final String phone;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"    private final String email;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"     * The constructor for the multipredicate to search for employees with the stated options.","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"     * @param names Name of the employee","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"     * @param phone Phone number of the employee","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"     * @param email Email of the employee.","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"    public PersonMultiplePredicate(List\u003cString\u003e names, String phone, String email) {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"        this.names \u003d names;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"        boolean isAtLeastOneNotNull \u003d (this.names !\u003d null) || (this.phone !\u003d null) || (this.email !\u003d null);","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"        assert isAtLeastOneNotNull : \"At least one search option should be specified\";","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"        // Checks if the specific search term is specified in the parameter, then check on the person provided.","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"        // Defaults to true if not specified.","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"        boolean hasName \u003d names !\u003d null ? checkIfNameExists(person) : true;","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"        boolean hasPhone \u003d phone !\u003d null ? checkIfPhoneExists(person) : true;","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"        boolean hasEmail \u003d email !\u003d null ? checkIfEmailExists(person) : true;","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"        return hasName \u0026\u0026 hasPhone \u0026\u0026 hasEmail;","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"    private boolean checkIfNameExists(Person person) {","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"        return names.stream().anyMatch(name -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, name));","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"    private boolean checkIfPhoneExists(Person person) {","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"        Phone phone \u003d new Phone(this.phone);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"        return person.getPhone().equals(phone);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"    private boolean checkIfEmailExists(Person person) {","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"        Email email \u003d new Email(this.email);","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"        return person.getEmail().equals(email);","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"            return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"        } else if (other instanceof PersonMultiplePredicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"            PersonMultiplePredicate otherPredicate \u003d (PersonMultiplePredicate) other;","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"Denniszedead"},"content":"            boolean isNameEquals \u003d checkIfOptionEqual(names, otherPredicate.names);","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"            boolean isPhoneEquals \u003d checkIfOptionEqual(phone, otherPredicate.phone);","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"            boolean isEmailEquals \u003d checkIfOptionEqual(email, otherPredicate.email);","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"            return isNameEquals \u0026\u0026 isPhoneEquals \u0026\u0026 isEmailEquals;","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"            return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"    private boolean checkIfOptionEqual(Object currentObj, Object otherObj) {","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"        if (otherObj !\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"            return otherObj.equals(currentObj);","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"            return currentObj \u003d\u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Denniszedead":85}},{"path":"src/main/java/manageezpz/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model.person;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long.\";","lastModifiedDate":"2022-04-04"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2022-04-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if a given string is a valid phone number.","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"     * @param test the phone number to be checked.","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if the phone number is valid, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dannytayjy":4,"ChanWeiJie":12,"-":48}},{"path":"src/main/java/manageezpz/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model.person;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":" * persons uses Person#isSamePerson(Person) for equality to ensure that the person being added or updated is","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object)","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":" * to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if the list contains an equivalent person as the given argument.","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"     * @param toCheck the person to be checked.","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if the list contains the specified person, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"     * @param toAdd the person to be added.","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"     * @param target the person to be replaced.","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"     * @param editedPerson the new person to replace the target.","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"     * Increases the number of tasks by one.","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person to increment the number of tasks.","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"    public void increaseNumOfTasks(Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"        Person updatedPerson \u003d new Person(person.getName(), person.getPhone(),","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"                person.getEmail(), person.getNumOfTasks());","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"        updatedPerson.increaseTaskCount();","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"dannytayjy"},"content":"        setPerson(person, updatedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"dannytayjy"},"content":"     * Decreases the number of tasks by one.","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person to decrement the number of tasks.","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"dannytayjy"},"content":"    public void decreaseNumOfTasks(Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"dannytayjy"},"content":"        Person updatedPerson \u003d new Person(person.getName(), person.getPhone(),","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"dannytayjy"},"content":"                person.getEmail(), person.getNumOfTasks());","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"dannytayjy"},"content":"        updatedPerson.decreaseTaskCount();","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"dannytayjy"},"content":"        setPerson(person, updatedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"ChanWeiJie"},"content":"     * @param toRemove the person to be removed.","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"ChanWeiJie"},"content":"     * Replaces the current person list with the provided list.","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"ChanWeiJie"},"content":"     * @param replacement the list to replace the current person list.","lastModifiedDate":"2022-04-07"},{"lineNumber":119,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"ChanWeiJie"},"content":"     * @param persons the list to replace the old list.","lastModifiedDate":"2022-04-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":141,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the unmodifiable persons list.","lastModifiedDate":"2022-04-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":148,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":149,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":156,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":157,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":166,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":167,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dannytayjy":30,"ChanWeiJie":27,"-":126}},{"path":"src/main/java/manageezpz/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model.person.exceptions;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"dannytayjy":1,"-":10}},{"path":"src/main/java/manageezpz/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model.person.exceptions;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"dannytayjy":1,"-":5}},{"path":"src/main/java/manageezpz/model/task/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"aaron-ljx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"public class Date {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date should be in the format of yyyy-MM-dd.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"            + \"Year should be greater then 0000, Month should only be between 1 and 12 \"","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"            + \"and Day should only be between 1 and 31.\";","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    public static final String VALIDATION_REGEX \u003d \"(?!0000)\\\\d{4}\\\\D\\\\d{2}\\\\D\\\\d{2}\";","lastModifiedDate":"2022-04-02"},{"lineNumber":18,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"    private String date;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"     * @param date A valid date.","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"    public Date(String date) {","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"    public String getDate() {","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"        return date;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"    public LocalDate getParsedDate() {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"        LocalDate parsedDate \u003d LocalDate.parse(date, dtf);","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"        return parsedDate;","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"    public static Date getTodayDate() {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"        LocalDate todayDate \u003d LocalDate.now();","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"        return new Date(todayDate.toString());","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if the given date is valid.","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"     * @param date the date to be checked.","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if the date is valid, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"        return date.matches(VALIDATION_REGEX) \u0026\u0026 validCheckDate(date);","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"     * Validates the format of date provided.","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"     * @param date String representation of date.","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if date is in the correct parsable format, false otherwise.","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"     * */","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"    public static boolean validCheckDate(String date) {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"        SimpleDateFormat sdfrmt \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"        sdfrmt.setLenient(false);","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"            LocalDate.parse(date);","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"ChanWeiJie"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"ChanWeiJie"},"content":"     * Formats the given date.","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"ChanWeiJie"},"content":"     * @param dtf the DateTimeFormatter to be used to format the date.","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the formatted date.","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"ChanWeiJie"},"content":"    public String format(DateTimeFormatter dtf) {","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"ChanWeiJie"},"content":"        return getParsedDate().format(dtf);","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"        if (obj instanceof Date) {","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"Denniszedead"},"content":"            return date.equals(((Date) obj).date);","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"Denniszedead"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"Denniszedead"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"aaron-ljx"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"Denniszedead":17,"alfredkohhh":1,"dannytayjy":3,"ChanWeiJie":61,"aaron-ljx":9}},{"path":"src/main/java/manageezpz/model/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":" * A class that represents a Deadline task.","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"    protected String type;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    protected Description description;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"aaron-ljx"},"content":"    private Date date;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"    private Time time;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"     * Constructor to initialize an instance of Deadline class with task","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"     * description, date and time.","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"     * @param taskDescription Description of the task.","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"     * @param date Date by which the Deadline task needs to be completed.","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"     * @param time Time by which the Deadline task needs to be completed.","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    public Deadline(Description taskDescription, Date date, Time time) {","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"        this.type \u003d \"deadline\";","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"        this.description \u003d taskDescription;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"aaron-ljx"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"aaron-ljx"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"     * Constructor to initialize an instance of Deadline class with an existing","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"     * Deadline object.","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"     * @param deadline Deadline task.","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"    public Deadline(Deadline deadline) {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"        this.type \u003d deadline.getType();","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"        this.description \u003d deadline.getDescription();","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"        this.date \u003d deadline.getDate();","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"        this.time \u003d deadline.getTime();","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"        this.isDone \u003d deadline.isDone();","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"        this.priority \u003d deadline.getPriority();","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"        this.assignees \u003d deadline.getAssignees();","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"    public Date getDate() {","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"        return this.date;","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"    public Time getTime() {","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"        return this.time;","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"    public void setDescription(Description description) {","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"    public void setDate(Date date) {","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"    public void setTime(Time time) {","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"    public String getType() {","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"ChanWeiJie"},"content":"        return this.type;","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"ChanWeiJie"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"ChanWeiJie"},"content":"        return this.description;","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"dannytayjy"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"    public String getDateTime() {","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"        return \"by \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"                + \" \" + time.format(DateTimeFormatter.ofPattern(\"h:mm a\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"     * Returns the string representation of a Deadline task.","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"     * @return The string representation of the Deadline task, consisting of its","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"ChanWeiJie"},"content":"     * description and formatted date and time.","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"ChanWeiJie"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"ChanWeiJie"},"content":"        return \"[D]\" + super.toString() + getDescription()","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"ChanWeiJie"},"content":"                + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"ChanWeiJie"},"content":"                + \" \" + time.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"dannytayjy":44,"ChanWeiJie":45,"aaron-ljx":4}},{"path":"src/main/java/manageezpz/model/task/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"public class Description {","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Description should not be blank!\";","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"    public final String description;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"     * @param description A valid description.","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"    public Description(String description) {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if a given string is a valid description.","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"     * @param test the description to be checked.","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if a given string is a valid description, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"        return !(test.trim().isEmpty());","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"        return description;","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"                \u0026\u0026 description.equals(((Description) other).description)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"        return description.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"dannytayjy":1,"ChanWeiJie":55}},{"path":"src/main/java/manageezpz/model/task/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":" * A class that represents an Event task.","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"public class Event extends Task {","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"    protected String type;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    protected Description description;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"aaron-ljx"},"content":"    private Date date;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"    private Time startTime;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    private Time endTime;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"     * Constructor to initialize an instance of Event class with task","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"     * description, date, start time and end time.","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"     * @param taskDescription Description of the task.","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"     * @param date Date at which the Event task is taking place.","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"     * @param startTime Start time of the Event task.","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"     * @param endTime End time of the Event task.","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"    public Event(Description taskDescription, Date date, Time startTime, Time endTime) {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"        this.type \u003d \"event\";","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"        this.description \u003d taskDescription;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"aaron-ljx"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"aaron-ljx"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"aaron-ljx"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"     * Constructor to initialize an instance of Event class with an existing","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"     * Event object.","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"     * @param event Event task","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"    public Event(Event event) {","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"        this.type \u003d event.getType();","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"        this.description \u003d event.getDescription();","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"        this.date \u003d event.getDate();","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"        this.startTime \u003d event.getStartTime();","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"        this.endTime \u003d event.getEndTime();","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"        this.isDone \u003d event.isDone();","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"        this.priority \u003d event.getPriority();","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"        this.assignees \u003d event.getAssignees();","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"    public Date getDate() {","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"        return date;","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"    public Time getStartTime() {","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"aaron-ljx"},"content":"        return startTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"    public Time getEndTime() {","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"        return endTime;","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"    public String getType() {","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"        return this.type;","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"ChanWeiJie"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"ChanWeiJie"},"content":"        return this.description;","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"    public void setDescription(Description description) {","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"dannytayjy"},"content":"    public void setDate(Date date) {","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"    public void setStartTime(Time startTime) {","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"    public void setEndTime(Time endTime) {","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"dannytayjy"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"dannytayjy"},"content":"    public String getDateTime() {","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"dannytayjy"},"content":"        return \"at \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"dannytayjy"},"content":"                + \" \" + startTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \" to\"","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"dannytayjy"},"content":"                + \" \" + endTime.format(DateTimeFormatter.ofPattern(\"h:mm a\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"dannytayjy"},"content":"     * Returns the string representation of an Event task.","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"dannytayjy"},"content":"     * @return The string representation of the event, consisting of its","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"ChanWeiJie"},"content":"     * description, formatted date and formatted start and end time.","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"dannytayjy"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"dannytayjy"},"content":"    public String toString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"ChanWeiJie"},"content":"        return \"[E]\" + super.toString() + getDescription()","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"ChanWeiJie"},"content":"                + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"dannytayjy"},"content":"                + \" \" + startTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \" to\"","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"dannytayjy"},"content":"                + \" \" + endTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"dannytayjy":57,"ChanWeiJie":35,"aaron-ljx":15}},{"path":"src/main/java/manageezpz/model/task/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":" * An enum class that represents the priority of a given Task.","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"public enum Priority {","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"    HIGH(0),","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"    MEDIUM(1),","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"    LOW(2),","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"    NONE(3);","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"    private final int value;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"     * Constructor to initialize an instance of Priority enumeration","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"     * with value field.","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"     * @param value Value of the Priority.","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"     * */","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    Priority(int value) {","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"        this.value \u003d value;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"    public int getValue() {","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"        return value;","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"dannytayjy":8,"ChanWeiJie":19}},{"path":"src/main/java/manageezpz/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":" * An abstract class that represents the tasks a user could create.","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":" * A \u003ccode\u003e Task \u003c/code\u003e object would correspond to a task inputted","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":" * by a user, either a Todo, Deadline or Event.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"public abstract class Task {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    protected Priority priority \u003d Priority.NONE;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    // Data fields","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"    protected List\u003cPerson\u003e assignees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"     * Constructor to initialize an instance of Task class.","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"     * {@code Date taskDate} has a default value that will be changed if the","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"     * object inheriting the Task object is a Deadline or Event object.","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"    public Task() {","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if the task is done or not.","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if task is done, false otherwise.","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"        return isDone;","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"    public abstract String getType();","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"    public abstract Description getDescription();","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"    public abstract String getDateTime();","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"        return this.isDone() ? \"X\" : \" \";","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"    public Priority getPriority() {","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"        return this.priority;","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"    public List\u003cPerson\u003e getAssignees() {","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"        return this.assignees;","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTaskDone() {","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTaskNotDone() {","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"    public void setPriority(String priority) {","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"        this.priority \u003d Priority.valueOf(priority);","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"    public void setPriority(Priority priority) {","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"ChanWeiJie"},"content":"     * Adds a Person to the Task List.","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person to be added.","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"ChanWeiJie"},"content":"    public void addAssignees(Person person) {","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"ChanWeiJie"},"content":"        this.assignees.add(person);","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if both Task have the same Description.","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"ChanWeiJie"},"content":"     * @param otherTask the task to be checked against.","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if both task are the same, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"ChanWeiJie"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"ChanWeiJie"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"ChanWeiJie"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"ChanWeiJie"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription());","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"ChanWeiJie"},"content":"     * Used to assign a person to this Task.","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person to be assigned.","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"ChanWeiJie"},"content":"    public void assignedTo(Person person) {","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"ChanWeiJie"},"content":"        assignees.add(person);","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":103,"author":{"gitId":"ChanWeiJie"},"content":"     * Used to assign a new person to the specific index in the assignee list.","lastModifiedDate":"2022-04-06"},{"lineNumber":104,"author":{"gitId":"ChanWeiJie"},"content":"     * @param index the index specified to the assignee list.","lastModifiedDate":"2022-04-06"},{"lineNumber":105,"author":{"gitId":"ChanWeiJie"},"content":"     * @param newPerson the new person to be placed into the assignee list.","lastModifiedDate":"2022-04-06"},{"lineNumber":106,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":107,"author":{"gitId":"ChanWeiJie"},"content":"    public void assignedTo(int index, Person newPerson) {","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"ChanWeiJie"},"content":"        assignees.set(index, newPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"ChanWeiJie"},"content":"     * Used to deallocate a person from this Task.","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"dannytayjy"},"content":"     * @param person The person to be deallocated.","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"alfredkohhh"},"content":"    public void removeAssigned(Person person) {","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"alfredkohhh"},"content":"        assignees.remove(person);","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks whether the assignee is assigned to the task.","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"ChanWeiJie"},"content":"     * @param assignee The assignee to be searched","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if the assignee is assigned, false otherwise","lastModifiedDate":"2022-04-06"},{"lineNumber":123,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean haveAssignees(String assignee) {","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"ChanWeiJie"},"content":"        return assignees.stream()","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"ChanWeiJie"},"content":"                .anyMatch(person -\u003e person.getName().fullName.equals(assignee));","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":130,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":131,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":132,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"ChanWeiJie"},"content":"    public String toString() {","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"ChanWeiJie"},"content":"        return \"[\" + getStatusIcon() + \"] \";","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":138,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":139,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":140,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"ChanWeiJie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"ChanWeiJie"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"ChanWeiJie"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"ChanWeiJie"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"ChanWeiJie"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"ChanWeiJie"},"content":"        return otherTask.getDescription().equals(getDescription())","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"ChanWeiJie"},"content":"                \u0026\u0026 otherTask.getStatusIcon().equals(getStatusIcon());","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"alfredkohhh":10,"dannytayjy":16,"ChanWeiJie":129}},{"path":"src/main/java/manageezpz/model/task/TaskMultiplePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_TODO;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.commons.util.StringUtil;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.logic.parser.Prefix;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":" * The predicate to search tasks based on the properties given.","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"public class TaskMultiplePredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"    private final Prefix taskType;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"    private final List\u003cString\u003e descriptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"    private final Date date;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    private final Priority priority;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"    private final String assignee;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"    private final Boolean isMarked;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"     * The constructor for predicate.","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"     * @param taskType The task type to search","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"     * @param descriptions The description to search","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"     * @param date The date of either the deadline or event","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"     * @param priority The priority of the task","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"     * @param assignee The employees assigned to the tasks","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"     * @param isMarked Whether the task is marked","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"    public TaskMultiplePredicate(Prefix taskType, List\u003cString\u003e descriptions, Date date, Priority priority,","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"                                 String assignee, Boolean isMarked) {","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"        this.descriptions \u003d descriptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"        this.assignee \u003d assignee;","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"        boolean isAtLeastOneNotNull \u003d (this.taskType !\u003d null) || (this.descriptions !\u003d null) || (this.date !\u003d null)","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"                || (this.priority !\u003d null) || (this.assignee !\u003d null) || (this.isMarked !\u003d null);","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"        assert isAtLeastOneNotNull : \"At least one search option should be specified\";","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"        // Checks if the specific search term is specified in the parameter, then check on the task provided.","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"        // Defaults to true if not specified.","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"        boolean hasTaskType \u003d taskType !\u003d null ? checkIfHasSpecificTaskType(task) : true;","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"        boolean hasKeyword \u003d descriptions !\u003d null ? checkIfHasKeywords(task) : true;","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"        boolean hasDate \u003d date !\u003d null ? checkIfHasDate(task) : true;","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"        boolean hasPriority \u003d priority !\u003d null ? checkIfHasPriority(task) : true;","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"        boolean hasAssignee \u003d assignee !\u003d null ? checkIfHasAssignee(task) : true;","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"        boolean hasIsMarked \u003d isMarked !\u003d null ? checkedIfIsMarked(task) : true;","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"        return hasTaskType \u0026\u0026 hasKeyword \u0026\u0026 hasDate \u0026\u0026 hasPriority \u0026\u0026 hasAssignee \u0026\u0026 hasIsMarked;","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"    private boolean checkIfHasSpecificTaskType(Task task) {","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"        boolean isTodo \u003d taskType.equals(PREFIX_TODO) \u0026\u0026 task instanceof Todo;","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"        boolean isDeadline \u003d taskType.equals(PREFIX_DEADLINE) \u0026\u0026 task instanceof Deadline;","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"        boolean isEvent \u003d taskType.equals(PREFIX_EVENT) \u0026\u0026 task instanceof Event;","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"        return isTodo || isDeadline || isEvent;","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"    private boolean checkIfHasKeywords(Task task) {","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"        String otherTaskDescription \u003d task.getDescription().toString();","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"        return descriptions.stream()","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(otherTaskDescription, keyword));","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"    private boolean checkIfHasDate(Task task) {","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"            return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"            Date taskDate \u003d getDateFromTask(task);","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"            return taskDate.equals(date);","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"Denniszedead"},"content":"    private Date getDateFromTask(Task task) {","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"Denniszedead"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"Denniszedead"},"content":"            return ((Deadline) task).getDate();","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"Denniszedead"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"Denniszedead"},"content":"            return ((Event) task).getDate();","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"Denniszedead"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"Denniszedead"},"content":"            assert false : \"checkIfHasDate() did not filter out the todo\";","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"Denniszedead"},"content":"            return null;","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"Denniszedead"},"content":"    private boolean checkIfHasPriority(Task task) {","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"Denniszedead"},"content":"        return task.getPriority().equals(priority);","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"Denniszedead"},"content":"    private boolean checkIfHasAssignee(Task task) {","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"Denniszedead"},"content":"        return task.haveAssignees(assignee);","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"Denniszedead"},"content":"    private boolean checkedIfIsMarked(Task task) {","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"Denniszedead"},"content":"        return task.isDone \u003d\u003d isMarked.booleanValue();","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"Denniszedead"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"Denniszedead"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"Denniszedead"},"content":"            return true;","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"Denniszedead"},"content":"        } else if (obj instanceof TaskMultiplePredicate) {","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"Denniszedead"},"content":"            TaskMultiplePredicate pre \u003d (TaskMultiplePredicate) obj;","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"Denniszedead"},"content":"            boolean isSameTaskType \u003d isSameOption(taskType, pre.taskType);","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"Denniszedead"},"content":"            boolean isSameDescription \u003d isSameOption(descriptions, pre.descriptions);","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"Denniszedead"},"content":"            boolean isSameDate \u003d isSameOption(date, pre.date);","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"Denniszedead"},"content":"            boolean isSamePriority \u003d isSameOption(priority, pre.priority);","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"Denniszedead"},"content":"            boolean isSameAssignee \u003d isSameOption(assignee, pre.assignee);","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"Denniszedead"},"content":"            boolean isSameIsMarked \u003d isSameOption(isMarked, pre.isMarked);","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"Denniszedead"},"content":"            return isSameTaskType","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"Denniszedead"},"content":"                    \u0026\u0026 isSameDescription \u0026\u0026 isSameDate \u0026\u0026 isSamePriority \u0026\u0026 isSameAssignee \u0026\u0026 isSameIsMarked;","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"Denniszedead"},"content":"        return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"Denniszedead"},"content":"    private boolean isSameOption(Object currentObj, Object otherObj) {","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"Denniszedead"},"content":"        if (otherObj !\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"Denniszedead"},"content":"            return otherObj.equals(currentObj);","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"Denniszedead"},"content":"        return currentObj \u003d\u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"Denniszedead":137,"ChanWeiJie":1}},{"path":"src/main/java/manageezpz/model/task/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"public class Time {","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Time should be in the format of HHmm, \"","lastModifiedDate":"2022-04-04"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"            + \"where it should only contain numbers that is 4 digits long.\\n\"","lastModifiedDate":"2022-04-04"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"            + \"HH should only be between 00 and 23 and mm should only be between 00 and 59.\";","lastModifiedDate":"2022-04-04"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{4}\";","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"    private String time;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructs a {@code Time}.","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"     * @param time A valid time.","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    public Time(String time) {","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(time);","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if a given string is a valid time.","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"     * @param time the time to be checked.","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if a given string is a valid time, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"    public static boolean isValidTime(String time) {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"        return time.matches(VALIDATION_REGEX) \u0026\u0026 time.matches(\"([01]?[0-9]|2[0-3])[0-5][0-9]\");","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"    public String getTime() {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"        return time;","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"    public LocalTime getParsedTime() {","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"        LocalTime parsedTime \u003d LocalTime.parse(time, dtf);","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"        return parsedTime;","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"     * Formats the given time.","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"     * @param dtf the DateTimeFormatter to be used to format the time.","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the formatted time.","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"    public String format(DateTimeFormatter dtf) {","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"        return getParsedTime().format(dtf);","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"dannytayjy":3,"ChanWeiJie":52}},{"path":"src/main/java/manageezpz/model/task/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":" * A class that represents a Todo task.","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"    protected String type;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"    protected Description description;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"     * Constructor to initialize an instance of Todo class with task description.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"     * @param taskDescription Description of the task.","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    public Todo(Description taskDescription) {","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"        this.type \u003d \"todo\";","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"        this.description \u003d taskDescription;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor to initialize an instance of Todo class with an existing Todo object.","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"     * @param todo Todo task.","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"    public Todo(Todo todo) {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"        this.type \u003d todo.getType();","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"        this.description \u003d todo.getDescription();","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"        this.isDone \u003d todo.isDone();","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"        this.priority \u003d todo.getPriority();","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"        this.assignees \u003d todo.getAssignees();","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    public String getType() {","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"        return this.type;","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"        return this.description;","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"    public String getDateTime() {","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"        return null;","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"    public void setDescription(Description description) {","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"     * Returns the string representation of a Todo task.","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"     * @return The string representation of the Todo task, consisting of its","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"     * description.","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"        return \"[T]\" + super.toString() + getDescription();","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"dannytayjy":24,"ChanWeiJie":38}},{"path":"src/main/java/manageezpz/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.exceptions.InvalidTaskTypeException;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":" * A list of Task that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":" * Task uses Task#isSameTask(Task) for equality to ensure that the task being added or updated is","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a Task uses Task#equals(Object)","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":" * to ensure that the Task with exactly the same fields will be removed.","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":" *","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":" *","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"     * Checks if the list contains an equivalent Task as the given argument.","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"     * @param toCheck the task to be checked.","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if the list contains the specified task, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"     * @param toAdd the task to be added.","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"     * @param target the task to be replaced.","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"     * @param editedTask the new task to replace target.","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"ChanWeiJie"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"ChanWeiJie"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"ChanWeiJie"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"ChanWeiJie"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"     * Updates the task with the edited person.","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"     * @param toUpdate the task to be updated.","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"     * @param assigneesIndex the index of the person in List of assignees.","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"     * @param editedPerson the edited person.","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"    public void updateTaskWithEditedPerson(Task toUpdate, int assigneesIndex, Person editedPerson) {","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"        requireAllNonNull(toUpdate, assigneesIndex, editedPerson);","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"dannytayjy"},"content":"        Task updatedTask \u003d duplicateTask(toUpdate);","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"dannytayjy"},"content":"        updatedTask.assignedTo(assigneesIndex, editedPerson);","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"dannytayjy"},"content":"        setTask(toUpdate, updatedTask);","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"dannytayjy"},"content":"     * Marks a task in the list as done.","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"dannytayjy"},"content":"     * The task must already exist in the list.","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"ChanWeiJie"},"content":"     * @param toMark the task to be marked.","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the marked task.","lastModifiedDate":"2022-04-07"},{"lineNumber":97,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"dannytayjy"},"content":"    public Task markTask(Task toMark) {","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(toMark);","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"dannytayjy"},"content":"        Task markedTask \u003d duplicateTask(toMark);","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"dannytayjy"},"content":"        markedTask.setTaskDone();","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"dannytayjy"},"content":"        setTask(toMark, markedTask);","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"dannytayjy"},"content":"        return markedTask;","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"ChanWeiJie"},"content":"     * unMarks a task in the list as not done yet.","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"dannytayjy"},"content":"     * The task must already exist in the list.","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"ChanWeiJie"},"content":"     * @param toUnmark the task to be unmarked.","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the unamrked task.","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"dannytayjy"},"content":"    public Task unmarkTask(Task toUnmark) {","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(toUnmark);","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"dannytayjy"},"content":"        Task unmarkedTask \u003d duplicateTask(toUnmark);","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"dannytayjy"},"content":"        unmarkedTask.setTaskNotDone();","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"dannytayjy"},"content":"        setTask(toUnmark, unmarkedTask);","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"dannytayjy"},"content":"        return unmarkedTask;","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"dannytayjy"},"content":"     * Tags a priority to the task.","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"ChanWeiJie"},"content":"     * @param toTagPriority the task to be tagged.","lastModifiedDate":"2022-04-07"},{"lineNumber":130,"author":{"gitId":"ChanWeiJie"},"content":"     * @param priority the priority specified to be tagged to the task.","lastModifiedDate":"2022-04-07"},{"lineNumber":131,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the tagged task.","lastModifiedDate":"2022-04-07"},{"lineNumber":132,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"dannytayjy"},"content":"    public Task tagPriorityToTask(Task toTagPriority, Priority priority) {","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(toTagPriority);","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(priority);","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"dannytayjy"},"content":"        Task taggedPriorityTask \u003d duplicateTask(toTagPriority);","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"dannytayjy"},"content":"        taggedPriorityTask.setPriority(priority);","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"dannytayjy"},"content":"        setTask(toTagPriority, taggedPriorityTask);","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"dannytayjy"},"content":"        return taggedPriorityTask;","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"dannytayjy"},"content":"     * Tags an employee to the task.","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"ChanWeiJie"},"content":"     * @param toTagEmployee the task to be tagged.","lastModifiedDate":"2022-04-07"},{"lineNumber":148,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the employee to be tagged to the task.","lastModifiedDate":"2022-04-07"},{"lineNumber":149,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the tagged task.","lastModifiedDate":"2022-04-07"},{"lineNumber":150,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"dannytayjy"},"content":"    public Task tagEmployeeToTask(Task toTagEmployee, Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(toTagEmployee);","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"dannytayjy"},"content":"        Task taggedEmployeeTask \u003d duplicateTask(toTagEmployee);","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"dannytayjy"},"content":"        taggedEmployeeTask.assignedTo(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"dannytayjy"},"content":"        setTask(toTagEmployee, taggedEmployeeTask);","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"dannytayjy"},"content":"        return taggedEmployeeTask;","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"ChanWeiJie"},"content":"     * * Untags an employee to the task.","lastModifiedDate":"2022-04-07"},{"lineNumber":165,"author":{"gitId":"ChanWeiJie"},"content":"     * @param toUntagEmployee the task to be untagged.","lastModifiedDate":"2022-04-07"},{"lineNumber":166,"author":{"gitId":"ChanWeiJie"},"content":"     * @param person the person to be untagged from the task.","lastModifiedDate":"2022-04-07"},{"lineNumber":167,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the untagged task.","lastModifiedDate":"2022-04-07"},{"lineNumber":168,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"dannytayjy"},"content":"    public Task untagEmployeeFromTask(Task toUntagEmployee, Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(toUntagEmployee);","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"dannytayjy"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"dannytayjy"},"content":"        Task untaggedEmployeeTask \u003d duplicateTask(toUntagEmployee);","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"dannytayjy"},"content":"        untaggedEmployeeTask.removeAssigned(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"dannytayjy"},"content":"        setTask(toUntagEmployee, untaggedEmployeeTask);","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"dannytayjy"},"content":"        return untaggedEmployeeTask;","lastModifiedDate":"2022-03-30"},{"lineNumber":179,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":180,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":181,"author":{"gitId":"dannytayjy"},"content":"    private Task duplicateTask(Task task) {","lastModifiedDate":"2022-03-30"},{"lineNumber":182,"author":{"gitId":"dannytayjy"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"dannytayjy"},"content":"            return new Todo((Todo) task);","lastModifiedDate":"2022-03-30"},{"lineNumber":184,"author":{"gitId":"dannytayjy"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2022-03-30"},{"lineNumber":185,"author":{"gitId":"dannytayjy"},"content":"            return new Deadline((Deadline) task);","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"dannytayjy"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"dannytayjy"},"content":"            return new Event((Event) task);","lastModifiedDate":"2022-03-30"},{"lineNumber":188,"author":{"gitId":"dannytayjy"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"dannytayjy"},"content":"            // The else statement should not be reached since there are","lastModifiedDate":"2022-03-30"},{"lineNumber":190,"author":{"gitId":"dannytayjy"},"content":"            // only three types of tasks, i.e., todo, deadline and event","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"dannytayjy"},"content":"            throw new InvalidTaskTypeException();","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":196,"author":{"gitId":"ChanWeiJie"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":197,"author":{"gitId":"ChanWeiJie"},"content":"     * The task must exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"ChanWeiJie"},"content":"     * @param toRemove the task to be removed.","lastModifiedDate":"2022-04-07"},{"lineNumber":199,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":200,"author":{"gitId":"ChanWeiJie"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2022-03-10"},{"lineNumber":201,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-10"},{"lineNumber":202,"author":{"gitId":"ChanWeiJie"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":203,"author":{"gitId":"ChanWeiJie"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-03-10"},{"lineNumber":204,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":205,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"ChanWeiJie"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-10"},{"lineNumber":209,"author":{"gitId":"ChanWeiJie"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-10"},{"lineNumber":210,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"ChanWeiJie"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"ChanWeiJie"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-03-10"},{"lineNumber":215,"author":{"gitId":"ChanWeiJie"},"content":"     * @param tasks the content of the new list.","lastModifiedDate":"2022-04-07"},{"lineNumber":216,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":217,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-03-10"},{"lineNumber":218,"author":{"gitId":"ChanWeiJie"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2022-03-10"},{"lineNumber":219,"author":{"gitId":"ChanWeiJie"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":220,"author":{"gitId":"ChanWeiJie"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-03-10"},{"lineNumber":221,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":222,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":223,"author":{"gitId":"ChanWeiJie"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2022-03-10"},{"lineNumber":224,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":225,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":226,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":227,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":228,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the unmodifiable task list.","lastModifiedDate":"2022-04-07"},{"lineNumber":229,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":230,"author":{"gitId":"ChanWeiJie"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":231,"author":{"gitId":"ChanWeiJie"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":232,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":233,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":234,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":235,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":236,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":237,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":238,"author":{"gitId":"ChanWeiJie"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-03-10"},{"lineNumber":239,"author":{"gitId":"ChanWeiJie"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-10"},{"lineNumber":240,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":241,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":242,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":243,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":244,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":245,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":246,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":247,"author":{"gitId":"ChanWeiJie"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":248,"author":{"gitId":"ChanWeiJie"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":249,"author":{"gitId":"ChanWeiJie"},"content":"                \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2022-03-10"},{"lineNumber":250,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":251,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":252,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":253,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":254,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":255,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":256,"author":{"gitId":"ChanWeiJie"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":257,"author":{"gitId":"ChanWeiJie"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":258,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":259,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":260,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":261,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns true if {@code persons} contains only unique Task.","lastModifiedDate":"2022-03-10"},{"lineNumber":262,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":263,"author":{"gitId":"ChanWeiJie"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-03-10"},{"lineNumber":264,"author":{"gitId":"ChanWeiJie"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2022-03-10"},{"lineNumber":265,"author":{"gitId":"ChanWeiJie"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2022-03-10"},{"lineNumber":266,"author":{"gitId":"ChanWeiJie"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2022-03-10"},{"lineNumber":267,"author":{"gitId":"ChanWeiJie"},"content":"                    return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":268,"author":{"gitId":"ChanWeiJie"},"content":"                }","lastModifiedDate":"2022-03-10"},{"lineNumber":269,"author":{"gitId":"ChanWeiJie"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":270,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":271,"author":{"gitId":"ChanWeiJie"},"content":"        return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":272,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":273,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"dannytayjy":104,"ChanWeiJie":169}},{"path":"src/main/java/manageezpz/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task.exceptions;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":" * Signals that the operation will result in duplicate Task (Task are considered duplicates if they have the same","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":" * description).","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"        super(\"Operation would result in duplicate Task\");","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"ChanWeiJie":11}},{"path":"src/main/java/manageezpz/model/task/exceptions/InvalidTaskTypeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model.task.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":" * Signals that the operation is unable to read the type of a Task.","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"public class InvalidTaskTypeException extends RuntimeException {","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"dannytayjy":4,"ChanWeiJie":3}},{"path":"src/main/java/manageezpz/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task.exceptions;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":" * Signals that the operation is unable to find the specified Task.","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"public class TaskNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"ChanWeiJie":7}},{"path":"src/main/java/manageezpz/model/tasktag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.tasktag;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":" * Represents a Tag in the Task List.","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"     * Check if a given string is a valid tag name.","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"     * @param test the tag name to be checked.","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true if the tag is valid, false otherwise.","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"ChanWeiJie":12,"-":50}},{"path":"src/main/java/manageezpz/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model.util;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.AddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Date;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Deadline;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Event;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Time;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"), 0),","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"), 0),","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"), 0),","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"), 0),","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"), 0),","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"), 0),","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"            new Person(new Name(\"Peter Tan\"), new Phone(\"95214839\"), new Email(\"petertan@example.com\"), 0),","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"            new Person(new Name(\"Jack Koh\"), new Phone(\"86201478\"), new Email(\"jackkoh@example.com\"), 0),","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"            new Person(new Name(\"Zachery Lam\"), new Phone(\"87412058\"), new Email(\"zacherylam@example.com\"), 0),","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"            new Person(new Name(\"Jason Lim\"), new Phone(\"90321458\"), new Email(\"jasonlim@example.com\"), 0),","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"        return new Task[] {","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"            new Todo(new Description(\"Review Monthly Finance KPI\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"            new Deadline(new Description(\"Finish Client Proposal\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"                    new Date(\"2022-03-15\"), new Time(\"1800\")),","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"            new Event(new Description(\"Meeting with Client\"), new Date(\"2022-03-15\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"                    new Time(\"1300\"), new Time(\"1400\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"            new Todo(new Description(\"Call Representative of Company XYZ\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"            new Deadline(new Description(\"Submit Proposal\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"                    new Date(\"2022-04-08\"), new Time(\"1800\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"            new Event(new Description(\"Meeting with HR\"), new Date(\"2022-03-16\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"                    new Time(\"1400\"), new Time(\"1500\")),","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"            new Deadline(new Description(\"Submit Sales Report\"),","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"                    new Date(\"2022-06-15\"), new Time(\"1800\")),","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"            new Deadline(new Description(\"Payout Employees\"),","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"                    new Date(\"2022-04-30\"), new Time(\"1900\")),","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"            new Event(new Description(\"Working lunch with Client\"), new Date(\"2022-03-17\"),","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"                    new Time(\"1200\"), new Time(\"1400\")),","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"            new Todo(new Description(\"Review IT Report\")),","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"        };","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"            sampleAb.addTask(sampleTask);","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"alfredkohhh":20,"dannytayjy":15,"ChanWeiJie":13,"-":19}},{"path":"src/main/java/manageezpz/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":" * Represents a storage for {@link manageezpz.model.AddressBook}.","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"     * @return Path representation of the data file.","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"     * @return {@code Optional.empty()} if storage file is not found","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"alfredkohhh":2,"dannytayjy":4,"-":40}},{"path":"src/main/java/manageezpz/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"    private final int numOfTask;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"numOfTask\") int numOfTask) {","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"        this.numOfTask \u003d numOfTask;","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"        numOfTask \u003d source.getNumOfTasks();","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"        if (numOfTask \u003c 0) {","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Person.class.getSimpleName()));","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"        return new Person(modelName, modelPhone, modelEmail, numOfTask);","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"alfredkohhh":7,"dannytayjy":7,"-":67}},{"path":"src/main/java/manageezpz/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.storage;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Date;","lastModifiedDate":"2022-04-05"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Deadline;","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Event;","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Priority;","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Time;","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.tasktag.Tag;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_DESCRIPTION_MESSAGE_FORMAT \u003d \"Task\u0027s description is invalid!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"    public static final String NULL_DESCRIPTION_MESSAGE_FORMAT \u003d \"Task\u0027s description cannot be null!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INCORRECT_TYPE_MESSAGE_FORMAT \u003d \"Task\u0027s type is incorrect!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"    public static final String NULL_TYPE_MESSAGE_FORMAT \u003d \"Task\u0027s type cannot be null!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"    public static final String NULL_STATUS_MESSAGE_FORMAT \u003d \"Task\u0027s status cannot be null!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_STATUS_MESSAGE_FORMAT \u003d \"Task\u0027s status is invalid!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"    public static final String NULL_TAG_MESSAGE_FORMAT \u003d \"Task\u0027s tag cannot be null!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"    public static final String NULL_PRIORITY_MESSAGE_FORMAT \u003d \"Task\u0027s priority cannot be null!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_PRIORITY_MESSAGE_FORMAT \u003d \"Task\u0027s priority is invalid!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"    public static final String NULL_DEADLINE_DATE_MESSAGE_FORMAT \u003d \"Deadline Task\u0027s date cannot be null!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_DEADLINE_DATE_MESSAGE_FORMAT \u003d \"Deadline Task\u0027s date is invalid!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"    public static final String NULL_DEADLINE_TIME_MESSAGE_FORMAT \u003d \"Deadline Task\u0027s time cannot be null!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_DEADLINE_TIME_MESSAGE_FORMAT \u003d \"Deadline Task\u0027s time is invalid!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"    public static final String NULL_EVENT_DATE_MESSAGE_FORMAT \u003d \"Event Task\u0027s date cannot be null!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_EVENT_DATE_MESSAGE_FORMAT \u003d \"Event Task\u0027s date is invalid!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"    public static final String NULL_EVENT_START_TIME_MESSAGE_FORMAT \u003d \"Event Task\u0027s start time cannot be null!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_EVENT_START_TIME_MESSAGE_FORMAT \u003d \"Event Task\u0027s start time is invalid!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"    public static final String NULL_EVENT_END_TIME_MESSAGE_FORMAT \u003d \"Event Task\u0027s end time cannot be null!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_EVENT_END_TIME_MESSAGE_FORMAT \u003d \"Event Task\u0027s end time is invalid!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"    private final String description;","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"    private final String type;","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"    private final String date;","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"    private String deadlineTime;","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"    private String eventStartTime;","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"    private String eventEndTime;","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"    private String status;","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"    private String tag;","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"    private String priority;","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given person details.","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"    public JsonAdaptedTask(@JsonProperty(\"type\") String type, @JsonProperty(\"status\") String status,","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"                           @JsonProperty(\"description\") String description,","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"                           @JsonProperty(\"date\") String date, @JsonProperty(\"deadlineTime\") String deadlineTime,","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"                           @JsonProperty(\"eventStartTime\") String eventStartTime,","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"                           @JsonProperty(\"eventEndTime\") String eventEndTime,","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"                           @JsonProperty(\"tag\") String tag,","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"                           @JsonProperty(\"priority\") String priority) {","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-04-08"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"        this.eventStartTime \u003d eventStartTime;","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"        this.eventEndTime \u003d eventEndTime;","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"        description \u003d source.getDescription().toString(); // Generally for all tasks","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"        type \u003d source.getType(); // Generally for all tasks","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"        status \u003d source.getStatusIcon(); // Generally for all tasks","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"        this.priority \u003d source.getPriority().name(); // Generally for all tasks","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"        if (source instanceof Deadline) {","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"            this.date \u003d ((Deadline) source).getDate().getDate(); // For Deadline","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"            this.deadlineTime \u003d ((Deadline) source).getTime().getTime(); // For Deadline","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"        } else if ((source instanceof Event)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"            this.date \u003d ((Event) source).getDate().getDate(); // For Event","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"            this.eventStartTime \u003d ((Event) source).getStartTime().getTime(); // For Event","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"alfredkohhh"},"content":"            this.eventEndTime \u003d ((Event) source).getEndTime().getTime(); // For Event","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"alfredkohhh"},"content":"        } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"alfredkohhh"},"content":"            this.date \u003d \"\";","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"alfredkohhh"},"content":"            this.deadlineTime \u003d \"\";","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"alfredkohhh"},"content":"            this.eventStartTime \u003d \"\";","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"alfredkohhh"},"content":"            this.eventEndTime \u003d \"\";","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"alfredkohhh"},"content":"        List\u003cPerson\u003e personList \u003d source.getAssignees();","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"alfredkohhh"},"content":"        StringJoiner joiner \u003d new StringJoiner(\", \");","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"alfredkohhh"},"content":"        personList.forEach(item -\u003e joiner.add(item.getName().toString()));","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"alfredkohhh"},"content":"        this.tag \u003d joiner.toString();","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"alfredkohhh"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"alfredkohhh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"alfredkohhh"},"content":"    public Task toModelType(ObservableList\u003cPerson\u003e persons) throws IllegalValueException {","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"alfredkohhh"},"content":"        handleGeneralNullChecks(description, type, status, tag, priority);","lastModifiedDate":"2022-04-05"},{"lineNumber":116,"author":{"gitId":"alfredkohhh"},"content":"        Description desc \u003d new Description(description);","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"alfredkohhh"},"content":"        boolean isDone \u003d status.equals(\"X\");","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"alfredkohhh"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"alfredkohhh"},"content":"            Todo newTodo \u003d new Todo(desc);","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"alfredkohhh"},"content":"            handleLoad(newTodo, isDone, priority, tag, persons);","lastModifiedDate":"2022-04-05"},{"lineNumber":121,"author":{"gitId":"alfredkohhh"},"content":"            return newTodo;","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"alfredkohhh"},"content":"        } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"alfredkohhh"},"content":"            handleDeadlineNullChecks(date, deadlineTime);","lastModifiedDate":"2022-04-05"},{"lineNumber":124,"author":{"gitId":"alfredkohhh"},"content":"            Date currDeadlineDate \u003d new Date(date);","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"alfredkohhh"},"content":"            Time currDeadlineTime \u003d new Time(deadlineTime);","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"alfredkohhh"},"content":"            Deadline newDeadline \u003d new Deadline(desc, currDeadlineDate, currDeadlineTime);","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"alfredkohhh"},"content":"            handleLoad(newDeadline, isDone, priority, tag, persons);","lastModifiedDate":"2022-04-05"},{"lineNumber":128,"author":{"gitId":"alfredkohhh"},"content":"            return newDeadline;","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"alfredkohhh"},"content":"        } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"alfredkohhh"},"content":"            handleEventNullChecks(date, eventStartTime, eventEndTime);","lastModifiedDate":"2022-04-05"},{"lineNumber":131,"author":{"gitId":"alfredkohhh"},"content":"            Date currEventDate \u003d new Date(date);","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"alfredkohhh"},"content":"            Time currEventStartTime \u003d new Time(eventStartTime);","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"alfredkohhh"},"content":"            Time currEventEndTime \u003d new Time(eventEndTime);","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"alfredkohhh"},"content":"            Event newEvent \u003d new Event(desc, currEventDate, currEventStartTime, currEventEndTime);","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"alfredkohhh"},"content":"            handleLoad(newEvent, isDone, priority, tag, persons);","lastModifiedDate":"2022-04-05"},{"lineNumber":136,"author":{"gitId":"alfredkohhh"},"content":"            return newEvent;","lastModifiedDate":"2022-04-05"},{"lineNumber":137,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":138,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":139,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":140,"author":{"gitId":"alfredkohhh"},"content":"    public void handleLoad(Task task, boolean isDone, String priority,","lastModifiedDate":"2022-04-05"},{"lineNumber":141,"author":{"gitId":"alfredkohhh"},"content":"                           String tag, ObservableList\u003cPerson\u003e persons) {","lastModifiedDate":"2022-04-05"},{"lineNumber":142,"author":{"gitId":"alfredkohhh"},"content":"        if (isDone) {","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"alfredkohhh"},"content":"            task.setTaskDone();","lastModifiedDate":"2022-04-05"},{"lineNumber":144,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"alfredkohhh"},"content":"        if (priority !\u003d null \u0026\u0026 !priority.isEmpty()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"alfredkohhh"},"content":"            task.setPriority(priority);","lastModifiedDate":"2022-04-05"},{"lineNumber":147,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"alfredkohhh"},"content":"        String[] tagList \u003d tag.split(\",\");","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"alfredkohhh"},"content":"        for (int i \u003d 0; i \u003c tagList.length; i++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":150,"author":{"gitId":"alfredkohhh"},"content":"            String currentTag \u003d tagList[i].trim();","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"alfredkohhh"},"content":"            for (int j \u003d 0; j \u003c persons.size(); j++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":152,"author":{"gitId":"alfredkohhh"},"content":"                Person matchedPerson;","lastModifiedDate":"2022-04-05"},{"lineNumber":153,"author":{"gitId":"alfredkohhh"},"content":"                if (persons.get(j).getName().toString().equals(currentTag)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":154,"author":{"gitId":"alfredkohhh"},"content":"                    matchedPerson \u003d persons.get(j);","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"alfredkohhh"},"content":"                    task.addAssignees(matchedPerson);","lastModifiedDate":"2022-04-05"},{"lineNumber":156,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":158,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":159,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":160,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":161,"author":{"gitId":"alfredkohhh"},"content":"    public void handleGeneralNullChecks(String description, String type, String status, String tag, String priority)","lastModifiedDate":"2022-04-05"},{"lineNumber":162,"author":{"gitId":"alfredkohhh"},"content":"            throws IllegalValueException {","lastModifiedDate":"2022-04-05"},{"lineNumber":163,"author":{"gitId":"alfredkohhh"},"content":"        handleDescriptionChecks(description);","lastModifiedDate":"2022-04-09"},{"lineNumber":164,"author":{"gitId":"alfredkohhh"},"content":"        handleTypeChecks(type);","lastModifiedDate":"2022-04-09"},{"lineNumber":165,"author":{"gitId":"alfredkohhh"},"content":"        handleStatusChecks(status);","lastModifiedDate":"2022-04-09"},{"lineNumber":166,"author":{"gitId":"alfredkohhh"},"content":"        handleTagChecks(tag);","lastModifiedDate":"2022-04-09"},{"lineNumber":167,"author":{"gitId":"alfredkohhh"},"content":"        handlePriorityChecks(priority);","lastModifiedDate":"2022-04-09"},{"lineNumber":168,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":169,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":170,"author":{"gitId":"alfredkohhh"},"content":"    public void handleDescriptionChecks(String description) throws IllegalValueException {","lastModifiedDate":"2022-04-09"},{"lineNumber":171,"author":{"gitId":"alfredkohhh"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2022-04-05"},{"lineNumber":172,"author":{"gitId":"alfredkohhh"},"content":"            throw new IllegalValueException(String.format(NULL_DESCRIPTION_MESSAGE_FORMAT,","lastModifiedDate":"2022-04-08"},{"lineNumber":173,"author":{"gitId":"alfredkohhh"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2022-04-05"},{"lineNumber":174,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":175,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":176,"author":{"gitId":"alfredkohhh"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2022-04-08"},{"lineNumber":177,"author":{"gitId":"alfredkohhh"},"content":"            throw new IllegalValueException(String.format(INVALID_DESCRIPTION_MESSAGE_FORMAT,","lastModifiedDate":"2022-04-08"},{"lineNumber":178,"author":{"gitId":"alfredkohhh"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2022-04-08"},{"lineNumber":179,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":180,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":181,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":182,"author":{"gitId":"alfredkohhh"},"content":"    public void handleTypeChecks(String type) throws IllegalValueException {","lastModifiedDate":"2022-04-09"},{"lineNumber":183,"author":{"gitId":"alfredkohhh"},"content":"        if (type \u003d\u003d null) {","lastModifiedDate":"2022-04-05"},{"lineNumber":184,"author":{"gitId":"alfredkohhh"},"content":"            throw new IllegalValueException(String.format(NULL_TYPE_MESSAGE_FORMAT, Task.class.getSimpleName()));","lastModifiedDate":"2022-04-08"},{"lineNumber":185,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":186,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":187,"author":{"gitId":"alfredkohhh"},"content":"        if (!(type.equals(\"todo\") || type.equals(\"deadline\") || type.equals(\"event\"))) {","lastModifiedDate":"2022-04-08"},{"lineNumber":188,"author":{"gitId":"alfredkohhh"},"content":"            throw new IllegalValueException(String.format(INCORRECT_TYPE_MESSAGE_FORMAT, Task.class.getSimpleName()));","lastModifiedDate":"2022-04-08"},{"lineNumber":189,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":190,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":191,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":192,"author":{"gitId":"alfredkohhh"},"content":"    public void handleStatusChecks(String status) throws IllegalValueException {","lastModifiedDate":"2022-04-09"},{"lineNumber":193,"author":{"gitId":"alfredkohhh"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2022-04-05"},{"lineNumber":194,"author":{"gitId":"alfredkohhh"},"content":"            throw new IllegalValueException(String.format(NULL_STATUS_MESSAGE_FORMAT, Task.class.getSimpleName()));","lastModifiedDate":"2022-04-08"},{"lineNumber":195,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":196,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":197,"author":{"gitId":"alfredkohhh"},"content":"        if (!(status.equals(\" \") || status.equals(\"X\"))) {","lastModifiedDate":"2022-04-08"},{"lineNumber":198,"author":{"gitId":"alfredkohhh"},"content":"            throw new IllegalValueException(String.format(INVALID_STATUS_MESSAGE_FORMAT, Task.class.getSimpleName()));","lastModifiedDate":"2022-04-08"},{"lineNumber":199,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":200,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":201,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":202,"author":{"gitId":"alfredkohhh"},"content":"    public void handleTagChecks(String tag) throws IllegalValueException {","lastModifiedDate":"2022-04-09"},{"lineNumber":203,"author":{"gitId":"alfredkohhh"},"content":"        if (tag \u003d\u003d null) {","lastModifiedDate":"2022-04-05"},{"lineNumber":204,"author":{"gitId":"alfredkohhh"},"content":"            throw new IllegalValueException(String.format(NULL_TAG_MESSAGE_FORMAT, Tag.class.getSimpleName()));","lastModifiedDate":"2022-04-08"},{"lineNumber":205,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":206,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":207,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":208,"author":{"gitId":"alfredkohhh"},"content":"    public void handlePriorityChecks(String priority) throws IllegalValueException {","lastModifiedDate":"2022-04-09"},{"lineNumber":209,"author":{"gitId":"alfredkohhh"},"content":"        if (priority \u003d\u003d null) {","lastModifiedDate":"2022-04-05"},{"lineNumber":210,"author":{"gitId":"alfredkohhh"},"content":"            throw new IllegalValueException(String.format(NULL_PRIORITY_MESSAGE_FORMAT,","lastModifiedDate":"2022-04-08"},{"lineNumber":211,"author":{"gitId":"alfredkohhh"},"content":"                    Priority.class.getSimpleName()));","lastModifiedDate":"2022-04-08"},{"lineNumber":212,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":213,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":214,"author":{"gitId":"alfredkohhh"},"content":"        if (!(priority.equals(\"NONE\") || priority.equals(\"LOW\")","lastModifiedDate":"2022-04-08"},{"lineNumber":215,"author":{"gitId":"alfredkohhh"},"content":"                || priority.equals(\"MEDIUM\") || priority.equals(\"HIGH\"))) {","lastModifiedDate":"2022-04-08"},{"lineNumber":216,"author":{"gitId":"alfredkohhh"},"content":"            throw new IllegalValueException(String.format(INVALID_PRIORITY_MESSAGE_FORMAT,","lastModifiedDate":"2022-04-08"},{"lineNumber":217,"author":{"gitId":"alfredkohhh"},"content":"                    Priority.class.getSimpleName()));","lastModifiedDate":"2022-04-05"},{"lineNumber":218,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":219,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":220,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":221,"author":{"gitId":"alfredkohhh"},"content":"    public void handleDeadlineNullChecks(String date, String deadlineTime) throws IllegalValueException {","lastModifiedDate":"2022-04-05"},{"lineNumber":222,"author":{"gitId":"alfredkohhh"},"content":"        handleDateChecks(date, type);","lastModifiedDate":"2022-04-09"},{"lineNumber":223,"author":{"gitId":"alfredkohhh"},"content":"        handleTimeChecks(deadlineTime, type, \"deadlineTime\");","lastModifiedDate":"2022-04-09"},{"lineNumber":224,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":225,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":226,"author":{"gitId":"alfredkohhh"},"content":"    public void handleEventNullChecks(String date, String eventStartTime, String eventEndTime)","lastModifiedDate":"2022-04-09"},{"lineNumber":227,"author":{"gitId":"alfredkohhh"},"content":"            throws IllegalValueException {","lastModifiedDate":"2022-04-09"},{"lineNumber":228,"author":{"gitId":"alfredkohhh"},"content":"        handleDateChecks(date, type);","lastModifiedDate":"2022-04-09"},{"lineNumber":229,"author":{"gitId":"alfredkohhh"},"content":"        handleTimeChecks(eventStartTime, type, \"eventStartTime\");","lastModifiedDate":"2022-04-09"},{"lineNumber":230,"author":{"gitId":"alfredkohhh"},"content":"        handleTimeChecks(eventEndTime, type, \"eventEndTime\");","lastModifiedDate":"2022-04-09"},{"lineNumber":231,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":232,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":233,"author":{"gitId":"alfredkohhh"},"content":"    public void handleDateChecks(String date, String type) throws IllegalValueException {","lastModifiedDate":"2022-04-09"},{"lineNumber":234,"author":{"gitId":"alfredkohhh"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-04-05"},{"lineNumber":235,"author":{"gitId":"alfredkohhh"},"content":"            if (type.equals(\"deadline\")) {","lastModifiedDate":"2022-04-09"},{"lineNumber":236,"author":{"gitId":"alfredkohhh"},"content":"                throw new IllegalValueException(String.format(NULL_DEADLINE_DATE_MESSAGE_FORMAT,","lastModifiedDate":"2022-04-08"},{"lineNumber":237,"author":{"gitId":"alfredkohhh"},"content":"                        Date.class.getSimpleName()));","lastModifiedDate":"2022-04-08"},{"lineNumber":238,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-04-08"},{"lineNumber":239,"author":{"gitId":"alfredkohhh"},"content":"            if (type.equals(\"event\")) {","lastModifiedDate":"2022-04-09"},{"lineNumber":240,"author":{"gitId":"alfredkohhh"},"content":"                throw new IllegalValueException(String.format(NULL_EVENT_DATE_MESSAGE_FORMAT,","lastModifiedDate":"2022-04-09"},{"lineNumber":241,"author":{"gitId":"alfredkohhh"},"content":"                        Date.class.getSimpleName()));","lastModifiedDate":"2022-04-09"},{"lineNumber":242,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-04-09"},{"lineNumber":243,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":244,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":245,"author":{"gitId":"alfredkohhh"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2022-04-08"},{"lineNumber":246,"author":{"gitId":"alfredkohhh"},"content":"            if (type.equals(\"deadline\")) {","lastModifiedDate":"2022-04-09"},{"lineNumber":247,"author":{"gitId":"alfredkohhh"},"content":"                throw new IllegalValueException(String.format(INVALID_DEADLINE_DATE_MESSAGE_FORMAT,","lastModifiedDate":"2022-04-08"},{"lineNumber":248,"author":{"gitId":"alfredkohhh"},"content":"                        Date.class.getSimpleName()));","lastModifiedDate":"2022-04-08"},{"lineNumber":249,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-04-05"},{"lineNumber":250,"author":{"gitId":"alfredkohhh"},"content":"            if (type.equals(\"event\")) {","lastModifiedDate":"2022-04-09"},{"lineNumber":251,"author":{"gitId":"alfredkohhh"},"content":"                throw new IllegalValueException(String.format(INVALID_EVENT_DATE_MESSAGE_FORMAT,","lastModifiedDate":"2022-04-09"},{"lineNumber":252,"author":{"gitId":"alfredkohhh"},"content":"                        Date.class.getSimpleName()));","lastModifiedDate":"2022-04-09"},{"lineNumber":253,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-04-09"},{"lineNumber":254,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":255,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":256,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":257,"author":{"gitId":"alfredkohhh"},"content":"    public void handleTimeChecks(String time, String type, String timeIdentifier) throws IllegalValueException {","lastModifiedDate":"2022-04-09"},{"lineNumber":258,"author":{"gitId":"alfredkohhh"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2022-04-09"},{"lineNumber":259,"author":{"gitId":"alfredkohhh"},"content":"            if (type.equals(\"deadline\")) {","lastModifiedDate":"2022-04-09"},{"lineNumber":260,"author":{"gitId":"alfredkohhh"},"content":"                throw new IllegalValueException(String.format(NULL_DEADLINE_TIME_MESSAGE_FORMAT,","lastModifiedDate":"2022-04-08"},{"lineNumber":261,"author":{"gitId":"alfredkohhh"},"content":"                        Date.class.getSimpleName()));","lastModifiedDate":"2022-04-09"},{"lineNumber":262,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-04-09"},{"lineNumber":263,"author":{"gitId":"alfredkohhh"},"content":"            if (type.equals(\"event\")) {","lastModifiedDate":"2022-04-09"},{"lineNumber":264,"author":{"gitId":"alfredkohhh"},"content":"                handleEventTimeNullIdentifier(timeIdentifier);","lastModifiedDate":"2022-04-09"},{"lineNumber":265,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-04-08"},{"lineNumber":266,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":267,"author":{"gitId":"alfredkohhh"},"content":"        if (!Time.isValidTime(time)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":268,"author":{"gitId":"alfredkohhh"},"content":"            if (type.equals(\"deadline\")) {","lastModifiedDate":"2022-04-09"},{"lineNumber":269,"author":{"gitId":"alfredkohhh"},"content":"                throw new IllegalValueException(String.format(INVALID_DEADLINE_TIME_MESSAGE_FORMAT,","lastModifiedDate":"2022-04-08"},{"lineNumber":270,"author":{"gitId":"alfredkohhh"},"content":"                        Time.class.getSimpleName()));","lastModifiedDate":"2022-04-08"},{"lineNumber":271,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-04-05"},{"lineNumber":272,"author":{"gitId":"alfredkohhh"},"content":"            if (type.equals(\"event\")) {","lastModifiedDate":"2022-04-09"},{"lineNumber":273,"author":{"gitId":"alfredkohhh"},"content":"                handleEventTimeInvalidIdentifier(timeIdentifier);","lastModifiedDate":"2022-04-09"},{"lineNumber":274,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-04-05"},{"lineNumber":275,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":276,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":277,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":278,"author":{"gitId":"alfredkohhh"},"content":"    public void handleEventTimeNullIdentifier(String timeIdentifier) throws IllegalValueException {","lastModifiedDate":"2022-04-09"},{"lineNumber":279,"author":{"gitId":"alfredkohhh"},"content":"        if (timeIdentifier.equals(\"eventStartTime\")) {","lastModifiedDate":"2022-04-09"},{"lineNumber":280,"author":{"gitId":"alfredkohhh"},"content":"            throw new IllegalValueException(String.format(NULL_EVENT_START_TIME_MESSAGE_FORMAT,","lastModifiedDate":"2022-04-08"},{"lineNumber":281,"author":{"gitId":"alfredkohhh"},"content":"                    Time.class.getSimpleName()));","lastModifiedDate":"2022-04-08"},{"lineNumber":282,"author":{"gitId":"alfredkohhh"},"content":"        } else if (timeIdentifier.equals(\"eventEndTime\")) {","lastModifiedDate":"2022-04-09"},{"lineNumber":283,"author":{"gitId":"alfredkohhh"},"content":"            throw new IllegalValueException(String.format(NULL_EVENT_END_TIME_MESSAGE_FORMAT,","lastModifiedDate":"2022-04-08"},{"lineNumber":284,"author":{"gitId":"alfredkohhh"},"content":"                    Time.class.getSimpleName()));","lastModifiedDate":"2022-04-08"},{"lineNumber":285,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":286,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":287,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":288,"author":{"gitId":"alfredkohhh"},"content":"    public void handleEventTimeInvalidIdentifier(String timeIdentifier) throws IllegalValueException {","lastModifiedDate":"2022-04-09"},{"lineNumber":289,"author":{"gitId":"alfredkohhh"},"content":"        if (timeIdentifier.equals(\"eventStartTime\")) {","lastModifiedDate":"2022-04-09"},{"lineNumber":290,"author":{"gitId":"alfredkohhh"},"content":"            throw new IllegalValueException(String.format(INVALID_EVENT_START_TIME_MESSAGE_FORMAT,","lastModifiedDate":"2022-04-09"},{"lineNumber":291,"author":{"gitId":"alfredkohhh"},"content":"                    Time.class.getSimpleName()));","lastModifiedDate":"2022-04-09"},{"lineNumber":292,"author":{"gitId":"alfredkohhh"},"content":"        } else if (timeIdentifier.equals(\"eventEndTime\")) {","lastModifiedDate":"2022-04-09"},{"lineNumber":293,"author":{"gitId":"alfredkohhh"},"content":"            throw new IllegalValueException(String.format(INVALID_EVENT_END_TIME_MESSAGE_FORMAT,","lastModifiedDate":"2022-04-08"},{"lineNumber":294,"author":{"gitId":"alfredkohhh"},"content":"                    Time.class.getSimpleName()));","lastModifiedDate":"2022-04-08"},{"lineNumber":295,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":296,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":297,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"alfredkohhh":297}},{"path":"src/main/java/manageezpz/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.LogsCenter;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.util.FileUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.util.JsonUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"dannytayjy":7,"-":73}},{"path":"src/main/java/manageezpz/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.AddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"    public static final String MESSAGE_DUPLICATE_TASKS \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"    public static final String MESSAGE_INVALID_JSON_VALUE \u003d \"Fields in JSON files are incorrect.\";","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"                                       @JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"        HashMap\u003cPerson, Integer\u003e hm \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"            hm.put(person, 0);","lastModifiedDate":"2022-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"            Task task \u003d jsonAdaptedTask.toModelType(addressBook.getPersonList());","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"            if (addressBook.hasTask(task)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASKS);","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"            addressBook.addTask(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"        handleNumOfTask(addressBook.getTaskList(), addressBook.getPersonList(), hm);","lastModifiedDate":"2022-04-05"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"    public void handleNumOfTask(List\u003cTask\u003e taskList, List\u003cPerson\u003e personList, HashMap\u003cPerson, Integer\u003e hm)","lastModifiedDate":"2022-04-05"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"            throws IllegalValueException {","lastModifiedDate":"2022-04-05"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-04-05"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"            List\u003cPerson\u003e assigneesList \u003d task.getAssignees();","lastModifiedDate":"2022-04-05"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"            for (int i \u003d 0; i \u003c assigneesList.size(); i++) {","lastModifiedDate":"2022-04-05"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"                Person currentPerson \u003d assigneesList.get(i);","lastModifiedDate":"2022-04-05"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"                if (hm.containsKey(currentPerson)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"                    hm.put(currentPerson, hm.get(currentPerson) + 1);","lastModifiedDate":"2022-04-05"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-04-05"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-04-05"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"        for (Person person : personList) {","lastModifiedDate":"2022-04-05"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"            int numOfTask \u003d hm.get(person);","lastModifiedDate":"2022-04-05"},{"lineNumber":96,"author":{"gitId":"alfredkohhh"},"content":"            if (numOfTask !\u003d person.getNumOfTasks()) {","lastModifiedDate":"2022-04-05"},{"lineNumber":97,"author":{"gitId":"alfredkohhh"},"content":"                throw new IllegalValueException(MESSAGE_INVALID_JSON_VALUE);","lastModifiedDate":"2022-04-05"},{"lineNumber":98,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-04-05"},{"lineNumber":99,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":100,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":101,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"alfredkohhh":43,"dannytayjy":5,"-":53}},{"path":"src/main/java/manageezpz/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.util.JsonUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"     * @return {@code Optional.empty()} if User preferences file is not found.","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"alfredkohhh":1,"dannytayjy":5,"-":42}},{"path":"src/main/java/manageezpz/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"dannytayjy":5,"-":27}},{"path":"src/main/java/manageezpz/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.LogsCenter;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"     * @param addressBookStorage {@code AddressBookStorage} object to store your address book.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"     * @param userPrefsStorage {@code UserPrefStorage} object to store your user preferences.","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alfredkohhh":2,"dannytayjy":6,"-":72}},{"path":"src/main/java/manageezpz/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":" * Represents a storage for {@link manageezpz.model.UserPrefs}.","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"     * @return Path representation of user preference file path.","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"     * @return {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"     * Saves the given {@link manageezpz.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"alfredkohhh":3,"dannytayjy":6,"-":29}},{"path":"src/main/java/manageezpz/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.ui;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.CommandResult;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"         * @see manageezpz.logic.Logic#execute(String)","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"dannytayjy":5,"-":80}},{"path":"src/main/java/manageezpz/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.ui;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.LogsCenter;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"    public static final String USERGUIDE_TITLE \u003d \"User Guide\";","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103-f11-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"    public static final String COPY_CLIPBOARD_FEATURE_TITLE \u003d \"About Copying Employee Details to Computer Clipboard\";","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"    public static final String COPY_CLIPBOARD_FEATURE_CONTENT \u003d \"ManageEZPZ allows the user to copy an employee\u0027s \"","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"            + \"name, phone number or email to the Computer Clipboard. To copy any of the details, \"","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"            + \"use the mouse cursor and right-click on the employee in the employees list.\";","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"    private Label userGuideTitle;","lastModifiedDate":"2022-04-05"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"    private Label userGuideUrl;","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"    private Label copyClipboardFeatureTitle;","lastModifiedDate":"2022-04-05"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-04-05"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"    private Label copyClipboardFeatureContent;","lastModifiedDate":"2022-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"        userGuideTitle.setText(USERGUIDE_TITLE);","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"        userGuideUrl.setText(USERGUIDE_URL);","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"        copyClipboardFeatureTitle.setText(COPY_CLIPBOARD_FEATURE_TITLE);","lastModifiedDate":"2022-04-05"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"        copyClipboardFeatureContent.setText(COPY_CLIPBOARD_FEATURE_CONTENT);","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"dannytayjy":23,"-":96}},{"path":"src/main/java/manageezpz/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.ui;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.GuiSettings;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.LogsCenter;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.Logic;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.CommandResult;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"dannytayjy"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"dannytayjy"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"dannytayjy"},"content":"    public TaskListPanel getTaskListPanel() {","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"dannytayjy"},"content":"        return taskListPanel;","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"dannytayjy"},"content":"     * @see manageezpz.logic.Logic#execute(String)","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"dannytayjy":19,"-":189}},{"path":"src/main/java/manageezpz/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.ui;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"    private Label numOfTasks;","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"        numOfTasks.setText(person.getNumOfTasks() + \" assigned tasks\");","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"dannytayjy":4,"-":65}},{"path":"src/main/java/manageezpz/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.ui;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import javafx.scene.control.ContextMenu;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.LogsCenter;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"     * Handles the mouse click event when user right-clicks on an employee in the list.","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"    public void handleMouseClick(MouseEvent arg) {","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"        final ClipboardContent content \u003d new ClipboardContent();","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"        // Creating a context menu","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"        ContextMenu contextMenu \u003d new ContextMenu();","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"        // Creating the menu items for the context menu","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"        MenuItem copyNameItem \u003d new MenuItem(\"Copy Name\");","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"        MenuItem copyPhoneItem \u003d new MenuItem(\"Copy Phone Number\");","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"        MenuItem copyEmailItem \u003d new MenuItem(\"Copy Email\");","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"        contextMenu.getItems().addAll(copyNameItem, copyPhoneItem, copyEmailItem);","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"        // Adding the context menu to the button and the text field","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"        personListView.setContextMenu(contextMenu);","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"        copyNameItem.setOnAction((ActionEvent e) -\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"            content.putString(personListView.getSelectionModel().getSelectedItem().getName().toString());","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"            clipboard.setContent(content);","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"        });","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"        copyPhoneItem.setOnAction((ActionEvent e) -\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"            content.putString(personListView.getSelectionModel().getSelectedItem().getPhone().toString());","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"            clipboard.setContent(content);","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"        });","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"        copyEmailItem.setOnAction((ActionEvent e) -\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"            content.putString(personListView.getSelectionModel().getSelectedItem().getEmail().toString());","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"            clipboard.setContent(content);","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"        });","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"dannytayjy":46,"-":45}},{"path":"src/main/java/manageezpz/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.ui;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Welcome to ManageEZPZ!\";","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"     * Initializes a {@code ResultDisplay} and sets the welcome message on","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"     * {@code TextArea} resultDisplay.","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"        resultDisplay.setText(WELCOME_MESSAGE);","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"dannytayjy":7,"-":26}},{"path":"src/main/java/manageezpz/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.ui;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":1,"-":27}},{"path":"src/main/java/manageezpz/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.ui;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Deadline;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Event;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"    public final Task task;","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"    private GridPane detailsPane;","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"    private Label id;","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"    private Label description;","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"    private Label type;","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"    private Label dateTimeLabel;","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"    private Label dateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"    private Label employeesTagLabel;","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"    private Label employeesTag;","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"    private Label priorityTagLabel;","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"    private ImageView priorityTagIcon;","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"    private Label priorityTag;","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"    private Label statusIsDoneLabel;","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"    private Label statusIsDone;","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"     * Creates a {@code TaskCard} with the given {@code Task} and index to display.","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"        super(FXML);","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"dannytayjy"},"content":"        description.setText(task.getDescription().description);","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"dannytayjy"},"content":"        type.setText(task.getType());","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"        if (task instanceof Deadline || task instanceof Event) {","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"            dateTime.setText(task.getDateTime());","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"        setEmployeeTag();","lastModifiedDate":"2022-04-10"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"        setPriorityTagIconAndPriorityTag();","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"        setStatusIsDone();","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"        removeEmptyRows();","lastModifiedDate":"2022-04-10"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":86,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"dannytayjy"},"content":"     * Sets the text of employeesTag {@code Label}.","lastModifiedDate":"2022-04-10"},{"lineNumber":89,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-04-10"},{"lineNumber":90,"author":{"gitId":"dannytayjy"},"content":"    private void setEmployeeTag() {","lastModifiedDate":"2022-04-10"},{"lineNumber":91,"author":{"gitId":"dannytayjy"},"content":"        if (!task.getAssignees().isEmpty()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"dannytayjy"},"content":"            String assigneesNames \u003d task.getAssignees()","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"dannytayjy"},"content":"                    .stream()","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"dannytayjy"},"content":"                    .flatMap(person -\u003e Stream.of(person.getName().fullName))","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"dannytayjy"},"content":"                    .collect(Collectors.joining(\", \"));","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"dannytayjy"},"content":"            employeesTag.setText(assigneesNames);","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":100,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-04-10"},{"lineNumber":102,"author":{"gitId":"dannytayjy"},"content":"     * Sets the image of priorityTagIcon {@code ImageView} and the text of priorityTag {@code Label}.","lastModifiedDate":"2022-04-10"},{"lineNumber":103,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-04-10"},{"lineNumber":104,"author":{"gitId":"dannytayjy"},"content":"    private void setPriorityTagIconAndPriorityTag() {","lastModifiedDate":"2022-04-10"},{"lineNumber":105,"author":{"gitId":"dannytayjy"},"content":"        Image priorityIcon;","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"dannytayjy"},"content":"        switch (task.getPriority().name()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"dannytayjy"},"content":"        case \"LOW\":","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"dannytayjy"},"content":"            priorityIcon \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"dannytayjy"},"content":"                    getClass().getResourceAsStream(\"/images/priorities_low.png\")));","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"dannytayjy"},"content":"            priorityTagIcon.setImage(priorityIcon);","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"dannytayjy"},"content":"            priorityTag.setText(task.getPriority().name());","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"dannytayjy"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"dannytayjy"},"content":"        case \"MEDIUM\":","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"dannytayjy"},"content":"            priorityIcon \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"dannytayjy"},"content":"                    getClass().getResourceAsStream(\"/images/priorities_medium.png\")));","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"dannytayjy"},"content":"            priorityTagIcon.setImage(priorityIcon);","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"dannytayjy"},"content":"            priorityTag.setText(task.getPriority().name());","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"dannytayjy"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"dannytayjy"},"content":"        case \"HIGH\":","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"dannytayjy"},"content":"            priorityIcon \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"dannytayjy"},"content":"                    getClass().getResourceAsStream(\"/images/priorities_high.png\")));","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"dannytayjy"},"content":"            priorityTagIcon.setImage(priorityIcon);","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"dannytayjy"},"content":"            priorityTag.setText(task.getPriority().name());","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"dannytayjy"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"dannytayjy"},"content":"        case \"NONE\":","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"dannytayjy"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"dannytayjy"},"content":"        default:","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"dannytayjy"},"content":"            throw new RuntimeException(\"Invalid Task Priority\");","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":132,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-04-10"},{"lineNumber":134,"author":{"gitId":"dannytayjy"},"content":"     * Sets the text of statusIsDone {@code Label}.","lastModifiedDate":"2022-04-10"},{"lineNumber":135,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-04-10"},{"lineNumber":136,"author":{"gitId":"dannytayjy"},"content":"    private void setStatusIsDone() {","lastModifiedDate":"2022-04-10"},{"lineNumber":137,"author":{"gitId":"dannytayjy"},"content":"        if (task.isDone()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"dannytayjy"},"content":"            statusIsDone.setText(\"Done\");","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"dannytayjy"},"content":"            statusIsDone.getStyleClass().add(\"cell_completion_done_label\");","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"dannytayjy"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"dannytayjy"},"content":"            statusIsDone.setText(\"Not Done\");","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"dannytayjy"},"content":"            statusIsDone.getStyleClass().add(\"cell_completion_not_done_label\");","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":145,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-04-10"},{"lineNumber":147,"author":{"gitId":"dannytayjy"},"content":"     * Removes empty rows from the detailsPane {@code GridPane}.","lastModifiedDate":"2022-04-10"},{"lineNumber":148,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-04-10"},{"lineNumber":149,"author":{"gitId":"dannytayjy"},"content":"    private void removeEmptyRows() {","lastModifiedDate":"2022-04-10"},{"lineNumber":150,"author":{"gitId":"dannytayjy"},"content":"        // Remove date/time row if it is a Todo task","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"dannytayjy"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"dannytayjy"},"content":"            removeRow(detailsPane, GridPane.getRowIndex(dateTimeLabel));","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"dannytayjy"},"content":"        // Remove assignees row if there are no employees assigned to the task","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"dannytayjy"},"content":"        if (task.getAssignees().isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"dannytayjy"},"content":"            removeRow(detailsPane, GridPane.getRowIndex(employeesTagLabel));","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"dannytayjy"},"content":"        // Remove priority row if there are no priority tagged to the task","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"dannytayjy"},"content":"        if (task.getPriority().name().equals(\"NONE\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"dannytayjy"},"content":"            removeRow(detailsPane, GridPane.getRowIndex(priorityTagLabel));","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"dannytayjy"},"content":"     * Gets row index constrain for given node, forcefully as integer: 0 as null.","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-04-10"},{"lineNumber":169,"author":{"gitId":"dannytayjy"},"content":"     * @param node Node to look up the constraint for","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"dannytayjy"},"content":"     * @return The row index as primitive integer","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"dannytayjy"},"content":"    private int getRowIndexAsInteger(Node node) {","lastModifiedDate":"2022-04-10"},{"lineNumber":173,"author":{"gitId":"dannytayjy"},"content":"        return GridPane.getRowIndex(node) \u003d\u003d null ? 0 : GridPane.getRowIndex(node);","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"dannytayjy"},"content":"     * Removes row from grid pane by index.","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"dannytayjy"},"content":"     * Adapted from https://stackoverflow.com/a/70961583.","lastModifiedDate":"2022-04-10"},{"lineNumber":179,"author":{"gitId":"dannytayjy"},"content":"     *","lastModifiedDate":"2022-04-10"},{"lineNumber":180,"author":{"gitId":"dannytayjy"},"content":"     * @param grid Grid pane to be affected","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"dannytayjy"},"content":"     * @param targetRowIndexIntegerObject Target row index to be removed. Integer object type,","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"dannytayjy"},"content":"     *                                    because for some reason `getRowIndex` returns null","lastModifiedDate":"2022-03-24"},{"lineNumber":183,"author":{"gitId":"dannytayjy"},"content":"     *                                    for children at 0th row.","lastModifiedDate":"2022-03-24"},{"lineNumber":184,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":185,"author":{"gitId":"dannytayjy"},"content":"    private void removeRow(GridPane grid, Integer targetRowIndexIntegerObject) {","lastModifiedDate":"2022-04-10"},{"lineNumber":186,"author":{"gitId":"dannytayjy"},"content":"        int targetRowIndex \u003d targetRowIndexIntegerObject \u003d\u003d null ? 0 : targetRowIndexIntegerObject;","lastModifiedDate":"2022-03-24"},{"lineNumber":187,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"dannytayjy"},"content":"        // Remove children from row","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"dannytayjy"},"content":"        grid.getChildren().removeIf(node -\u003e (getRowIndexAsInteger(node) \u003d\u003d targetRowIndex));","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"dannytayjy"},"content":"        // Update indexes of other rows, i.e., shift rows up","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"dannytayjy"},"content":"        grid.getChildren().forEach(node -\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"dannytayjy"},"content":"            int rowIndex \u003d getRowIndexAsInteger(node);","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"dannytayjy"},"content":"            if (targetRowIndex \u003c rowIndex) {","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"dannytayjy"},"content":"                GridPane.setRowIndex(node, rowIndex - 1);","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"dannytayjy"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"dannytayjy"},"content":"        });","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"dannytayjy"},"content":"        // Remove row constraints","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"dannytayjy"},"content":"        grid.getRowConstraints().remove(targetRowIndex);","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"dannytayjy"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"dannytayjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"dannytayjy"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"dannytayjy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"dannytayjy"},"content":"            return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"dannytayjy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"dannytayjy"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"dannytayjy"},"content":"            return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"dannytayjy"},"content":"        // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"dannytayjy"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"dannytayjy"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"dannytayjy"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"dannytayjy":221}},{"path":"src/main/java/manageezpz/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.ui;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.LogsCenter;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"        super(FXML);","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"                setText(null);","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"            } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"dannytayjy":49}},{"path":"src/main/java/manageezpz/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.ui;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"dannytayjy":1,"-":12}},{"path":"src/main/java/manageezpz/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.ui;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.MainApp;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.LogsCenter;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.util.StringUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.Logic;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/task_icon.png\";","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); // This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"dannytayjy":6,"-":81}},{"path":"src/main/java/manageezpz/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.ui;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.MainApp;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"     * @see #UiPart(URL, Object)","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"dannytayjy":2,"ChanWeiJie":1,"-":85}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":".label-list-header-background {","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"    -fx-background-color: #2a4158;","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":".label-list-header {","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"    -fx-font-size: 15pt;","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":142,"author":{"gitId":"dannytayjy"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"dannytayjy"},"content":".cell_completion_done_label {","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"dannytayjy"},"content":"    -fx-background-color: #34a853;","lastModifiedDate":"2022-03-24"},{"lineNumber":148,"author":{"gitId":"dannytayjy"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"dannytayjy"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"dannytayjy"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"dannytayjy"},"content":"    -fx-text-fill: #eaeaea;","lastModifiedDate":"2022-03-24"},{"lineNumber":152,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":153,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"dannytayjy"},"content":".cell_completion_not_done_label {","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"dannytayjy"},"content":"    -fx-background-color: #ea4335;","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"dannytayjy"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"dannytayjy"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"dannytayjy"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"dannytayjy"},"content":"    -fx-text-fill: #eaeaea;","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"dannytayjy"},"content":".cell_priority_label {","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"dannytayjy"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"dannytayjy"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"dannytayjy"},"content":"    -fx-text-fill: #eaeaea;","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":373,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":385,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"dannytayjy":34,"-":351}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"#userGuideTitle, #copyClipboardFeatureTitle {","lastModifiedDate":"2022-04-05"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-04-05"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"#userGuideUrl, #copyClipboardFeatureContent, #copyButton {","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"dannytayjy":9,"-":18}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"      \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"          \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"              \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"600.0\" minWidth\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"              \u003cLabel fx:id\u003d\"userGuideTitle\" text\u003d\"\\$userGuideTitle\"\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"                \u003cGridPane.margin\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"                \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"              \u003c/Label\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"              \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"15.0\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"                  \u003cLabel fx:id\u003d\"userGuideUrl\" text\u003d\"\\$userGuideUrl\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"                  \u003cButton fx:id\u003d\"copyButton\" alignment\u003d\"CENTER_RIGHT\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"                \u003cGridPane.margin\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"                  \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"                \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"              \u003c/HBox\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"              \u003cLabel fx:id\u003d\"copyClipboardFeatureTitle\" text\u003d\"\\$copyClipboardFeatureTitle\" GridPane.rowIndex\u003d\"2\"\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"                \u003cGridPane.margin\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"                \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"              \u003c/Label\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"              \u003cImageView fitHeight\u003d\"375.0\" fitWidth\u003d\"400.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" GridPane.rowIndex\u003d\"3\"\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"                \u003cimage\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"                  \u003cImage url\u003d\"@../images/right_click_copy_to_clipboard.png\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"                \u003c/image\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"                \u003cGridPane.margin\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"                  \u003cInsets bottom\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"                \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"              \u003c/ImageView\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"              \u003cLabel fx:id\u003d\"copyClipboardFeatureContent\" text\u003d\"\\$copyClipboardFeatureContent\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"4\"\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"                \u003cGridPane.margin\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"                \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"              \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"            \u003crowConstraints\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"              \u003cRowConstraints minHeight\u003d\"-Infinity\" valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"              \u003cRowConstraints minHeight\u003d\"-Infinity\" valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"              \u003cRowConstraints minHeight\u003d\"-Infinity\" valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"              \u003cRowConstraints valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"              \u003cRowConstraints minHeight\u003d\"-Infinity\" valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"            \u003c/rowConstraints\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"          \u003c/GridPane\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"dannytayjy":51,"-":33}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"850\" onCloseRequest\u003d\"#handleExit\" title\u003d\"ManageEZPZ\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"    \u003cImage url\u003d\"@/images/task_icon.png\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"110\" minHeight\u003d\"110\" prefHeight\u003d\"110\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"        \u003cHBox prefWidth\u003d\"400\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"          \u003cStackPane minWidth\u003d\"300\" prefWidth\u003d\"NaN\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"            \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"300.0\" prefWidth\u003d\"300.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"              \u003cHBox alignment\u003d\"CENTER\" spacing\u003d\"5.0\" styleClass\u003d\"label-list-header-background\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"                  \u003cImageView fitHeight\u003d\"25.0\" fitWidth\u003d\"25.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"                      \u003cImage url\u003d\"@../images/employee_icon.png\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"                  \u003c/ImageView\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"                  \u003cLabel styleClass\u003d\"label-list-header\" text\u003d\"Employees\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"                      \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"                \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"                  \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"                \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"              \u003c/HBox\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"dannytayjy"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"dannytayjy"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"          \u003cStackPane minWidth\u003d\"300\" prefWidth\u003d\"NaN\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"            \u003cVBox fx:id\u003d\"taskList\" minWidth\u003d\"300.0\" prefWidth\u003d\"300.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"              \u003cHBox alignment\u003d\"CENTER\" spacing\u003d\"5.0\" styleClass\u003d\"label-list-header-background\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"                  \u003cImageView fitHeight\u003d\"25.0\" fitWidth\u003d\"25.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"dannytayjy"},"content":"                      \u003cImage url\u003d\"@../images/task_icon.png\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"dannytayjy"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"dannytayjy"},"content":"                  \u003c/ImageView\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"dannytayjy"},"content":"                  \u003cLabel styleClass\u003d\"label-list-header\" text\u003d\"Tasks\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"dannytayjy"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"dannytayjy"},"content":"                      \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"dannytayjy"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"dannytayjy"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"dannytayjy"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"dannytayjy"},"content":"                \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"dannytayjy"},"content":"                  \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"dannytayjy"},"content":"                \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"dannytayjy"},"content":"              \u003c/HBox\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"dannytayjy"},"content":"              \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"dannytayjy"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"dannytayjy"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"dannytayjy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"dannytayjy"},"content":"        \u003c!--\u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"dannytayjy"},"content":"        \u003cVBox fx:id\u003d\"taskList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"dannytayjy"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"dannytayjy"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"dannytayjy"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"dannytayjy"},"content":"          \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"dannytayjy"},"content":"        \u003c/VBox\u003e--\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"dannytayjy":71,"-":51}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"  \u003cGridPane alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"240.0\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"    \u003cVBox minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"      \u003cHBox spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"        \u003cLabel fx:id\u003d\"id\" alignment\u003d\"TOP_LEFT\" minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"        \u003cLabel fx:id\u003d\"name\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"          \u003cInsets bottom\u003d\"2.0\" left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"8.0\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"          \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"              \u003cImage url\u003d\"@../images/phone_icon.png\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"          \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"          \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"8.0\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"          \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"              \u003cImage url\u003d\"@../images/email_icon.png\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"          \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"          \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"8.0\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"          \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"              \u003cImage url\u003d\"@../images/task_icon.png\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"          \u003cLabel fx:id\u003d\"numOfTasks\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$numOfTasks\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"          \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":55,"-":18}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" onMouseClicked\u003d\"#handleMouseClick\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":1,"-":7}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"  \u003cGridPane alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"370.0\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"    \u003cVBox minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"      \u003cHBox spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"        \u003cLabel fx:id\u003d\"id\" alignment\u003d\"TOP_LEFT\" minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"        \u003cLabel fx:id\u003d\"description\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$description\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"          \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"          \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"          \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"      \u003cGridPane fx:id\u003d\"detailsPane\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"240.0\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"          \u003cRowConstraints maxHeight\u003d\"1.7976931348623157E308\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"          \u003cRowConstraints maxHeight\u003d\"1.7976931348623157E308\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"          \u003cRowConstraints maxHeight\u003d\"1.7976931348623157E308\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"          \u003cRowConstraints maxHeight\u003d\"1.7976931348623157E308\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"          \u003cRowConstraints maxHeight\u003d\"1.7976931348623157E308\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"          \u003cLabel fx:id\u003d\"typeLabel\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"cell_small_label\" text\u003d\"Type:\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"              \u003cInsets bottom\u003d\"3.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"          \u003cLabel fx:id\u003d\"type\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"              \u003cInsets bottom\u003d\"3.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"          \u003cLabel fx:id\u003d\"dateTimeLabel\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"cell_small_label\" text\u003d\"Date/Time:\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"              \u003cInsets bottom\u003d\"3.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"          \u003cLabel fx:id\u003d\"dateTime\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"              \u003cInsets bottom\u003d\"3.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"          \u003cLabel fx:id\u003d\"employeesTagLabel\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"cell_small_label\" text\u003d\"Assignees:\" GridPane.rowIndex\u003d\"2\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"              \u003cInsets bottom\u003d\"3.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"          \u003cLabel fx:id\u003d\"employeesTag\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"2\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"              \u003cInsets bottom\u003d\"3.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"dannytayjy"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"dannytayjy"},"content":"          \u003cLabel fx:id\u003d\"priorityTagLabel\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"cell_small_label\" text\u003d\"Priority:\" GridPane.rowIndex\u003d\"3\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"              \u003cInsets bottom\u003d\"3.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"          \u003cHBox spacing\u003d\"5.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"3\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"            \u003cImageView fx:id\u003d\"priorityTagIcon\" fitHeight\u003d\"17.0\" fitWidth\u003d\"17.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"            \u003cLabel fx:id\u003d\"priorityTag\" alignment\u003d\"CENTER\" styleClass\u003d\"cell_priority_label\" text\u003d\"\\$priorityTag\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"              \u003cInsets bottom\u003d\"3.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"dannytayjy"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"dannytayjy"},"content":"          \u003cLabel fx:id\u003d\"statusIsDoneLabel\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"cell_small_label\" text\u003d\"Status:\" GridPane.rowIndex\u003d\"4\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"dannytayjy"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"dannytayjy"},"content":"              \u003cInsets bottom\u003d\"3.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":90,"author":{"gitId":"dannytayjy"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"dannytayjy"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"dannytayjy"},"content":"          \u003cLabel fx:id\u003d\"statusIsDone\" alignment\u003d\"CENTER\" prefWidth\u003d\"80.0\" text\u003d\"\\$statusIsDone\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"4\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"dannytayjy"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"dannytayjy"},"content":"              \u003cInsets bottom\u003d\"3.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":95,"author":{"gitId":"dannytayjy"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"dannytayjy"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"dannytayjy"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"dannytayjy"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"dannytayjy"},"content":"          \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"dannytayjy"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"dannytayjy"},"content":"      \u003c/GridPane\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"dannytayjy"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"dannytayjy"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"dannytayjy"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"dannytayjy"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"dannytayjy"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"dannytayjy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"dannytayjy":107}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"  \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"dannytayjy":8}},{"path":"src/test/java/manageezpz/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"dannytayjy":1,"-":57}},{"path":"src/test/java/manageezpz/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.core;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"dannytayjy":1,"-":26}},{"path":"src/test/java/manageezpz/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.core;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":2,"-":133}},{"path":"src/test/java/manageezpz/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.core.index;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"dannytayjy":2,"-":58}},{"path":"src/test/java/manageezpz/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.util;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"dannytayjy":2,"-":34}},{"path":"src/test/java/manageezpz/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.util;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"dannytayjy":3,"-":105}},{"path":"src/test/java/manageezpz/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.util;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.Config;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"dannytayjy":4,"-":112}},{"path":"src/test/java/manageezpz/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.util;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":2,"-":21}},{"path":"src/test/java/manageezpz/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.util;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.SerializableTestClass;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.TestUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":3,"-":42}},{"path":"src/test/java/manageezpz/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.commons.util;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"dannytayjy":2,"-":141}},{"path":"src/test/java/manageezpz/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.DeleteEmployeeCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.AddEmployeeCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.CommandResult;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.logic.commands.ListTaskCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.storage.StorageManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.PersonBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"        String deleteCommand \u003d \"deleteEmployee 9\";","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"        assertCommandException(deleteCommand, String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"        String listTaskCommand \u003d ListTaskCommand.COMMAND_WORD;","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"Denniszedead"},"content":"        assertCommandSuccess(listTaskCommand, ListTaskCommand.MESSAGE_ALL_SUCCESS, model);","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"        String addEmployeeCommand \u003d AddEmployeeCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"        assertCommandFailure(addEmployeeCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Denniszedead":3,"alfredkohhh":4,"dannytayjy":24,"-":130}},{"path":"src/test/java/manageezpz/logic/commands/AddDeadlineTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aaron-ljx"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_DUPLICATE_TASK;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_DATE;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_TIME;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.testutil.TypicalTasks.FYP_REPORT;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.testutil.TypicalTasks.getTypicalAddressBookTasks;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"aaron-ljx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"aaron-ljx"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"aaron-ljx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Date;","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Deadline;","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Time;","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.testutil.Assert;","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"aaron-ljx"},"content":"public class AddDeadlineTaskCommandTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"aaron-ljx"},"content":"    private Model model;","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"aaron-ljx"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"aaron-ljx"},"content":"    public void setUp() {","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"aaron-ljx"},"content":"        model \u003d new ModelManager(getTypicalAddressBookTasks(), new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"aaron-ljx"},"content":"    public void addDeadline_success() throws CommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"aaron-ljx"},"content":"        Deadline newDeadlineTask \u003d new Deadline(new Description(\"new description\"), new Date(VALID_DATE),","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"aaron-ljx"},"content":"                new Time(VALID_TIME));","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"aaron-ljx"},"content":"        AddDeadlineTaskCommand addDeadlineTaskCommand \u003d new AddDeadlineTaskCommand(newDeadlineTask);","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"aaron-ljx"},"content":"        String expectedMessage \u003d String.format(AddDeadlineTaskCommand.MESSAGE_SUCCESS, newDeadlineTask);","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"aaron-ljx"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"aaron-ljx"},"content":"        assertEquals(commandResult, addDeadlineTaskCommand.execute(model));","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"aaron-ljx"},"content":"    public void addDeadlineTaskCommandConstructor_duplicateTask_throwsCommandException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"aaron-ljx"},"content":"        AddDeadlineTaskCommand addDeadlineTaskCommand \u003d new AddDeadlineTaskCommand(FYP_REPORT);","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"aaron-ljx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"aaron-ljx"},"content":"                FYP_REPORT.getDescription()) + AddDeadlineTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"aaron-ljx"},"content":"        Assert.assertThrows(CommandException.class, expectedMessage, () -\u003e addDeadlineTaskCommand.execute(model));","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"aaron-ljx"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"aaron-ljx":49}},{"path":"src/test/java/manageezpz/logic/commands/AddEmployeeCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.AddEmployeeCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalPersons.getTypicalAddressBookEmployees;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.PersonBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":" * Contains integration tests (interaction with the Model) for {@code AddEmployeeCommand}.","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"public class AddEmployeeCommandIntegrationTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"        model \u003d new ModelManager(getTypicalAddressBookEmployees(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"        assertCommandSuccess(new AddEmployeeCommand(validPerson), model,","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"                String.format(AddEmployeeCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"        assertCommandFailure(new AddEmployeeCommand(personInList), model,","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"                String.format(AddEmployeeCommand.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"                        personInList.getName().toString()) + \"\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Denniszedead":2,"alfredkohhh":4,"dannytayjy":12,"-":30}},{"path":"src/test/java/manageezpz/logic/commands/AddEmployeeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.AddEmployeeCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.GuiSettings;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.AddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Deadline;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Event;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Priority;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.PersonBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"public class AddEmployeeCommandTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddEmployeeCommand(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"        CommandResult commandResult \u003d new AddEmployeeCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(String.format(AddEmployeeCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"        AddEmployeeCommand addCommand \u003d new AddEmployeeCommand(validPerson);","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"        assertThrows(CommandException.class, String.format(AddEmployeeCommand.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"                        validPerson.getName().toString()) + \"\\n\" + MESSAGE_USAGE, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"        AddEmployeeCommand addAliceCommand \u003d new AddEmployeeCommand(alice);","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"        AddEmployeeCommand addBobCommand \u003d new AddEmployeeCommand(bob);","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"        AddEmployeeCommand addAliceCommandCopy \u003d new AddEmployeeCommand(alice);","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"dannytayjy"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"dannytayjy"},"content":"        public void increaseNumOfTasks(Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"dannytayjy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"dannytayjy"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"dannytayjy"},"content":"        public void decreaseNumOfTasks(Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"dannytayjy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"ChanWeiJie"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"ChanWeiJie"},"content":"        public void addTodo(Todo todo) {","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"ChanWeiJie"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":182,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":183,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":184,"author":{"gitId":"ChanWeiJie"},"content":"        public void addDeadline(Deadline deadline) {","lastModifiedDate":"2022-03-10"},{"lineNumber":185,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":186,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":187,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":188,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":189,"author":{"gitId":"ChanWeiJie"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-03-10"},{"lineNumber":190,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":191,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":192,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":193,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":194,"author":{"gitId":"ChanWeiJie"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":195,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":196,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":197,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":199,"author":{"gitId":"alfredkohhh"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-20"},{"lineNumber":200,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":201,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":202,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":203,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":204,"author":{"gitId":"ChanWeiJie"},"content":"        public boolean hasTodo(Todo todo) {","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":209,"author":{"gitId":"ChanWeiJie"},"content":"        public boolean hasDeadline(Deadline deadline) {","lastModifiedDate":"2022-03-10"},{"lineNumber":210,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"ChanWeiJie"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":219,"author":{"gitId":"dannytayjy"},"content":"        public boolean isEmployeeTaggedToTask(Task task, Person p) {","lastModifiedDate":"2022-03-31"},{"lineNumber":220,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":221,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":222,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":223,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":224,"author":{"gitId":"ChanWeiJie"},"content":"        public boolean hasPriority(Task task) {","lastModifiedDate":"2022-03-23"},{"lineNumber":225,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":226,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":228,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":229,"author":{"gitId":"ChanWeiJie"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-23"},{"lineNumber":230,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":231,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":232,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":233,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":234,"author":{"gitId":"ChanWeiJie"},"content":"        public void deleteTask(Task task) {","lastModifiedDate":"2022-03-10"},{"lineNumber":235,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":236,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":237,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":238,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":239,"author":{"gitId":"dannytayjy"},"content":"        public void updateTaskWithEditedPerson(Task task, int assigneesIndex, Person editedPerson) {","lastModifiedDate":"2022-03-31"},{"lineNumber":240,"author":{"gitId":"dannytayjy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-31"},{"lineNumber":241,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":242,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":243,"author":{"gitId":"dannytayjy"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":244,"author":{"gitId":"dannytayjy"},"content":"        public Task markTask(Task task) {","lastModifiedDate":"2022-03-30"},{"lineNumber":245,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":246,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":247,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":248,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":249,"author":{"gitId":"dannytayjy"},"content":"        public Task unmarkTask(Task task) {","lastModifiedDate":"2022-03-30"},{"lineNumber":250,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":251,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":252,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":253,"author":{"gitId":"dannytayjy"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":254,"author":{"gitId":"dannytayjy"},"content":"        public Task tagPriorityToTask(Task task, Priority priority) {","lastModifiedDate":"2022-03-30"},{"lineNumber":255,"author":{"gitId":"dannytayjy"},"content":"            return null;","lastModifiedDate":"2022-03-30"},{"lineNumber":256,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":257,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":258,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":259,"author":{"gitId":"dannytayjy"},"content":"        public Task tagEmployeeToTask(Task task, Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":260,"author":{"gitId":"ChanWeiJie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":261,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":262,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":263,"author":{"gitId":"alfredkohhh"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":264,"author":{"gitId":"dannytayjy"},"content":"        public Task untagEmployeeFromTask(Task task, Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":265,"author":{"gitId":"alfredkohhh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":266,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":267,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"alfredkohhh":13,"dannytayjy":39,"ChanWeiJie":85,"-":175}},{"path":"src/test/java/manageezpz/logic/commands/AddEventTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aaron-ljx"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_DUPLICATE_TASK;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_DATE;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_END_TIME;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_START_TIME;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.testutil.TypicalTasks.HOUSE_VISTING;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.testutil.TypicalTasks.getTypicalAddressBookTasks;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"aaron-ljx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"aaron-ljx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Date;","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Event;","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Time;","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.testutil.Assert;","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"aaron-ljx"},"content":"public class AddEventTaskCommandTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"aaron-ljx"},"content":"    private Model model;","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"aaron-ljx"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"aaron-ljx"},"content":"    public void setUp() {","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"aaron-ljx"},"content":"        model \u003d new ModelManager(getTypicalAddressBookTasks(), new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"aaron-ljx"},"content":"    public void addEventTask_success() throws CommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"aaron-ljx"},"content":"        Event newEventTask \u003d new Event(new Description(\"new description\"), new Date(VALID_DATE),","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"aaron-ljx"},"content":"                new Time(VALID_START_TIME), new Time(VALID_END_TIME));","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"aaron-ljx"},"content":"        AddEventTaskCommand addEventTaskCommand \u003d new AddEventTaskCommand(newEventTask);","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"aaron-ljx"},"content":"        String expectedMessage \u003d String.format(AddEventTaskCommand.MESSAGE_SUCCESS, newEventTask);","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"aaron-ljx"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"aaron-ljx"},"content":"        assertEquals(commandResult, addEventTaskCommand.execute(model));","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"aaron-ljx"},"content":"    public void addEventTaskCommandConstructor_duplicateTask_throwsCommandException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"aaron-ljx"},"content":"        AddEventTaskCommand addEventTaskCommand \u003d new AddEventTaskCommand(HOUSE_VISTING);","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"aaron-ljx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"aaron-ljx"},"content":"                HOUSE_VISTING.getDescription()) + AddEventTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"aaron-ljx"},"content":"        Assert.assertThrows(CommandException.class, expectedMessage, () -\u003e addEventTaskCommand.execute(model));","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"aaron-ljx"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"aaron-ljx":50}},{"path":"src/test/java/manageezpz/logic/commands/AddTodoTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_DUPLICATE_TASK;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.TypicalTasks.WEEKLY_QUIZ;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.testutil.TypicalTasks;","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"public class AddTodoTaskCommandTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"    private final Model model \u003d new ModelManager(TypicalTasks.getTypicalAddressBookTasks(),","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"            new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"    public void addTodoTaskCommand_success_assertEquals() throws CommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"        Description description \u003d new Description(\"Go on a holiday!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"        AddTodoTaskCommand addTodoTaskCommand \u003d new AddTodoTaskCommand(newTodo);","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d String.format(AddTodoTaskCommand.MESSAGE_SUCCESS, newTodo);","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(commandResult, addTodoTaskCommand.execute(model));","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"    public void addTodoTaskCommandConstructor_duplicateTask_throwsCommandException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"        AddTodoTaskCommand addTodoTaskCommand \u003d new AddTodoTaskCommand(WEEKLY_QUIZ);","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"                WEEKLY_QUIZ.getDescription()) + AddTodoTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e addTodoTaskCommand.execute(model));","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"alfredkohhh":41}},{"path":"src/test/java/manageezpz/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalPersons.getTypicalAddressBookEmployees;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.AddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBookEmployees(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBookEmployees(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Denniszedead":3,"dannytayjy":6,"-":23}},{"path":"src/test/java/manageezpz/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"dannytayjy":1,"-":53}},{"path":"src/test/java/manageezpz/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.AddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.person.PersonMultiplePredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Date;","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Deadline;","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Event;","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.task.TaskMultiplePredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Time;","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.testutil.TodoBuilder;","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"    // All attributes pertaining to employees","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \" \"; // space not allowed in names","lastModifiedDate":"2022-04-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"    public static final EditEmployeeCommand.EditEmployeeDescriptor DESC_AMY;","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"    public static final EditEmployeeCommand.EditEmployeeDescriptor DESC_BOB;","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"    // Attributes pertaining tasks","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"    public static final String VALID_TASK_DESCRIPTION \u003d \"get a drink\";","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"    public static final List\u003cString\u003e LIST_DESCRIPTIONS \u003d List.of(VALID_TASK_DESCRIPTION.split(\" \"));","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"    public static final String VALID_DATE \u003d \"2022-01-01\"; // Date are in YYYY-MM-DD","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"aaron-ljx"},"content":"    public static final String VALID_TIME \u003d \"1700\"; // Time are in HHmm","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"aaron-ljx"},"content":"    public static final String VALID_START_TIME \u003d \"1000\";","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"aaron-ljx"},"content":"    public static final String VALID_END_TIME \u003d \"1200\";","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"    public static final String VALID_PRIORITY \u003d \"LOW\"; // Valid priority are none, low, medium, high","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"    public static final String INVALID_PRIORITY \u003d \"H1GH\";","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"    public static final String VALID_BOOLEAN \u003d \"true\";","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"    public static final String INVALID_BOOLEAN \u003d \"t\";","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"    public static final String INVALID_DATE \u003d \"2022 01 01\";","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"    // addTodo-related commands","lastModifiedDate":"2022-04-09"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"    public static final String VALID_TODO_DESC_READ_BOOK \u003d \" \" + PREFIX_DESCRIPTION + \"Read Book\";","lastModifiedDate":"2022-04-09"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_TODO_DESC_DRINK \u003d \" \" + PREFIX_DESCRIPTION + \" \";","lastModifiedDate":"2022-04-09"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"    // tagTask-related commands","lastModifiedDate":"2022-04-09"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"    public static final String VALID_TAG_TASK \u003d \" \" + 1 + \" \" + PREFIX_NAME + \"Bob Choo\";","lastModifiedDate":"2022-04-09"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_TAG_TASK_NO_PREFIX \u003d \" \" + 1 + \" \";","lastModifiedDate":"2022-04-09"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_TAG_TASK_NO_INDEX \u003d \" \" + PREFIX_NAME + \"BOB\";","lastModifiedDate":"2022-04-09"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_TAG_TASK_INVALID_INDEX \u003d \"asd \" + PREFIX_NAME + \"BOB\";","lastModifiedDate":"2022-04-09"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_TAG_TASK_EMPTY_NAME \u003d \" \" + 1 + \" \" + PREFIX_NAME + \" \";","lastModifiedDate":"2022-04-09"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_TAG_TASK_PREAMBLE \u003d \"asd 1 \" + PREFIX_NAME + \"BOB\";","lastModifiedDate":"2022-04-09"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"    // tagPriority-related commands","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"    public static final String VALID_TAG_PRIORITY \u003d \" \" + 1 + \" \" + PREFIX_PRIORITY + \"HIGH\";","lastModifiedDate":"2022-04-09"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_TAG_PRIORITY_NO_PREFIX \u003d \" \" + 1 + \" \";","lastModifiedDate":"2022-04-09"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_TAG_PRIORITY_NO_INDEX \u003d \" \" + PREFIX_PRIORITY + \"HIGH\";","lastModifiedDate":"2022-04-09"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_TAG_PRIORITY_INVALID_INDEX \u003d \"asd \" + PREFIX_PRIORITY + \"HIGH\";","lastModifiedDate":"2022-04-09"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_TAG_PRIORITY_INVALID_PRIORITY \u003d \" \" + 1 + \" \" + PREFIX_PRIORITY + \"IMPORTANT\";","lastModifiedDate":"2022-04-09"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_TAG_PRIORITY_EMPTY_PRIORITY \u003d \" \" + 1 + \" \" + PREFIX_PRIORITY + \" \";","lastModifiedDate":"2022-04-09"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_TAG_PRIORITY_PREAMBLE \u003d \"asd 1 \" + PREFIX_PRIORITY + \"HIGH\";","lastModifiedDate":"2022-04-09"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"    public static final String INVALID_TAG_PRIORITY_EMPTY_PREAMBLE \u003d \" \" + PREFIX_PRIORITY + \"HIGH\";","lastModifiedDate":"2022-04-09"},{"lineNumber":96,"author":{"gitId":"alfredkohhh"},"content":"    // Creation of events","lastModifiedDate":"2022-04-09"},{"lineNumber":97,"author":{"gitId":"aaron-ljx"},"content":"    public static final Todo TODO_TASK;","lastModifiedDate":"2022-04-08"},{"lineNumber":98,"author":{"gitId":"aaron-ljx"},"content":"    public static final Event EVENT_TASK;","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"aaron-ljx"},"content":"    public static final Deadline DEADLINE_TASK;","lastModifiedDate":"2022-04-08"},{"lineNumber":100,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"dannytayjy"},"content":"        DESC_AMY \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-04-09"},{"lineNumber":103,"author":{"gitId":"ChanWeiJie"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"ChanWeiJie"},"content":"                .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"dannytayjy"},"content":"        DESC_BOB \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-04-09"},{"lineNumber":106,"author":{"gitId":"ChanWeiJie"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"ChanWeiJie"},"content":"                .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":109,"author":{"gitId":"alfredkohhh"},"content":"        TODO_TASK \u003d new TodoBuilder().withDescription(VALID_TASK_DESCRIPTION).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":110,"author":{"gitId":"aaron-ljx"},"content":"        EVENT_TASK \u003d new Event(new Description(VALID_TASK_DESCRIPTION), new Date(VALID_DATE),","lastModifiedDate":"2022-04-08"},{"lineNumber":111,"author":{"gitId":"aaron-ljx"},"content":"                new Time(VALID_START_TIME), new Time(VALID_END_TIME));","lastModifiedDate":"2022-04-08"},{"lineNumber":112,"author":{"gitId":"aaron-ljx"},"content":"        DEADLINE_TASK \u003d new Deadline(new Description(VALID_TASK_DESCRIPTION), new Date(VALID_DATE),","lastModifiedDate":"2022-04-08"},{"lineNumber":113,"author":{"gitId":"aaron-ljx"},"content":"                new Time(VALID_TIME));","lastModifiedDate":"2022-04-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"Denniszedead"},"content":"        model.updateFilteredPersonList(new PersonMultiplePredicate(Arrays.asList(splitName[0]), null,","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"Denniszedead"},"content":"                null));","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"Denniszedead"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"Denniszedead"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"Denniszedead"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"Denniszedead"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"Denniszedead"},"content":"        final String[] splitName \u003d task.getDescription().toString().split(\"\\\\s+\");","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicate \u003d new TaskMultiplePredicate(","lastModifiedDate":"2022-03-26"},{"lineNumber":184,"author":{"gitId":"Denniszedead"},"content":"                null,","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"Denniszedead"},"content":"                Arrays.asList(splitName[0]),","lastModifiedDate":"2022-03-26"},{"lineNumber":186,"author":{"gitId":"Denniszedead"},"content":"                null,","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"Denniszedead"},"content":"                null,","lastModifiedDate":"2022-03-26"},{"lineNumber":188,"author":{"gitId":"Denniszedead"},"content":"                null,","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"Denniszedead"},"content":"                null","lastModifiedDate":"2022-03-26"},{"lineNumber":190,"author":{"gitId":"Denniszedead"},"content":"        );","lastModifiedDate":"2022-03-26"},{"lineNumber":191,"author":{"gitId":"Denniszedead"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":192,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"Denniszedead"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Denniszedead":39,"alfredkohhh":26,"dannytayjy":17,"ChanWeiJie":5,"aaron-ljx":18,"-":91}},{"path":"src/test/java/manageezpz/logic/commands/DeleteEmployeeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.DeleteEmployeeCommand.MESSAGE_DELETE_PERSON_SUCCESS;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.DeleteEmployeeCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import java.util.List;","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.AddressBook;","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.DeadlineBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.EventBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.PersonBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.TodoBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":" * {@code DeleteEmployeeCommand}.","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"public class DeleteEmployeeCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"    private Model model;","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"    public void setUp() {","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"        // Create persons Alex, Bernice and Charlotte","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"        Person personAlex \u003d new PersonBuilder().withName(\"Alex Yeoh\").withPhone(\"87438807\")","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"                .withEmail(\"alexyeoh@example.com\").build();","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"        Person personBernice \u003d new PersonBuilder().withName(\"Bernice Yu\").withPhone(\"99272758\")","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"                .withEmail(\"berniceyu@example.com\").build();","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"        Person personCharlotte \u003d new PersonBuilder().withName(\"Charlotte Oliveiro\").withPhone(\"93210283\")","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"                .withEmail(\"charlotte@example.com\").build();","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"        // Create tasks","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"        Task taskToDo \u003d new TodoBuilder().withDescription(\"Review Monthly Finance KPI\")","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"                .build();","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"        Task taskDeadline \u003d new DeadlineBuilder().withDescription(\"Finish Client Proposal\")","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"                .withDate(\"2022-03-15\").withTime(\"1800\").build();","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"        Task taskEvent \u003d new EventBuilder().withDescription(\"Meeting with Client\")","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"                .withDate(\"2022-03-15\").withStartTime(\"1300\").withEndTime(\"1400\").build();","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"        // Tag tasks to Alex","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"        taskToDo.assignedTo(personAlex);","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"        personAlex.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"        taskDeadline.assignedTo(personAlex);","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"        personAlex.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"        taskEvent.assignedTo(personAlex);","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"        personAlex.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"        // Tag tasks to Charlotte","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"        taskToDo.assignedTo(personCharlotte);","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"        personCharlotte.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"        taskDeadline.assignedTo(personCharlotte);","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"dannytayjy"},"content":"        personCharlotte.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"dannytayjy"},"content":"        taskEvent.assignedTo(personCharlotte);","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"        personCharlotte.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"        // Add persons to the new address book","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"        model.addPerson(personAlex);","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"        model.addPerson(personBernice);","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"        model.addPerson(personCharlotte);","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"        // Add tasks to the new address book","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"        model.addTask(taskToDo);","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"        model.addTask(taskDeadline);","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"dannytayjy"},"content":"        model.addTask(taskEvent);","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e modelFullTaskList \u003d model.getAddressBook().getTaskList();","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"Denniszedead"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"Denniszedead"},"content":"        DeleteEmployeeCommand deleteEmployeeCommand \u003d new DeleteEmployeeCommand(INDEX_FIRST);","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(model.getFilteredPersonList().size(), 3);","lastModifiedDate":"2022-04-11"},{"lineNumber":97,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(personToDelete.getNumOfTasks(), 3);","lastModifiedDate":"2022-04-11"},{"lineNumber":98,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(modelFullTaskList.get(INDEX_FIRST.getZeroBased()).getAssignees().toString(),","lastModifiedDate":"2022-04-11"},{"lineNumber":99,"author":{"gitId":"dannytayjy"},"content":"                \"[Alex Yeoh; Phone: 87438807; Email: alexyeoh@example.com, \"","lastModifiedDate":"2022-04-11"},{"lineNumber":100,"author":{"gitId":"dannytayjy"},"content":"                        + \"Charlotte Oliveiro; Phone: 93210283; Email: charlotte@example.com]\");","lastModifiedDate":"2022-04-11"},{"lineNumber":101,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":102,"author":{"gitId":"dannytayjy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-04-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":106,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e expectedModelFullTaskList \u003d expectedModel.getAddressBook().getTaskList();","lastModifiedDate":"2022-04-11"},{"lineNumber":107,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":108,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e affectedTaskList \u003d expectedModelFullTaskList.stream()","lastModifiedDate":"2022-04-11"},{"lineNumber":109,"author":{"gitId":"dannytayjy"},"content":"                .filter(task -\u003e task.getAssignees().contains(personToDelete))","lastModifiedDate":"2022-04-11"},{"lineNumber":110,"author":{"gitId":"dannytayjy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-04-11"},{"lineNumber":111,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":112,"author":{"gitId":"dannytayjy"},"content":"        for (Task task : affectedTaskList) {","lastModifiedDate":"2022-04-11"},{"lineNumber":113,"author":{"gitId":"dannytayjy"},"content":"            expectedModel.untagEmployeeFromTask(task, personToDelete);","lastModifiedDate":"2022-04-11"},{"lineNumber":114,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":115,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(expectedModel.getFilteredPersonList().size(), 2);","lastModifiedDate":"2022-04-11"},{"lineNumber":119,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(expectedModelFullTaskList.get(INDEX_FIRST.getZeroBased()).getAssignees().toString(),","lastModifiedDate":"2022-04-11"},{"lineNumber":120,"author":{"gitId":"dannytayjy"},"content":"                \"[Charlotte Oliveiro; Phone: 93210283; Email: charlotte@example.com]\");","lastModifiedDate":"2022-04-11"},{"lineNumber":121,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(expectedModelFullTaskList.get(INDEX_SECOND.getZeroBased()).getAssignees().toString(),","lastModifiedDate":"2022-04-11"},{"lineNumber":122,"author":{"gitId":"dannytayjy"},"content":"                \"[Charlotte Oliveiro; Phone: 93210283; Email: charlotte@example.com]\");","lastModifiedDate":"2022-04-11"},{"lineNumber":123,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(expectedModelFullTaskList.get(INDEX_THIRD.getZeroBased()).getAssignees().toString(),","lastModifiedDate":"2022-04-11"},{"lineNumber":124,"author":{"gitId":"dannytayjy"},"content":"                \"[Charlotte Oliveiro; Phone: 93210283; Email: charlotte@example.com]\");","lastModifiedDate":"2022-04-11"},{"lineNumber":125,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":126,"author":{"gitId":"dannytayjy"},"content":"        assertCommandSuccess(deleteEmployeeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":133,"author":{"gitId":"dannytayjy"},"content":"        DeleteEmployeeCommand deleteEmployeeCommand \u003d new DeleteEmployeeCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"dannytayjy"},"content":"        assertCommandFailure(deleteEmployeeCommand, model,","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":141,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e modelFullTaskList \u003d model.getAddressBook().getTaskList();","lastModifiedDate":"2022-04-11"},{"lineNumber":142,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":143,"author":{"gitId":"Denniszedead"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"Denniszedead"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"Denniszedead"},"content":"        DeleteEmployeeCommand deleteEmployeeCommand \u003d new DeleteEmployeeCommand(INDEX_FIRST);","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(model.getFilteredPersonList().size(), 1);","lastModifiedDate":"2022-04-11"},{"lineNumber":149,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(personToDelete.getNumOfTasks(), 3);","lastModifiedDate":"2022-04-11"},{"lineNumber":150,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(modelFullTaskList.get(INDEX_FIRST.getZeroBased()).getAssignees().toString(),","lastModifiedDate":"2022-04-11"},{"lineNumber":151,"author":{"gitId":"dannytayjy"},"content":"                \"[Alex Yeoh; Phone: 87438807; Email: alexyeoh@example.com, \"","lastModifiedDate":"2022-04-11"},{"lineNumber":152,"author":{"gitId":"dannytayjy"},"content":"                        + \"Charlotte Oliveiro; Phone: 93210283; Email: charlotte@example.com]\");","lastModifiedDate":"2022-04-11"},{"lineNumber":153,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":154,"author":{"gitId":"dannytayjy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-04-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":158,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e expectedModelFullTaskList \u003d expectedModel.getAddressBook().getTaskList();","lastModifiedDate":"2022-04-11"},{"lineNumber":159,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":160,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e affectedTaskList \u003d expectedModelFullTaskList.stream()","lastModifiedDate":"2022-04-11"},{"lineNumber":161,"author":{"gitId":"dannytayjy"},"content":"                .filter(task -\u003e task.getAssignees().contains(personToDelete))","lastModifiedDate":"2022-04-11"},{"lineNumber":162,"author":{"gitId":"dannytayjy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-04-11"},{"lineNumber":163,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":164,"author":{"gitId":"dannytayjy"},"content":"        for (Task task : affectedTaskList) {","lastModifiedDate":"2022-04-11"},{"lineNumber":165,"author":{"gitId":"dannytayjy"},"content":"            expectedModel.untagEmployeeFromTask(task, personToDelete);","lastModifiedDate":"2022-04-11"},{"lineNumber":166,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":167,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(expectedModel.getFilteredPersonList().size(), 0);","lastModifiedDate":"2022-04-11"},{"lineNumber":172,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(expectedModelFullTaskList.get(INDEX_FIRST.getZeroBased()).getAssignees().toString(),","lastModifiedDate":"2022-04-11"},{"lineNumber":173,"author":{"gitId":"dannytayjy"},"content":"                \"[Charlotte Oliveiro; Phone: 93210283; Email: charlotte@example.com]\");","lastModifiedDate":"2022-04-11"},{"lineNumber":174,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(expectedModelFullTaskList.get(INDEX_SECOND.getZeroBased()).getAssignees().toString(),","lastModifiedDate":"2022-04-11"},{"lineNumber":175,"author":{"gitId":"dannytayjy"},"content":"                \"[Charlotte Oliveiro; Phone: 93210283; Email: charlotte@example.com]\");","lastModifiedDate":"2022-04-11"},{"lineNumber":176,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(expectedModelFullTaskList.get(INDEX_THIRD.getZeroBased()).getAssignees().toString(),","lastModifiedDate":"2022-04-11"},{"lineNumber":177,"author":{"gitId":"dannytayjy"},"content":"                \"[Charlotte Oliveiro; Phone: 93210283; Email: charlotte@example.com]\");","lastModifiedDate":"2022-04-11"},{"lineNumber":178,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":179,"author":{"gitId":"dannytayjy"},"content":"        assertCommandSuccess(deleteEmployeeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":184,"author":{"gitId":"Denniszedead"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":186,"author":{"gitId":"Denniszedead"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":188,"author":{"gitId":"dannytayjy"},"content":"        // Ensures that outOfBoundIndex is still in bounds of address book person list","lastModifiedDate":"2022-04-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":191,"author":{"gitId":"dannytayjy"},"content":"        DeleteEmployeeCommand deleteEmployeeCommand \u003d new DeleteEmployeeCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":193,"author":{"gitId":"dannytayjy"},"content":"        assertCommandFailure(deleteEmployeeCommand, model,","lastModifiedDate":"2022-03-30"},{"lineNumber":194,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":199,"author":{"gitId":"dannytayjy"},"content":"        DeleteEmployeeCommand deleteFirstEmployeeCommand \u003d new DeleteEmployeeCommand(INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":200,"author":{"gitId":"dannytayjy"},"content":"        DeleteEmployeeCommand deleteSecondEmployeeCommand \u003d new DeleteEmployeeCommand(INDEX_SECOND);","lastModifiedDate":"2022-04-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":203,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(deleteFirstEmployeeCommand.equals(deleteFirstEmployeeCommand));","lastModifiedDate":"2022-04-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":206,"author":{"gitId":"dannytayjy"},"content":"        DeleteEmployeeCommand deleteFirstEmployeeCommandCopy \u003d new DeleteEmployeeCommand(INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":207,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(deleteFirstEmployeeCommand.equals(deleteFirstEmployeeCommandCopy));","lastModifiedDate":"2022-04-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":210,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(deleteFirstEmployeeCommand.equals(1));","lastModifiedDate":"2022-04-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":213,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(deleteFirstEmployeeCommand.equals(null));","lastModifiedDate":"2022-04-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":215,"author":{"gitId":"dannytayjy"},"content":"        // different person (employee) -\u003e returns false","lastModifiedDate":"2022-04-09"},{"lineNumber":216,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(deleteFirstEmployeeCommand.equals(deleteSecondEmployeeCommand));","lastModifiedDate":"2022-04-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":220,"author":{"gitId":"dannytayjy"},"content":"     * Updates {@code model}\u0027s filtered person list to show no person.","lastModifiedDate":"2022-04-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Denniszedead":9,"dannytayjy":153,"-":65}},{"path":"src/test/java/manageezpz/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.DeleteTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import java.util.List;","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.AddressBook;","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.DeadlineBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.EventBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.PersonBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.TodoBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"/**","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":" * {@code DeleteTaskCommand}.","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"    private Model model;","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"    public void setUp() {","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"        // Create persons Alex, Bernice and Charlotte","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"        Person personAlex \u003d new PersonBuilder().withName(\"Alex Yeoh\").withPhone(\"87438807\")","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"                .withEmail(\"alexyeoh@example.com\").build();","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"        Person personBernice \u003d new PersonBuilder().withName(\"Bernice Yu\").withPhone(\"99272758\")","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"                .withEmail(\"berniceyu@example.com\").build();","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"        Person personCharlotte \u003d new PersonBuilder().withName(\"Charlotte Oliveiro\").withPhone(\"93210283\")","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"                .withEmail(\"charlotte@example.com\").build();","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"        // Create tasks","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"        Task taskToDo \u003d new TodoBuilder().withDescription(\"Review Monthly Finance KPI\")","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"                .build();","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"        Task taskDeadline \u003d new DeadlineBuilder().withDescription(\"Finish Client Proposal\")","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"                .withDate(\"2022-03-15\").withTime(\"1800\").build();","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"        Task taskEvent \u003d new EventBuilder().withDescription(\"Meeting with Client\")","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"                .withDate(\"2022-03-15\").withStartTime(\"1300\").withEndTime(\"1400\").build();","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"        // Tag tasks to Alex","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"        taskToDo.assignedTo(personAlex);","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"        personAlex.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"        taskDeadline.assignedTo(personAlex);","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"        personAlex.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"        taskEvent.assignedTo(personAlex);","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"        personAlex.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"        // Tag tasks to Charlotte","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"        taskToDo.assignedTo(personCharlotte);","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"        personCharlotte.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"        taskDeadline.assignedTo(personCharlotte);","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"        personCharlotte.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"dannytayjy"},"content":"        taskEvent.assignedTo(personCharlotte);","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"dannytayjy"},"content":"        personCharlotte.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"        // Add persons to the new address book","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"        model.addPerson(personAlex);","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"        model.addPerson(personBernice);","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"        model.addPerson(personCharlotte);","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"        // Add tasks to the new address book","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"        model.addTask(taskToDo);","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"        model.addTask(taskDeadline);","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"        model.addTask(taskEvent);","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"dannytayjy"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-04-11"},{"lineNumber":90,"author":{"gitId":"dannytayjy"},"content":"        List\u003cPerson\u003e modelFullPersonList \u003d model.getAddressBook().getPersonList();","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"dannytayjy"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"dannytayjy"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":94,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":95,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(model.getFilteredTaskList().size(), 3);","lastModifiedDate":"2022-04-11"},{"lineNumber":96,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(modelFullPersonList.get(INDEX_FIRST.getZeroBased()).getNumOfTasks(), 3);","lastModifiedDate":"2022-04-11"},{"lineNumber":97,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(modelFullPersonList.get(INDEX_SECOND.getZeroBased()).getNumOfTasks(), 0);","lastModifiedDate":"2022-04-11"},{"lineNumber":98,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(modelFullPersonList.get(INDEX_THIRD.getZeroBased()).getNumOfTasks(), 3);","lastModifiedDate":"2022-04-11"},{"lineNumber":99,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":100,"author":{"gitId":"dannytayjy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2022-04-09"},{"lineNumber":101,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":102,"author":{"gitId":"dannytayjy"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":103,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":104,"author":{"gitId":"dannytayjy"},"content":"        List\u003cPerson\u003e expectedModelFullPersonList \u003d expectedModel.getAddressBook().getPersonList();","lastModifiedDate":"2022-04-11"},{"lineNumber":105,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":106,"author":{"gitId":"dannytayjy"},"content":"        List\u003cPerson\u003e affectedPersonList \u003d taskToDelete.getAssignees();","lastModifiedDate":"2022-04-11"},{"lineNumber":107,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":108,"author":{"gitId":"dannytayjy"},"content":"        for (Person person : affectedPersonList) {","lastModifiedDate":"2022-04-11"},{"lineNumber":109,"author":{"gitId":"dannytayjy"},"content":"            Person personToUpdate \u003d expectedModelFullPersonList.get(expectedModelFullPersonList.indexOf(person));","lastModifiedDate":"2022-04-11"},{"lineNumber":110,"author":{"gitId":"dannytayjy"},"content":"            expectedModel.decreaseNumOfTasks(personToUpdate);","lastModifiedDate":"2022-04-11"},{"lineNumber":111,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":112,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":113,"author":{"gitId":"dannytayjy"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2022-04-09"},{"lineNumber":114,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":115,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(expectedModel.getFilteredTaskList().size(), 2);","lastModifiedDate":"2022-04-11"},{"lineNumber":116,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(expectedModelFullPersonList.get(INDEX_FIRST.getZeroBased()).getNumOfTasks(), 2);","lastModifiedDate":"2022-04-11"},{"lineNumber":117,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(expectedModelFullPersonList.get(INDEX_SECOND.getZeroBased()).getNumOfTasks(), 0);","lastModifiedDate":"2022-04-11"},{"lineNumber":118,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(expectedModelFullPersonList.get(INDEX_THIRD.getZeroBased()).getNumOfTasks(), 2);","lastModifiedDate":"2022-04-11"},{"lineNumber":119,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":120,"author":{"gitId":"dannytayjy"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-09"},{"lineNumber":121,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":122,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":123,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":124,"author":{"gitId":"dannytayjy"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":125,"author":{"gitId":"dannytayjy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-04-09"},{"lineNumber":126,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":127,"author":{"gitId":"dannytayjy"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-04-09"},{"lineNumber":128,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":129,"author":{"gitId":"dannytayjy"},"content":"        assertCommandFailure(deleteTaskCommand, model,","lastModifiedDate":"2022-04-09"},{"lineNumber":130,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_TASK_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":131,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":132,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":133,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":134,"author":{"gitId":"dannytayjy"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-04-11"},{"lineNumber":135,"author":{"gitId":"dannytayjy"},"content":"        List\u003cPerson\u003e modelFullPersonList \u003d model.getAddressBook().getPersonList();","lastModifiedDate":"2022-04-11"},{"lineNumber":136,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":137,"author":{"gitId":"dannytayjy"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":138,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":139,"author":{"gitId":"dannytayjy"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-04-09"},{"lineNumber":140,"author":{"gitId":"dannytayjy"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":141,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":142,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(model.getFilteredTaskList().size(), 1);","lastModifiedDate":"2022-04-11"},{"lineNumber":143,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(modelFullPersonList.get(INDEX_FIRST.getZeroBased()).getNumOfTasks(), 3);","lastModifiedDate":"2022-04-11"},{"lineNumber":144,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(modelFullPersonList.get(INDEX_SECOND.getZeroBased()).getNumOfTasks(), 0);","lastModifiedDate":"2022-04-11"},{"lineNumber":145,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(modelFullPersonList.get(INDEX_THIRD.getZeroBased()).getNumOfTasks(), 3);","lastModifiedDate":"2022-04-11"},{"lineNumber":146,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":147,"author":{"gitId":"dannytayjy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2022-04-09"},{"lineNumber":148,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":149,"author":{"gitId":"dannytayjy"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":150,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":151,"author":{"gitId":"dannytayjy"},"content":"        List\u003cPerson\u003e expectedModelFullPersonList \u003d expectedModel.getAddressBook().getPersonList();","lastModifiedDate":"2022-04-11"},{"lineNumber":152,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":153,"author":{"gitId":"dannytayjy"},"content":"        List\u003cPerson\u003e affectedPersonList \u003d taskToDelete.getAssignees();","lastModifiedDate":"2022-04-11"},{"lineNumber":154,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":155,"author":{"gitId":"dannytayjy"},"content":"        for (Person person : affectedPersonList) {","lastModifiedDate":"2022-04-11"},{"lineNumber":156,"author":{"gitId":"dannytayjy"},"content":"            Person personToUpdate \u003d expectedModelFullPersonList.get(expectedModelFullPersonList.indexOf(person));","lastModifiedDate":"2022-04-11"},{"lineNumber":157,"author":{"gitId":"dannytayjy"},"content":"            expectedModel.decreaseNumOfTasks(personToUpdate);","lastModifiedDate":"2022-04-11"},{"lineNumber":158,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":159,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":160,"author":{"gitId":"dannytayjy"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2022-04-09"},{"lineNumber":161,"author":{"gitId":"dannytayjy"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2022-04-09"},{"lineNumber":162,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":163,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(expectedModel.getFilteredTaskList().size(), 0);","lastModifiedDate":"2022-04-11"},{"lineNumber":164,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(expectedModelFullPersonList.get(INDEX_FIRST.getZeroBased()).getNumOfTasks(), 2);","lastModifiedDate":"2022-04-11"},{"lineNumber":165,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(expectedModelFullPersonList.get(INDEX_SECOND.getZeroBased()).getNumOfTasks(), 0);","lastModifiedDate":"2022-04-11"},{"lineNumber":166,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(expectedModelFullPersonList.get(INDEX_THIRD.getZeroBased()).getNumOfTasks(), 2);","lastModifiedDate":"2022-04-11"},{"lineNumber":167,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":168,"author":{"gitId":"dannytayjy"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-09"},{"lineNumber":169,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":170,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":171,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":172,"author":{"gitId":"dannytayjy"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":173,"author":{"gitId":"dannytayjy"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":174,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":175,"author":{"gitId":"dannytayjy"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-04-09"},{"lineNumber":176,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":177,"author":{"gitId":"dannytayjy"},"content":"        // Ensures that outOfBoundIndex is still in bounds of address book task list","lastModifiedDate":"2022-04-09"},{"lineNumber":178,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2022-04-09"},{"lineNumber":179,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":180,"author":{"gitId":"dannytayjy"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-04-09"},{"lineNumber":181,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":182,"author":{"gitId":"dannytayjy"},"content":"        assertCommandFailure(deleteTaskCommand, model,","lastModifiedDate":"2022-04-09"},{"lineNumber":183,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_TASK_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":184,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":185,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":186,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":187,"author":{"gitId":"dannytayjy"},"content":"    public void equals() {","lastModifiedDate":"2022-04-09"},{"lineNumber":188,"author":{"gitId":"dannytayjy"},"content":"        DeleteTaskCommand deleteFirstTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":189,"author":{"gitId":"dannytayjy"},"content":"        DeleteTaskCommand deleteSecondTaskCommand \u003d new DeleteTaskCommand(INDEX_SECOND);","lastModifiedDate":"2022-04-09"},{"lineNumber":190,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":191,"author":{"gitId":"dannytayjy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-09"},{"lineNumber":192,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(deleteFirstTaskCommand.equals(deleteFirstTaskCommand));","lastModifiedDate":"2022-04-09"},{"lineNumber":193,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":194,"author":{"gitId":"dannytayjy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-09"},{"lineNumber":195,"author":{"gitId":"dannytayjy"},"content":"        DeleteTaskCommand deleteFirstTaskCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":196,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(deleteFirstTaskCommand.equals(deleteFirstTaskCommandCopy));","lastModifiedDate":"2022-04-09"},{"lineNumber":197,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":198,"author":{"gitId":"dannytayjy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-04-09"},{"lineNumber":199,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(deleteFirstTaskCommand.equals(1));","lastModifiedDate":"2022-04-09"},{"lineNumber":200,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":201,"author":{"gitId":"dannytayjy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-09"},{"lineNumber":202,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(deleteFirstTaskCommand.equals(null));","lastModifiedDate":"2022-04-09"},{"lineNumber":203,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":204,"author":{"gitId":"dannytayjy"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-04-09"},{"lineNumber":205,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(deleteFirstTaskCommand.equals(deleteSecondTaskCommand));","lastModifiedDate":"2022-04-09"},{"lineNumber":206,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":207,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":208,"author":{"gitId":"dannytayjy"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":209,"author":{"gitId":"dannytayjy"},"content":"     * Updates {@code model}\u0027s filtered task list to show no task.","lastModifiedDate":"2022-04-09"},{"lineNumber":210,"author":{"gitId":"dannytayjy"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":211,"author":{"gitId":"dannytayjy"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2022-04-09"},{"lineNumber":212,"author":{"gitId":"dannytayjy"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2022-04-09"},{"lineNumber":213,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":214,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2022-04-09"},{"lineNumber":215,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":216,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"dannytayjy":216}},{"path":"src/test/java/manageezpz/logic/commands/EditEmployeeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_DUPLICATE_PERSON;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.EditEmployeeCommand.EditEmployeeDescriptor;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.EditEmployeeCommand.MESSAGE_EDIT_PERSON_SUCCESS;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.EditEmployeeCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.EditEmployeeCommand.createEditedEmployee;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"import java.util.List;","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.AddressBook;","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.DeadlineBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.EventBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.PersonBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.TodoBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":" * {@code EditEmployeeCommand}.","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"public class EditEmployeeCommandTest {","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"    private Model model;","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"    public void setUp() {","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"        // Create persons Alex, Bernice and Charlotte","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"        Person personAlex \u003d new PersonBuilder().withName(\"Alex Yeoh\").withPhone(\"87438807\")","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"                .withEmail(\"alexyeoh@example.com\").build();","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"        Person personBernice \u003d new PersonBuilder().withName(\"Bernice Yu\").withPhone(\"99272758\")","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"                .withEmail(\"berniceyu@example.com\").build();","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"        Person personCharlotte \u003d new PersonBuilder().withName(\"Charlotte Oliveiro\").withPhone(\"93210283\")","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"                .withEmail(\"charlotte@example.com\").build();","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"        // Create tasks","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"        Task taskToDo \u003d new TodoBuilder().withDescription(\"Review Monthly Finance KPI\")","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"                .build();","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"        Task taskDeadline \u003d new DeadlineBuilder().withDescription(\"Finish Client Proposal\")","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"                .withDate(\"2022-03-15\").withTime(\"1800\").build();","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"        Task taskEvent \u003d new EventBuilder().withDescription(\"Meeting with Client\")","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"                .withDate(\"2022-03-15\").withStartTime(\"1300\").withEndTime(\"1400\").build();","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"        // Tag tasks to Alex","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"        taskToDo.assignedTo(personAlex);","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"        personAlex.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"        taskDeadline.assignedTo(personAlex);","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"dannytayjy"},"content":"        personAlex.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"dannytayjy"},"content":"        taskEvent.assignedTo(personAlex);","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"        personAlex.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"        // Tag tasks to Charlotte","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"        taskToDo.assignedTo(personCharlotte);","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"        personCharlotte.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"        taskDeadline.assignedTo(personCharlotte);","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"        personCharlotte.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"        taskEvent.assignedTo(personCharlotte);","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"        personCharlotte.increaseTaskCount();","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"dannytayjy"},"content":"        // Add persons to the new address book","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"dannytayjy"},"content":"        model.addPerson(personAlex);","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"dannytayjy"},"content":"        model.addPerson(personBernice);","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"dannytayjy"},"content":"        model.addPerson(personCharlotte);","lastModifiedDate":"2022-04-11"},{"lineNumber":90,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"dannytayjy"},"content":"        // Add tasks to the new address book","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"dannytayjy"},"content":"        model.addTask(taskToDo);","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"dannytayjy"},"content":"        model.addTask(taskDeadline);","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"dannytayjy"},"content":"        model.addTask(taskEvent);","lastModifiedDate":"2022-04-11"},{"lineNumber":95,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"dannytayjy"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-04-11"},{"lineNumber":100,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":101,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeCommand.EditEmployeeDescriptor descriptor \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":102,"author":{"gitId":"dannytayjy"},"content":"                new EditEmployeeDescriptorBuilder(new PersonBuilder().build()).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":103,"author":{"gitId":"dannytayjy"},"content":"        Person editedPerson \u003d createEditedEmployee(personToEdit, descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":104,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":105,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeCommand editEmployeeCommand \u003d new EditEmployeeCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2022-04-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"dannytayjy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-04-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"dannytayjy"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":110,"author":{"gitId":"dannytayjy"},"content":"        expectedModel.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-04-11"},{"lineNumber":111,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":112,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e expectedModelFullTaskList \u003d expectedModel.getAddressBook().getTaskList();","lastModifiedDate":"2022-04-11"},{"lineNumber":113,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":114,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e affectedTaskList \u003d expectedModelFullTaskList.stream()","lastModifiedDate":"2022-04-11"},{"lineNumber":115,"author":{"gitId":"dannytayjy"},"content":"                .filter(task -\u003e task.getAssignees().contains(personToEdit))","lastModifiedDate":"2022-04-11"},{"lineNumber":116,"author":{"gitId":"dannytayjy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-04-11"},{"lineNumber":117,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":118,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(affectedTaskList.size(), 3);","lastModifiedDate":"2022-04-11"},{"lineNumber":119,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":120,"author":{"gitId":"dannytayjy"},"content":"        for (Task task : affectedTaskList) {","lastModifiedDate":"2022-04-11"},{"lineNumber":121,"author":{"gitId":"dannytayjy"},"content":"            List\u003cPerson\u003e assignees \u003d task.getAssignees();","lastModifiedDate":"2022-04-11"},{"lineNumber":122,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":123,"author":{"gitId":"dannytayjy"},"content":"            for (Person assignee : assignees) {","lastModifiedDate":"2022-04-11"},{"lineNumber":124,"author":{"gitId":"dannytayjy"},"content":"                if (assignee.equals(personToEdit)) {","lastModifiedDate":"2022-04-11"},{"lineNumber":125,"author":{"gitId":"dannytayjy"},"content":"                    Task taskToUpdate \u003d expectedModelFullTaskList.get(expectedModelFullTaskList.indexOf(task));","lastModifiedDate":"2022-04-11"},{"lineNumber":126,"author":{"gitId":"dannytayjy"},"content":"                    expectedModel.updateTaskWithEditedPerson(taskToUpdate, assignees.indexOf(assignee), editedPerson);","lastModifiedDate":"2022-04-11"},{"lineNumber":127,"author":{"gitId":"dannytayjy"},"content":"                }","lastModifiedDate":"2022-04-11"},{"lineNumber":128,"author":{"gitId":"dannytayjy"},"content":"            }","lastModifiedDate":"2022-04-11"},{"lineNumber":129,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(expectedModelFullTaskList.get(INDEX_FIRST.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":132,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(personToEdit));","lastModifiedDate":"2022-04-11"},{"lineNumber":133,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(expectedModelFullTaskList.get(INDEX_SECOND.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":134,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(personToEdit));","lastModifiedDate":"2022-04-11"},{"lineNumber":135,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(expectedModelFullTaskList.get(INDEX_THIRD.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":136,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(personToEdit));","lastModifiedDate":"2022-04-11"},{"lineNumber":137,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":138,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(expectedModelFullTaskList.get(INDEX_FIRST.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":139,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(editedPerson));","lastModifiedDate":"2022-04-11"},{"lineNumber":140,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(expectedModelFullTaskList.get(INDEX_SECOND.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":141,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(editedPerson));","lastModifiedDate":"2022-04-11"},{"lineNumber":142,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(expectedModelFullTaskList.get(INDEX_THIRD.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":143,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(editedPerson));","lastModifiedDate":"2022-04-11"},{"lineNumber":144,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":145,"author":{"gitId":"dannytayjy"},"content":"        assertCommandSuccess(editEmployeeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"dannytayjy"},"content":"        Person lastPersonToEdit \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-04-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeCommand.EditEmployeeDescriptor descriptor \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":154,"author":{"gitId":"dannytayjy"},"content":"                new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":155,"author":{"gitId":"dannytayjy"},"content":"        Person editedPerson \u003d createEditedEmployee(lastPersonToEdit, descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeCommand editEmployeeCommand \u003d new EditEmployeeCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-04-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"dannytayjy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-04-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"dannytayjy"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":162,"author":{"gitId":"dannytayjy"},"content":"        expectedModel.setPerson(lastPersonToEdit, editedPerson);","lastModifiedDate":"2022-04-11"},{"lineNumber":163,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":164,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e expectedModelFullTaskList \u003d expectedModel.getAddressBook().getTaskList();","lastModifiedDate":"2022-04-11"},{"lineNumber":165,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":166,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e affectedTaskList \u003d expectedModelFullTaskList.stream()","lastModifiedDate":"2022-04-11"},{"lineNumber":167,"author":{"gitId":"dannytayjy"},"content":"                .filter(task -\u003e task.getAssignees().contains(lastPersonToEdit))","lastModifiedDate":"2022-04-11"},{"lineNumber":168,"author":{"gitId":"dannytayjy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-04-11"},{"lineNumber":169,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":170,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(affectedTaskList.size(), 3);","lastModifiedDate":"2022-04-11"},{"lineNumber":171,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":172,"author":{"gitId":"dannytayjy"},"content":"        for (Task task : affectedTaskList) {","lastModifiedDate":"2022-04-11"},{"lineNumber":173,"author":{"gitId":"dannytayjy"},"content":"            List\u003cPerson\u003e assignees \u003d task.getAssignees();","lastModifiedDate":"2022-04-11"},{"lineNumber":174,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":175,"author":{"gitId":"dannytayjy"},"content":"            for (Person assignee : assignees) {","lastModifiedDate":"2022-04-11"},{"lineNumber":176,"author":{"gitId":"dannytayjy"},"content":"                if (assignee.equals(lastPersonToEdit)) {","lastModifiedDate":"2022-04-11"},{"lineNumber":177,"author":{"gitId":"dannytayjy"},"content":"                    Task taskToUpdate \u003d expectedModelFullTaskList.get(expectedModelFullTaskList.indexOf(task));","lastModifiedDate":"2022-04-11"},{"lineNumber":178,"author":{"gitId":"dannytayjy"},"content":"                    expectedModel.updateTaskWithEditedPerson(taskToUpdate, assignees.indexOf(assignee), editedPerson);","lastModifiedDate":"2022-04-11"},{"lineNumber":179,"author":{"gitId":"dannytayjy"},"content":"                }","lastModifiedDate":"2022-04-11"},{"lineNumber":180,"author":{"gitId":"dannytayjy"},"content":"            }","lastModifiedDate":"2022-04-11"},{"lineNumber":181,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":183,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(expectedModelFullTaskList.get(INDEX_FIRST.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":184,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(lastPersonToEdit));","lastModifiedDate":"2022-04-11"},{"lineNumber":185,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(expectedModelFullTaskList.get(INDEX_SECOND.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":186,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(lastPersonToEdit));","lastModifiedDate":"2022-04-11"},{"lineNumber":187,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(expectedModelFullTaskList.get(INDEX_THIRD.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":188,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(lastPersonToEdit));","lastModifiedDate":"2022-04-11"},{"lineNumber":189,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":190,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(expectedModelFullTaskList.get(INDEX_FIRST.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":191,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(editedPerson));","lastModifiedDate":"2022-04-11"},{"lineNumber":192,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(expectedModelFullTaskList.get(INDEX_SECOND.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":193,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(editedPerson));","lastModifiedDate":"2022-04-11"},{"lineNumber":194,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(expectedModelFullTaskList.get(INDEX_THIRD.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":195,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(editedPerson));","lastModifiedDate":"2022-04-11"},{"lineNumber":196,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":197,"author":{"gitId":"dannytayjy"},"content":"        assertCommandSuccess(editEmployeeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":202,"author":{"gitId":"dannytayjy"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-04-11"},{"lineNumber":203,"author":{"gitId":"dannytayjy"},"content":"        Person editedPerson \u003d createEditedEmployee(personToEdit, new EditEmployeeCommand.EditEmployeeDescriptor());","lastModifiedDate":"2022-04-11"},{"lineNumber":204,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":205,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(personToEdit, editedPerson);","lastModifiedDate":"2022-04-11"},{"lineNumber":206,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":207,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeCommand editEmployeeCommand \u003d new EditEmployeeCommand(INDEX_FIRST,","lastModifiedDate":"2022-04-09"},{"lineNumber":208,"author":{"gitId":"dannytayjy"},"content":"                new EditEmployeeCommand.EditEmployeeDescriptor());","lastModifiedDate":"2022-04-09"},{"lineNumber":209,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":210,"author":{"gitId":"dannytayjy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-04-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":212,"author":{"gitId":"dannytayjy"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":213,"author":{"gitId":"dannytayjy"},"content":"        expectedModel.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-04-11"},{"lineNumber":214,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":215,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e expectedModelFullTaskList \u003d expectedModel.getAddressBook().getTaskList();","lastModifiedDate":"2022-04-11"},{"lineNumber":216,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":217,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e affectedTaskList \u003d expectedModelFullTaskList.stream()","lastModifiedDate":"2022-04-11"},{"lineNumber":218,"author":{"gitId":"dannytayjy"},"content":"                .filter(task -\u003e task.getAssignees().contains(personToEdit))","lastModifiedDate":"2022-04-11"},{"lineNumber":219,"author":{"gitId":"dannytayjy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-04-11"},{"lineNumber":220,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":221,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(affectedTaskList.size(), 3);","lastModifiedDate":"2022-04-11"},{"lineNumber":222,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":223,"author":{"gitId":"dannytayjy"},"content":"        for (Task task : affectedTaskList) {","lastModifiedDate":"2022-04-11"},{"lineNumber":224,"author":{"gitId":"dannytayjy"},"content":"            List\u003cPerson\u003e assignees \u003d task.getAssignees();","lastModifiedDate":"2022-04-11"},{"lineNumber":225,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":226,"author":{"gitId":"dannytayjy"},"content":"            for (Person assignee : assignees) {","lastModifiedDate":"2022-04-11"},{"lineNumber":227,"author":{"gitId":"dannytayjy"},"content":"                if (assignee.equals(personToEdit)) {","lastModifiedDate":"2022-04-11"},{"lineNumber":228,"author":{"gitId":"dannytayjy"},"content":"                    Task taskToUpdate \u003d expectedModelFullTaskList.get(expectedModelFullTaskList.indexOf(task));","lastModifiedDate":"2022-04-11"},{"lineNumber":229,"author":{"gitId":"dannytayjy"},"content":"                    expectedModel.updateTaskWithEditedPerson(taskToUpdate, assignees.indexOf(assignee), editedPerson);","lastModifiedDate":"2022-04-11"},{"lineNumber":230,"author":{"gitId":"dannytayjy"},"content":"                }","lastModifiedDate":"2022-04-11"},{"lineNumber":231,"author":{"gitId":"dannytayjy"},"content":"            }","lastModifiedDate":"2022-04-11"},{"lineNumber":232,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":234,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(expectedModelFullTaskList.get(INDEX_FIRST.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":235,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(personToEdit));","lastModifiedDate":"2022-04-11"},{"lineNumber":236,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(expectedModelFullTaskList.get(INDEX_SECOND.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":237,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(personToEdit));","lastModifiedDate":"2022-04-11"},{"lineNumber":238,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(expectedModelFullTaskList.get(INDEX_THIRD.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":239,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(personToEdit));","lastModifiedDate":"2022-04-11"},{"lineNumber":240,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":241,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(expectedModelFullTaskList.get(INDEX_FIRST.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":242,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(editedPerson));","lastModifiedDate":"2022-04-11"},{"lineNumber":243,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(expectedModelFullTaskList.get(INDEX_SECOND.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":244,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(editedPerson));","lastModifiedDate":"2022-04-11"},{"lineNumber":245,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(expectedModelFullTaskList.get(INDEX_THIRD.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":246,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(editedPerson));","lastModifiedDate":"2022-04-11"},{"lineNumber":247,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":248,"author":{"gitId":"dannytayjy"},"content":"        assertCommandSuccess(editEmployeeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"Denniszedead"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-03-25"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":255,"author":{"gitId":"dannytayjy"},"content":"        Person personToEditInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-04-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":257,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeCommand.EditEmployeeDescriptor descriptor \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":258,"author":{"gitId":"dannytayjy"},"content":"                new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":259,"author":{"gitId":"dannytayjy"},"content":"        Person editedPerson \u003d createEditedEmployee(personToEditInFilteredList, descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":260,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":261,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeCommand editEmployeeCommand \u003d new EditEmployeeCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":262,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":263,"author":{"gitId":"dannytayjy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-04-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":265,"author":{"gitId":"dannytayjy"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":266,"author":{"gitId":"dannytayjy"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":267,"author":{"gitId":"dannytayjy"},"content":"        expectedModel.setPerson(personToEditInFilteredList, editedPerson);","lastModifiedDate":"2022-04-11"},{"lineNumber":268,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":269,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e expectedModelFullTaskList \u003d expectedModel.getAddressBook().getTaskList();","lastModifiedDate":"2022-04-11"},{"lineNumber":270,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":271,"author":{"gitId":"dannytayjy"},"content":"        List\u003cTask\u003e affectedTaskList \u003d expectedModelFullTaskList.stream()","lastModifiedDate":"2022-04-11"},{"lineNumber":272,"author":{"gitId":"dannytayjy"},"content":"                .filter(task -\u003e task.getAssignees().contains(personToEditInFilteredList))","lastModifiedDate":"2022-04-11"},{"lineNumber":273,"author":{"gitId":"dannytayjy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-04-11"},{"lineNumber":274,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":275,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(affectedTaskList.size(), 3);","lastModifiedDate":"2022-04-11"},{"lineNumber":276,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":277,"author":{"gitId":"dannytayjy"},"content":"        for (Task task : affectedTaskList) {","lastModifiedDate":"2022-04-11"},{"lineNumber":278,"author":{"gitId":"dannytayjy"},"content":"            List\u003cPerson\u003e assignees \u003d task.getAssignees();","lastModifiedDate":"2022-04-11"},{"lineNumber":279,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":280,"author":{"gitId":"dannytayjy"},"content":"            for (Person assignee : assignees) {","lastModifiedDate":"2022-04-11"},{"lineNumber":281,"author":{"gitId":"dannytayjy"},"content":"                if (assignee.equals(personToEditInFilteredList)) {","lastModifiedDate":"2022-04-11"},{"lineNumber":282,"author":{"gitId":"dannytayjy"},"content":"                    Task taskToUpdate \u003d expectedModelFullTaskList.get(expectedModelFullTaskList.indexOf(task));","lastModifiedDate":"2022-04-11"},{"lineNumber":283,"author":{"gitId":"dannytayjy"},"content":"                    expectedModel.updateTaskWithEditedPerson(taskToUpdate, assignees.indexOf(assignee), editedPerson);","lastModifiedDate":"2022-04-11"},{"lineNumber":284,"author":{"gitId":"dannytayjy"},"content":"                }","lastModifiedDate":"2022-04-11"},{"lineNumber":285,"author":{"gitId":"dannytayjy"},"content":"            }","lastModifiedDate":"2022-04-11"},{"lineNumber":286,"author":{"gitId":"dannytayjy"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":288,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(expectedModelFullTaskList.get(INDEX_FIRST.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":289,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(personToEditInFilteredList));","lastModifiedDate":"2022-04-11"},{"lineNumber":290,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(expectedModelFullTaskList.get(INDEX_SECOND.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":291,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(personToEditInFilteredList));","lastModifiedDate":"2022-04-11"},{"lineNumber":292,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(expectedModelFullTaskList.get(INDEX_THIRD.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":293,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(personToEditInFilteredList));","lastModifiedDate":"2022-04-11"},{"lineNumber":294,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":295,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(expectedModelFullTaskList.get(INDEX_FIRST.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":296,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(editedPerson));","lastModifiedDate":"2022-04-11"},{"lineNumber":297,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(expectedModelFullTaskList.get(INDEX_SECOND.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":298,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(editedPerson));","lastModifiedDate":"2022-04-11"},{"lineNumber":299,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(expectedModelFullTaskList.get(INDEX_THIRD.getZeroBased())","lastModifiedDate":"2022-04-11"},{"lineNumber":300,"author":{"gitId":"dannytayjy"},"content":"                .getAssignees().contains(editedPerson));","lastModifiedDate":"2022-04-11"},{"lineNumber":301,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":302,"author":{"gitId":"dannytayjy"},"content":"        assertCommandSuccess(editEmployeeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-09"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":307,"author":{"gitId":"Denniszedead"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":308,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":309,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":310,"author":{"gitId":"ChanWeiJie"},"content":"        EditEmployeeCommand editCommand \u003d new EditEmployeeCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":312,"author":{"gitId":"dannytayjy"},"content":"        assertCommandFailure(editCommand, model, String.format(MESSAGE_DUPLICATE_PERSON, MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":317,"author":{"gitId":"Denniszedead"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-03-25"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":319,"author":{"gitId":"dannytayjy"},"content":"        // Edit person in filtered list into a duplicate in address book","lastModifiedDate":"2022-04-09"},{"lineNumber":320,"author":{"gitId":"Denniszedead"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":321,"author":{"gitId":"ChanWeiJie"},"content":"        EditEmployeeCommand editCommand \u003d new EditEmployeeCommand(INDEX_FIRST,","lastModifiedDate":"2022-03-30"},{"lineNumber":322,"author":{"gitId":"dannytayjy"},"content":"                new EditEmployeeDescriptorBuilder(personInList).build());","lastModifiedDate":"2022-04-09"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":324,"author":{"gitId":"dannytayjy"},"content":"        assertCommandFailure(editCommand, model, String.format(MESSAGE_DUPLICATE_PERSON, MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":330,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":331,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeCommand.EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder()","lastModifiedDate":"2022-04-09"},{"lineNumber":332,"author":{"gitId":"dannytayjy"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":333,"author":{"gitId":"ChanWeiJie"},"content":"        EditEmployeeCommand editCommand \u003d new EditEmployeeCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":335,"author":{"gitId":"dannytayjy"},"content":"        assertCommandFailure(editCommand, model,","lastModifiedDate":"2022-03-31"},{"lineNumber":336,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":345,"author":{"gitId":"Denniszedead"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-03-25"},{"lineNumber":346,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":347,"author":{"gitId":"Denniszedead"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-03-25"},{"lineNumber":348,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":349,"author":{"gitId":"dannytayjy"},"content":"        // Ensures that outOfBoundIndex is still in bounds of address book person list","lastModifiedDate":"2022-04-09"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":352,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeCommand.EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder()","lastModifiedDate":"2022-04-09"},{"lineNumber":353,"author":{"gitId":"dannytayjy"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":354,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeCommand editCommand \u003d new EditEmployeeCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-04-09"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":356,"author":{"gitId":"dannytayjy"},"content":"        assertCommandFailure(editCommand, model,","lastModifiedDate":"2022-03-31"},{"lineNumber":357,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":362,"author":{"gitId":"ChanWeiJie"},"content":"        final EditEmployeeCommand standardCommand \u003d new EditEmployeeCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2022-03-30"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":365,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeCommand.EditEmployeeDescriptor copyDescriptor \u003d","lastModifiedDate":"2022-04-09"},{"lineNumber":366,"author":{"gitId":"dannytayjy"},"content":"                new EditEmployeeCommand.EditEmployeeDescriptor(DESC_AMY);","lastModifiedDate":"2022-04-09"},{"lineNumber":367,"author":{"gitId":"ChanWeiJie"},"content":"        EditEmployeeCommand commandWithSameValues \u003d new EditEmployeeCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":380,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(standardCommand.equals(new EditEmployeeCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2022-03-30"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":383,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(standardCommand.equals(new EditEmployeeCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2022-03-30"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":385,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Denniszedead":8,"dannytayjy":280,"ChanWeiJie":7,"-":90}},{"path":"src/test/java/manageezpz/logic/commands/EditEmployeeDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.EditEmployeeCommand.EditEmployeeDescriptor;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"public class EditEmployeeDescriptorTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeCommand.EditEmployeeDescriptor descriptorWithSameValues \u003d new EditEmployeeDescriptor(DESC_AMY);","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeDescriptor editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"dannytayjy":14,"-":34}},{"path":"src/test/java/manageezpz/logic/commands/EditTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aaron-ljx"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":3,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TIME_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TIME_RANGE;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.CommandTestUtil.DEADLINE_TASK;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.CommandTestUtil.EVENT_TASK;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.CommandTestUtil.TODO_TASK;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_DATE;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.EditTaskCommand.MESSAGE_EDIT_TASK_NO_EMPTY_VALUES;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.EditTaskCommand.MESSAGE_EDIT_TODO_TASK_NO_DATE_AND_TIME_VALUES;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.testutil.TypicalTasks.getTypicalAddressBookTasks;","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"aaron-ljx"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"aaron-ljx"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"aaron-ljx"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"aaron-ljx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"aaron-ljx"},"content":"public class EditTaskCommandTest {","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"aaron-ljx"},"content":"    // A Todo task has index 0","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"aaron-ljx"},"content":"    // A Deadline task has index 1","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"aaron-ljx"},"content":"    // An Event task has index 10","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"aaron-ljx"},"content":"    // Based on the list returned by getTypicalAddressBookTasks()","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"aaron-ljx"},"content":"    private static final String UPDATED_DESC_STRING \u003d \"i have been updated\";","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"aaron-ljx"},"content":"    private static final String UPDATED_TIME_STRING \u003d \"2200\";","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"aaron-ljx"},"content":"    private static final String UPDATED_START_AND_END_TIME_STRING \u003d \"2000 2100\";","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"aaron-ljx"},"content":"    private static final String UPDATED_DATE_STRING \u003d \"2022-02-02\";","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"aaron-ljx"},"content":"    private static final HashMap\u003cString, Boolean\u003e defaultPrefixStatusHash \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"aaron-ljx"},"content":"    private Model model;","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"aaron-ljx"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"aaron-ljx"},"content":"    public void setUp() {","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"aaron-ljx"},"content":"        model \u003d new ModelManager(getTypicalAddressBookTasks(), new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"aaron-ljx"},"content":"    static {","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"aaron-ljx"},"content":"        defaultPrefixStatusHash.put(\"description\", true);","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"aaron-ljx"},"content":"        defaultPrefixStatusHash.put(\"date\", true);","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"aaron-ljx"},"content":"        defaultPrefixStatusHash.put(\"datetime\", true);","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"aaron-ljx"},"content":"    private void initDefaultPrefixStatusHash() {","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"aaron-ljx"},"content":"        defaultPrefixStatusHash.put(\"description\", true);","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"aaron-ljx"},"content":"        defaultPrefixStatusHash.put(\"date\", true);","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"aaron-ljx"},"content":"        defaultPrefixStatusHash.put(\"datetime\", true);","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":61,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"aaron-ljx"},"content":"    public void updateTodo_updateDescription_success() throws CommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"aaron-ljx"},"content":"        initDefaultPrefixStatusHash();","lastModifiedDate":"2022-04-08"},{"lineNumber":64,"author":{"gitId":"aaron-ljx"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(Index.fromZeroBased(0), UPDATED_DESC_STRING,","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"aaron-ljx"},"content":"                \"\", \"\", defaultPrefixStatusHash);","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"aaron-ljx"},"content":"        defaultPrefixStatusHash.replace(\"date\", false);","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"aaron-ljx"},"content":"        defaultPrefixStatusHash.replace(\"datetime\", false);","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"aaron-ljx"},"content":"        editTaskCommand.execute(model);","lastModifiedDate":"2022-04-09"},{"lineNumber":69,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":71,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":72,"author":{"gitId":"aaron-ljx"},"content":"    public void updateDeadline_updateDate_success() throws CommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":73,"author":{"gitId":"aaron-ljx"},"content":"        initDefaultPrefixStatusHash();","lastModifiedDate":"2022-04-08"},{"lineNumber":74,"author":{"gitId":"aaron-ljx"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(Index.fromZeroBased(1), \"\",","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"aaron-ljx"},"content":"                UPDATED_DATE_STRING, \"\", defaultPrefixStatusHash);","lastModifiedDate":"2022-04-09"},{"lineNumber":76,"author":{"gitId":"aaron-ljx"},"content":"        defaultPrefixStatusHash.replace(\"description\", false);","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"aaron-ljx"},"content":"        defaultPrefixStatusHash.replace(\"datetime\", false);","lastModifiedDate":"2022-04-08"},{"lineNumber":78,"author":{"gitId":"aaron-ljx"},"content":"        editTaskCommand.execute(model);","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":80,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":81,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":82,"author":{"gitId":"aaron-ljx"},"content":"    public void updateDeadline_updateDescriptionAndTime_success() throws CommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":83,"author":{"gitId":"aaron-ljx"},"content":"        initDefaultPrefixStatusHash();","lastModifiedDate":"2022-04-08"},{"lineNumber":84,"author":{"gitId":"aaron-ljx"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(Index.fromZeroBased(1), UPDATED_DESC_STRING,","lastModifiedDate":"2022-04-09"},{"lineNumber":85,"author":{"gitId":"aaron-ljx"},"content":"                \"\", UPDATED_TIME_STRING, defaultPrefixStatusHash);","lastModifiedDate":"2022-04-09"},{"lineNumber":86,"author":{"gitId":"aaron-ljx"},"content":"        defaultPrefixStatusHash.replace(\"date\", false);","lastModifiedDate":"2022-04-08"},{"lineNumber":87,"author":{"gitId":"aaron-ljx"},"content":"        editTaskCommand.execute(model);","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":89,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":91,"author":{"gitId":"aaron-ljx"},"content":"    public void updateEvent_updateTime_success() throws CommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":92,"author":{"gitId":"aaron-ljx"},"content":"        initDefaultPrefixStatusHash();","lastModifiedDate":"2022-04-08"},{"lineNumber":93,"author":{"gitId":"aaron-ljx"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(Index.fromZeroBased(10),","lastModifiedDate":"2022-04-09"},{"lineNumber":94,"author":{"gitId":"aaron-ljx"},"content":"                \"\", \"\", UPDATED_START_AND_END_TIME_STRING, defaultPrefixStatusHash);","lastModifiedDate":"2022-04-09"},{"lineNumber":95,"author":{"gitId":"aaron-ljx"},"content":"        defaultPrefixStatusHash.replace(\"description\", false);","lastModifiedDate":"2022-04-08"},{"lineNumber":96,"author":{"gitId":"aaron-ljx"},"content":"        defaultPrefixStatusHash.replace(\"date\", false);","lastModifiedDate":"2022-04-08"},{"lineNumber":97,"author":{"gitId":"aaron-ljx"},"content":"        editTaskCommand.execute(model);","lastModifiedDate":"2022-04-09"},{"lineNumber":98,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":100,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":101,"author":{"gitId":"aaron-ljx"},"content":"    public void updateEvent_updateDescriptionAndDate_success() throws CommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":102,"author":{"gitId":"aaron-ljx"},"content":"        initDefaultPrefixStatusHash();","lastModifiedDate":"2022-04-08"},{"lineNumber":103,"author":{"gitId":"aaron-ljx"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(Index.fromZeroBased(10),","lastModifiedDate":"2022-04-09"},{"lineNumber":104,"author":{"gitId":"aaron-ljx"},"content":"                UPDATED_DESC_STRING, UPDATED_DATE_STRING, \"\", defaultPrefixStatusHash);","lastModifiedDate":"2022-04-09"},{"lineNumber":105,"author":{"gitId":"aaron-ljx"},"content":"        defaultPrefixStatusHash.replace(\"datetime\", false);","lastModifiedDate":"2022-04-08"},{"lineNumber":106,"author":{"gitId":"aaron-ljx"},"content":"        editTaskCommand.execute(model);","lastModifiedDate":"2022-04-09"},{"lineNumber":107,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":108,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":109,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":110,"author":{"gitId":"aaron-ljx"},"content":"    public void updateEvent_invalidTimeRange_failure() {","lastModifiedDate":"2022-04-08"},{"lineNumber":111,"author":{"gitId":"aaron-ljx"},"content":"        initDefaultPrefixStatusHash();","lastModifiedDate":"2022-04-08"},{"lineNumber":112,"author":{"gitId":"aaron-ljx"},"content":"        String updatedTimeString \u003d \"2200 2100\";","lastModifiedDate":"2022-04-08"},{"lineNumber":113,"author":{"gitId":"aaron-ljx"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(Index.fromZeroBased(10),","lastModifiedDate":"2022-04-09"},{"lineNumber":114,"author":{"gitId":"aaron-ljx"},"content":"                UPDATED_DESC_STRING, UPDATED_DATE_STRING, updatedTimeString, defaultPrefixStatusHash);","lastModifiedDate":"2022-04-09"},{"lineNumber":115,"author":{"gitId":"aaron-ljx"},"content":"        assertThrows(ParseException.class, () -\u003e {","lastModifiedDate":"2022-04-08"},{"lineNumber":116,"author":{"gitId":"aaron-ljx"},"content":"            editTaskCommand.updateEvent(EVENT_TASK, VALID_TASK_DESCRIPTION, VALID_DATE,","lastModifiedDate":"2022-04-08"},{"lineNumber":117,"author":{"gitId":"aaron-ljx"},"content":"                    updatedTimeString);","lastModifiedDate":"2022-04-08"},{"lineNumber":118,"author":{"gitId":"aaron-ljx"},"content":"        }, MESSAGE_INVALID_TIME_RANGE);","lastModifiedDate":"2022-04-08"},{"lineNumber":119,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":120,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":121,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":122,"author":{"gitId":"aaron-ljx"},"content":"    public void updateEvent_invalidTimeFormat_failure() {","lastModifiedDate":"2022-04-08"},{"lineNumber":123,"author":{"gitId":"aaron-ljx"},"content":"        initDefaultPrefixStatusHash();","lastModifiedDate":"2022-04-08"},{"lineNumber":124,"author":{"gitId":"aaron-ljx"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(Index.fromZeroBased(10),","lastModifiedDate":"2022-04-09"},{"lineNumber":125,"author":{"gitId":"aaron-ljx"},"content":"                UPDATED_DESC_STRING, UPDATED_DATE_STRING, UPDATED_TIME_STRING, defaultPrefixStatusHash);","lastModifiedDate":"2022-04-09"},{"lineNumber":126,"author":{"gitId":"aaron-ljx"},"content":"        assertThrows(ParseException.class, () -\u003e {","lastModifiedDate":"2022-04-08"},{"lineNumber":127,"author":{"gitId":"aaron-ljx"},"content":"            editTaskCommand.updateEvent(EVENT_TASK, VALID_TASK_DESCRIPTION, VALID_DATE,","lastModifiedDate":"2022-04-08"},{"lineNumber":128,"author":{"gitId":"aaron-ljx"},"content":"                    UPDATED_TIME_STRING);","lastModifiedDate":"2022-04-09"},{"lineNumber":129,"author":{"gitId":"aaron-ljx"},"content":"        }, MESSAGE_INVALID_TIME_FORMAT);","lastModifiedDate":"2022-04-08"},{"lineNumber":130,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":131,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":132,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":133,"author":{"gitId":"aaron-ljx"},"content":"    public void updateDeadline_updateDescriptionButDatePrefixHasNoValue_failure() {","lastModifiedDate":"2022-04-08"},{"lineNumber":134,"author":{"gitId":"aaron-ljx"},"content":"        initDefaultPrefixStatusHash();","lastModifiedDate":"2022-04-08"},{"lineNumber":135,"author":{"gitId":"aaron-ljx"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(Index.fromZeroBased(1), UPDATED_DESC_STRING,","lastModifiedDate":"2022-04-09"},{"lineNumber":136,"author":{"gitId":"aaron-ljx"},"content":"                \"\", UPDATED_TIME_STRING, defaultPrefixStatusHash);","lastModifiedDate":"2022-04-09"},{"lineNumber":137,"author":{"gitId":"aaron-ljx"},"content":"        assertThrows(ParseException.class, () -\u003e {","lastModifiedDate":"2022-04-08"},{"lineNumber":138,"author":{"gitId":"aaron-ljx"},"content":"            editTaskCommand.updateDeadline(DEADLINE_TASK, UPDATED_DESC_STRING, \"\",","lastModifiedDate":"2022-04-08"},{"lineNumber":139,"author":{"gitId":"aaron-ljx"},"content":"                    UPDATED_TIME_STRING);","lastModifiedDate":"2022-04-09"},{"lineNumber":140,"author":{"gitId":"aaron-ljx"},"content":"        }, MESSAGE_EDIT_TASK_NO_EMPTY_VALUES);","lastModifiedDate":"2022-04-08"},{"lineNumber":141,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":142,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":143,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":144,"author":{"gitId":"aaron-ljx"},"content":"    public void updateTodo_updateDescriptionButDatePrefixExists_failure() {","lastModifiedDate":"2022-04-08"},{"lineNumber":145,"author":{"gitId":"aaron-ljx"},"content":"        initDefaultPrefixStatusHash();","lastModifiedDate":"2022-04-08"},{"lineNumber":146,"author":{"gitId":"aaron-ljx"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(Index.fromZeroBased(0), UPDATED_DESC_STRING,","lastModifiedDate":"2022-04-09"},{"lineNumber":147,"author":{"gitId":"aaron-ljx"},"content":"                \"\", \"\", defaultPrefixStatusHash);","lastModifiedDate":"2022-04-09"},{"lineNumber":148,"author":{"gitId":"aaron-ljx"},"content":"        assertThrows(ParseException.class, () -\u003e {","lastModifiedDate":"2022-04-08"},{"lineNumber":149,"author":{"gitId":"aaron-ljx"},"content":"            editTaskCommand.updateTodo(TODO_TASK, UPDATED_DESC_STRING);","lastModifiedDate":"2022-04-08"},{"lineNumber":150,"author":{"gitId":"aaron-ljx"},"content":"        }, MESSAGE_EDIT_TODO_TASK_NO_DATE_AND_TIME_VALUES);","lastModifiedDate":"2022-04-08"},{"lineNumber":151,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":152,"author":{"gitId":"aaron-ljx"},"content":"}","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"aaron-ljx":152}},{"path":"src/test/java/manageezpz/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"dannytayjy":5,"-":15}},{"path":"src/test/java/manageezpz/logic/commands/FindEmployeeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalPersons.getTypicalAddressBookEmployees;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.person.PersonMultiplePredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"class FindEmployeeCommandTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookEmployees(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookEmployees(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"    void equals() {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(List.of(\"alice\"), null, null);","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate2 \u003d new PersonMultiplePredicate(List.of(\"bob\"), null, null);","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"        FindEmployeeCommand command1 \u003d new FindEmployeeCommand(predicate1);","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"        FindEmployeeCommand command2 \u003d new FindEmployeeCommand(predicate2);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"        // Test ownself -\u003e true","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(command1.equals(command1));","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"        // Test same values -\u003e true","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1Copy \u003d new PersonMultiplePredicate(List.of(\"alice\"), null, null);","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"        FindEmployeeCommand command1Copy \u003d new FindEmployeeCommand(predicate1Copy);","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(command1.equals(command1Copy));","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"        // Some other object -\u003e false","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(command1.equals(\"False\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"        // null -\u003e false","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(command1.equals(null));","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"        // Different predicate -\u003e false","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(command1.equals(command2));","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"    void findEmployeeCommand_withNames_showEmployeesWithNames() {","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate \u003d new PersonMultiplePredicate(List.of(\"Alice\", \"Benson\"), null,","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"                null);","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"        List\u003cPerson\u003e expectedPeople \u003d List.of(ALICE, BENSON);","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"        String message \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"        FindEmployeeCommand command \u003d new FindEmployeeCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"        assertCommandSuccess(command, model, message, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"        assertEquals(expectedPeople, model.getFilteredPersonList());","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"    void findEmployeeCommand_withPhone_showEmployeeWithPhone() {","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate \u003d new PersonMultiplePredicate(null, ALICE.getPhone().toString(),","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"                null);","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"        List\u003cPerson\u003e expectedPeople \u003d List.of(ALICE);","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"        String message \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"        FindEmployeeCommand command \u003d new FindEmployeeCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"        assertCommandSuccess(command, model, message, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"        assertEquals(expectedPeople, model.getFilteredPersonList());","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"    void findEmployeeCommand_withEmail_showEmployeeWithEmail() {","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate \u003d new PersonMultiplePredicate(null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"                CARL.getEmail().toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"        List\u003cPerson\u003e expectedPeople \u003d List.of(CARL);","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"        String message \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"Denniszedead"},"content":"        FindEmployeeCommand command \u003d new FindEmployeeCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"Denniszedead"},"content":"        assertCommandSuccess(command, model, message, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"Denniszedead"},"content":"        assertEquals(expectedPeople, model.getFilteredPersonList());","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Denniszedead":91}},{"path":"src/test/java/manageezpz/logic/commands/FindTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_TODO;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.FYP_REPORT;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.GET_A_DRINK;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.GET_HAIRCUT;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.GO_FOR_RUN;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.HOUSE_VISTING;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.MALAYSIA_BORDERS_OPEN;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.PROJECT_CAPSTONE;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.READ_BOOK;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.RETURN_BOOK;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.WEEKLY_QUIZ;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.getTypicalAddressBookTasks;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.task.Date;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.task.Priority;","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.task.TaskMultiplePredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"class FindTaskCommandTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookTasks(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookTasks(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"    void equals() {","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate firstPredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"                new TaskMultiplePredicate(null, Collections.singletonList(\"Genshin\"), null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"                        null, null);","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate secondPredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"                new TaskMultiplePredicate(null, Collections.singletonList(\"Impact\"), null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"                        null, null);","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand firstFindTaskCommand \u003d new FindTaskCommand(firstPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand secondFindTaskCommand \u003d new FindTaskCommand(secondPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(firstFindTaskCommand.equals(firstFindTaskCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"        // same predicate -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand copyFirstFindTaskCommand \u003d new FindTaskCommand(firstPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(firstFindTaskCommand.equals(copyFirstFindTaskCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"        // Different types -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(firstFindTaskCommand.equals(\"predicate\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(firstFindTaskCommand.equals(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"        // Different description -\u003e return false","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(firstFindTaskCommand.equals(secondFindTaskCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"    void findCommand_findSpecificTaskType_showTaskOfSpecificType() {","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicate \u003d new TaskMultiplePredicate(PREFIX_TODO, null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"                null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 6);","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"        List\u003cTask\u003e expectedTasks \u003d List.of(WEEKLY_QUIZ, READ_BOOK, RETURN_BOOK, GO_FOR_RUN, GET_HAIRCUT, GET_A_DRINK);","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"        assertEquals(expectedTasks, model.getFilteredTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"    void findCommand_findTaskWithDescription_showTasksWithGivenDescription() {","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"        // Only 1 word","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"        List\u003cString\u003e keywords1 \u003d List.of(\"Book\");","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicate1 \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"Denniszedead"},"content":"                keywords1, null, null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"Denniszedead"},"content":"        expectedModel.updateFilteredTaskList(predicate1);","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"Denniszedead"},"content":"        String expectedMessage1 \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"Denniszedead"},"content":"        List\u003cTask\u003e expectedTasks1 \u003d List.of(READ_BOOK, RETURN_BOOK);","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate1);","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"Denniszedead"},"content":"        assertCommandSuccess(command, model, expectedMessage1, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"Denniszedead"},"content":"        assertEquals(expectedTasks1, model.getFilteredTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"Denniszedead"},"content":"        // More than 1 words","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"Denniszedead"},"content":"        List\u003cString\u003e keywords2 \u003d List.of(\"Book\", \"quiz\");","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicate2 \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"Denniszedead"},"content":"                keywords2, null, null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"Denniszedead"},"content":"        expectedModel.updateFilteredTaskList(predicate2);","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"Denniszedead"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"Denniszedead"},"content":"        List\u003cTask\u003e expectedTasks2 \u003d List.of(WEEKLY_QUIZ, READ_BOOK, RETURN_BOOK);","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand command2 \u003d new FindTaskCommand(predicate2);","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"Denniszedead"},"content":"        assertCommandSuccess(command2, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"Denniszedead"},"content":"        assertEquals(expectedTasks2, model.getFilteredTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"Denniszedead"},"content":"    void findCommand_findTaskWithDate_showTasksWithGivenDate() {","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"Denniszedead"},"content":"        Date date \u003d new Date(\"2022-04-01\");","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicate \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"Denniszedead"},"content":"                null, date, null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"Denniszedead"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"Denniszedead"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"Denniszedead"},"content":"        List\u003cTask\u003e expectedTasks \u003d List.of(PROJECT_CAPSTONE, MALAYSIA_BORDERS_OPEN);","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"Denniszedead"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"Denniszedead"},"content":"        assertEquals(expectedTasks, model.getFilteredTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"Denniszedead"},"content":"    void findCommand_findTaskWithPriority_showTasksWithGivenPriority() {","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicate \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"Denniszedead"},"content":"                null, null, Priority.HIGH, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"Denniszedead"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"Denniszedead"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"Denniszedead"},"content":"        List\u003cTask\u003e expectedTasks \u003d List.of(WEEKLY_QUIZ, PROJECT_CAPSTONE, FYP_REPORT);","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"Denniszedead"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"Denniszedead"},"content":"        assertEquals(expectedTasks, model.getFilteredTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"Denniszedead"},"content":"    void findCommand_findTaskWithAssignee_showTasksWithGivenAssignee() {","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicate \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, GEORGE.getName().fullName, null);","lastModifiedDate":"2022-04-08"},{"lineNumber":140,"author":{"gitId":"Denniszedead"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"Denniszedead"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"Denniszedead"},"content":"        List\u003cTask\u003e expectedTasks \u003d List.of(PROJECT_CAPSTONE, FYP_REPORT, RETURN_BOOK, HOUSE_VISTING);","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"Denniszedead"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-08"},{"lineNumber":146,"author":{"gitId":"Denniszedead"},"content":"        assertEquals(expectedTasks, model.getFilteredTaskList());","lastModifiedDate":"2022-04-08"},{"lineNumber":147,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"Denniszedead"},"content":"    void findCommand_findTaskWithIsMarked_showsTasksWithGivenIsMarked() {","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicate \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, null, Boolean.TRUE);","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"Denniszedead"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"Denniszedead"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"Denniszedead"},"content":"        List\u003cTask\u003e expectedTasks \u003d List.of(PROJECT_CAPSTONE, RETURN_BOOK);","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"Denniszedead"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"Denniszedead"},"content":"        assertEquals(expectedTasks, model.getFilteredTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"Denniszedead"},"content":"    void findCommand_findTaskWithMultipleProperties_showTasksWithGivenProperties() {","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"Denniszedead"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"Capstone\");","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"Denniszedead"},"content":"        Date date \u003d new Date(\"2022-04-01\");","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicate \u003d new TaskMultiplePredicate(PREFIX_DEADLINE, keywords, date,","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"Denniszedead"},"content":"                Priority.HIGH, GEORGE.getName().toString(), Boolean.TRUE);","lastModifiedDate":"2022-04-08"},{"lineNumber":168,"author":{"gitId":"Denniszedead"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"Denniszedead"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"Denniszedead"},"content":"        List\u003cTask\u003e expectedTasks \u003d List.of(PROJECT_CAPSTONE);","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"Denniszedead"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"Denniszedead"},"content":"        assertEquals(expectedTasks, model.getFilteredTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Denniszedead":159,"dannytayjy":3,"-":14}},{"path":"src/test/java/manageezpz/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.HelpCommand.MESSAGE_SHOWING_HELP;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_SHOWING_HELP, true, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"dannytayjy":6,"-":14}},{"path":"src/test/java/manageezpz/logic/commands/ListEmployeeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalPersons.getTypicalAddressBookEmployees;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"class ListEmployeeCommandTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookEmployees(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookEmployees(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"    void listEmployeesCommand_notFilteredList_showSameList() {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"        assertCommandSuccess(new ListEmployeeCommand(), model, ListEmployeeCommand.MESSAGE_ALL_SUCCESS,","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"                expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"    void listEmployeesCommand_listIsFiltered_showEverything() {","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"        assertCommandSuccess(new ListEmployeeCommand(), model, ListEmployeeCommand.MESSAGE_ALL_SUCCESS,","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"                expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Denniszedead":30}},{"path":"src/test/java/manageezpz/logic/commands/ListTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.getTypicalAddressBookTasks;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListTaskCommand.","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"public class ListTaskCommandTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"        model \u003d new ModelManager(getTypicalAddressBookTasks(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"        assertCommandSuccess(new ListTaskCommand(), model, ListTaskCommand.MESSAGE_ALL_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"        assertCommandSuccess(new ListTaskCommand(), model, ListTaskCommand.MESSAGE_ALL_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Denniszedead":18,"dannytayjy":2,"-":19}},{"path":"src/test/java/manageezpz/logic/commands/MarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.MarkTaskCommand.MESSAGE_MARK_TASK_SUCCESS;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.MarkTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalTasks.getTypicalAddressBookTasks;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"/**","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":" * {@code MarkTaskCommand}.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"public class MarkTaskCommandTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBookTasks(), new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"        Task taskToMark \u003d model.getFilteredTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"        Task markedTask \u003d expectedModel.markTask(taskToMark);","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MARK_TASK_SUCCESS, markedTask);","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"        assertCommandSuccess(markTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"        assertCommandFailure(markTaskCommand, model,","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_TASK_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"        Task taskToMarkInFilteredList \u003d model.getFilteredTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"        Task markedTask \u003d model.markTask(taskToMarkInFilteredList);","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MARK_TASK_SUCCESS, markedTask);","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"        showTaskAtIndex(expectedModel, INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"        assertCommandSuccess(markTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":74,"author":{"gitId":"dannytayjy"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"        // Ensures that outOfBoundIndex is still in bounds of address book task list","lastModifiedDate":"2022-04-09"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2022-04-09"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-04-09"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"        assertCommandFailure(markTaskCommand, model,","lastModifiedDate":"2022-04-09"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_TASK_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":86,"author":{"gitId":"dannytayjy"},"content":"    public void equals() {","lastModifiedDate":"2022-04-09"},{"lineNumber":87,"author":{"gitId":"dannytayjy"},"content":"        MarkTaskCommand markFirstTaskCommand \u003d new MarkTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"dannytayjy"},"content":"        MarkTaskCommand markSecondTaskCommand \u003d new MarkTaskCommand(INDEX_SECOND);","lastModifiedDate":"2022-04-09"},{"lineNumber":89,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":90,"author":{"gitId":"dannytayjy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-09"},{"lineNumber":91,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(markFirstTaskCommand.equals(markFirstTaskCommand));","lastModifiedDate":"2022-04-09"},{"lineNumber":92,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":93,"author":{"gitId":"dannytayjy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-09"},{"lineNumber":94,"author":{"gitId":"dannytayjy"},"content":"        MarkTaskCommand markFirstTaskCommandCopy \u003d new MarkTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":95,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(markFirstTaskCommand.equals(markFirstTaskCommandCopy));","lastModifiedDate":"2022-04-09"},{"lineNumber":96,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":97,"author":{"gitId":"dannytayjy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-04-09"},{"lineNumber":98,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(markFirstTaskCommand.equals(1));","lastModifiedDate":"2022-04-09"},{"lineNumber":99,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":100,"author":{"gitId":"dannytayjy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-09"},{"lineNumber":101,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(markFirstTaskCommand.equals(null));","lastModifiedDate":"2022-04-09"},{"lineNumber":102,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":103,"author":{"gitId":"dannytayjy"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-04-09"},{"lineNumber":104,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(markFirstTaskCommand.equals(markSecondTaskCommand));","lastModifiedDate":"2022-04-09"},{"lineNumber":105,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":106,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"dannytayjy":106}},{"path":"src/test/java/manageezpz/logic/commands/TagPriorityTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.TagTaskPriorityCommand.MESSAGE_TAG_PRIORITY_SUCCESS;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.parser.ParserUtil;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Priority;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.testutil.TodoBuilder;","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.testutil.TypicalTasks;","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"public class TagPriorityTaskCommandTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"    private final Model model \u003d new ModelManager(TypicalTasks.getTypicalAddressBookTasks(),","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"            new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"    public void tagTaskPriorityCommand_success_assertEquals() throws CommandException, ParseException {","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"        // Create a similar Todo Task","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"        Todo sameTodo \u003d new TodoBuilder().withDescription(\"Weekly Quiz\").build();","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"        // Get the Index of the same Todo Task","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"        Index index \u003d ParserUtil.parseIndex(\"1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"        String priority \u003d \"HIGH\";","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"        // Create TagTaskPriorityCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"        TagTaskPriorityCommand tagTaskPriorityCommand \u003d new TagTaskPriorityCommand(index, Priority.valueOf(priority));","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"        // Expected Message if the created task were to be tagged with Priority \"HIGH\"","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TAG_PRIORITY_SUCCESS, priority) + sameTodo;","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"        // Compare Created Task Tagged Priority and actual model\u0027s task.","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(commandResult, tagTaskPriorityCommand.execute(model));","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"alfredkohhh":45}},{"path":"src/test/java/manageezpz/logic/commands/TagTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.TagTaskCommand.MESSAGE_PERSON_TAGGED_TO_TASK;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.TagTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.parser.ParserUtil;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.testutil.TodoBuilder;","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.testutil.TypicalTasks;","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"public class TagTaskCommandTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"    private final Model model \u003d new ModelManager(TypicalTasks.getTypicalAddressBookTasks(),","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"            new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"    public void tagTaskCommand_success_assertEquals() throws CommandException, ParseException {","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"        Todo sameTodo \u003d new TodoBuilder().withDescription(\"Weekly Quiz\").build();","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"        model.addPerson(BOB);","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"        sameTodo.addAssignees(BOB);","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"        Index index \u003d ParserUtil.parseIndex(\"1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"        Task task \u003d model.getAddressBook().getTaskList().get(index.getZeroBased());","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"        if (task.getAssignees().contains(BOB)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"            model.untagEmployeeFromTask(task, BOB);","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"        TagTaskCommand tagTaskCommand \u003d new TagTaskCommand(index, BOB.getName().toString());","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d String.format(TagTaskCommand.MESSAGE_TAG_TASK_SUCCESS,","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"                BOB.getName().toString()) + sameTodo;","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(commandResult, tagTaskCommand.execute(model));","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"    public void tagTaskCommand_duplicateTag_throwsCommandException() throws ParseException {","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"        // Add Bob to UniquePersonList","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"        model.addPerson(BOB);","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"        // Tag task with Bob.","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"        Index index \u003d ParserUtil.parseIndex(\"1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"        Task task \u003d model.getAddressBook().getTaskList().get(index.getZeroBased());","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"        model.tagEmployeeToTask(task, BOB);","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"        TagTaskCommand tagTaskCommand \u003d new TagTaskCommand(index, BOB.getName().toString());","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSON_TAGGED_TO_TASK,","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"                BOB.getName().toString())","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"                + task","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"                + \"\\n\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"                + MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e tagTaskCommand.execute(model));","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"alfredkohhh":68}},{"path":"src/test/java/manageezpz/logic/commands/UnmarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.UnmarkTaskCommand.MESSAGE_UNMARK_TASK_SUCCESS;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.UnmarkTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalTasks.getTypicalAddressBookTasks;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"/**","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":" * {@code UnmarkTaskCommand}.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"public class UnmarkTaskCommandTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBookTasks(), new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"        Task taskToUnmark \u003d model.getFilteredTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"        Task unmarkedTask \u003d expectedModel.unmarkTask(taskToUnmark);","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_UNMARK_TASK_SUCCESS, unmarkedTask);","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"        assertCommandSuccess(unmarkTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"dannytayjy"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"        assertCommandFailure(unmarkTaskCommand, model,","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_TASK_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"        Task taskToUnmarkInFilteredList \u003d model.getFilteredTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"        Task unmarkedTask \u003d model.unmarkTask(taskToUnmarkInFilteredList);","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_UNMARK_TASK_SUCCESS, unmarkedTask);","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"        showTaskAtIndex(expectedModel, INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"        assertCommandSuccess(unmarkTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":69,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":71,"author":{"gitId":"dannytayjy"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":74,"author":{"gitId":"dannytayjy"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"        // Ensures that outOfBoundIndex is still in bounds of address book task list","lastModifiedDate":"2022-04-09"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2022-04-09"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-04-09"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"        assertCommandFailure(unmarkTaskCommand, model,","lastModifiedDate":"2022-04-09"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_TASK_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":83,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":84,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":85,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":86,"author":{"gitId":"dannytayjy"},"content":"    public void equals() {","lastModifiedDate":"2022-04-09"},{"lineNumber":87,"author":{"gitId":"dannytayjy"},"content":"        UnmarkTaskCommand unmarkFirstTaskCommand \u003d new UnmarkTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"dannytayjy"},"content":"        UnmarkTaskCommand unmarkSecondTaskCommand \u003d new UnmarkTaskCommand(INDEX_SECOND);","lastModifiedDate":"2022-04-09"},{"lineNumber":89,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":90,"author":{"gitId":"dannytayjy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-09"},{"lineNumber":91,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(unmarkFirstTaskCommand.equals(unmarkFirstTaskCommand));","lastModifiedDate":"2022-04-09"},{"lineNumber":92,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":93,"author":{"gitId":"dannytayjy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-09"},{"lineNumber":94,"author":{"gitId":"dannytayjy"},"content":"        UnmarkTaskCommand markFirstTaskCommandCopy \u003d new UnmarkTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-04-09"},{"lineNumber":95,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(unmarkFirstTaskCommand.equals(markFirstTaskCommandCopy));","lastModifiedDate":"2022-04-09"},{"lineNumber":96,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":97,"author":{"gitId":"dannytayjy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-04-09"},{"lineNumber":98,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(unmarkFirstTaskCommand.equals(1));","lastModifiedDate":"2022-04-09"},{"lineNumber":99,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":100,"author":{"gitId":"dannytayjy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-09"},{"lineNumber":101,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(unmarkFirstTaskCommand.equals(null));","lastModifiedDate":"2022-04-09"},{"lineNumber":102,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":103,"author":{"gitId":"dannytayjy"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-04-09"},{"lineNumber":104,"author":{"gitId":"dannytayjy"},"content":"        assertFalse(unmarkFirstTaskCommand.equals(unmarkSecondTaskCommand));","lastModifiedDate":"2022-04-09"},{"lineNumber":105,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":106,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"dannytayjy":106}},{"path":"src/test/java/manageezpz/logic/commands/UntagTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.logic.commands;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.UntagTaskCommand.MESSAGE_PERSON_NOT_TAGGED_TO_TASK;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.UntagTaskCommand.MESSAGE_UNTAG_TASK_SUCCESS;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.UntagTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.parser.ParserUtil;","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.testutil.TodoBuilder;","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.testutil.TypicalTasks;","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"public class UntagTaskCommandTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"    private final Model model \u003d new ModelManager(TypicalTasks.getTypicalAddressBookTasks(),","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"            new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"    public void untagTaskCommand_success_assertEquals() throws CommandException, ParseException {","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"        // Create a Todo task.","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"        Todo sameTodo \u003d new TodoBuilder().withDescription(\"Weekly Quiz\").build();","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"        // Populate model\u0027s UniquePersonList","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"        model.addPerson(BOB);","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"        // Add Bob to created Todo Task.","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"        sameTodo.addAssignees(BOB);","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"        // Get the Same task in model\u0027s UniqueTaskList.","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"        Index index \u003d ParserUtil.parseIndex(\"1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"        Task task \u003d model.getAddressBook().getTaskList().get(index.getZeroBased());","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"        // Tag Employee to same Task.","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"        model.tagEmployeeToTask(task, BOB);","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"        // Simulate untag task for both, compare results.","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"        if (task.getAssignees().contains(BOB)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"            UntagTaskCommand untagTaskCommand \u003d new UntagTaskCommand(index, BOB.getName().toString());","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"            String expectedMessage \u003d String.format(MESSAGE_UNTAG_TASK_SUCCESS,","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"                    BOB.getName().toString()) + sameTodo;","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"            CommandResult commandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"            assertEquals(commandResult, untagTaskCommand.execute(model));","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"    public void untagTaskCommand_notTagged_throwsCommandException() throws ParseException {","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"        // Populate model\u0027s UniquePersonList","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"        model.addPerson(BOB);","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"        // Create an untagTaskCommand with valid Index, and valid Name.","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"        Index index \u003d ParserUtil.parseIndex(\"1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"        UntagTaskCommand untagTaskCommand \u003d new UntagTaskCommand(index, BOB.getName().toString());","lastModifiedDate":"2022-04-09"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"        Task task \u003d model.getAddressBook().getTaskList().get(index.getZeroBased());","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"        // If task is already assigned with Person Bob, untag first.","lastModifiedDate":"2022-04-09"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"        if (task.getAssignees().contains(BOB)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"            task.removeAssigned(BOB);","lastModifiedDate":"2022-04-09"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"        // Simulate untag task","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSON_NOT_TAGGED_TO_TASK,","lastModifiedDate":"2022-04-09"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"                BOB.getName().toString())","lastModifiedDate":"2022-04-09"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"                + task","lastModifiedDate":"2022-04-09"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"                + \"\\n\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"                + MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e untagTaskCommand.execute(model));","lastModifiedDate":"2022-04-09"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"alfredkohhh":83}},{"path":"src/test/java/manageezpz/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.AddEmployeeCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.PersonBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"    private AddEmployeeCommandParser parser \u003d new AddEmployeeCommandParser();","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"                new AddEmployeeCommand(expectedPerson));","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"                new AddEmployeeCommand(expectedPerson));","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"                new AddEmployeeCommand(expectedPerson));","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB,","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"                new AddEmployeeCommand(expectedPerson));","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY,","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"                new AddEmployeeCommand(expectedPerson));","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, AddEmployeeCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB,","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC,","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"alfredkohhh"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, AddEmployeeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"alfredkohhh":27,"dannytayjy":28,"-":54}},{"path":"src/test/java/manageezpz/logic/parser/AddDeadlineTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aaron-ljx"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.testutil.TypicalTasks.GET_DRINK;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"aaron-ljx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.commands.AddDeadlineTaskCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"aaron-ljx"},"content":"public class AddDeadlineTaskCommandParserTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"aaron-ljx"},"content":"    private static final String GET_DRINK_INPUT \u003d \" desc/Get Drink by/2022-05-13 1800\";","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"aaron-ljx"},"content":"    private static final String INVALID_GET_DRINK_INPUT \u003d \" desc/ by/2022-05-13 1800\";","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"aaron-ljx"},"content":"    private final AddDeadlineTaskCommandParser parser \u003d new AddDeadlineTaskCommandParser();","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"aaron-ljx"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"aaron-ljx"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GET_DRINK_INPUT,","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"aaron-ljx"},"content":"                new AddDeadlineTaskCommand(GET_DRINK));","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"aaron-ljx"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"aaron-ljx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"aaron-ljx"},"content":"                AddDeadlineTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"aaron-ljx"},"content":"        // missing description prefix","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"aaron-ljx"},"content":"        assertParseFailure(parser, VALID_TASK_DESCRIPTION, expectedMessage);","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"aaron-ljx"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"aaron-ljx"},"content":"        // invalid description","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"aaron-ljx"},"content":"        assertParseFailure(parser, INVALID_GET_DRINK_INPUT,","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"aaron-ljx"},"content":"                Description.MESSAGE_CONSTRAINTS + \"\\n\\n\" + AddDeadlineTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"aaron-ljx"},"content":"        // non-empty preamble","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"aaron-ljx"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + GET_DRINK_INPUT,","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"aaron-ljx"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, AddDeadlineTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"aaron-ljx"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"aaron-ljx":47}},{"path":"src/test/java/manageezpz/logic/parser/AddEventTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aaron-ljx"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.testutil.TypicalTasks.HOUSE_VISTING;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"aaron-ljx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.commands.AddEventTaskCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"aaron-ljx"},"content":"public class AddEventTaskCommandParserTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"aaron-ljx"},"content":"    private static final String HOUSE_VISTING_INPUT \u003d \" desc/House Visiting at/2022-09-15 1800 2000\";","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"aaron-ljx"},"content":"    private static final String INVALID_HOUSE_VISTING_INPUT \u003d \" desc/ at/2022-09-15 1800 2000\";","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"aaron-ljx"},"content":"    private final AddEventTaskCommandParser parser \u003d new AddEventTaskCommandParser();","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"aaron-ljx"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"aaron-ljx"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + HOUSE_VISTING_INPUT,","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"aaron-ljx"},"content":"                new AddEventTaskCommand(HOUSE_VISTING));","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"aaron-ljx"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"aaron-ljx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, AddEventTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"aaron-ljx"},"content":"        // missing description prefix","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"aaron-ljx"},"content":"        assertParseFailure(parser, VALID_TASK_DESCRIPTION, expectedMessage);","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"aaron-ljx"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"aaron-ljx"},"content":"        // invalid description","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"aaron-ljx"},"content":"        assertParseFailure(parser, INVALID_HOUSE_VISTING_INPUT,","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"aaron-ljx"},"content":"                Description.MESSAGE_CONSTRAINTS + \"\\n\\n\" + AddEventTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"aaron-ljx"},"content":"        // non-empty preamble","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"aaron-ljx"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + HOUSE_VISTING_INPUT,","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"aaron-ljx"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, AddEventTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"aaron-ljx"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"aaron-ljx":48}},{"path":"src/test/java/manageezpz/logic/parser/AddTodoTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TODO_DESC_DRINK;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_TODO_DESC_READ_BOOK;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.TypicalTasks.READ_BOOK;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.AddTodoTaskCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.testutil.TodoBuilder;","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"public class AddTodoTaskCommandParserTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"    private final AddTodoTaskCommandParser parser \u003d new AddTodoTaskCommandParser();","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"        Todo expectedTodo \u003d new TodoBuilder(READ_BOOK).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"        // Whitespace only preamble \u0026\u0026 Description Valid","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_TODO_DESC_READ_BOOK,","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"                new AddTodoTaskCommand(expectedTodo));","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, AddTodoTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"        // missing description prefix","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, VALID_TASK_DESCRIPTION, expectedMessage);","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"        // invalid description","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TODO_DESC_DRINK,","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"                Description.MESSAGE_CONSTRAINTS + \"\\n\\n\" + AddTodoTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"        // non-empty preamble","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + VALID_TODO_DESC_READ_BOOK,","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, AddTodoTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"alfredkohhh":51}},{"path":"src/test/java/manageezpz/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.AddEmployeeCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.DeleteEmployeeCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.logic.commands.EditEmployeeCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.EditEmployeeCommand.EditEmployeeDescriptor;","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.logic.commands.ListTaskCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.task.TaskMultiplePredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.PersonBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.PersonUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"        AddEmployeeCommand command \u003d (AddEmployeeCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(new AddEmployeeCommand(person), command);","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"        DeleteEmployeeCommand command \u003d (DeleteEmployeeCommand) parser.parseCommand(","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"                DeleteEmployeeCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"        assertEquals(new DeleteEmployeeCommand(INDEX_FIRST), command);","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(person).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeCommand command \u003d (EditEmployeeCommand) parser.parseCommand(","lastModifiedDate":"2022-04-01"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"                EditEmployeeCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased()","lastModifiedDate":"2022-04-01"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"                        + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-04-01"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(new EditEmployeeCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"    public void parseCommand_findTask() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand command \u003d (FindTaskCommand) parser.parseCommand(","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"                FindTaskCommand.COMMAND_WORD","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"                        + \" \" + PREFIX_DESCRIPTION","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"        assertEquals(new FindTaskCommand(","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"                new TaskMultiplePredicate(null, keywords, null, null, null, null)),","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"                command);","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(parser.parseCommand(ListTaskCommand.COMMAND_WORD) instanceof ListTaskCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"dannytayjy"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-01"},{"lineNumber":99,"author":{"gitId":"dannytayjy"},"content":"                HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-04-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Denniszedead":16,"alfredkohhh":6,"dannytayjy":20,"ChanWeiJie":2,"-":62}},{"path":"src/test/java/manageezpz/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"dannytayjy":1,"-":149}},{"path":"src/test/java/manageezpz/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.Command;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"dannytayjy":3,"-":35}},{"path":"src/test/java/manageezpz/logic/parser/DeleteEmployeeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.DeleteEmployeeCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"public class DeleteEmployeeCommandParserTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"    private DeleteEmployeeCommandParser parser \u003d new DeleteEmployeeCommandParser();","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"    public void parse_validCommand_returnsDeleteEmployeeCommand() {","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"        assertParseSuccess(parser, \"1\", new DeleteEmployeeCommand(INDEX_FIRST));","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"    public void parse_invalidCommandEmpty_throwsParseException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, DeleteEmployeeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"    public void parse_invalidCommandContainsSpace_throwsParseException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"1 a\",","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, DeleteEmployeeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX + \"\\n\\n\" + DeleteEmployeeCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Denniszedead":2,"dannytayjy":23,"-":13}},{"path":"src/test/java/manageezpz/logic/parser/DeleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"public class DeleteTaskCommandParserTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"    private DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"    public void parse_validCommand_returnsDeleteTaskCommand() {","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTaskCommand(INDEX_FIRST));","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"    public void parse_invalidCommandEmpty_throwsParseException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"    public void parse_invalidCommandContainsSpace_throwsParseException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"1 a\",","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX + \"\\n\\n\" + DeleteTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"dannytayjy":38}},{"path":"src/test/java/manageezpz/logic/parser/EditEmployeeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_FIELD_NOT_EDITED;","lastModifiedDate":"2022-04-04"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.EditEmployeeCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.logic.commands.EditEmployeeCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.EditEmployeeCommand.EditEmployeeDescriptor;","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"public class EditEmployeeCommandParserTest {","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, MESSAGE_USAGE);","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"    private EditEmployeeCommandParser parser \u003d new EditEmployeeCommandParser();","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_FIELD_NOT_EDITED + MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY,","lastModifiedDate":"2022-04-05"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX + \"\\n\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY,","lastModifiedDate":"2022-04-05"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX + \"\\n\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC,","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"dannytayjy"},"content":"                Name.MESSAGE_CONSTRAINTS + \"\\n\\n\" + MESSAGE_USAGE); // invalid name","lastModifiedDate":"2022-04-05"},{"lineNumber":75,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC,","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"dannytayjy"},"content":"                Phone.MESSAGE_CONSTRAINTS + \"\\n\\n\" + MESSAGE_USAGE); // invalid phone","lastModifiedDate":"2022-04-05"},{"lineNumber":77,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC,","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"                Email.MESSAGE_CONSTRAINTS + \"\\n\\n\" + MESSAGE_USAGE); // invalid email","lastModifiedDate":"2022-04-05"},{"lineNumber":79,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"dannytayjy"},"content":"                Phone.MESSAGE_CONSTRAINTS + \"\\n\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-04-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC,","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"dannytayjy"},"content":"                Phone.MESSAGE_CONSTRAINTS + \"\\n\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"dannytayjy"},"content":"                Name.MESSAGE_CONSTRAINTS + \"\\n\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-04-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"Denniszedead"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"alfredkohhh"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"alfredkohhh"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-04-09"},{"lineNumber":101,"author":{"gitId":"alfredkohhh"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"ChanWeiJie"},"content":"        EditEmployeeCommand expectedCommand \u003d new EditEmployeeCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"Denniszedead"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeCommand.EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder()","lastModifiedDate":"2022-04-09"},{"lineNumber":113,"author":{"gitId":"dannytayjy"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":114,"author":{"gitId":"ChanWeiJie"},"content":"        EditEmployeeCommand expectedCommand \u003d new EditEmployeeCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"Denniszedead"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":125,"author":{"gitId":"ChanWeiJie"},"content":"        EditEmployeeCommand expectedCommand \u003d new EditEmployeeCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"dannytayjy"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":131,"author":{"gitId":"ChanWeiJie"},"content":"        expectedCommand \u003d new EditEmployeeCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"dannytayjy"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":137,"author":{"gitId":"ChanWeiJie"},"content":"        expectedCommand \u003d new EditEmployeeCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"Denniszedead"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"alfredkohhh"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"alfredkohhh"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"alfredkohhh"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-04-09"},{"lineNumber":149,"author":{"gitId":"alfredkohhh"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":150,"author":{"gitId":"ChanWeiJie"},"content":"        EditEmployeeCommand expectedCommand \u003d new EditEmployeeCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"Denniszedead"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"dannytayjy"},"content":"        EditEmployeeCommand.EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder()","lastModifiedDate":"2022-04-09"},{"lineNumber":161,"author":{"gitId":"dannytayjy"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":162,"author":{"gitId":"ChanWeiJie"},"content":"        EditEmployeeCommand expectedCommand \u003d new EditEmployeeCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"alfredkohhh"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"dannytayjy"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-04-09"},{"lineNumber":168,"author":{"gitId":"alfredkohhh"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":169,"author":{"gitId":"ChanWeiJie"},"content":"        expectedCommand \u003d new EditEmployeeCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Denniszedead":8,"alfredkohhh":10,"dannytayjy":55,"ChanWeiJie":9,"-":90}},{"path":"src/test/java/manageezpz/logic/parser/EditTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aaron-ljx"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_FIELD_NOT_EDITED;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_AT_DATETIME;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"aaron-ljx"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"aaron-ljx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"aaron-ljx"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"aaron-ljx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"aaron-ljx"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"aaron-ljx"},"content":"public class EditTaskCommandParserTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"aaron-ljx"},"content":"    private static final String INVALID_PREAMBLE_CONTAINS_WHITESPACE \u003d \"INVALID PREAMBLE\";","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"aaron-ljx"},"content":"    private static final String VALID_INPUT \u003d \"1 desc/ hello date/ 2022-01-01 at/ 1900\";","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"aaron-ljx"},"content":"    private EditTaskCommandParser parser \u003d new EditTaskCommandParser();","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"aaron-ljx"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"aaron-ljx"},"content":"        assertParseFailure(parser, INVALID_PREAMBLE_CONTAINS_WHITESPACE,","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"aaron-ljx"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"aaron-ljx"},"content":"                EditTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"aaron-ljx"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"aaron-ljx"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"aaron-ljx"},"content":"                        EditTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"aaron-ljx"},"content":"    public void parse_onlyPreambleNoPrefixes_failure() {","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"aaron-ljx"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"aaron-ljx"},"content":"                MESSAGE_FIELD_NOT_EDITED + EditTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"aaron-ljx"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"aaron-ljx"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"aaron-ljx"},"content":"    public void parse_success() throws ParseException {","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"aaron-ljx"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"aaron-ljx"},"content":"                ArgumentTokenizer.tokenize(VALID_INPUT,","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"aaron-ljx"},"content":"                        PREFIX_DESCRIPTION, PREFIX_AT_DATETIME, PREFIX_DATE);","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"aaron-ljx"},"content":"        String desc \u003d argMultimap.getValue(PREFIX_DESCRIPTION).orElse(\"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"aaron-ljx"},"content":"        String date \u003d argMultimap.getValue(PREFIX_DATE).orElse(\"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"aaron-ljx"},"content":"        String time \u003d argMultimap.getValue(PREFIX_AT_DATETIME).orElse(\"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"aaron-ljx"},"content":"        HashMap\u003cString, Boolean\u003e prefixStatusHash \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"aaron-ljx"},"content":"        prefixStatusHash.put(\"description\", true);","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"aaron-ljx"},"content":"        prefixStatusHash.put(\"date\", true);","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"aaron-ljx"},"content":"        prefixStatusHash.put(\"datetime\", true);","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"aaron-ljx"},"content":"        EditTaskCommand expectedCommand \u003d parser.parse(VALID_INPUT);","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"aaron-ljx"},"content":"        EditTaskCommand actualCommand \u003d new EditTaskCommand(Index.fromZeroBased(0), desc, date, time, prefixStatusHash);","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"aaron-ljx"},"content":"        assertEquals(expectedCommand, actualCommand);","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"aaron-ljx"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"aaron-ljx"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"aaron-ljx":59}},{"path":"src/test/java/manageezpz/logic/parser/FindEmployeeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.logic.commands.FindEmployeeCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.person.PersonMultiplePredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"class FindEmployeeCommandParserTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"    private static final String NO_OPTION_MESSAGE \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"            FindEmployeeCommand.NO_OPTIONS + FindEmployeeCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"    private static final String INVALID_NAME_MESSAGE \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"            FindEmployeeCommand.INVALID_NAME + FindEmployeeCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    private static final String INVALID_PHONE_MESSAGE \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"            FindEmployeeCommand.INVALID_PHONE + FindEmployeeCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"    private static final String INVALID_EMAIL_MESSAGE \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"            FindEmployeeCommand.INVALID_EMAIL + FindEmployeeCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"    private FindEmployeeCommandParser parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"    void setParser() {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"        parser \u003d new FindEmployeeCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"    void findEmployeeCommandParser_noOptions_throwParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, NO_OPTION_MESSAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"    void findEmployeeCommandParser_invalidOption_throwParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, \"nonExistentCommand/\");","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, NO_OPTION_MESSAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"    void findEmployeeCommandParser_noName_throwsParseException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_NAME.getPrefix());","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, INVALID_NAME_MESSAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"    void findEmployeeCommandParser_invalidNamesUsed_throwParseException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_NAME.getPrefix(), \" \");","lastModifiedDate":"2022-04-02"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, INVALID_NAME_MESSAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"    void findEmployeeCommandParser_validNamesUsed_findCommand() {","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_NAME.getPrefix(), VALID_NAME_AMY);","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"        List\u003cString\u003e names \u003d List.of((VALID_NAME_AMY).split(\" \"));","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate \u003d new PersonMultiplePredicate(names, null, null);","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"Denniszedead"},"content":"        FindEmployeeCommand command \u003d new FindEmployeeCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"        assertParseSuccess(parser, userInput, command);","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"    void findEmployeeCommandParser_emptyPhone_throwParseException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_PHONE.getPrefix());","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, INVALID_PHONE_MESSAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"    void findEmployeeCommandParser_invalidPhone_throwParseException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_PHONE.getPrefix(), \"1800-200-200\");","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, INVALID_PHONE_MESSAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"    void findEmployeeCommandParse_validPhone_findCommand() {","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_PHONE.getPrefix(), VALID_PHONE_AMY);","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate \u003d new PersonMultiplePredicate(null, VALID_PHONE_AMY, null);","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"Denniszedead"},"content":"        FindEmployeeCommand command \u003d new FindEmployeeCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"Denniszedead"},"content":"        assertParseSuccess(parser, userInput, command);","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"Denniszedead"},"content":"    void findEmployeeCommandParser_emptyEmail_throwParseException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_EMAIL.getPrefix());","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, INVALID_EMAIL_MESSAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"Denniszedead"},"content":"    void findEmployeeCommandParser_invalidEmail_throwParseException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_EMAIL.getPrefix(), \"Booby!Yahoo\");","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, INVALID_EMAIL_MESSAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"Denniszedead"},"content":"    void findEmployeeCommandParse_validEmail_findCommand() {","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_EMAIL.getPrefix(),","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"Denniszedead"},"content":"                VALID_EMAIL_AMY);","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate \u003d new PersonMultiplePredicate(null, null, VALID_EMAIL_AMY);","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"Denniszedead"},"content":"        FindEmployeeCommand command \u003d new FindEmployeeCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"Denniszedead"},"content":"        assertParseSuccess(parser, userInput, command);","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"Denniszedead"},"content":"    void findEmployeeCommandParse_multipleOptions_findCommand() {","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_NAME.getPrefix(),","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"Denniszedead"},"content":"                VALID_NAME_AMY, PREFIX_EMAIL.getPrefix(), VALID_EMAIL_AMY, PREFIX_PHONE.getPrefix(), VALID_PHONE_AMY);","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"Denniszedead"},"content":"        List\u003cString\u003e names \u003d List.of((VALID_NAME_AMY).split(\" \"));","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate \u003d new PersonMultiplePredicate(names, VALID_PHONE_AMY, VALID_EMAIL_AMY);","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"Denniszedead"},"content":"        FindEmployeeCommand command \u003d new FindEmployeeCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"Denniszedead"},"content":"        assertParseSuccess(parser, userInput, command);","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Denniszedead":116,"dannytayjy":5,"ChanWeiJie":1}},{"path":"src/test/java/manageezpz/logic/parser/FindTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_BOOLEAN;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_DATE;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_PRIORITY;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.LIST_DESCRIPTIONS;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_BOOLEAN;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_DATE;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_PRIORITY;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_ASSIGNEES;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_IS_MARKED;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_TODO;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.commons.core.Messages;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.task.Date;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Priority;","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.task.TaskMultiplePredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"class FindTaskCommandParserTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"    private static final String NO_OPTIONS_MESSAGE \u003d","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"            FindTaskCommand.NO_OPTIONS + FindTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"    private static final String INVALID_DESCRIPTION_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"            FindTaskCommand.INVALID_DESCRIPTION + FindTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"    private static final String INVALID_DATE_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"            FindTaskCommand.INVALID_DATE + FindTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"    private static final String INVALID_PRIORITY_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"            FindTaskCommand.INVALID_PRIORITY + FindTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"    private static final String INVALID_ASSIGNEE_COMMAND_MESSAGE \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"            FindTaskCommand.INVALID_ASSIGNEE + FindTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"    private static final String INVALID_BOOLEAN_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"            FindTaskCommand.INVALID_BOOLEAN + FindTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"    private static final String TODO_DATE_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-01"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"            FindTaskCommand.TODO_AND_DATE_OPTION_TOGETHER + FindTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"    private static final String MORE_THAN_ONE_TASK_TYPE_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"dannytayjy"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND,","lastModifiedDate":"2022-04-01"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"            FindTaskCommand.MORE_THAN_ONE_TASK_TYPE + FindTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"    private FindTaskCommandParser parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"    void setParser() {","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"        parser \u003d new FindTaskCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_noArguments_throwParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d \" \";","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, NO_OPTIONS_MESSAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_invalidArguments_throwParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, \"someNonExistentCommand/\");","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, NO_OPTIONS_MESSAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_specificTaskType_findTaskCommand() {","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_TODO.toString());","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate expectedPredicate \u003d new TaskMultiplePredicate(PREFIX_TODO, null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"                null, null, null);","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand expectedCommand \u003d new FindTaskCommand(expectedPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_multipleTaskType_throwsParseError() {","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_TODO.toString(), PREFIX_DEADLINE.toString());","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, MORE_THAN_ONE_TASK_TYPE_ERROR_MESSAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_emptyDescription_throwsParseError() {","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_DESCRIPTION.toString());","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, INVALID_DESCRIPTION_ERROR_MESSAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_withDescription_findTaskCommand() {","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_DESCRIPTION.toString(), VALID_TASK_DESCRIPTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate expectedPredicate \u003d new TaskMultiplePredicate(null, LIST_DESCRIPTIONS, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"Denniszedead"},"content":"                null, null, null);","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand expectedCommand \u003d new FindTaskCommand(expectedPredicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"Denniszedead"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_noDate_throwsParseException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_DATE.toString());","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, INVALID_DATE_ERROR_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_invalidDate_throwsParseException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_DATE.toString(), INVALID_DATE);","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, INVALID_DATE_ERROR_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_todoWithDateOption_throwParseError() {","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_TODO.toString(), PREFIX_DATE.toString(),","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"Denniszedead"},"content":"                VALID_DATE);","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, TODO_DATE_ERROR_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_validDate_findTaskCommand() {","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_DATE.toString(), VALID_DATE);","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate expectedPredicate \u003d new TaskMultiplePredicate(null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"Denniszedead"},"content":"                new Date(VALID_DATE), null, null, null);","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand expectedCommand \u003d new FindTaskCommand(expectedPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"Denniszedead"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_emptyPriority_throwParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_PRIORITY.toString());","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, INVALID_PRIORITY_ERROR_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_invalidPriority_throwParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_PRIORITY.toString(), INVALID_PRIORITY);","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, INVALID_PRIORITY_ERROR_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_validPriority_findTaskCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_PRIORITY.toString(), VALID_PRIORITY);","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate expectedPredicate \u003d new TaskMultiplePredicate(null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"ChanWeiJie"},"content":"                null, Priority.valueOf(VALID_PRIORITY), null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand expectedCommand \u003d new FindTaskCommand(expectedPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"Denniszedead"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_emptyAssignee_throwParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_ASSIGNEES.toString());","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, INVALID_ASSIGNEE_COMMAND_MESSAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_invalidAssignee_throwParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"ChanWeiJie"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_ASSIGNEES.toString(), \" \");","lastModifiedDate":"2022-04-02"},{"lineNumber":165,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, INVALID_ASSIGNEE_COMMAND_MESSAGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":169,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_haveAssignee_findTaskCommand() {","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_ASSIGNEES.toString(), VALID_NAME_AMY);","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate expectedPredicate \u003d new TaskMultiplePredicate(null, null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"Denniszedead"},"content":"                null, VALID_NAME_AMY, null);","lastModifiedDate":"2022-03-26"},{"lineNumber":173,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand expectedCommand \u003d new FindTaskCommand(expectedPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":174,"author":{"gitId":"Denniszedead"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_emptyBoolean_throwParseError() {","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_IS_MARKED.toString());","lastModifiedDate":"2022-03-30"},{"lineNumber":180,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, INVALID_BOOLEAN_ERROR_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":184,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_invalidBoolean_throwParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_IS_MARKED.toString(), INVALID_BOOLEAN);","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"Denniszedead"},"content":"        assertParseFailure(parser, userInput, INVALID_BOOLEAN_ERROR_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":188,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":190,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_validBoolean_findTaskCommand() {","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_IS_MARKED.toString(), VALID_BOOLEAN);","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate expectedPredicate \u003d new TaskMultiplePredicate(null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, Boolean.valueOf(VALID_BOOLEAN));","lastModifiedDate":"2022-03-26"},{"lineNumber":194,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand expectedCommand \u003d new FindTaskCommand(expectedPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":195,"author":{"gitId":"Denniszedead"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":196,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":197,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":198,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":199,"author":{"gitId":"Denniszedead"},"content":"    void findTaskCommandParser_multipleArguments_findTaskCommand() {","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"Denniszedead"},"content":"        String userInput \u003d String.join(\" \", EMPTY_STRING, PREFIX_DEADLINE.toString(),","lastModifiedDate":"2022-03-30"},{"lineNumber":201,"author":{"gitId":"Denniszedead"},"content":"                PREFIX_DESCRIPTION.toString(), VALID_TASK_DESCRIPTION, PREFIX_DATE.toString(), VALID_DATE,","lastModifiedDate":"2022-03-26"},{"lineNumber":202,"author":{"gitId":"Denniszedead"},"content":"                PREFIX_PRIORITY.toString(), VALID_PRIORITY, PREFIX_ASSIGNEES.toString(), VALID_NAME_AMY,","lastModifiedDate":"2022-03-26"},{"lineNumber":203,"author":{"gitId":"Denniszedead"},"content":"                PREFIX_IS_MARKED.toString(), VALID_BOOLEAN);","lastModifiedDate":"2022-03-26"},{"lineNumber":204,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate expectedPredicate \u003d new TaskMultiplePredicate(PREFIX_DEADLINE, LIST_DESCRIPTIONS,","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"ChanWeiJie"},"content":"                new Date(VALID_DATE), Priority.valueOf(VALID_PRIORITY), VALID_NAME_AMY,","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"Denniszedead"},"content":"                Boolean.valueOf(VALID_BOOLEAN));","lastModifiedDate":"2022-03-26"},{"lineNumber":207,"author":{"gitId":"Denniszedead"},"content":"        FindTaskCommand expectedCommand \u003d new FindTaskCommand(expectedPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":208,"author":{"gitId":"Denniszedead"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":209,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":210,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"Denniszedead":193,"dannytayjy":13,"ChanWeiJie":4}},{"path":"src/test/java/manageezpz/logic/parser/MarkTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.MarkTaskCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"public class MarkTaskCommandParserTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"    private MarkTaskCommandParser parser \u003d new MarkTaskCommandParser();","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"    public void parse_validCommand_returnsMarkTaskCommand() {","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"        assertParseSuccess(parser, \"1\", new MarkTaskCommand(INDEX_FIRST));","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"    public void parse_invalidCommandEmpty_throwsParseException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, MarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"    public void parse_invalidCommandContainsSpace_throwsParseException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"1 a\",","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, MarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX + \"\\n\\n\" + MarkTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"dannytayjy":38}},{"path":"src/test/java/manageezpz/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"    private static final String INVALID_NAME \u003d \" \";","lastModifiedDate":"2022-04-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Denniszedead":3,"dannytayjy":8,"ChanWeiJie":1,"-":102}},{"path":"src/test/java/manageezpz/logic/parser/TagTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_EMPTY_NAME;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_TASK_EMPTY_NAME;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_TASK_INVALID_INDEX;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_TASK_NO_INDEX;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_TASK_NO_PREFIX;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_TASK_PREAMBLE;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_TAG_TASK;","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.TagTaskCommand.MESSAGE_NO_SUCH_PERSON;","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.TagTaskCommandParser.MESSAGE_TAG_EMPLOYEE_TO_TASK_INSTRUCTIONS;","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.TagTaskCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.testutil.TodoBuilder;","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.testutil.TypicalTasks;","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"public class TagTaskCommandParserTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"    private final TagTaskCommandParser parser \u003d new TagTaskCommandParser();","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"    private final Model model \u003d new ModelManager(TypicalTasks.getTypicalAddressBookTasks(),","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"            new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"    public void parse_allFieldsPresent_success() throws ParseException {","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"        // Setup Model\u0027s UniquePersonList","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"        model.addPerson(BOB);","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"        Todo expectedTodo \u003d new TodoBuilder().withDescription(VALID_TASK_DESCRIPTION).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"        model.tagEmployeeToTask(expectedTodo, BOB);","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_TAG_TASK,","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"                new TagTaskCommand(ParserUtil.parseIndex(\"1\"), BOB.getName().toString()));","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageMissingNamePrefix \u003d String.format(MESSAGE_TAG_EMPLOYEE_TO_TASK_INSTRUCTIONS,","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"                TagTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageMissingIndex \u003d MESSAGE_INVALID_COMMAND_FORMAT + \" \\n\\n\" + TagTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"        // missing name prefix","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_TASK_NO_PREFIX, expectedMessageMissingNamePrefix);","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"        // missing index","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_TASK_NO_INDEX, expectedMessageMissingIndex);","lastModifiedDate":"2022-04-09"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"    public void parse_invalidValue_failure() throws ParseException {","lastModifiedDate":"2022-04-09"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"        model.addPerson(BOB);","lastModifiedDate":"2022-04-09"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"        Index invalidIndex \u003d ParserUtil.parseIndex(\"999\");","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"        Index validIndex \u003d ParserUtil.parseIndex(\"1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"        TagTaskCommand tagTaskCommandInvalidIndex \u003d new TagTaskCommand(invalidIndex, \"Bob\");","lastModifiedDate":"2022-04-09"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"        TagTaskCommand tagTaskCommandInvalidName \u003d new TagTaskCommand(validIndex, \"John\");","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageOutOfBoundsIndex \u003d String.format(MESSAGE_INVALID_TASK_DISPLAYED_INDEX,","lastModifiedDate":"2022-04-09"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"                TagTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageInvalidIndex \u003d ParserUtil.MESSAGE_INVALID_INDEX + \"\\n\\n\" + TagTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageInvalidName \u003d String.format(MESSAGE_NO_SUCH_PERSON, \"John\")","lastModifiedDate":"2022-04-09"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"                + \"\\n\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"                + TagTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageWhitespacePreamble \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT + \" \"","lastModifiedDate":"2022-04-09"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"                + MESSAGE_TAG_EMPLOYEE_TO_TASK_INSTRUCTIONS, TagTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageEmptyName \u003d String.format(MESSAGE_EMPTY_NAME, TagTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"        // invalid index (Out of bounds)","lastModifiedDate":"2022-04-09"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-04-09"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"                expectedMessageOutOfBoundsIndex, () -\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"                        tagTaskCommandInvalidIndex.execute(model));","lastModifiedDate":"2022-04-09"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"        // invalid index (Invalid value)","lastModifiedDate":"2022-04-09"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_TASK_INVALID_INDEX, expectedMessageInvalidIndex);","lastModifiedDate":"2022-04-09"},{"lineNumber":96,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":97,"author":{"gitId":"alfredkohhh"},"content":"        // invalid name (Does not exist in UniquePersonList)","lastModifiedDate":"2022-04-09"},{"lineNumber":98,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-04-09"},{"lineNumber":99,"author":{"gitId":"alfredkohhh"},"content":"                expectedMessageInvalidName, () -\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":100,"author":{"gitId":"alfredkohhh"},"content":"                        tagTaskCommandInvalidName.execute(model));","lastModifiedDate":"2022-04-09"},{"lineNumber":101,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":102,"author":{"gitId":"alfredkohhh"},"content":"        // invalid name (Empty Name)","lastModifiedDate":"2022-04-09"},{"lineNumber":103,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_TASK_EMPTY_NAME, expectedMessageEmptyName);","lastModifiedDate":"2022-04-09"},{"lineNumber":104,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":105,"author":{"gitId":"alfredkohhh"},"content":"        // preamble contains white spaces","lastModifiedDate":"2022-04-09"},{"lineNumber":106,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_TASK_PREAMBLE, expectedMessageWhitespacePreamble);","lastModifiedDate":"2022-04-09"},{"lineNumber":107,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":108,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"alfredkohhh":108}},{"path":"src/test/java/manageezpz/logic/parser/TagTaskPriorityCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_PRIORITY_EMPTY_PREAMBLE;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_PRIORITY_EMPTY_PRIORITY;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_PRIORITY_INVALID_INDEX;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_PRIORITY_INVALID_PRIORITY;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_PRIORITY_NO_INDEX;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_PRIORITY_NO_PREFIX;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_PRIORITY_PREAMBLE;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_TAG_PRIORITY;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION;","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.TagTaskPriorityCommandParser.MESSAGE_EMPTY_PRIORITY;","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.TagTaskPriorityCommandParser.MESSAGE_INVALID_PRIORITY;","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.TagTaskPriorityCommandParser.MESSAGE_TAG_PRIORITY_TO_TASK_INSTRUCTIONS;","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.TagTaskPriorityCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Priority;","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.testutil.TodoBuilder;","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.testutil.TypicalTasks;","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"public class TagTaskPriorityCommandParserTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"    private final TagTaskPriorityCommandParser parser \u003d new TagTaskPriorityCommandParser();","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"    private final Model model \u003d new ModelManager(TypicalTasks.getTypicalAddressBookTasks(),","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"            new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"    public void parse_allFieldsPresent_success() throws ParseException {","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"        // Setup Priority","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"        Priority priority \u003d Priority.valueOf(\"HIGH\");","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"        Todo expectedTodo \u003d new TodoBuilder().withDescription(VALID_TASK_DESCRIPTION).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"        expectedTodo.setPriority(priority);","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_TAG_PRIORITY,","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"                new TagTaskPriorityCommand(ParserUtil.parseIndex(\"1\"), priority));","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageMissingPriorityPrefix \u003d String.format(MESSAGE_TAG_PRIORITY_TO_TASK_INSTRUCTIONS,","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"                TagTaskPriorityCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageMissingIndex \u003d MESSAGE_INVALID_COMMAND_FORMAT","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"                + \" \\n\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"                + TagTaskPriorityCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"        // missing priority prefix","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_PRIORITY_NO_PREFIX, expectedMessageMissingPriorityPrefix);","lastModifiedDate":"2022-04-09"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"        // missing index","lastModifiedDate":"2022-04-09"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_PRIORITY_NO_INDEX, expectedMessageMissingIndex);","lastModifiedDate":"2022-04-09"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"    public void parse_invalidValue_failure() throws ParseException {","lastModifiedDate":"2022-04-09"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"        Index invalidIndex \u003d ParserUtil.parseIndex(\"999\");","lastModifiedDate":"2022-04-09"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"        Priority validPriority \u003d Priority.valueOf(\"HIGH\");","lastModifiedDate":"2022-04-09"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"        TagTaskPriorityCommand tagTaskPriorityCommandInvalidIndex \u003d","lastModifiedDate":"2022-04-09"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"                new TagTaskPriorityCommand(invalidIndex, validPriority);","lastModifiedDate":"2022-04-09"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageOutOfBoundsIndex \u003d String.format(MESSAGE_INVALID_TASK_DISPLAYED_INDEX,","lastModifiedDate":"2022-04-09"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"                TagTaskPriorityCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageInvalidIndex \u003d ParserUtil.MESSAGE_INVALID_INDEX","lastModifiedDate":"2022-04-09"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"                + \"\\n\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"                + TagTaskPriorityCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageInvalidPriority \u003d String.format(MESSAGE_INVALID_PRIORITY,","lastModifiedDate":"2022-04-09"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"                TagTaskPriorityCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageWhitespacePreamble \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT","lastModifiedDate":"2022-04-09"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"                + \" \" + MESSAGE_TAG_PRIORITY_TO_TASK_INSTRUCTIONS, TagTaskPriorityCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageEmptyPreamble \u003d MESSAGE_INVALID_COMMAND_FORMAT","lastModifiedDate":"2022-04-09"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"                + \" \\n\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"                + TagTaskPriorityCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":96,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageEmptyPriority \u003d String.format(MESSAGE_EMPTY_PRIORITY,","lastModifiedDate":"2022-04-09"},{"lineNumber":97,"author":{"gitId":"alfredkohhh"},"content":"                TagTaskPriorityCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":98,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":99,"author":{"gitId":"alfredkohhh"},"content":"        // invalid index (Out of bounds)","lastModifiedDate":"2022-04-09"},{"lineNumber":100,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-04-09"},{"lineNumber":101,"author":{"gitId":"alfredkohhh"},"content":"                expectedMessageOutOfBoundsIndex, () -\u003e tagTaskPriorityCommandInvalidIndex.execute(model));","lastModifiedDate":"2022-04-09"},{"lineNumber":102,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":103,"author":{"gitId":"alfredkohhh"},"content":"        // invalid index (Invalid value)","lastModifiedDate":"2022-04-09"},{"lineNumber":104,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_PRIORITY_INVALID_INDEX, expectedMessageInvalidIndex);","lastModifiedDate":"2022-04-09"},{"lineNumber":105,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":106,"author":{"gitId":"alfredkohhh"},"content":"        // invalid Priority (Not Enum Values)","lastModifiedDate":"2022-04-09"},{"lineNumber":107,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_PRIORITY_INVALID_PRIORITY, expectedMessageInvalidPriority);","lastModifiedDate":"2022-04-09"},{"lineNumber":108,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":109,"author":{"gitId":"alfredkohhh"},"content":"        // invalid Priority (Empty Priority)","lastModifiedDate":"2022-04-09"},{"lineNumber":110,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_PRIORITY_EMPTY_PRIORITY, expectedMessageEmptyPriority);","lastModifiedDate":"2022-04-09"},{"lineNumber":111,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":112,"author":{"gitId":"alfredkohhh"},"content":"        // preamble contains white spaces","lastModifiedDate":"2022-04-09"},{"lineNumber":113,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_PRIORITY_PREAMBLE, expectedMessageWhitespacePreamble);","lastModifiedDate":"2022-04-09"},{"lineNumber":114,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":115,"author":{"gitId":"alfredkohhh"},"content":"        // preamble empty","lastModifiedDate":"2022-04-09"},{"lineNumber":116,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_PRIORITY_EMPTY_PREAMBLE, expectedMessageEmptyPreamble);","lastModifiedDate":"2022-04-09"},{"lineNumber":117,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":118,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":119,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"alfredkohhh":119}},{"path":"src/test/java/manageezpz/logic/parser/UnmarkTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_BIND;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"public class UnmarkTaskCommandParserTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"    private UnmarkTaskCommandParser parser \u003d new UnmarkTaskCommandParser();","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"    public void parse_validCommand_returnsUnmarkTaskCommand() {","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"        assertParseSuccess(parser, \"1\", new UnmarkTaskCommand(INDEX_FIRST));","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"    public void parse_invalidCommandEmpty_throwsParseException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, UnmarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"    public void parse_invalidCommandContainsSpace_throwsParseException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"1 a\",","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT_BIND, UnmarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX + \"\\n\\n\" + UnmarkTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"dannytayjy":38}},{"path":"src/test/java/manageezpz/logic/parser/UntagTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.logic.parser;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_EMPTY_NAME;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_TASK_EMPTY_NAME;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_TASK_INVALID_INDEX;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_TASK_NO_INDEX;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_TASK_NO_PREFIX;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.INVALID_TAG_TASK_PREAMBLE;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_TAG_TASK;","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.commands.TagTaskCommand.MESSAGE_NO_SUCH_PERSON;","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.logic.parser.UntagTaskCommandParser.MESSAGE_UNTAG_EMPLOYEE_TO_TASK_INSTRUCTIONS;","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.UntagTaskCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.Model;","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.ModelManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.testutil.TodoBuilder;","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.testutil.TypicalTasks;","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"public class UntagTaskCommandParserTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"    private final UntagTaskCommandParser parser \u003d new UntagTaskCommandParser();","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"    private final Model model \u003d new ModelManager(TypicalTasks.getTypicalAddressBookTasks(),","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"            new UserPrefs());","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"    public void parse_allFieldsPresent_success() throws ParseException {","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"        // Setup Model\u0027s UniquePersonList","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"        model.addPerson(BOB);","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"        Todo expectedTodo \u003d new TodoBuilder().withDescription(VALID_TASK_DESCRIPTION).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"        model.tagEmployeeToTask(expectedTodo, BOB);","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_TAG_TASK,","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"                new UntagTaskCommand(ParserUtil.parseIndex(\"1\"), BOB.getName().toString()));","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageMissingNamePrefix \u003d String.format(MESSAGE_UNTAG_EMPLOYEE_TO_TASK_INSTRUCTIONS,","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"                UntagTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageMissingIndex \u003d MESSAGE_INVALID_COMMAND_FORMAT + \" \\n\\n\" + UntagTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"        // missing name prefix","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_TASK_NO_PREFIX, expectedMessageMissingNamePrefix);","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"        // missing index","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_TASK_NO_INDEX, expectedMessageMissingIndex);","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"    public void parse_invalidValue_failure() throws ParseException {","lastModifiedDate":"2022-04-09"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"        model.addPerson(BOB);","lastModifiedDate":"2022-04-09"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"        Index invalidIndex \u003d ParserUtil.parseIndex(\"999\");","lastModifiedDate":"2022-04-09"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"        Index validIndex \u003d ParserUtil.parseIndex(\"1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"        UntagTaskCommand untagTaskCommandInvalidIndex \u003d","lastModifiedDate":"2022-04-09"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"                new UntagTaskCommand(invalidIndex, \"Bob\");","lastModifiedDate":"2022-04-09"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"        UntagTaskCommand untagTaskCommandInvalidName \u003d","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"                new UntagTaskCommand(validIndex, \"John\");","lastModifiedDate":"2022-04-09"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageOutOfBoundsIndex \u003d String.format(MESSAGE_INVALID_TASK_DISPLAYED_INDEX,","lastModifiedDate":"2022-04-09"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"                UntagTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageInvalidIndex \u003d ParserUtil.MESSAGE_INVALID_INDEX","lastModifiedDate":"2022-04-09"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"                + \"\\n\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"                + UntagTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageInvalidName \u003d String.format(MESSAGE_NO_SUCH_PERSON, \"John\")","lastModifiedDate":"2022-04-09"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"                + \"\\n\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"                + UntagTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-09"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageWhitespacePreamble \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT + \" \"","lastModifiedDate":"2022-04-09"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"                + MESSAGE_UNTAG_EMPLOYEE_TO_TASK_INSTRUCTIONS, UntagTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessageEmptyName \u003d String.format(MESSAGE_EMPTY_NAME, UntagTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"        // invalid index (Out of bounds)","lastModifiedDate":"2022-04-09"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-04-09"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"                expectedMessageOutOfBoundsIndex, () -\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"                        untagTaskCommandInvalidIndex.execute(model));","lastModifiedDate":"2022-04-09"},{"lineNumber":96,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":97,"author":{"gitId":"alfredkohhh"},"content":"        // invalid index (Invalid value)","lastModifiedDate":"2022-04-09"},{"lineNumber":98,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_TASK_INVALID_INDEX, expectedMessageInvalidIndex);","lastModifiedDate":"2022-04-09"},{"lineNumber":99,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":100,"author":{"gitId":"alfredkohhh"},"content":"        // invalid name (Does not exist in UniquePersonList)","lastModifiedDate":"2022-04-09"},{"lineNumber":101,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-04-09"},{"lineNumber":102,"author":{"gitId":"alfredkohhh"},"content":"            expectedMessageInvalidName, () -\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":103,"author":{"gitId":"alfredkohhh"},"content":"                        untagTaskCommandInvalidName.execute(model));","lastModifiedDate":"2022-04-09"},{"lineNumber":104,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":105,"author":{"gitId":"alfredkohhh"},"content":"        // invalid name (Empty Name)","lastModifiedDate":"2022-04-09"},{"lineNumber":106,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_TASK_EMPTY_NAME, expectedMessageEmptyName);","lastModifiedDate":"2022-04-09"},{"lineNumber":107,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":108,"author":{"gitId":"alfredkohhh"},"content":"        // preamble contains white spaces","lastModifiedDate":"2022-04-09"},{"lineNumber":109,"author":{"gitId":"alfredkohhh"},"content":"        assertParseFailure(parser, INVALID_TAG_TASK_PREAMBLE, expectedMessageWhitespacePreamble);","lastModifiedDate":"2022-04-09"},{"lineNumber":110,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":111,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"alfredkohhh":111}},{"path":"src/test/java/manageezpz/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalPersons.getTypicalAddressBookEmployees;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.READ_BOOK;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.PersonBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"        AddressBook newData \u003d getTypicalAddressBookEmployees();","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"ChanWeiJie"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"ChanWeiJie"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"ChanWeiJie"},"content":"        AddressBookStub(List\u003cPerson\u003e persons) {","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"ChanWeiJie"},"content":"        AddressBookStub(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"ChanWeiJie"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"ChanWeiJie"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"ChanWeiJie"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"ChanWeiJie"},"content":"            return tasks;","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"ChanWeiJie"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Task Tests for ManageEZPZ \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"ChanWeiJie"},"content":"    public void resetData_withDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"ChanWeiJie"},"content":"        // Two tasks with the same description fields","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"ChanWeiJie"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList(READ_BOOK, READ_BOOK);","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"ChanWeiJie"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newTasks);","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"ChanWeiJie"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasTask(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"ChanWeiJie"},"content":"    public void hasTask_taskNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(addressBook.hasTask(READ_BOOK));","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"ChanWeiJie"},"content":"    public void hasTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"ChanWeiJie"},"content":"        addressBook.addTask(READ_BOOK);","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(addressBook.hasTask(READ_BOOK));","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"ChanWeiJie"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getTaskList().remove(0));","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Denniszedead":3,"dannytayjy":5,"ChanWeiJie":46,"-":90}},{"path":"src/test/java/manageezpz/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.testutil.TypicalTasks.GET_DRINK;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.testutil.TypicalTasks.HOUSE_VISTING;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.READ_BOOK;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.RETURN_BOOK;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.testutil.TypicalTasks.WEEKLY_QUIZ;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.GuiSettings;","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.model.person.PersonMultiplePredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Priority;","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.AddressBookBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":104,"author":{"gitId":"ChanWeiJie"},"content":"    public void deletePerson_personInaddressBook_returnTrue() {","lastModifiedDate":"2022-04-06"},{"lineNumber":105,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2022-04-06"},{"lineNumber":106,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.deletePerson(ALICE);","lastModifiedDate":"2022-04-06"},{"lineNumber":107,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(!modelManager.getFilteredPersonList().contains(ALICE));","lastModifiedDate":"2022-04-06"},{"lineNumber":108,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":109,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":135,"author":{"gitId":"Denniszedead"},"content":"        modelManager.updateFilteredPersonList(new PersonMultiplePredicate(Arrays.asList(keywords), null,","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"Denniszedead"},"content":"                null));","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"ChanWeiJie"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Test for ManageEZPZ (Tasks)\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"ChanWeiJie"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"ChanWeiJie"},"content":"    public void hasTask_taskNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(modelManager.hasTask(READ_BOOK));","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"ChanWeiJie"},"content":"    public void hasTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.addTask(RETURN_BOOK);","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(modelManager.hasTask(RETURN_BOOK));","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"ChanWeiJie"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":172,"author":{"gitId":"ChanWeiJie"},"content":"    public void hasDeadline_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":173,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasDeadline(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":174,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":175,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":176,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":177,"author":{"gitId":"ChanWeiJie"},"content":"    public void hasEvent_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":178,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasEvent(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":179,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":180,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":182,"author":{"gitId":"ChanWeiJie"},"content":"    public void hasTodo_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":183,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTodo(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":184,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":185,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":186,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":187,"author":{"gitId":"ChanWeiJie"},"content":"    public void hasDeadline_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-21"},{"lineNumber":188,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.addDeadline(GET_DRINK);","lastModifiedDate":"2022-03-21"},{"lineNumber":189,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(modelManager.hasDeadline(GET_DRINK));","lastModifiedDate":"2022-03-21"},{"lineNumber":190,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":191,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":192,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":193,"author":{"gitId":"ChanWeiJie"},"content":"    public void hasEvent_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-21"},{"lineNumber":194,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.addEvent(HOUSE_VISTING);","lastModifiedDate":"2022-03-21"},{"lineNumber":195,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(modelManager.hasEvent(HOUSE_VISTING));","lastModifiedDate":"2022-03-21"},{"lineNumber":196,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":197,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":198,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":199,"author":{"gitId":"ChanWeiJie"},"content":"    public void hasTodo_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-21"},{"lineNumber":200,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.addTodo(WEEKLY_QUIZ);","lastModifiedDate":"2022-03-21"},{"lineNumber":201,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(modelManager.hasTodo(WEEKLY_QUIZ));","lastModifiedDate":"2022-03-21"},{"lineNumber":202,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":203,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":204,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":205,"author":{"gitId":"ChanWeiJie"},"content":"    public void deleteTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-21"},{"lineNumber":206,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.addTask(READ_BOOK);","lastModifiedDate":"2022-03-21"},{"lineNumber":207,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.deleteTask(READ_BOOK);","lastModifiedDate":"2022-03-21"},{"lineNumber":208,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(!modelManager.hasTask(READ_BOOK));","lastModifiedDate":"2022-03-21"},{"lineNumber":209,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":210,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":211,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":212,"author":{"gitId":"ChanWeiJie"},"content":"    public void tagEmployeeToTask_employeeAndTaskInAddressBook_returnsTrue() {","lastModifiedDate":"2022-04-06"},{"lineNumber":213,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2022-04-06"},{"lineNumber":214,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.addTask(READ_BOOK);","lastModifiedDate":"2022-04-06"},{"lineNumber":215,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.tagEmployeeToTask(READ_BOOK, ALICE);","lastModifiedDate":"2022-04-06"},{"lineNumber":216,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(modelManager.isEmployeeTaggedToTask(READ_BOOK, ALICE));","lastModifiedDate":"2022-04-06"},{"lineNumber":217,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":218,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":219,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":220,"author":{"gitId":"ChanWeiJie"},"content":"    public void untagEmployeeToTask_employeeAndTaskInAddressBook_returnsTrue() {","lastModifiedDate":"2022-04-06"},{"lineNumber":221,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2022-04-06"},{"lineNumber":222,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.addTask(READ_BOOK);","lastModifiedDate":"2022-04-06"},{"lineNumber":223,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.untagEmployeeFromTask(READ_BOOK, ALICE);","lastModifiedDate":"2022-04-06"},{"lineNumber":224,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(!modelManager.isEmployeeTaggedToTask(READ_BOOK, ALICE));","lastModifiedDate":"2022-04-06"},{"lineNumber":225,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":226,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":227,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":228,"author":{"gitId":"ChanWeiJie"},"content":"    public void tagPriorityToTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2022-04-06"},{"lineNumber":229,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.addTask(READ_BOOK);","lastModifiedDate":"2022-04-06"},{"lineNumber":230,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.tagPriorityToTask(READ_BOOK, Priority.HIGH);","lastModifiedDate":"2022-04-06"},{"lineNumber":231,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(modelManager.hasPriority(READ_BOOK));","lastModifiedDate":"2022-04-06"},{"lineNumber":232,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":233,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":234,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":235,"author":{"gitId":"ChanWeiJie"},"content":"    public void markTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2022-04-06"},{"lineNumber":236,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.addTask(READ_BOOK);","lastModifiedDate":"2022-04-06"},{"lineNumber":237,"author":{"gitId":"ChanWeiJie"},"content":"        Task updatedTask \u003d modelManager.markTask(READ_BOOK);","lastModifiedDate":"2022-04-06"},{"lineNumber":238,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(updatedTask.isDone());","lastModifiedDate":"2022-04-06"},{"lineNumber":239,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":240,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":241,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":242,"author":{"gitId":"ChanWeiJie"},"content":"    public void unmarkTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2022-04-06"},{"lineNumber":243,"author":{"gitId":"ChanWeiJie"},"content":"        modelManager.addTask(READ_BOOK);","lastModifiedDate":"2022-04-06"},{"lineNumber":244,"author":{"gitId":"ChanWeiJie"},"content":"        Task updatedTask \u003d modelManager.unmarkTask(READ_BOOK);","lastModifiedDate":"2022-04-06"},{"lineNumber":245,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(!updatedTask.isDone());","lastModifiedDate":"2022-04-06"},{"lineNumber":246,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Denniszedead":5,"dannytayjy":5,"ChanWeiJie":114,"-":123}},{"path":"src/test/java/manageezpz/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"dannytayjy":2,"-":19}},{"path":"src/test/java/manageezpz/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model.person;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"dannytayjy":2,"-":66}},{"path":"src/test/java/manageezpz/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model.person;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-04-02"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-04-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"dannytayjy":2,"ChanWeiJie":2,"-":36}},{"path":"src/test/java/manageezpz/model/person/PersonMultiplePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package manageezpz.model.person;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"class PersonMultiplePredicateTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"    // Equals method","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"    void personMultiplePredicate_equalsOwnObject_true() {","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(List.of(\"Alice\"), null, null);","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicate1.equals(predicate1));","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"    void personalMultiplePredicate_equalsOtherObject_false() {","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"        Object object \u003d new Object();","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(List.of(\"Alice\"), null, null);","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicate1.equals(object));","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"    void personalMultiplePredicate_equalsNull_false() {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(List.of(\"Alice\"), null, null);","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicate1.equals(null));","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"    void personalMultiplePredicate_equalsWithSameNames_true() {","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(List.of(\"Alice\"), null, null);","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate2 \u003d new PersonMultiplePredicate(List.of(\"Alice\"), null, null);","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicate1.equals(predicate2));","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"    void personalMultiplePredicate_equalsWithDifferentNames_false() {","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(List.of(\"Alice\"), null, null);","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate2 \u003d new PersonMultiplePredicate(List.of(\"Benson\"), null, null);","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicate1.equals(predicate2));","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"    void personalMultiplePredicate_equalsWithSamePhone_true() {","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(null, ALICE.getPhone().toString(),","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"                null);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate2 \u003d new PersonMultiplePredicate(null, ALICE.getPhone().toString(),","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"                null);","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicate1.equals(predicate2));","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"    void personalMultiplePredicate_equalsWithDifferentPhone_false() {","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(null, ALICE.getPhone().toString(),","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"                null);","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate2 \u003d new PersonMultiplePredicate(null, BENSON.getPhone().toString(),","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"                null);","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicate1.equals(predicate2));","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"    void personalMultiplePredicate_equalsWithSameEmail_true() {","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"Denniszedead"},"content":"                ALICE.getEmail().toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate2 \u003d new PersonMultiplePredicate(null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"                ALICE.getEmail().toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicate1.equals(predicate2));","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"    void personalMultiplePredicate_equalsWithDifferentEmail_false() {","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"                ALICE.getEmail().toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate2 \u003d new PersonMultiplePredicate(null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"                BENSON.getEmail().toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicate1.equals(predicate2));","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"    // Test with person class","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"Denniszedead"},"content":"    void personalMultiplePredicate_containsName_true() {","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(List.of(\"Alice\"), null, null);","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicate1.test(ALICE));","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"Denniszedead"},"content":"        // Test with different mix of caps","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate2 \u003d new PersonMultiplePredicate(List.of(\"AlIcE\"), null, null);","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicate2.test(ALICE));","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"Denniszedead"},"content":"        // More than 1 keyword","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate3 \u003d new PersonMultiplePredicate(List.of(\"alice\", \"benson\"), null,","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"Denniszedead"},"content":"                null);","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicate3.test(ALICE));","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"Denniszedead"},"content":"    void personalMultiplePredicate_doesNotContainName_false() {","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(List.of(\"Al1ce\"), null, null);","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicate1.test(ALICE));","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"Denniszedead"},"content":"    void personalMultiplePredicate_samePhone_true() {","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"Denniszedead"},"content":"                ALICE.getPhone().toString(), null);","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicate1.test(ALICE));","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"Denniszedead"},"content":"    void personalMultiplePredicate_differentPhone_false() {","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(null, BENSON.getPhone().toString(),","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"Denniszedead"},"content":"                null);","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicate1.test(ALICE));","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"Denniszedead"},"content":"    void personalMultiplePredicate_sameEmail_true() {","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"Denniszedead"},"content":"                ALICE.getEmail().toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicate1.test(ALICE));","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"Denniszedead"},"content":"    void personalMultiplePredicate_differentName_true() {","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"Denniszedead"},"content":"                BENSON.getEmail().toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicate1.test(ALICE));","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"Denniszedead"},"content":"    void personalMultiplePredicate_multipleOptions_true() {","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"Denniszedead"},"content":"        PersonMultiplePredicate predicate1 \u003d new PersonMultiplePredicate(List.of(\"alice\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"Denniszedead"},"content":"                ALICE.getPhone().toString(), ALICE.getEmail().toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicate1.test(ALICE));","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Denniszedead":140}},{"path":"src/test/java/manageezpz/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model.person;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.PersonBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2022-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-04-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-04-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-04-02"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"        // different name, all other attributes are also different -\u003e returns true","lastModifiedDate":"2022-04-02"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(ALICE.isSamePerson(BOB));","lastModifiedDate":"2022-04-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"ChanWeiJie"},"content":"    public void increaseTaskCount_validPerson_success() {","lastModifiedDate":"2022-04-06"},{"lineNumber":81,"author":{"gitId":"ChanWeiJie"},"content":"        ALICE.increaseTaskCount();","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(1, ALICE.getNumOfTasks());","lastModifiedDate":"2022-04-06"},{"lineNumber":83,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"ChanWeiJie"},"content":"    public void decreaseTaskCount_validPerson_success() {","lastModifiedDate":"2022-04-06"},{"lineNumber":87,"author":{"gitId":"ChanWeiJie"},"content":"        ALICE.increaseTaskCount();","lastModifiedDate":"2022-04-06"},{"lineNumber":88,"author":{"gitId":"ChanWeiJie"},"content":"        ALICE.decreaseTaskCount();","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(0, ALICE.getNumOfTasks());","lastModifiedDate":"2022-04-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"dannytayjy":7,"ChanWeiJie":22,"-":62}},{"path":"src/test/java/manageezpz/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model.person;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"dannytayjy":2,"-":38}},{"path":"src/test/java/manageezpz/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.model.person;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.PersonBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"ChanWeiJie"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":168,"author":{"gitId":"ChanWeiJie"},"content":"    public void increaseNumOfTasks_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-31"},{"lineNumber":169,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.increaseNumOfTasks(null));","lastModifiedDate":"2022-03-31"},{"lineNumber":170,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":171,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"ChanWeiJie"},"content":"    public void decreaseNumOfTasks_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-31"},{"lineNumber":174,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.decreaseNumOfTasks(null));","lastModifiedDate":"2022-03-31"},{"lineNumber":175,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":176,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"dannytayjy":7,"ChanWeiJie":13,"-":157}},{"path":"src/test/java/manageezpz/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.tag;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.tasktag.Tag;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"ChanWeiJie":5,"-":24}},{"path":"src/test/java/manageezpz/model/task/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"public class DateTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"        String invalidDate1 \u003d \"2022-18-09\";","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"        String invalidDate2 \u003d \"2022-11-60\";","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate1));","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate2));","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"    public void isValidDate() {","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"        // null date","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"        // invalid date","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(Date.isValidDate(\"2022-25-90\")); //both month and date wrong","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(Date.isValidDate(\"2022-25-02\")); //month is wrong","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(Date.isValidDate(\"2022-02-99\")); //day is wrong","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(Date.isValidDate(\"\")); //empty String given","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(Date.isValidDate(\"1254055\")); //random numbers","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(Date.isValidDate(\"2022/02/20\")); // \"/\" used instead of \"-\"","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(Date.isValidDate(\"!@##$#%^\u0026\")); //empty String given","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"        // valid date","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(Date.isValidDate(\"2022-05-09\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(Date.isValidDate(\"2024-05-09\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"    public void getTodayDate_validDate_success() {","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"        Date testDate \u003d new Date(LocalDate.now().toString());","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(testDate, Date.getTodayDate());","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"ChanWeiJie":51}},{"path":"src/test/java/manageezpz/model/task/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-03"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    private final Deadline testDeadline \u003d new Deadline(new Description(\"testing\"),","lastModifiedDate":"2022-04-03"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"            new Date(\"2022-11-08\"), new Time(\"1800\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(null));","lastModifiedDate":"2022-04-03"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"    public void getDate_validDate_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\"2022-11-08\", testDeadline.getDate().getParsedDate().toString());","lastModifiedDate":"2022-04-03"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"    public void getDescription_validDescription_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\"testing\", testDeadline.getDescription().toString());","lastModifiedDate":"2022-04-03"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"    public void getTime_validTime_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\"18:00\", testDeadline.getTime().getParsedTime().toString());","lastModifiedDate":"2022-04-03"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    public void getType_validType_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\"deadline\", testDeadline.getType());","lastModifiedDate":"2022-04-03"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"    public void getDateTime_validDateTime_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"        String expected \u003d \"by Nov 08 2022 6:00 PM\";","lastModifiedDate":"2022-04-03"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(expected, testDeadline.getDateTime());","lastModifiedDate":"2022-04-03"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"    public void setDescription_validDescription_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"        testDeadline.setDescription(new Description(\"Finish Report\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(testDeadline.getDescription().toString(), \"Finish Report\");","lastModifiedDate":"2022-04-03"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"    public void setDate_validDate_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"        testDeadline.setDate(new Date(\"2022-08-08\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(testDeadline.getDate().getDate(), \"2022-08-08\");","lastModifiedDate":"2022-04-03"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTime_validTime_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"        testDeadline.setTime(new Time(\"1800\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(testDeadline.getTime().getTime(), \"1800\");","lastModifiedDate":"2022-04-03"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"    public void testToString() {","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"        String expected \u003d \"[D][ ] testing (by: Nov 08 2022 6:00 PM)\";","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(expected, testDeadline.toString());","lastModifiedDate":"2022-04-03"},{"lineNumber":67,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"ChanWeiJie":69}},{"path":"src/test/java/manageezpz/model/task/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"public class DescriptionTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"    public void isValidDescription() {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"        // null description","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"        // invalid description","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"        // valid description","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(Description.isValidDescription(\"read book\")); // alphabets only","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(Description.isValidDescription(\"12345\")); // numbers only","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(Description.isValidDescription(\"read 3 books\")); // alphanumeric characters","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(Description.isValidDescription(\"Go Run\")); // with capital letters","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(Description.isValidDescription(\"Read 50 books in the library non stop\")); // long descriptions","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(Description.isValidDescription(\"^!@#$%%^%\u0026^*\u0026(*\u0026(\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(Description.isValidDescription(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"ChanWeiJie":40}},{"path":"src/test/java/manageezpz/model/task/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-03"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"public class EventTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    private final Event testEvent \u003d new Event(new Description(\"testing\"), new Date(\"2022-11-08\"), new Time(\"1800\"),","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"            new Time(\"2000\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(null));","lastModifiedDate":"2022-04-03"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"    public void getDescription_validDescription_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\"testing\", testEvent.getDescription().toString());","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"    public void getDate_validDate_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\"2022-11-08\", testEvent.getDate().getParsedDate().toString());","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"    public void getStartTime_validTime_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\"18:00\", testEvent.getStartTime().getParsedTime().toString());","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    public void getEndTime_validTime_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\"20:00\", testEvent.getEndTime().getParsedTime().toString());","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"    public void getType_validType_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\"event\", testEvent.getType());","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"    public void getDateTime_validDateTime_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"        String expected \u003d \"at Nov 08 2022 6:00 PM to 8:00 PM\";","lastModifiedDate":"2022-04-03"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(expected, testEvent.getDateTime());","lastModifiedDate":"2022-04-03"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"    public void setDescription_validDescription_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"        testEvent.setDescription(new Description(\"Finish Report\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(testEvent.getDescription().toString(), \"Finish Report\");","lastModifiedDate":"2022-04-03"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"    public void setDate_validDate_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"        testEvent.setDate(new Date(\"2022-08-08\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(testEvent.getDate().getDate(), \"2022-08-08\");","lastModifiedDate":"2022-04-03"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"    public void setStartTime_validTime_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"        testEvent.setStartTime(new Time(\"1700\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(testEvent.getStartTime().getTime(), \"1700\");","lastModifiedDate":"2022-04-03"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":67,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":68,"author":{"gitId":"ChanWeiJie"},"content":"    public void setEndTime_validTime_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":69,"author":{"gitId":"ChanWeiJie"},"content":"        testEvent.setEndTime(new Time(\"1800\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":70,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(testEvent.getEndTime().getTime(), \"1800\");","lastModifiedDate":"2022-04-03"},{"lineNumber":71,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"ChanWeiJie"},"content":"    public void testToString() {","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"ChanWeiJie"},"content":"        String expected \u003d \"[E][ ] testing (at: Nov 08 2022 6:00 PM to 8:00 PM)\";","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(expected, testEvent.toString());","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"ChanWeiJie":79}},{"path":"src/test/java/manageezpz/model/task/TaskMultiplePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_TODO;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"import manageezpz.testutil.DeadlineBuilder;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"class TaskMultiplePredicateTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"    private static final String userInput \u003d \"Play Genshin Impact\";","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"    private Deadline deadline;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"    void setDeadline() {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"        deadline \u003d new DeadlineBuilder().withDescription(userInput).withDate(\"2022-04-01\").withTime(\"0000\").build();","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"    // Testing equal method","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_equalThisObject_true() {","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicate1 \u003d new TaskMultiplePredicate(PREFIX_TODO, null, null,","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"                null, null, null);","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicate1.equals(predicate1));","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_equalSomeOtherObject_false() {","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"        Object otherObject \u003d new Object();","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateWithNoOptions \u003d new TaskMultiplePredicate(PREFIX_TODO, null,","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, null);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicateWithNoOptions.equals(otherObject));","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_equalTaskTypes() {","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateTaskType \u003d new TaskMultiplePredicate(PREFIX_DEADLINE, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateTaskTypeSame \u003d new TaskMultiplePredicate(PREFIX_DEADLINE,","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateTaskTypeDifferent \u003d new TaskMultiplePredicate(PREFIX_EVENT,","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"        // Same TaskType -\u003e true","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicateTaskType.equals(predicateTaskTypeSame));","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"        // Different TaskType -\u003e false","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicateTaskType.equals(predicateTaskTypeDifferent));","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_equalDescription() {","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateDescription \u003d new TaskMultiplePredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"                null, List.of(\"Word1\"), null, null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"                null);","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateDescriptionSame \u003d new TaskMultiplePredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"                null, List.of(\"Word1\"), null, null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"Denniszedead"},"content":"                null);","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateDescriptionDifferent \u003d new TaskMultiplePredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"                null, List.of(\"Word2\"), null, null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"                null);","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"        // Same Description -\u003e true","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicateDescription.equals(predicateDescriptionSame));","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"        // Different Description -\u003e false","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicateDescription.equals(predicateDescriptionDifferent));","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_equalDate() {","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateDate \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"                null, new Date(\"1900-01-01\"), null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateDateSame \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"                null, new Date(\"1900-01-01\"), null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateDateDifferent \u003d new TaskMultiplePredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"Denniszedead"},"content":"                null, null, new Date(\"1900-01-02\"), null,","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"Denniszedead"},"content":"                null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"Denniszedead"},"content":"        // Same date -\u003e true","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicateDate.equals(predicateDateSame));","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"Denniszedead"},"content":"        // Different date -\u003e false","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicateDate.equals(predicateDateDifferent));","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_equalPriority() {","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicatePriority \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"Denniszedead"},"content":"                null, null, Priority.HIGH, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicatePrioritySame \u003d new TaskMultiplePredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, Priority.HIGH, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"Denniszedead"},"content":"                null);","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicatePriorityDifferent \u003d new TaskMultiplePredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, Priority.LOW, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"Denniszedead"},"content":"                null);","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"Denniszedead"},"content":"        // Same priority -\u003e true","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicatePriority.equals(predicatePrioritySame));","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"Denniszedead"},"content":"        // Different priority -\u003e false","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicatePriority.equals(predicatePriorityDifferent));","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_equalAssignee() {","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateAssignee \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, ALICE.getName().toString(), null);","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateAssigneeSame \u003d new TaskMultiplePredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"Denniszedead"},"content":"                ALICE.getName().toString(), null);","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateAssigneeDifferent \u003d new TaskMultiplePredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"Denniszedead"},"content":"                BENSON.getName().toString(), null);","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"Denniszedead"},"content":"        // Same person -\u003e true","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicateAssignee.equals(predicateAssigneeSame));","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"Denniszedead"},"content":"        // Different persons -\u003e false","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicateAssignee.equals(predicateAssigneeDifferent));","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_equalIsMarked() {","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateIsMarked \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, null, Boolean.TRUE);","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateIsMarkedSame \u003d new TaskMultiplePredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"Denniszedead"},"content":"                Boolean.TRUE);","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateIsMarkedDifferent \u003d new TaskMultiplePredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, null, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"Denniszedead"},"content":"                Boolean.FALSE);","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"Denniszedead"},"content":"        // Same isMarked Boolean -\u003e true","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicateIsMarked.equals(predicateIsMarkedSame));","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"Denniszedead"},"content":"        // Different isMarked Boolean -\u003e false","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicateIsMarked.equals(predicateIsMarkedDifferent));","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"Denniszedead"},"content":"    // Test with task objects","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_containsSameTaskType_true() {","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"Denniszedead"},"content":"        // Task type same","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateCombo1 \u003d new TaskMultiplePredicate(PREFIX_DEADLINE,","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicateCombo1.test(deadline));","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_containsDifferentTaskType_false() {","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateCombo1 \u003d new TaskMultiplePredicate(PREFIX_TODO,","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicateCombo1.test(deadline));","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_containsWordsInDescription_true() {","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"Denniszedead"},"content":"        // Only 1 word","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateCombo1 \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"Denniszedead"},"content":"                List.of(\"Play\"), null, null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicateCombo1.test(deadline));","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"Denniszedead"},"content":"        // More than 1 word","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateCombo2 \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"Denniszedead"},"content":"                List.of(\"Genshin\", \"Impact\"), null, null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicateCombo2.test(deadline));","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"Denniszedead"},"content":"        // Mixed cases","lastModifiedDate":"2022-03-28"},{"lineNumber":180,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateCombo3 \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-30"},{"lineNumber":181,"author":{"gitId":"Denniszedead"},"content":"                List.of(\"GeNshIn\", \"IMPact\"), null, null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicateCombo3.test(deadline));","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":184,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":185,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_doesNotContainWordsInDescription_false() {","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"Denniszedead"},"content":"        // None of the words found","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateCombo1 \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"Denniszedead"},"content":"                List.of(\"P1ay\"), null, null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicateCombo1.test(deadline));","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"Denniszedead"},"content":"        // No keywords same despite all other options same","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateCombo2 \u003d new TaskMultiplePredicate(PREFIX_DEADLINE,","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"Denniszedead"},"content":"                List.of(\"P1ay\"), new Date(\"2022-04-01\"), Priority.NONE, null, Boolean.FALSE);","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicateCombo2.test(deadline));","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_containsSameDate_true() {","lastModifiedDate":"2022-03-30"},{"lineNumber":200,"author":{"gitId":"Denniszedead"},"content":"        // Same date","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateCombo1 \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-30"},{"lineNumber":202,"author":{"gitId":"Denniszedead"},"content":"                null, new Date(\"2022-04-01\"), null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicateCombo1.test(deadline));","lastModifiedDate":"2022-03-30"},{"lineNumber":204,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_containsDifferentDate_false() {","lastModifiedDate":"2022-03-30"},{"lineNumber":208,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateCombo1 \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"Denniszedead"},"content":"                null, new Date(\"2022-04-02\"), null, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicateCombo1.test(deadline));","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_containsSamePriority_true() {","lastModifiedDate":"2022-03-30"},{"lineNumber":215,"author":{"gitId":"Denniszedead"},"content":"        deadline.setPriority(\"HIGH\");","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"Denniszedead"},"content":"        // Same priority","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateCombo1 \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-30"},{"lineNumber":219,"author":{"gitId":"Denniszedead"},"content":"                null, null, Priority.HIGH, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicateCombo1.test(deadline));","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":224,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_containsDifferentPriority_false() {","lastModifiedDate":"2022-03-30"},{"lineNumber":225,"author":{"gitId":"Denniszedead"},"content":"        deadline.setPriority(\"HIGH\");","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":227,"author":{"gitId":"Denniszedead"},"content":"        // Different priority","lastModifiedDate":"2022-03-28"},{"lineNumber":228,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateCombo1 \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":229,"author":{"gitId":"Denniszedead"},"content":"                null, null, Priority.LOW, null, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":230,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicateCombo1.test(deadline));","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_containsAssignee_true() {","lastModifiedDate":"2022-03-28"},{"lineNumber":235,"author":{"gitId":"Denniszedead"},"content":"        deadline.addAssignees(ALICE);","lastModifiedDate":"2022-03-28"},{"lineNumber":236,"author":{"gitId":"Denniszedead"},"content":"        deadline.addAssignees(BENSON);","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"Denniszedead"},"content":"        deadline.addAssignees(CARL);","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"Denniszedead"},"content":"        // Same assignee","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateCombo1 \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-30"},{"lineNumber":241,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, ALICE.getName().toString(), null);","lastModifiedDate":"2022-03-28"},{"lineNumber":242,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicateCombo1.test(deadline));","lastModifiedDate":"2022-03-30"},{"lineNumber":243,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":244,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":245,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_noContainAssignee_false() {","lastModifiedDate":"2022-03-30"},{"lineNumber":247,"author":{"gitId":"Denniszedead"},"content":"        deadline.addAssignees(ALICE);","lastModifiedDate":"2022-03-28"},{"lineNumber":248,"author":{"gitId":"Denniszedead"},"content":"        deadline.addAssignees(BENSON);","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"Denniszedead"},"content":"        deadline.addAssignees(CARL);","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"Denniszedead"},"content":"        // Different assignee","lastModifiedDate":"2022-03-28"},{"lineNumber":252,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateCombo1 \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":253,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, DANIEL.getName().toString(), null);","lastModifiedDate":"2022-03-28"},{"lineNumber":254,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicateCombo1.test(deadline));","lastModifiedDate":"2022-03-28"},{"lineNumber":255,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":257,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":258,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_containsSameIsMarked_true() {","lastModifiedDate":"2022-03-30"},{"lineNumber":259,"author":{"gitId":"Denniszedead"},"content":"        deadline.setTaskDone();","lastModifiedDate":"2022-03-28"},{"lineNumber":260,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":261,"author":{"gitId":"Denniszedead"},"content":"        // Is Marked is the same","lastModifiedDate":"2022-03-28"},{"lineNumber":262,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateCombo1 \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-30"},{"lineNumber":263,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, null, Boolean.TRUE);","lastModifiedDate":"2022-03-28"},{"lineNumber":264,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicateCombo1.test(deadline));","lastModifiedDate":"2022-03-30"},{"lineNumber":265,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":266,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":267,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":268,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_containsDifferentIsMarked_false() {","lastModifiedDate":"2022-03-30"},{"lineNumber":269,"author":{"gitId":"Denniszedead"},"content":"        deadline.setTaskDone();","lastModifiedDate":"2022-03-28"},{"lineNumber":270,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"Denniszedead"},"content":"        // Is Marked boolean different","lastModifiedDate":"2022-03-28"},{"lineNumber":272,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateCombo1 \u003d new TaskMultiplePredicate(null,","lastModifiedDate":"2022-03-29"},{"lineNumber":273,"author":{"gitId":"Denniszedead"},"content":"                null, null, null, null, Boolean.FALSE);","lastModifiedDate":"2022-03-28"},{"lineNumber":274,"author":{"gitId":"Denniszedead"},"content":"        assertFalse(predicateCombo1.test(deadline));","lastModifiedDate":"2022-03-28"},{"lineNumber":275,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":276,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":277,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":278,"author":{"gitId":"Denniszedead"},"content":"    void taskMultiplePredicate_multipleOptions_true() {","lastModifiedDate":"2022-03-30"},{"lineNumber":279,"author":{"gitId":"Denniszedead"},"content":"        TaskMultiplePredicate predicateCombo1 \u003d new TaskMultiplePredicate(PREFIX_DEADLINE,","lastModifiedDate":"2022-03-30"},{"lineNumber":280,"author":{"gitId":"Denniszedead"},"content":"                List.of(\"Genshin\"), new Date(\"2022-04-01\"), Priority.NONE, null, Boolean.FALSE);","lastModifiedDate":"2022-03-30"},{"lineNumber":281,"author":{"gitId":"Denniszedead"},"content":"        assertTrue(predicateCombo1.test(deadline));","lastModifiedDate":"2022-03-30"},{"lineNumber":282,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":283,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"Denniszedead":283}},{"path":"src/test/java/manageezpz/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.GET_A_DRINK;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.READ_BOOK;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.RETURN_BOOK;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.testutil.TodoBuilder;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"public class TaskTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    public void isSameTask() {","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(READ_BOOK.isSameTask(READ_BOOK));","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(READ_BOOK.isSameTask(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"        // description differs in case -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"        Todo editedTask \u003d new TodoBuilder(RETURN_BOOK).withDescription(VALID_TASK_DESCRIPTION.toLowerCase()).build();","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(RETURN_BOOK.isSameTask(editedTask));","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"        // description has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"        String desWithTrailingSpaces \u003d VALID_TASK_DESCRIPTION + \" \";","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"        editedTask \u003d new TodoBuilder(RETURN_BOOK).withDescription(desWithTrailingSpaces).build();","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(RETURN_BOOK.isSameTask(editedTask));","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"    public void equals() {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"        Todo readBookCopy \u003d new TodoBuilder(READ_BOOK).build();","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(READ_BOOK.equals(readBookCopy));","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(READ_BOOK.equals(READ_BOOK));","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(READ_BOOK.equals(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(RETURN_BOOK.equals(5));","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(READ_BOOK.equals(RETURN_BOOK));","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"    public void isDone() {","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"        READ_BOOK.setTaskDone();","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(READ_BOOK.isDone);","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"        GET_A_DRINK.setTaskDone();","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(GET_A_DRINK.isDone);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"    public void isNotDone() {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"        READ_BOOK.setTaskNotDone();","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(READ_BOOK.isDone);","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"ChanWeiJie"},"content":"        GET_A_DRINK.setTaskNotDone();","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(GET_A_DRINK.isDone);","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"Denniszedead":3,"ChanWeiJie":69}},{"path":"src/test/java/manageezpz/model/task/TimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"public class TimeTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Time(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"        String invalidTime1 \u003d \"9999\";","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"        String invalidTime2 \u003d \"2459\";","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Time(invalidTime1));","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Time(invalidTime2));","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"    public void isValidTime() {","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"        // null date","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e Time.isValidTime(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"        // invalid Time","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(Time.isValidTime(\"6500\")); //greater than 24hr format","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(Time.isValidTime(\"1290\")); //greater than 24hr format","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(Time.isValidTime(\"23-00\")); //\"-\" used\"","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(Time.isValidTime(\"\")); //empty String given","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(Time.isValidTime(\"1254055\")); //random numbers","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(Time.isValidTime(\"23:00\")); // \":\" used","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(Time.isValidTime(\"!!@#$#%#%^\")); // random symbols","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"        // valid date","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(Time.isValidTime(\"2000\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(Time.isValidTime(\"1423\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"ChanWeiJie":42}},{"path":"src/test/java/manageezpz/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.model.task;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.READ_BOOK;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalTasks.RETURN_BOOK;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"        assertFalse(uniqueTaskList.contains(READ_BOOK));","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"        uniqueTaskList.add(READ_BOOK);","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"        assertTrue(uniqueTaskList.contains(READ_BOOK));","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTask_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, RETURN_BOOK));","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTask_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(RETURN_BOOK, null));","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(READ_BOOK, READ_BOOK));","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"        uniqueTaskList.add(READ_BOOK);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"        uniqueTaskList.setTask(READ_BOOK, READ_BOOK);","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"        expectedUniqueTaskList.add(READ_BOOK);","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"ChanWeiJie"},"content":"        uniqueTaskList.add(READ_BOOK);","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"ChanWeiJie"},"content":"        uniqueTaskList.add(RETURN_BOOK);","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(READ_BOOK, RETURN_BOOK));","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"ChanWeiJie"},"content":"    public void remove_nullTask_throwsNullTaskException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"ChanWeiJie"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(READ_BOOK));","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"ChanWeiJie"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"ChanWeiJie"},"content":"        uniqueTaskList.add(READ_BOOK);","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"ChanWeiJie"},"content":"        uniqueTaskList.remove(READ_BOOK);","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"ChanWeiJie"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTask_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTask_listWithDuplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"ChanWeiJie"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(READ_BOOK, READ_BOOK);","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"ChanWeiJie"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"ChanWeiJie"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"ChanWeiJie"},"content":"                uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"Denniszedead":2,"ChanWeiJie":106}},{"path":"src/test/java/manageezpz/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    private static final String INVALID_NAME \u003d \" \";","lastModifiedDate":"2022-04-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"    private static final int VALID_NUMOFTASK \u003d BENSON.getNumOfTasks();","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_NUMOFTASK);","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_NUMOFTASK);","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_NUMOFTASK);","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_NUMOFTASK);","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_NUMOFTASK);","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_NUMOFTASK);","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_invalidNumOfTask_throwsIllegalValueException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, -1);","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Person.class.getSimpleName());","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"alfredkohhh":11,"dannytayjy":9,"ChanWeiJie":1,"-":63}},{"path":"src/test/java/manageezpz/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package manageezpz.storage;","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.TypicalTasks.GET_DRINK;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.TypicalTasks.HOUSE_VISTING;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.TypicalTasks.WEEKLY_QUIZ;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"import java.util.List;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"    private static final Person VALID_ASSIGNEE_ALICE \u003d ALICE;","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"    private static final Person VALID_ASSIGNEE_BOB \u003d BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"    private static final Person VALID_ASSIGNEE_CARL \u003d CARL;","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"    private static final List\u003cPerson\u003e PERSON_LIST \u003d Arrays.asList(VALID_ASSIGNEE_ALICE,","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"            VALID_ASSIGNEE_BOB, VALID_ASSIGNEE_CARL);","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"    private static final ObservableList\u003cPerson\u003e VALID_PERSON_LIST \u003d FXCollections.observableArrayList(PERSON_LIST);","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"    private static final String VALID_STATUS \u003d \" \";","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"    private static final String VALID_TAG \u003d \"\";","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"    private static final String VALID_PRIORITY \u003d \"NONE\";","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"    private static final String VALID_TYPE_TODO \u003d \"todo\";","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"    private static final String VALID_TODO_DESCRIPTION \u003d \"Weekly Quiz\";","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"    private static final String VALID_TYPE_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"    private static final String VALID_DEADLINE_DESCRIPTION \u003d \"Get Drink\";","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"    private static final String VALID_DEADLINE_DATE \u003d \"2022-04-11\";","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"    private static final String VALID_DEADLINE_TIME \u003d \"1800\";","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"    private static final String VALID_TYPE_EVENT \u003d \"event\";","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"    private static final String VALID_EVENT_DESCRIPTION \u003d \"House Visiting\";","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"    private static final String VALID_EVENT_DATE \u003d \"2022-09-15\";","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"    private static final String VALID_EVENT_STARTTIME \u003d \"1800\";","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"    private static final String VALID_EVENT_ENDTIME \u003d \"2000\";","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"\";","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"    private static final String INVALID_TYPE \u003d \"IMPORTANT\";","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"    private static final String INVALID_DATE \u003d \"2022-02-30\";","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"    private static final String INVALID_STATUS \u003d \"done\";","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"    private static final String INVALID_PRIORITY \u003d \"IMPORTANT\";","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"    private static final String INVALID_DEADLINETIME \u003d \"2420\";","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"    private static final String INVALID_EVENTSTARTTIME \u003d \"2420\";","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"    private static final String INVALID_EVENTENDTIME \u003d \"2420\";","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_validTodoTaskDetails_constructor() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask todoTask \u003d new JsonAdaptedTask(WEEKLY_QUIZ);","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(WEEKLY_QUIZ, todoTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_validDeadlineTaskDetails_constructor() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask todoTask \u003d new JsonAdaptedTask(GET_DRINK);","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(GET_DRINK, todoTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_validEventTaskDetails_constructor() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask todoTask \u003d new JsonAdaptedTask(HOUSE_VISTING);","lastModifiedDate":"2022-04-08"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(HOUSE_VISTING, todoTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_validMarkedTodoTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask todoTask \u003d new JsonAdaptedTask(VALID_TYPE_TODO, \"X\",","lastModifiedDate":"2022-04-08"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"                VALID_TODO_DESCRIPTION, null, null, null,","lastModifiedDate":"2022-04-08"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"                null, VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"        Todo quizTaskMarked \u003d new Todo(WEEKLY_QUIZ);","lastModifiedDate":"2022-04-08"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"        quizTaskMarked.setTaskDone();","lastModifiedDate":"2022-04-08"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(quizTaskMarked, todoTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_validTodoTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask todoTask \u003d new JsonAdaptedTask(VALID_TYPE_TODO, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"                VALID_TODO_DESCRIPTION, null, null, null,","lastModifiedDate":"2022-04-08"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"                null, VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(WEEKLY_QUIZ, todoTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":96,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":97,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":98,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_validDeadlineTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask deadlineTask \u003d new JsonAdaptedTask(VALID_TYPE_DEADLINE, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":100,"author":{"gitId":"alfredkohhh"},"content":"                VALID_DEADLINE_DESCRIPTION, VALID_DEADLINE_DATE,","lastModifiedDate":"2022-04-08"},{"lineNumber":101,"author":{"gitId":"alfredkohhh"},"content":"                VALID_DEADLINE_TIME, null,","lastModifiedDate":"2022-04-08"},{"lineNumber":102,"author":{"gitId":"alfredkohhh"},"content":"                null, VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":103,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(GET_DRINK, deadlineTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":104,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":105,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":106,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":107,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_validEventTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":108,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask eventTask \u003d new JsonAdaptedTask(VALID_TYPE_EVENT,","lastModifiedDate":"2022-04-08"},{"lineNumber":109,"author":{"gitId":"alfredkohhh"},"content":"                VALID_STATUS, VALID_EVENT_DESCRIPTION, VALID_EVENT_DATE,","lastModifiedDate":"2022-04-08"},{"lineNumber":110,"author":{"gitId":"alfredkohhh"},"content":"                null, VALID_EVENT_STARTTIME, VALID_EVENT_ENDTIME,","lastModifiedDate":"2022-04-08"},{"lineNumber":111,"author":{"gitId":"alfredkohhh"},"content":"                VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":112,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(HOUSE_VISTING, eventTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":113,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":114,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":115,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":116,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":117,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask todoTask \u003d new JsonAdaptedTask(VALID_TYPE_TODO, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":118,"author":{"gitId":"alfredkohhh"},"content":"                INVALID_DESCRIPTION, \"\", \"\", \"\",","lastModifiedDate":"2022-04-08"},{"lineNumber":119,"author":{"gitId":"alfredkohhh"},"content":"                \"\", VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":120,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.INVALID_DESCRIPTION_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":121,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e todoTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":122,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":123,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":124,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":125,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":126,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask todoTask \u003d new JsonAdaptedTask(VALID_TYPE_TODO, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":127,"author":{"gitId":"alfredkohhh"},"content":"                null, \"\", \"\", \"\",","lastModifiedDate":"2022-04-08"},{"lineNumber":128,"author":{"gitId":"alfredkohhh"},"content":"                \"\", VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":129,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.NULL_DESCRIPTION_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":130,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e todoTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":131,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":132,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":133,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":134,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_invalidType_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":135,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask todoTask \u003d new JsonAdaptedTask(INVALID_TYPE, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":136,"author":{"gitId":"alfredkohhh"},"content":"                VALID_TODO_DESCRIPTION, \"\", \"\", \"\",","lastModifiedDate":"2022-04-08"},{"lineNumber":137,"author":{"gitId":"alfredkohhh"},"content":"                \"\", VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":138,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.INCORRECT_TYPE_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":139,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e todoTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":140,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":141,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":142,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":143,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_nullType_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":144,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask todoTask \u003d new JsonAdaptedTask(null, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":145,"author":{"gitId":"alfredkohhh"},"content":"                VALID_TODO_DESCRIPTION, \"\", \"\", \"\",","lastModifiedDate":"2022-04-08"},{"lineNumber":146,"author":{"gitId":"alfredkohhh"},"content":"                \"\", VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":147,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.NULL_TYPE_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":148,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e todoTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":149,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":150,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":151,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":152,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":153,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask todoTask \u003d new JsonAdaptedTask(VALID_TYPE_TODO, null,","lastModifiedDate":"2022-04-08"},{"lineNumber":154,"author":{"gitId":"alfredkohhh"},"content":"                VALID_TODO_DESCRIPTION, \"\", \"\", \"\",","lastModifiedDate":"2022-04-08"},{"lineNumber":155,"author":{"gitId":"alfredkohhh"},"content":"                \"\", VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":156,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.NULL_STATUS_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":157,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e todoTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":158,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":159,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":160,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":161,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":162,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask todoTask \u003d new JsonAdaptedTask(VALID_TYPE_TODO, INVALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":163,"author":{"gitId":"alfredkohhh"},"content":"                VALID_TODO_DESCRIPTION, \"\", \"\", \"\",","lastModifiedDate":"2022-04-08"},{"lineNumber":164,"author":{"gitId":"alfredkohhh"},"content":"                \"\", VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":165,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.INVALID_STATUS_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":166,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e todoTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":167,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":168,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":169,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":170,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_nullTag_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":171,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask todoTask \u003d new JsonAdaptedTask(VALID_TYPE_TODO, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":172,"author":{"gitId":"alfredkohhh"},"content":"                VALID_TODO_DESCRIPTION, \"\", \"\", \"\",","lastModifiedDate":"2022-04-08"},{"lineNumber":173,"author":{"gitId":"alfredkohhh"},"content":"                \"\", null, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":174,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.NULL_TAG_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":175,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e todoTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":176,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":177,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":178,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":179,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_nullPriority_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":180,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask todoTask \u003d new JsonAdaptedTask(VALID_TYPE_TODO, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":181,"author":{"gitId":"alfredkohhh"},"content":"                VALID_TODO_DESCRIPTION, \"\", \"\", \"\",","lastModifiedDate":"2022-04-08"},{"lineNumber":182,"author":{"gitId":"alfredkohhh"},"content":"                \"\", VALID_TAG, null);","lastModifiedDate":"2022-04-08"},{"lineNumber":183,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.NULL_PRIORITY_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":184,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e todoTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":185,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":186,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":187,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":188,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_invalidPriority_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":189,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask todoTask \u003d new JsonAdaptedTask(VALID_TYPE_TODO, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":190,"author":{"gitId":"alfredkohhh"},"content":"                VALID_TODO_DESCRIPTION, \"\", \"\", \"\",","lastModifiedDate":"2022-04-08"},{"lineNumber":191,"author":{"gitId":"alfredkohhh"},"content":"                \"\", VALID_TAG, INVALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":192,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.INVALID_PRIORITY_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":193,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e todoTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":194,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":195,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":196,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":197,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_nullDeadlineDate_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":198,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask deadlineTask \u003d new JsonAdaptedTask(VALID_TYPE_DEADLINE, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":199,"author":{"gitId":"alfredkohhh"},"content":"                VALID_DEADLINE_DESCRIPTION, null, VALID_DEADLINE_TIME, null,","lastModifiedDate":"2022-04-08"},{"lineNumber":200,"author":{"gitId":"alfredkohhh"},"content":"                null, VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":201,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.NULL_DEADLINE_DATE_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":202,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e deadlineTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":203,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":204,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":205,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":206,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_invalidDeadlineDate_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":207,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask deadlineTask \u003d new JsonAdaptedTask(VALID_TYPE_DEADLINE, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":208,"author":{"gitId":"alfredkohhh"},"content":"                VALID_DEADLINE_DESCRIPTION, INVALID_DATE, VALID_DEADLINE_TIME, null,","lastModifiedDate":"2022-04-08"},{"lineNumber":209,"author":{"gitId":"alfredkohhh"},"content":"                null, VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":210,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.INVALID_DEADLINE_DATE_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":211,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e deadlineTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":212,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":213,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":214,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":215,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_nullDeadlineTime_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":216,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask deadlineTask \u003d new JsonAdaptedTask(VALID_TYPE_DEADLINE, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":217,"author":{"gitId":"alfredkohhh"},"content":"                VALID_DEADLINE_DESCRIPTION, VALID_DEADLINE_DATE, null, null,","lastModifiedDate":"2022-04-08"},{"lineNumber":218,"author":{"gitId":"alfredkohhh"},"content":"                null, VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":219,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.NULL_DEADLINE_TIME_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":220,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e deadlineTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":221,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":222,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":223,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":224,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_invalidDeadlineTime_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":225,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask deadlineTask \u003d new JsonAdaptedTask(VALID_TYPE_DEADLINE, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":226,"author":{"gitId":"alfredkohhh"},"content":"                VALID_DEADLINE_DESCRIPTION, VALID_DEADLINE_DATE, INVALID_DEADLINETIME, null,","lastModifiedDate":"2022-04-08"},{"lineNumber":227,"author":{"gitId":"alfredkohhh"},"content":"                null, VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":228,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.INVALID_DEADLINE_TIME_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":229,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e deadlineTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":230,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":231,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":232,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":233,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_nullEventDate_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":234,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask eventTask \u003d new JsonAdaptedTask(VALID_TYPE_EVENT, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":235,"author":{"gitId":"alfredkohhh"},"content":"                VALID_EVENT_DESCRIPTION, null, null, VALID_EVENT_STARTTIME,","lastModifiedDate":"2022-04-08"},{"lineNumber":236,"author":{"gitId":"alfredkohhh"},"content":"                VALID_EVENT_ENDTIME, VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":237,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.NULL_EVENT_DATE_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":238,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e eventTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":239,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":240,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":241,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":242,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_invalidEventDate_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":243,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask eventTask \u003d new JsonAdaptedTask(VALID_TYPE_EVENT, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":244,"author":{"gitId":"alfredkohhh"},"content":"                VALID_EVENT_DESCRIPTION, INVALID_DATE, null, VALID_EVENT_STARTTIME,","lastModifiedDate":"2022-04-08"},{"lineNumber":245,"author":{"gitId":"alfredkohhh"},"content":"                VALID_EVENT_ENDTIME, VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":246,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.INVALID_EVENT_DATE_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":247,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e eventTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":248,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":249,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":250,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":251,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_nullEventStartTime_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":252,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask eventTask \u003d new JsonAdaptedTask(VALID_TYPE_EVENT, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":253,"author":{"gitId":"alfredkohhh"},"content":"                VALID_EVENT_DESCRIPTION, VALID_EVENT_DATE, null, null,","lastModifiedDate":"2022-04-08"},{"lineNumber":254,"author":{"gitId":"alfredkohhh"},"content":"                VALID_EVENT_ENDTIME, VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":255,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.NULL_EVENT_START_TIME_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":256,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e eventTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":257,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":258,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":259,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":260,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_invalidEventStartTime_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":261,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask eventTask \u003d new JsonAdaptedTask(VALID_TYPE_EVENT, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":262,"author":{"gitId":"alfredkohhh"},"content":"                VALID_EVENT_DESCRIPTION, VALID_EVENT_DATE, null, INVALID_EVENTSTARTTIME,","lastModifiedDate":"2022-04-08"},{"lineNumber":263,"author":{"gitId":"alfredkohhh"},"content":"                VALID_EVENT_ENDTIME, VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":264,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.INVALID_EVENT_START_TIME_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":265,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e eventTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":266,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":267,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":268,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":269,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_nullEventEndTime_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":270,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask eventTask \u003d new JsonAdaptedTask(VALID_TYPE_EVENT, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":271,"author":{"gitId":"alfredkohhh"},"content":"                VALID_EVENT_DESCRIPTION, VALID_EVENT_DATE, null, VALID_EVENT_STARTTIME,","lastModifiedDate":"2022-04-08"},{"lineNumber":272,"author":{"gitId":"alfredkohhh"},"content":"                null, VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":273,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.NULL_EVENT_END_TIME_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":274,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e eventTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":275,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":276,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":277,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":278,"author":{"gitId":"alfredkohhh"},"content":"    public void toModelType_invalidEventEndTime_throwsIllegalValueException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":279,"author":{"gitId":"alfredkohhh"},"content":"        JsonAdaptedTask eventTask \u003d new JsonAdaptedTask(VALID_TYPE_EVENT, VALID_STATUS,","lastModifiedDate":"2022-04-08"},{"lineNumber":280,"author":{"gitId":"alfredkohhh"},"content":"                VALID_EVENT_DESCRIPTION, VALID_EVENT_DATE, null, VALID_EVENT_STARTTIME,","lastModifiedDate":"2022-04-08"},{"lineNumber":281,"author":{"gitId":"alfredkohhh"},"content":"                INVALID_EVENTENDTIME, VALID_TAG, VALID_PRIORITY);","lastModifiedDate":"2022-04-08"},{"lineNumber":282,"author":{"gitId":"alfredkohhh"},"content":"        String expectedMessage \u003d JsonAdaptedTask.INVALID_EVENT_END_TIME_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":283,"author":{"gitId":"alfredkohhh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e eventTask.toModelType(VALID_PERSON_LIST));","lastModifiedDate":"2022-04-08"},{"lineNumber":284,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":285,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":286,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"alfredkohhh":286}},{"path":"src/test/java/manageezpz/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalPersons.HOON;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.TypicalPersons.IDA;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.TypicalPersons.getTypicalAddressBookEmployeesEdit;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.AddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"        AddressBook original \u003d getTypicalAddressBookEmployeesEdit();","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"alfredkohhh":2,"dannytayjy":7,"-":99}},{"path":"src/test/java/manageezpz/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.util.JsonUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.AddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.testutil.TypicalPersons;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBookEmployees();","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Denniszedead":1,"dannytayjy":6,"-":40}},{"path":"src/test/java/manageezpz/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.GuiSettings;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"dannytayjy":5,"-":118}},{"path":"src/test/java/manageezpz/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static manageezpz.testutil.TypicalPersons.getTypicalAddressBookEmployeesEdit;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.GuiSettings;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.AddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.UserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"        AddressBook original \u003d getTypicalAddressBookEmployeesEdit();","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alfredkohhh":2,"dannytayjy":5,"-":61}},{"path":"src/test/java/manageezpz/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.AddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":3,"-":27}},{"path":"src/test/java/manageezpz/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"dannytayjy":1,"-":33}},{"path":"src/test/java/manageezpz/testutil/DeadlineBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.testutil;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Date;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Deadline;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Time;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"public class DeadlineBuilder {","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"    public static final String TASK_DESCRIPTION \u003d \"read book\";","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    public static final String TASK_DATE \u003d \"2022-03-20\";","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"    public static final String TASK_TIME \u003d \"2000\";","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    private Description description;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    private Date date;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    private Time time;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"     * Creates a {@code DeadlineBuilder} with the default details.","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    public DeadlineBuilder() {","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"        description \u003d new Description(TASK_DESCRIPTION);","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"        date \u003d new Date(TASK_DATE);","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"        time \u003d new Time(TASK_TIME);","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"     * Sets the {@code Description} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"    public DeadlineBuilder withDescription(String description) {","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"        return this;","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"     * Sets the {@code Date} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"    public DeadlineBuilder withDate(String date) {","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"        return this;","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"     * Sets the {@code Time} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"    public DeadlineBuilder withTime(String time) {","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"        this.time \u003d new Time(time);","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"        return this;","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"    public Deadline build() {","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"        return new Deadline(description, date, time);","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"ChanWeiJie":54}},{"path":"src/test/java/manageezpz/testutil/EditEmployeeDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.EditEmployeeCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.EditEmployeeCommand.EditEmployeeDescriptor;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"public class EditEmployeeDescriptorBuilder {","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"    private EditEmployeeDescriptor descriptor;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"    public EditEmployeeDescriptorBuilder() {","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"        descriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"    public EditEmployeeDescriptorBuilder(EditEmployeeDescriptor descriptor) {","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"        this.descriptor \u003d new EditEmployeeCommand.EditEmployeeDescriptor(descriptor);","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"    public EditEmployeeDescriptorBuilder(Person person) {","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"        descriptor \u003d new EditEmployeeCommand.EditEmployeeDescriptor();","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"    public EditEmployeeDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"    public EditEmployeeDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"    public EditEmployeeDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"    public EditEmployeeDescriptor build() {","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"dannytayjy":19,"-":44}},{"path":"src/test/java/manageezpz/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.testutil;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Date;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Event;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Time;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"public class EventBuilder {","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"    public static final String TASK_DESCRIPTION \u003d \"read book\";","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"    public static final String TASK_DATE \u003d \"2022-03-20\";","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    public static final String TASK_START_TIME \u003d \"1800\";","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    public static final String TASK_END_TIME \u003d \"2100\";","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"    private Description description;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    private Date date;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"    private Time startTime;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"    private Time endTime;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"     * Creates a {@code EventBuilder} with the default details.","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"    public EventBuilder() {","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"        description \u003d new Description(TASK_DESCRIPTION);","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"        date \u003d new Date(TASK_DATE);","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"        startTime \u003d new Time(TASK_START_TIME);","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"        endTime \u003d new Time(TASK_END_TIME);","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"     * Sets the {@code Description} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    public EventBuilder withDescription(String description) {","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"        return this;","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"     * Sets the {@code Date} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"    public EventBuilder withDate(String date) {","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"        return this;","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"     * Sets the {@code Name} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"    public EventBuilder withStartTime(String startTime) {","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"        this.startTime \u003d new Time(startTime);","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"        return this;","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"     * Sets the {@code Name} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"    public EventBuilder withEndTime(String endTime) {","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"        this.endTime \u003d new Time(endTime);","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"        return this;","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"    public Event build() {","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"        return new Event(description, date, startTime, endTime);","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"ChanWeiJie":66}},{"path":"src/test/java/manageezpz/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"    private int numOfTask;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"        numOfTask \u003d 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"        return new Person(name, phone, email, numOfTask);","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"alfredkohhh":3,"dannytayjy":5,"-":60}},{"path":"src/test/java/manageezpz/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import manageezpz.logic.commands.AddEmployeeCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.logic.commands.EditEmployeeCommand.EditEmployeeDescriptor;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"        return AddEmployeeCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"    public static String getEditPersonDescriptorDetails(EditEmployeeDescriptor descriptor) {","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"alfredkohhh":2,"dannytayjy":7,"-":35}},{"path":"src/test/java/manageezpz/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":1,"-":71}},{"path":"src/test/java/manageezpz/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dannytayjy":1,"-":29}},{"path":"src/test/java/manageezpz/testutil/TodoBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.testutil;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Description;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"public class TodoBuilder {","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"    public static final String TASK_DESCRIPTION \u003d \"read book\";","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"    private Description description;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    public TodoBuilder() {","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"        description \u003d new Description(TASK_DESCRIPTION);","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    public TodoBuilder(Todo taskToCopy) {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"     * Sets the {@code Description} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"    public TodoBuilder withDescription(String description) {","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"        return this;","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"    public Todo build() {","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"        return new Todo(description);","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"ChanWeiJie":35}},{"path":"src/test/java/manageezpz/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.commons.core.index.Index;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Denniszedead":3,"dannytayjy":2,"-":7}},{"path":"src/test/java/manageezpz/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.AddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"            .withPhone(\"94351253\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"            .withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"            .withEmail(\"cornelia@example.com\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"            .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"            .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"            .withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"            .withEmail(\"hans@example.com\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"            .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"            .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"     * Returns an {@code AddressBook} with all the typical employees.","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"    public static AddressBook getTypicalAddressBookEmployees() {","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"     * Returns an {@code AddressBook} with all the typical employees.","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"    public static AddressBook getTypicalAddressBookEmployeesEdit() {","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"            if (person.equals(ALICE)) {","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"                continue;","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"            ab.addPerson(person);","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"        return ab;","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Denniszedead":2,"alfredkohhh":14,"dannytayjy":9,"ChanWeiJie":12,"-":42}},{"path":"src/test/java/manageezpz/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package manageezpz.testutil;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import static manageezpz.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import static manageezpz.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.AddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Deadline;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Event;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Task;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"import manageezpz.model.task.Todo;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"public class TypicalTasks {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"    public static final Todo READ_BOOK \u003d new TodoBuilder().withDescription(\"Read Book\").build();","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"    public static final Todo RETURN_BOOK \u003d new TodoBuilder().withDescription(\"Return Book\").build();","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    public static final Todo GO_FOR_RUN \u003d new TodoBuilder().withDescription(\"Go for run\").build();","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"    public static final Todo GET_HAIRCUT \u003d new TodoBuilder().withDescription(\"Get Haircut\").build();","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    public static final Todo WEEKLY_QUIZ \u003d new TodoBuilder().withDescription(\"Weekly Quiz\").build();","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"    public static final Deadline GET_DRINK \u003d new DeadlineBuilder().withDescription(\"Get Drink\")","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"            .withDate(\"2022-05-13\").withTime(\"1800\").build();","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"    public static final Deadline PROJECT_CAPSTONE \u003d new DeadlineBuilder().withDescription(\"Project capstone\")","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"            .withDate(\"2022-04-01\").withTime(\"2359\").build();","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"    public static final Deadline FYP_REPORT \u003d new DeadlineBuilder().withDescription(\"FYP Report\").withDate(\"2024-05-02\")","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"            .withTime(\"2359\").build();","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"    public static final Event HOUSE_VISTING \u003d new EventBuilder().withDescription(\"House Visiting\")","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"            .withDate(\"2022-09-15\").withStartTime(\"1800\").withEndTime(\"2000\").build();","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"    public static final Event MALAYSIA_BORDERS_OPEN \u003d new EventBuilder().withDescription(\"Malaysia Borders open\")","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"            .withDate(\"2022-04-01\").withStartTime(\"0000\").withEndTime(\"2359\").build();","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"    public static final Event CS2103_PRACTICAL_EXAM \u003d new EventBuilder().withDescription(\"CS2103 Practical Exam\")","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"            .withDate(\"2022-04-16\").withStartTime(\"1400\").withEndTime(\"1600\").build();","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"    // Manually added - Task\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"    public static final Todo GET_A_DRINK \u003d new TodoBuilder().withDescription(VALID_TASK_DESCRIPTION).build();","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns an {@code AddressBook} with all the typical tasks.","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"    public static AddressBook getTypicalAddressBookTasks() {","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"        for (Task task : getTypicalTask()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"            ab.addTask(task);","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"        return ab;","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"    public static List\u003cTask\u003e getTypicalTask() {","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"        // Set Priority","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"        WEEKLY_QUIZ.setPriority(\"HIGH\");","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"        PROJECT_CAPSTONE.setPriority(\"HIGH\");","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"        FYP_REPORT.setPriority(\"HIGH\");","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"        // Set Assignee","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"        RETURN_BOOK.addAssignees(GEORGE);","lastModifiedDate":"2022-04-08"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"        PROJECT_CAPSTONE.addAssignees(GEORGE);","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"        FYP_REPORT.addAssignees(GEORGE);","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"        HOUSE_VISTING.addAssignees(GEORGE);","lastModifiedDate":"2022-04-08"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"        // Set marked","lastModifiedDate":"2022-04-08"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"        RETURN_BOOK.setTaskDone();","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"        PROJECT_CAPSTONE.setTaskDone();","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(WEEKLY_QUIZ, PROJECT_CAPSTONE, FYP_REPORT, READ_BOOK, RETURN_BOOK,","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"                GO_FOR_RUN, GET_HAIRCUT, GET_A_DRINK, GET_DRINK, HOUSE_VISTING, MALAYSIA_BORDERS_OPEN,","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"                CS2103_PRACTICAL_EXAM));","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"Denniszedead":30,"ChanWeiJie":43}},{"path":"src/test/java/manageezpz/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.ui;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"dannytayjy":1,"-":34}},{"path":"src/test/java/manageezpz/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package manageezpz.ui;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import static manageezpz.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"import manageezpz.MainApp;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"dannytayjy":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"\u003c?import manageezpz.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"dannytayjy":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"\u003cfx:root type\u003d\"manageezpz.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"dannytayjy":1,"-":5}}]
